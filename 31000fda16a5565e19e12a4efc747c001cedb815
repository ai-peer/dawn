{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "26d76773_4f32c977",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2023-06-21T02:41:23Z",
      "side": 1,
      "message": "PTAL.",
      "revId": "31000fda16a5565e19e12a4efc747c001cedb815",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e667e5f2_caf2f68a",
        "filename": "src/tint/ir/validate.cc",
        "patchSetId": 1
      },
      "lineNbr": 296,
      "author": {
        "id": 1002241
      },
      "writtenOn": "2023-06-21T10:56:20Z",
      "side": 1,
      "message": "Like with var, could check:\n- Results().Length() \u003d\u003d 1\n- Result()-\u003eAlive() \u003d\u003d true\n- Result()-\u003eSource() \u003d\u003d b\n- Operands().Length() \u003d\u003d 2u\n- LHS()-\u003eAlive()\n- RHS()-\u003eAlive()\n- LHS()-\u003eUsages() contains {b, 0u}\n- RHS()-\u003eUsages() contains {b, 1u}\n\nCould validate that types all match a valid overload of the binary op using the intrinsic table too?\n\nAnd like I mentioned with var, eventually the same generic checking that the LHS and RHS are \"in scope\", and that binary instruction is Alive().",
      "revId": "31000fda16a5565e19e12a4efc747c001cedb815",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9bee1c6f_cbfae1d0",
        "filename": "src/tint/ir/validate.cc",
        "patchSetId": 1
      },
      "lineNbr": 296,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2023-06-22T18:20:35Z",
      "side": 1,
      "message": "The usages is tested already in the binary_test. The alive and source for result should be covered by the generic code added with the var cl. The LHS and RHS alive should also be covered by the generic code for instruciton now.",
      "parentUuid": "e667e5f2_caf2f68a",
      "revId": "31000fda16a5565e19e12a4efc747c001cedb815",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1b15f472_53350cb3",
        "filename": "src/tint/ir/validate.cc",
        "patchSetId": 1
      },
      "lineNbr": 329,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2023-06-21T08:14:48Z",
      "side": 1,
      "message": "Bit weird that we\u0027re scanning \u0027all\u0027 the results, when we know a \u0027var\u0027 only has one.",
      "revId": "31000fda16a5565e19e12a4efc747c001cedb815",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1ce3af19_61792f85",
        "filename": "src/tint/ir/validate.cc",
        "patchSetId": 1
      },
      "lineNbr": 329,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2023-06-22T18:20:35Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1b15f472_53350cb3",
      "revId": "31000fda16a5565e19e12a4efc747c001cedb815",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2e943023_f5bd7085",
        "filename": "src/tint/ir/validate_test.cc",
        "patchSetId": 1
      },
      "lineNbr": 542,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2023-06-21T08:14:48Z",
      "side": 1,
      "message": "Do we have the ability to highlight a result?",
      "range": {
        "startLine": 542,
        "startChar": 2,
        "endLine": 542,
        "endChar": 7
      },
      "revId": "31000fda16a5565e19e12a4efc747c001cedb815",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3f4711cd_e0a10fa5",
        "filename": "src/tint/ir/validate_test.cc",
        "patchSetId": 1
      },
      "lineNbr": 542,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2023-06-21T11:50:44Z",
      "side": 1,
      "message": "If only we had some sort of `Undef` instruction. Otherwise ... no, it\u0027s a `nullptr` so there is nothing to attach too.",
      "parentUuid": "2e943023_f5bd7085",
      "range": {
        "startLine": 542,
        "startChar": 2,
        "endLine": 542,
        "endChar": 7
      },
      "revId": "31000fda16a5565e19e12a4efc747c001cedb815",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}