{
  "comments": [
    {
      "key": {
        "uuid": "f88ffee6_b58c3970",
        "filename": "src/dawn_native/d3d12/BindGroupD3D12.cpp",
        "patchSetId": 38
      },
      "lineNbr": 55,
      "author": {
        "id": 1000268
      },
      "writtenOn": "2020-02-21T18:37:36Z",
      "side": 1,
      "message": "[1]",
      "revId": "b59e489e4d7b8ce48ad023b98930f3f7b5fbf0ce",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "71105255_53e6056a",
        "filename": "src/dawn_native/d3d12/DescriptorAllocatorManagerD3D12.cpp",
        "patchSetId": 38
      },
      "lineNbr": 38,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-02-18T13:43:47Z",
      "side": 1,
      "message": "nit: can be removed.",
      "range": {
        "startLine": 36,
        "startChar": 0,
        "endLine": 38,
        "endChar": 55
      },
      "revId": "b59e489e4d7b8ce48ad023b98930f3f7b5fbf0ce",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "93840c08_0fd8a071",
        "filename": "src/dawn_native/d3d12/DescriptorAllocatorManagerD3D12.cpp",
        "patchSetId": 38
      },
      "lineNbr": 38,
      "author": {
        "id": 1000268
      },
      "writtenOn": "2020-02-21T18:37:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "71105255_53e6056a",
      "range": {
        "startLine": 36,
        "startChar": 0,
        "endLine": 38,
        "endChar": 55
      },
      "revId": "b59e489e4d7b8ce48ad023b98930f3f7b5fbf0ce",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "34655919_bd24114b",
        "filename": "src/dawn_native/d3d12/DescriptorAllocatorManagerD3D12.cpp",
        "patchSetId": 38
      },
      "lineNbr": 88,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-02-18T13:43:47Z",
      "side": 1,
      "message": "This branch of the switch will always be taken so the switch can be replaced with an ASSERT",
      "range": {
        "startLine": 85,
        "startChar": 0,
        "endLine": 88,
        "endChar": 56
      },
      "revId": "b59e489e4d7b8ce48ad023b98930f3f7b5fbf0ce",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8e6ee4b2_37e3de35",
        "filename": "src/dawn_native/d3d12/DescriptorAllocatorManagerD3D12.cpp",
        "patchSetId": 38
      },
      "lineNbr": 88,
      "author": {
        "id": 1000268
      },
      "writtenOn": "2020-02-21T18:37:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "34655919_bd24114b",
      "range": {
        "startLine": 85,
        "startChar": 0,
        "endLine": 88,
        "endChar": 56
      },
      "revId": "b59e489e4d7b8ce48ad023b98930f3f7b5fbf0ce",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "54a45647_d490a3c9",
        "filename": "src/dawn_native/d3d12/DescriptorAllocatorManagerD3D12.cpp",
        "patchSetId": 38
      },
      "lineNbr": 109,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-02-18T13:43:47Z",
      "side": 1,
      "message": "Like we discussed, the allocation for RTV and DSV, or even for staging CBVUAVSRV and Sampler heaps would use different allocators so they won\u0027t be handled in this class. Hence we don\u0027t need this TODO.",
      "revId": "b59e489e4d7b8ce48ad023b98930f3f7b5fbf0ce",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c7065a37_63975189",
        "filename": "src/dawn_native/d3d12/DescriptorAllocatorManagerD3D12.cpp",
        "patchSetId": 38
      },
      "lineNbr": 109,
      "author": {
        "id": 1000268
      },
      "writtenOn": "2020-02-21T18:37:36Z",
      "side": 1,
      "message": "Ack.\n\nWould you prefer I rename to ShaderVisibleHeapAllocator or leave it as-is?\n\nI ask because CreateDescriptorHeap() is common and I\u0027m unsure if it\u0027s better to have a manager that manages both or pass DescriptorHeapAllocator around.",
      "parentUuid": "54a45647_d490a3c9",
      "revId": "b59e489e4d7b8ce48ad023b98930f3f7b5fbf0ce",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e2a0454f_d310cae3",
        "filename": "src/dawn_native/d3d12/DescriptorAllocatorManagerD3D12.cpp",
        "patchSetId": 38
      },
      "lineNbr": 109,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-02-24T17:06:06Z",
      "side": 1,
      "message": "+1 for the renaming.\n\nIMHO CreateDescriptorHeap could be inlined in AllocateGPUHeap because it is only called there.",
      "parentUuid": "c7065a37_63975189",
      "revId": "b59e489e4d7b8ce48ad023b98930f3f7b5fbf0ce",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "67343e91_8491b7b6",
        "filename": "src/dawn_native/d3d12/DescriptorAllocatorManagerD3D12.cpp",
        "patchSetId": 38
      },
      "lineNbr": 109,
      "author": {
        "id": 1000268
      },
      "writtenOn": "2020-02-25T21:26:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e2a0454f_d310cae3",
      "revId": "b59e489e4d7b8ce48ad023b98930f3f7b5fbf0ce",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "648e95df_9ffcc19f",
        "filename": "src/dawn_native/d3d12/DescriptorAllocatorManagerD3D12.cpp",
        "patchSetId": 38
      },
      "lineNbr": 157,
      "author": {
        "id": 1000268
      },
      "writtenOn": "2020-02-21T18:37:36Z",
      "side": 1,
      "message": "[2]",
      "revId": "b59e489e4d7b8ce48ad023b98930f3f7b5fbf0ce",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "87077dcd_578709b5",
        "filename": "src/dawn_native/d3d12/DescriptorAllocatorManagerD3D12.h",
        "patchSetId": 38
      },
      "lineNbr": 19,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-02-18T13:43:47Z",
      "side": 1,
      "message": "Did you mean to include \"dawn_native/Error.h\"?",
      "revId": "b59e489e4d7b8ce48ad023b98930f3f7b5fbf0ce",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c17daaa8_4a0086c6",
        "filename": "src/dawn_native/d3d12/DescriptorAllocatorManagerD3D12.h",
        "patchSetId": 38
      },
      "lineNbr": 19,
      "author": {
        "id": 1000268
      },
      "writtenOn": "2020-02-21T18:37:36Z",
      "side": 1,
      "message": "Need D3D12Error due to CheckHRESULT [2].",
      "parentUuid": "87077dcd_578709b5",
      "revId": "b59e489e4d7b8ce48ad023b98930f3f7b5fbf0ce",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "df6c96ea_35dfb93c",
        "filename": "src/dawn_native/d3d12/DescriptorAllocatorManagerD3D12.h",
        "patchSetId": 38
      },
      "lineNbr": 19,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-02-24T17:06:06Z",
      "side": 1,
      "message": "Then it can be included in the .cpp instead of the .h.",
      "parentUuid": "c17daaa8_4a0086c6",
      "revId": "b59e489e4d7b8ce48ad023b98930f3f7b5fbf0ce",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "56e1f868_96876bd8",
        "filename": "src/dawn_native/d3d12/DescriptorAllocatorManagerD3D12.h",
        "patchSetId": 38
      },
      "lineNbr": 19,
      "author": {
        "id": 1000268
      },
      "writtenOn": "2020-02-25T21:26:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "df6c96ea_35dfb93c",
      "revId": "b59e489e4d7b8ce48ad023b98930f3f7b5fbf0ce",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d3431461_53526a38",
        "filename": "src/dawn_native/d3d12/DescriptorAllocatorManagerD3D12.h",
        "patchSetId": 38
      },
      "lineNbr": 68,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-02-18T13:43:47Z",
      "side": 1,
      "message": "If we use arrays statically sized to 2, we need to static_assert somewhere in the .cpp file that both heap types we care about are 0 and 1 respectively.",
      "revId": "b59e489e4d7b8ce48ad023b98930f3f7b5fbf0ce",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c043b0a5_4775f369",
        "filename": "src/dawn_native/d3d12/DescriptorAllocatorManagerD3D12.h",
        "patchSetId": 38
      },
      "lineNbr": 68,
      "author": {
        "id": 1000268
      },
      "writtenOn": "2020-02-21T18:37:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d3431461_53526a38",
      "revId": "b59e489e4d7b8ce48ad023b98930f3f7b5fbf0ce",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9936cd03_77febf10",
        "filename": "src/dawn_native/d3d12/DescriptorHeapAllocationD3D12.cpp",
        "patchSetId": 38
      },
      "lineNbr": 32,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-02-18T13:43:47Z",
      "side": 1,
      "message": "nit: ASSERT(!IsNull()) so that we know invalid allocations are never used?",
      "revId": "b59e489e4d7b8ce48ad023b98930f3f7b5fbf0ce",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f8ec6151_776c7fb7",
        "filename": "src/dawn_native/d3d12/DescriptorHeapAllocationD3D12.cpp",
        "patchSetId": 38
      },
      "lineNbr": 32,
      "author": {
        "id": 1000268
      },
      "writtenOn": "2020-02-21T18:37:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9936cd03_77febf10",
      "revId": "b59e489e4d7b8ce48ad023b98930f3f7b5fbf0ce",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cdd37cb1_e8309a07",
        "filename": "src/dawn_native/d3d12/DescriptorHeapAllocationD3D12.cpp",
        "patchSetId": 38
      },
      "lineNbr": 33,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-02-18T13:43:47Z",
      "side": 1,
      "message": "nit: this branch isn\u0027t needed.",
      "revId": "b59e489e4d7b8ce48ad023b98930f3f7b5fbf0ce",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "13b7adb5_df52d03b",
        "filename": "src/dawn_native/d3d12/DescriptorHeapAllocationD3D12.cpp",
        "patchSetId": 38
      },
      "lineNbr": 33,
      "author": {
        "id": 1000268
      },
      "writtenOn": "2020-02-21T18:37:36Z",
      "side": 1,
      "message": "Used by [1] to avoid unnecessarily re-computing when offset\u003d0.",
      "parentUuid": "cdd37cb1_e8309a07",
      "revId": "b59e489e4d7b8ce48ad023b98930f3f7b5fbf0ce",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2d3eb6a9_53322a02",
        "filename": "src/dawn_native/d3d12/DescriptorHeapAllocationD3D12.cpp",
        "patchSetId": 38
      },
      "lineNbr": 33,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-02-24T17:06:06Z",
      "side": 1,
      "message": "That should be an unnecessary computation. HW likely has fast paths for multiplications by zero, and branch, especially ones that can take both side are more expensive than a couple arithmetic operations.",
      "parentUuid": "13b7adb5_df52d03b",
      "revId": "b59e489e4d7b8ce48ad023b98930f3f7b5fbf0ce",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f01d81de_565a5c45",
        "filename": "src/dawn_native/d3d12/DescriptorHeapAllocationD3D12.cpp",
        "patchSetId": 38
      },
      "lineNbr": 33,
      "author": {
        "id": 1000268
      },
      "writtenOn": "2020-02-25T21:26:04Z",
      "side": 1,
      "message": "Ah, thanks. SGTM.",
      "parentUuid": "2d3eb6a9_53322a02",
      "revId": "b59e489e4d7b8ce48ad023b98930f3f7b5fbf0ce",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "eff5a768_145f1489",
        "filename": "src/dawn_native/d3d12/DescriptorHeapAllocationD3D12.cpp",
        "patchSetId": 38
      },
      "lineNbr": 41,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-02-18T13:43:47Z",
      "side": 1,
      "message": "ditto both comments.",
      "revId": "b59e489e4d7b8ce48ad023b98930f3f7b5fbf0ce",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ef6e474c_ec22b0e5",
        "filename": "src/dawn_native/d3d12/DescriptorHeapAllocationD3D12.cpp",
        "patchSetId": 38
      },
      "lineNbr": 41,
      "author": {
        "id": 1000268
      },
      "writtenOn": "2020-02-21T18:37:36Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "eff5a768_145f1489",
      "revId": "b59e489e4d7b8ce48ad023b98930f3f7b5fbf0ce",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9b39dddc_963c9b7e",
        "filename": "src/dawn_native/d3d12/DescriptorHeapAllocationD3D12.h",
        "patchSetId": 38
      },
      "lineNbr": 36,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-02-18T13:43:47Z",
      "side": 1,
      "message": "nit: Null is a bit weird, what does it mean for an allocation to be null, does it contain nullptrs?",
      "revId": "b59e489e4d7b8ce48ad023b98930f3f7b5fbf0ce",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2de8d262_5780155c",
        "filename": "src/dawn_native/d3d12/DescriptorHeapAllocationD3D12.h",
        "patchSetId": 38
      },
      "lineNbr": 36,
      "author": {
        "id": 1000268
      },
      "writtenOn": "2020-02-21T18:37:36Z",
      "side": 1,
      "message": "Yup, it contains nullptrs (hande.ptr \u003d 0) which represents an invalid allocation (default state).",
      "parentUuid": "9b39dddc_963c9b7e",
      "revId": "b59e489e4d7b8ce48ad023b98930f3f7b5fbf0ce",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2d2c8f7b_09336fcd",
        "filename": "src/dawn_native/d3d12/DescriptorHeapAllocationD3D12.h",
        "patchSetId": 38
      },
      "lineNbr": 36,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-02-24T17:06:06Z",
      "side": 1,
      "message": "Reading code that says if allocation.IsNull is slightly less clear than allocation.IsValid or allocation.IsEmpty. Null is an implementation detail, but the semantic is \"empty\" or \"invalid\"",
      "parentUuid": "2de8d262_5780155c",
      "revId": "b59e489e4d7b8ce48ad023b98930f3f7b5fbf0ce",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6e2b74fa_616a4206",
        "filename": "src/dawn_native/d3d12/DescriptorHeapAllocationD3D12.h",
        "patchSetId": 38
      },
      "lineNbr": 36,
      "author": {
        "id": 1000268
      },
      "writtenOn": "2020-02-25T21:26:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2d2c8f7b_09336fcd",
      "revId": "b59e489e4d7b8ce48ad023b98930f3f7b5fbf0ce",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    }
  ]
}