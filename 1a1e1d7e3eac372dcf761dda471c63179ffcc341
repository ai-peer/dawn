{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "ec71ec88_c1c58681",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 10,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-02-24T16:03:37Z",
      "side": 1,
      "message": "nit: Texture",
      "range": {
        "startLine": 10,
        "startChar": 0,
        "endLine": 10,
        "endChar": 21
      },
      "revId": "1a1e1d7e3eac372dcf761dda471c63179ffcc341",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d412c4e3_acabbe14",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 10,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2021-02-25T10:24:22Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ec71ec88_c1c58681",
      "range": {
        "startLine": 10,
        "startChar": 0,
        "endLine": 10,
        "endChar": 21
      },
      "revId": "1a1e1d7e3eac372dcf761dda471c63179ffcc341",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c82d0358_5869a6b8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2021-02-24T06:56:07Z",
      "side": 1,
      "message": "Seems bots happy ðŸ˜Š\nPTAL!",
      "revId": "1a1e1d7e3eac372dcf761dda471c63179ffcc341",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5fdc802f_0465564a",
        "filename": "src/dawn_native/CommandValidation.cpp",
        "patchSetId": 6
      },
      "lineNbr": 441,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-02-24T16:03:37Z",
      "side": 1,
      "message": "nit: ... so the source must be sampleable and the destination must be writable using a render pass.",
      "revId": "1a1e1d7e3eac372dcf761dda471c63179ffcc341",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "61d050d4_10a52c1b",
        "filename": "src/dawn_native/CommandValidation.cpp",
        "patchSetId": 6
      },
      "lineNbr": 441,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2021-02-25T10:24:22Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5fdc802f_0465564a",
      "revId": "1a1e1d7e3eac372dcf761dda471c63179ffcc341",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1b83cb61_85943a57",
        "filename": "src/dawn_native/CopyTextureForBrowserHelper.cpp",
        "patchSetId": 6
      },
      "lineNbr": 76,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-02-24T16:03:37Z",
      "side": 1,
      "message": "Does setting tempColor \u003d tempColor.bgra work?",
      "revId": "1a1e1d7e3eac372dcf761dda471c63179ffcc341",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8f35f592_6b391c9c",
        "filename": "src/dawn_native/CopyTextureForBrowserHelper.cpp",
        "patchSetId": 6
      },
      "lineNbr": 76,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2021-02-25T10:24:22Z",
      "side": 1,
      "message": "Works fine! Done.",
      "parentUuid": "1b83cb61_85943a57",
      "revId": "1a1e1d7e3eac372dcf761dda471c63179ffcc341",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b143c02e_aa2da74e",
        "filename": "src/dawn_native/CopyTextureForBrowserHelper.cpp",
        "patchSetId": 6
      },
      "lineNbr": 294,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-02-24T16:03:37Z",
      "side": 1,
      "message": "This seems to always be 0 so the swizzle is dead code for now?",
      "revId": "1a1e1d7e3eac372dcf761dda471c63179ffcc341",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ababb513_41f740d9",
        "filename": "src/dawn_native/CopyTextureForBrowserHelper.cpp",
        "patchSetId": 6
      },
      "lineNbr": 294,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2021-02-25T02:04:20Z",
      "side": 1,
      "message": "Oh my. It is a critical problem which means copy to BGRA should be false but the case pass the bots. I\u0027ll take a look at this and the case today.",
      "parentUuid": "b143c02e_aa2da74e",
      "revId": "1a1e1d7e3eac372dcf761dda471c63179ffcc341",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9f88e80c_a7a5ed45",
        "filename": "src/dawn_native/CopyTextureForBrowserHelper.cpp",
        "patchSetId": 6
      },
      "lineNbr": 294,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2021-02-25T10:24:22Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ababb513_41f740d9",
      "revId": "1a1e1d7e3eac372dcf761dda471c63179ffcc341",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c1bea9ec_f03bc78c",
        "filename": "src/dawn_native/CopyTextureForBrowserHelper.cpp",
        "patchSetId": 6
      },
      "lineNbr": 316,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2021-02-25T00:13:41Z",
      "side": 1,
      "message": "Why can\u0027t this be in the same buffer and binding as the |uniformBuffer| above?",
      "range": {
        "startLine": 314,
        "startChar": 8,
        "endLine": 316,
        "endChar": 62
      },
      "revId": "1a1e1d7e3eac372dcf761dda471c63179ffcc341",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b8a7ebf7_4fcb613a",
        "filename": "src/dawn_native/CopyTextureForBrowserHelper.cpp",
        "patchSetId": 6
      },
      "lineNbr": 316,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2021-02-25T10:24:22Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c1bea9ec_f03bc78c",
      "range": {
        "startLine": 314,
        "startChar": 8,
        "endLine": 316,
        "endChar": 62
      },
      "revId": "1a1e1d7e3eac372dcf761dda471c63179ffcc341",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "82c371d2_3462d16d",
        "filename": "src/dawn_native/CopyTextureForBrowserHelper.cpp",
        "patchSetId": 6
      },
      "lineNbr": 316,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-02-25T16:11:18Z",
      "side": 1,
      "message": "That\u0027s not what Austin meant I think. He meant that we should use binding(0) in both the vertex and fragment shaders.",
      "parentUuid": "b8a7ebf7_4fcb613a",
      "range": {
        "startLine": 314,
        "startChar": 8,
        "endLine": 316,
        "endChar": 62
      },
      "revId": "1a1e1d7e3eac372dcf761dda471c63179ffcc341",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "176344fe_e4baf469",
        "filename": "src/dawn_native/CopyTextureForBrowserHelper.cpp",
        "patchSetId": 6
      },
      "lineNbr": 316,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2021-02-26T00:54:32Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "82c371d2_3462d16d",
      "range": {
        "startLine": 314,
        "startChar": 8,
        "endLine": 316,
        "endChar": 62
      },
      "revId": "1a1e1d7e3eac372dcf761dda471c63179ffcc341",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ec73b183_a685d3d7",
        "filename": "src/dawn_native/CopyTextureForBrowserHelper.cpp",
        "patchSetId": 6
      },
      "lineNbr": 316,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2021-02-26T01:48:16Z",
      "side": 1,
      "message": "Finally figure out how to make it work in local. Thanks for this suggestion(Austin) and explain(Corentin). Will adopt this in future CL which support the color format conversion.",
      "parentUuid": "176344fe_e4baf469",
      "range": {
        "startLine": 314,
        "startChar": 8,
        "endLine": 316,
        "endChar": 62
      },
      "revId": "1a1e1d7e3eac372dcf761dda471c63179ffcc341",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dd23154c_50caff4a",
        "filename": "src/tests/end2end/CopyTextureForBrowserTests.cpp",
        "patchSetId": 6
      },
      "lineNbr": 28,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-02-24T16:03:37Z",
      "side": 1,
      "message": "Maybe we could have structs for these and use sizeof instead of hardcoded sizes (and check that sizeof is what we expect for the packing?)",
      "range": {
        "startLine": 27,
        "startChar": 3,
        "endLine": 28,
        "endChar": 56
      },
      "revId": "1a1e1d7e3eac372dcf761dda471c63179ffcc341",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "86459564_3abb9629",
        "filename": "src/tests/end2end/CopyTextureForBrowserTests.cpp",
        "patchSetId": 6
      },
      "lineNbr": 28,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2021-02-25T10:24:22Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "dd23154c_50caff4a",
      "range": {
        "startLine": 27,
        "startChar": 3,
        "endLine": 28,
        "endChar": 56
      },
      "revId": "1a1e1d7e3eac372dcf761dda471c63179ffcc341",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7145af64_ef617855",
        "filename": "src/tests/end2end/CopyTextureForBrowserTests.cpp",
        "patchSetId": 6
      },
      "lineNbr": 31,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-02-24T16:03:37Z",
      "side": 1,
      "message": "nit: Maybe we could have smaller defaults for tests, no need to do 1080p :)",
      "range": {
        "startLine": 29,
        "startChar": 0,
        "endLine": 31,
        "endChar": 0
      },
      "revId": "1a1e1d7e3eac372dcf761dda471c63179ffcc341",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ab95b80f_54d08376",
        "filename": "src/tests/end2end/CopyTextureForBrowserTests.cpp",
        "patchSetId": 6
      },
      "lineNbr": 31,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2021-02-26T01:48:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7145af64_ef617855",
      "range": {
        "startLine": 29,
        "startChar": 0,
        "endLine": 31,
        "endChar": 0
      },
      "revId": "1a1e1d7e3eac372dcf761dda471c63179ffcc341",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "15bc0f5a_a6500543",
        "filename": "src/tests/end2end/CopyTextureForBrowserTests.cpp",
        "patchSetId": 6
      },
      "lineNbr": 57,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-02-24T16:03:37Z",
      "side": 1,
      "message": "I think we call it Component Count usually. Are there no helpers for this in utils/texture_utils?",
      "range": {
        "startLine": 57,
        "startChar": 20,
        "endLine": 57,
        "endChar": 48
      },
      "revId": "1a1e1d7e3eac372dcf761dda471c63179ffcc341",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8a30ddb6_e3a4fb03",
        "filename": "src/tests/end2end/CopyTextureForBrowserTests.cpp",
        "patchSetId": 6
      },
      "lineNbr": 57,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2021-02-25T10:24:22Z",
      "side": 1,
      "message": "No helper functions in utils/texture_utils. And change the names.",
      "parentUuid": "15bc0f5a_a6500543",
      "range": {
        "startLine": 57,
        "startChar": 20,
        "endLine": 57,
        "endChar": 48
      },
      "revId": "1a1e1d7e3eac372dcf761dda471c63179ffcc341",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "43d2dc88_b814554c",
        "filename": "src/tests/end2end/CopyTextureForBrowserTests.cpp",
        "patchSetId": 6
      },
      "lineNbr": 89,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-02-24T16:03:37Z",
      "side": 1,
      "message": "Can you explain at a high level what happens here and why we needed the change to use shaders instead of computing on the CPU? (also we seem to be checking a single pixel??)",
      "revId": "1a1e1d7e3eac372dcf761dda471c63179ffcc341",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "da0ac14b_18e5c67e",
        "filename": "src/tests/end2end/CopyTextureForBrowserTests.cpp",
        "patchSetId": 6
      },
      "lineNbr": 89,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2021-02-25T02:04:20Z",
      "side": 1,
      "message": "(I\u0027ll add comments in code too).\nThe reason is that:\n1. The dst texture format will have RGBAFloatX, with my experience in VertexFormatTest experience. Calculate the unorm in CPU and in GPU will have errors. \n2. Use shader can save works like transfer FP16 to FP32 things.",
      "parentUuid": "43d2dc88_b814554c",
      "revId": "1a1e1d7e3eac372dcf761dda471c63179ffcc341",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1fc108df_cdce87d3",
        "filename": "src/tests/end2end/CopyTextureForBrowserTests.cpp",
        "patchSetId": 6
      },
      "lineNbr": 89,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2021-02-25T10:24:22Z",
      "side": 1,
      "message": "\u003e also we seem to be checking a single pixel??)\nThat\u0027s my fault to use the wrong expect macro. Change the whole logic by using compute shader now.",
      "parentUuid": "da0ac14b_18e5c67e",
      "revId": "1a1e1d7e3eac372dcf761dda471c63179ffcc341",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1b993542_d843b3ef",
        "filename": "src/tests/end2end/CopyTextureForBrowserTests.cpp",
        "patchSetId": 6
      },
      "lineNbr": 89,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2021-02-26T01:48:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1fc108df_cdce87d3",
      "revId": "1a1e1d7e3eac372dcf761dda471c63179ffcc341",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a5e87a6b_447cc943",
        "filename": "src/tests/end2end/CopyTextureForBrowserTests.cpp",
        "patchSetId": 6
      },
      "lineNbr": 118,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2021-02-25T00:13:41Z",
      "side": 1,
      "message": "Maybe it\u0027s simpler to do a (width x height) compute shader dispatch and have each thread load one texel from each of the src/dst textures.",
      "revId": "1a1e1d7e3eac372dcf761dda471c63179ffcc341",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8ea7fae1_92ec0e72",
        "filename": "src/tests/end2end/CopyTextureForBrowserTests.cpp",
        "patchSetId": 6
      },
      "lineNbr": 118,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2021-02-25T02:04:20Z",
      "side": 1,
      "message": "That would be a good idea.",
      "parentUuid": "a5e87a6b_447cc943",
      "revId": "1a1e1d7e3eac372dcf761dda471c63179ffcc341",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cbe5ed23_526eaf9f",
        "filename": "src/tests/end2end/CopyTextureForBrowserTests.cpp",
        "patchSetId": 6
      },
      "lineNbr": 118,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2021-02-25T10:24:22Z",
      "side": 1,
      "message": "Switch to compute shader now!",
      "parentUuid": "8ea7fae1_92ec0e72",
      "revId": "1a1e1d7e3eac372dcf761dda471c63179ffcc341",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "87744869_4988959f",
        "filename": "src/tests/end2end/CopyTextureForBrowserTests.cpp",
        "patchSetId": 6
      },
      "lineNbr": 118,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2021-02-26T01:48:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cbe5ed23_526eaf9f",
      "revId": "1a1e1d7e3eac372dcf761dda471c63179ffcc341",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d4316713_e36ddf3b",
        "filename": "src/tests/end2end/CopyTextureForBrowserTests.cpp",
        "patchSetId": 6
      },
      "lineNbr": 305,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-02-24T16:03:37Z",
      "side": 1,
      "message": "Additional tests and test changes LGTM",
      "revId": "1a1e1d7e3eac372dcf761dda471c63179ffcc341",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}