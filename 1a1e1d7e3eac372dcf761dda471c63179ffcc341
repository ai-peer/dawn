{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "ec71ec88_c1c58681",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 10,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-02-24T16:03:37Z",
      "side": 1,
      "message": "nit: Texture",
      "range": {
        "startLine": 10,
        "startChar": 0,
        "endLine": 10,
        "endChar": 21
      },
      "revId": "1a1e1d7e3eac372dcf761dda471c63179ffcc341",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c82d0358_5869a6b8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2021-02-24T06:56:07Z",
      "side": 1,
      "message": "Seems bots happy ðŸ˜Š\nPTAL!",
      "revId": "1a1e1d7e3eac372dcf761dda471c63179ffcc341",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5fdc802f_0465564a",
        "filename": "src/dawn_native/CommandValidation.cpp",
        "patchSetId": 6
      },
      "lineNbr": 441,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-02-24T16:03:37Z",
      "side": 1,
      "message": "nit: ... so the source must be sampleable and the destination must be writable using a render pass.",
      "revId": "1a1e1d7e3eac372dcf761dda471c63179ffcc341",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1b83cb61_85943a57",
        "filename": "src/dawn_native/CopyTextureForBrowserHelper.cpp",
        "patchSetId": 6
      },
      "lineNbr": 76,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-02-24T16:03:37Z",
      "side": 1,
      "message": "Does setting tempColor \u003d tempColor.bgra work?",
      "revId": "1a1e1d7e3eac372dcf761dda471c63179ffcc341",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b143c02e_aa2da74e",
        "filename": "src/dawn_native/CopyTextureForBrowserHelper.cpp",
        "patchSetId": 6
      },
      "lineNbr": 294,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-02-24T16:03:37Z",
      "side": 1,
      "message": "This seems to always be 0 so the swizzle is dead code for now?",
      "revId": "1a1e1d7e3eac372dcf761dda471c63179ffcc341",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dd23154c_50caff4a",
        "filename": "src/tests/end2end/CopyTextureForBrowserTests.cpp",
        "patchSetId": 6
      },
      "lineNbr": 28,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-02-24T16:03:37Z",
      "side": 1,
      "message": "Maybe we could have structs for these and use sizeof instead of hardcoded sizes (and check that sizeof is what we expect for the packing?)",
      "range": {
        "startLine": 27,
        "startChar": 3,
        "endLine": 28,
        "endChar": 56
      },
      "revId": "1a1e1d7e3eac372dcf761dda471c63179ffcc341",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7145af64_ef617855",
        "filename": "src/tests/end2end/CopyTextureForBrowserTests.cpp",
        "patchSetId": 6
      },
      "lineNbr": 31,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-02-24T16:03:37Z",
      "side": 1,
      "message": "nit: Maybe we could have smaller defaults for tests, no need to do 1080p :)",
      "range": {
        "startLine": 29,
        "startChar": 0,
        "endLine": 31,
        "endChar": 0
      },
      "revId": "1a1e1d7e3eac372dcf761dda471c63179ffcc341",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "15bc0f5a_a6500543",
        "filename": "src/tests/end2end/CopyTextureForBrowserTests.cpp",
        "patchSetId": 6
      },
      "lineNbr": 57,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-02-24T16:03:37Z",
      "side": 1,
      "message": "I think we call it Component Count usually. Are there no helpers for this in utils/texture_utils?",
      "range": {
        "startLine": 57,
        "startChar": 20,
        "endLine": 57,
        "endChar": 48
      },
      "revId": "1a1e1d7e3eac372dcf761dda471c63179ffcc341",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "43d2dc88_b814554c",
        "filename": "src/tests/end2end/CopyTextureForBrowserTests.cpp",
        "patchSetId": 6
      },
      "lineNbr": 89,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-02-24T16:03:37Z",
      "side": 1,
      "message": "Can you explain at a high level what happens here and why we needed the change to use shaders instead of computing on the CPU? (also we seem to be checking a single pixel??)",
      "revId": "1a1e1d7e3eac372dcf761dda471c63179ffcc341",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d4316713_e36ddf3b",
        "filename": "src/tests/end2end/CopyTextureForBrowserTests.cpp",
        "patchSetId": 6
      },
      "lineNbr": 305,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-02-24T16:03:37Z",
      "side": 1,
      "message": "Additional tests and test changes LGTM",
      "revId": "1a1e1d7e3eac372dcf761dda471c63179ffcc341",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}