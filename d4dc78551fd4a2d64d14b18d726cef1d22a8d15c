{
  "comments": [
    {
      "key": {
        "uuid": "b0adc3cd_74bc02a8",
        "filename": "scripts/dawn_features.gni",
        "patchSetId": 7
      },
      "lineNbr": 53,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2019-11-06T12:58:04Z",
      "side": 1,
      "message": "nit: our copy of the vulkan validation layers\n\nor \"our built version of\"",
      "range": {
        "startLine": 53,
        "startChar": 9,
        "endLine": 53,
        "endChar": 16
      },
      "revId": "d4dc78551fd4a2d64d14b18d726cef1d22a8d15c",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a4d4f7f0_cf6819c8",
        "filename": "scripts/dawn_features.gni",
        "patchSetId": 7
      },
      "lineNbr": 53,
      "author": {
        "id": 1000030
      },
      "writtenOn": "2019-11-07T09:09:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b0adc3cd_74bc02a8",
      "range": {
        "startLine": 53,
        "startChar": 9,
        "endLine": 53,
        "endChar": 16
      },
      "revId": "d4dc78551fd4a2d64d14b18d726cef1d22a8d15c",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "792bcc57_678c8784",
        "filename": "src/common/SystemUtils.cpp",
        "patchSetId": 7
      },
      "lineNbr": 36,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2019-11-06T12:58:04Z",
      "side": 1,
      "message": "The size can be more than MAX_PATH: the docs say the max is 65536 so we should do the two step thing here too where we first pass a size of 0 to get the whole size, and then create a vector and pass that.",
      "revId": "d4dc78551fd4a2d64d14b18d726cef1d22a8d15c",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "498c6248_0dd0d8ed",
        "filename": "src/common/SystemUtils.cpp",
        "patchSetId": 7
      },
      "lineNbr": 36,
      "author": {
        "id": 1000030
      },
      "writtenOn": "2019-11-07T09:09:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "792bcc57_678c8784",
      "revId": "d4dc78551fd4a2d64d14b18d726cef1d22a8d15c",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "13772496_1ff8ffbe",
        "filename": "src/common/SystemUtils.cpp",
        "patchSetId": 7
      },
      "lineNbr": 64,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2019-11-06T12:58:04Z",
      "side": 1,
      "message": "ditto",
      "revId": "d4dc78551fd4a2d64d14b18d726cef1d22a8d15c",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d577dcd3_1cb0a101",
        "filename": "src/common/SystemUtils.cpp",
        "patchSetId": 7
      },
      "lineNbr": 64,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2019-11-06T16:45:23Z",
      "side": 1,
      "message": "GetEnvironmentVariableA supports the two step thing, but the docs for GetModuleFileNameA doesn\u0027t do that.\n\n\u003e If the buffer is too small to hold the module name, the string is truncated to nSize characters including the terminating null character, the function returns nSize, and the function sets the last error to ERROR_INSUFFICIENT_BUFFER",
      "parentUuid": "13772496_1ff8ffbe",
      "revId": "d4dc78551fd4a2d64d14b18d726cef1d22a8d15c",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c8a3334c_89f60b17",
        "filename": "src/common/SystemUtils.cpp",
        "patchSetId": 7
      },
      "lineNbr": 64,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2019-11-06T16:48:18Z",
      "side": 1,
      "message": "Thanks for the explanation LGTM",
      "parentUuid": "d577dcd3_1cb0a101",
      "revId": "d4dc78551fd4a2d64d14b18d726cef1d22a8d15c",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3bbc9070_2d470944",
        "filename": "src/common/SystemUtils.cpp",
        "patchSetId": 7
      },
      "lineNbr": 64,
      "author": {
        "id": 1000030
      },
      "writtenOn": "2019-11-07T09:09:01Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "c8a3334c_89f60b17",
      "revId": "d4dc78551fd4a2d64d14b18d726cef1d22a8d15c",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "784f42f4_45d23a11",
        "filename": "src/common/SystemUtils.cpp",
        "patchSetId": 7
      },
      "lineNbr": 71,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2019-11-06T12:58:04Z",
      "side": 1,
      "message": "likewise we could just allocate a vector of the right size here.",
      "revId": "d4dc78551fd4a2d64d14b18d726cef1d22a8d15c",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "32104b4e_da309808",
        "filename": "src/common/SystemUtils.cpp",
        "patchSetId": 7
      },
      "lineNbr": 71,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2019-11-06T16:45:23Z",
      "side": 1,
      "message": "Similarly, I don\u0027t think readlink supports querying the size either.",
      "parentUuid": "784f42f4_45d23a11",
      "revId": "d4dc78551fd4a2d64d14b18d726cef1d22a8d15c",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "60d2b21c_27de538e",
        "filename": "src/common/SystemUtils.cpp",
        "patchSetId": 7
      },
      "lineNbr": 71,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2019-11-06T16:48:18Z",
      "side": 1,
      "message": "ditto, thanks!",
      "parentUuid": "32104b4e_da309808",
      "revId": "d4dc78551fd4a2d64d14b18d726cef1d22a8d15c",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "65d2a70b_d1d4066e",
        "filename": "src/common/SystemUtils.cpp",
        "patchSetId": 7
      },
      "lineNbr": 71,
      "author": {
        "id": 1000030
      },
      "writtenOn": "2019-11-07T09:09:01Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "60d2b21c_27de538e",
      "revId": "d4dc78551fd4a2d64d14b18d726cef1d22a8d15c",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4c136600_b0a58073",
        "filename": "src/tests/unittests/SystemUtilsTests.cpp",
        "patchSetId": 7
      },
      "lineNbr": 1,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2019-11-06T16:45:23Z",
      "side": 1,
      "message": "nit: 2019",
      "range": {
        "startLine": 1,
        "startChar": 13,
        "endLine": 1,
        "endChar": 17
      },
      "revId": "d4dc78551fd4a2d64d14b18d726cef1d22a8d15c",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6f534299_9fd8a158",
        "filename": "src/tests/unittests/SystemUtilsTests.cpp",
        "patchSetId": 7
      },
      "lineNbr": 1,
      "author": {
        "id": 1000030
      },
      "writtenOn": "2019-11-07T09:09:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4c136600_b0a58073",
      "range": {
        "startLine": 1,
        "startChar": 13,
        "endLine": 1,
        "endChar": 17
      },
      "revId": "d4dc78551fd4a2d64d14b18d726cef1d22a8d15c",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "50ffb36c_50190140",
        "filename": "src/tests/unittests/SystemUtilsTests.cpp",
        "patchSetId": 7
      },
      "lineNbr": 37,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2019-11-06T12:58:04Z",
      "side": 1,
      "message": "Maybe assert the last charecter is GetPathSeparator()?",
      "revId": "d4dc78551fd4a2d64d14b18d726cef1d22a8d15c",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e02cfebb_68b71e0a",
        "filename": "src/tests/unittests/SystemUtilsTests.cpp",
        "patchSetId": 7
      },
      "lineNbr": 37,
      "author": {
        "id": 1000030
      },
      "writtenOn": "2019-11-07T09:09:01Z",
      "side": 1,
      "message": "Yes, it\u0027s a good check point, I will also keep the current assert to avoid returning empty string.",
      "parentUuid": "50ffb36c_50190140",
      "revId": "d4dc78551fd4a2d64d14b18d726cef1d22a8d15c",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    }
  ]
}