{
  "comments": [
    {
      "key": {
        "uuid": "c95a0d3c_17e00a04",
        "filename": "src/dawn_native/vulkan/CommandBufferVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 157,
      "author": {
        "id": 1000017
      },
      "writtenOn": "2020-05-21T03:07:22Z",
      "side": 0,
      "message": "This code in Apply() is called during compute pass execution (RecordComputPass). But we have already added barriers for textures at TransitionUsageNow() before render/compute pass when BeginComputePass. It seems that we don\u0027t need to add barriers for compute again. I removed it, all tests can pass. But if I remove the code for buffer barrier (code snippet from line 146 to 148), tests in ComputeStorageBufferBarrierTests.cpp fail. \n\nComputeStorageBufferBarrierTests were added by Austin, do you think we need to add similar tests for textures in order to call into here and make it take effect? Otherwise, I think we can remove the code snippet.",
      "range": {
        "startLine": 153,
        "startChar": 32,
        "endLine": 157,
        "endChar": 86
      },
      "revId": "8d6b021a2a134068bc46a7773ae553f8d957b937",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "493d1d3e_779a3c5a",
        "filename": "src/dawn_native/vulkan/CommandBufferVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 157,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-05-21T09:40:08Z",
      "side": 0,
      "message": "The barriers are required because in a compute passes you can have multiple dispatches that read and write to the same storage texture, and there must be memory synchronization between them. It is the same reason why buffer tests fail if you remove the barriers for buffers, although we don\u0027t have a test for storage textures.",
      "parentUuid": "c95a0d3c_17e00a04",
      "range": {
        "startLine": 153,
        "startChar": 32,
        "endLine": 157,
        "endChar": 86
      },
      "revId": "8d6b021a2a134068bc46a7773ae553f8d957b937",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7f4a8b9a_0a80d25e",
        "filename": "src/dawn_native/vulkan/CommandBufferVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 157,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-05-21T16:50:02Z",
      "side": 0,
      "message": "Yup, what Corentin said is correct. We still need barriers for Dispatch synchronization.",
      "parentUuid": "493d1d3e_779a3c5a",
      "range": {
        "startLine": 153,
        "startChar": 32,
        "endLine": 157,
        "endChar": 86
      },
      "revId": "8d6b021a2a134068bc46a7773ae553f8d957b937",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3721d9f6_3b117594",
        "filename": "src/dawn_native/vulkan/CommandBufferVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 157,
      "author": {
        "id": 1000017
      },
      "writtenOn": "2020-05-21T17:06:37Z",
      "side": 0,
      "message": "Hmm, you reminded me that resource usage tracking for compute should be done per dispatch, not per pass. But right now resource usage tracking is done per pass at frontend for compute, so this is like a remedy specific for compute pass after the fact. While the remedy is not necessary for render pass.   \n\nAfter we trace resource usage for compute per dispatch at frontend, maybe we can remove the barriers here. I will re-visit this later.",
      "parentUuid": "7f4a8b9a_0a80d25e",
      "range": {
        "startLine": 153,
        "startChar": 32,
        "endLine": 157,
        "endChar": 86
      },
      "revId": "8d6b021a2a134068bc46a7773ae553f8d957b937",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2c2b4ecc_5f4401f5",
        "filename": "src/dawn_native/vulkan/CommandBufferVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 157,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-05-21T17:09:53Z",
      "side": 0,
      "message": "Even when the validation of resource usage per dispatch happens, this logic will need to stay because it takes care of the resource transitions between dispatches.",
      "parentUuid": "3721d9f6_3b117594",
      "range": {
        "startLine": 153,
        "startChar": 32,
        "endLine": 157,
        "endChar": 86
      },
      "revId": "8d6b021a2a134068bc46a7773ae553f8d957b937",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "517214b4_b1679642",
        "filename": "src/dawn_native/vulkan/CommandBufferVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 157,
      "author": {
        "id": 1000017
      },
      "writtenOn": "2020-05-21T17:15:05Z",
      "side": 0,
      "message": "Maybe you are correct. But I have a local patch which change class PassResourceUsage to PassOrDispatchResourceUsage for frontend tracking, I will revisit that to see what will happen if that information is transferred to backend in future.",
      "parentUuid": "2c2b4ecc_5f4401f5",
      "range": {
        "startLine": 153,
        "startChar": 32,
        "endLine": 157,
        "endChar": 86
      },
      "revId": "8d6b021a2a134068bc46a7773ae553f8d957b937",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    }
  ]
}