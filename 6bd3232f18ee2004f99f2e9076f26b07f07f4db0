{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "ceca489b_44128878",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 15
      },
      "lineNbr": 0,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2024-04-01T15:31:34Z",
      "side": 1,
      "message": "LGTM",
      "revId": "6bd3232f18ee2004f99f2e9076f26b07f07f4db0",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8eddb121_bc4daeb3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 15
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2024-04-01T15:35:14Z",
      "side": 1,
      "message": "LGTM too",
      "revId": "6bd3232f18ee2004f99f2e9076f26b07f07f4db0",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "52ff62d5_82a1f1a6",
        "filename": "src/dawn/native/BindGroup.cpp",
        "patchSetId": 15
      },
      "lineNbr": 315,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2024-04-01T15:35:14Z",
      "side": 1,
      "message": "Non-static-sampler is going to confuse JS developers, how about:\n\n```suggestion\n                    \"Number of entries (%u) did not match the expected number of entries (%u) for %s.\"\n```",
      "revId": "6bd3232f18ee2004f99f2e9076f26b07f07f4db0",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a83772c1_c4739268",
        "filename": "src/dawn/tests/unittests/validation/BindGroupValidationTests.cpp",
        "patchSetId": 15
      },
      "lineNbr": 1919,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2024-04-01T15:31:34Z",
      "side": 1,
      "message": "nit: this descriptor is unused (you\u0027re using utils::MakeBindGroup instead)",
      "range": {
        "startLine": 1917,
        "startChar": 2,
        "endLine": 1919,
        "endChar": 30
      },
      "revId": "6bd3232f18ee2004f99f2e9076f26b07f07f4db0",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a54aa75a_a0fd4529",
        "filename": "src/dawn/tests/unittests/validation/BindGroupValidationTests.cpp",
        "patchSetId": 15
      },
      "lineNbr": 2661,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2024-04-01T15:35:14Z",
      "side": 1,
      "message": "note: for this test it should be sufficient to create the pipeline. Unittests don\u0027t actually run on the GPU so we can\u0027t know that the sampler was actually bound in SetBindGroup. So my suggestion is to end the test with just `device.CreateComputePipeline(\u0026pipelineDesc);`",
      "revId": "6bd3232f18ee2004f99f2e9076f26b07f07f4db0",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8da52715_075829c7",
        "filename": "src/dawn/tests/unittests/validation/BindGroupValidationTests.cpp",
        "patchSetId": 15
      },
      "lineNbr": 2701,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2024-04-01T15:31:34Z",
      "side": 1,
      "message": "unit: not necessary to assign the pipeline a name since you never use it.\n\n```suggestion\n    )\");\n    ASSERT_DEVICE_ERROR(device.CreateComputePipeline(\u0026pipelineDesc));\n```",
      "range": {
        "startLine": 2699,
        "startChar": 8,
        "endLine": 2701,
        "endChar": 73
      },
      "revId": "6bd3232f18ee2004f99f2e9076f26b07f07f4db0",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b4808191_aaf8a32a",
        "filename": "src/dawn/tests/unittests/validation/ObjectCachingTests.cpp",
        "patchSetId": 15
      },
      "lineNbr": 145,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2024-04-01T15:31:34Z",
      "side": 1,
      "message": "also test that if you make some other BGL that has a normal non-static sampler, you do _not_ get the same BGL",
      "revId": "6bd3232f18ee2004f99f2e9076f26b07f07f4db0",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "170a14f8_b7ae1382",
        "filename": "src/dawn/tests/unittests/validation/ObjectCachingTests.cpp",
        "patchSetId": 15
      },
      "lineNbr": 146,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2024-04-01T15:31:34Z",
      "side": 1,
      "message": "also test two different types of static samplers - i.e. if the actual parameters of the samplers are different, then the two bind group layouts should be different. So the actual contents of the sampler become part of the hash/equality comparison, not just whether or not it is static or not.",
      "revId": "6bd3232f18ee2004f99f2e9076f26b07f07f4db0",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}