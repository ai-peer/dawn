{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "6869c929_0c5a7bc5",
        "filename": "src/tint/utils/text/text_style.h",
        "patchSetId": 5
      },
      "lineNbr": 71,
      "author": {
        "id": 1002361
      },
      "writtenOn": "2024-02-26T15:37:46Z",
      "side": 1,
      "message": "Can we sort these so that the bit values increase from `0001` to `1111`?",
      "range": {
        "startLine": 62,
        "startChar": 3,
        "endLine": 71,
        "endChar": 76
      },
      "revId": "f6419a345b732780ddc1d6a4fd4e0b891acef8e5",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3ba04ec7_b94dda63",
        "filename": "src/tint/utils/text/text_style.h",
        "patchSetId": 5
      },
      "lineNbr": 71,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2024-02-26T17:10:28Z",
      "side": 1,
      "message": "The 9th bit represents `Code`, which is used by all the tokens. Squiggle could come before the tokens, I suppose, but `kKindMask` must come first.",
      "parentUuid": "6869c929_0c5a7bc5",
      "range": {
        "startLine": 62,
        "startChar": 3,
        "endLine": 71,
        "endChar": 76
      },
      "revId": "f6419a345b732780ddc1d6a4fd4e0b891acef8e5",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "64e0ac13_85b00b97",
        "filename": "src/tint/utils/text/text_style.h",
        "patchSetId": 5
      },
      "lineNbr": 71,
      "author": {
        "id": 1002361
      },
      "writtenOn": "2024-02-26T17:13:05Z",
      "side": 1,
      "message": "Yeah, the mask should come first, as you said. I suppose it is only squiggle that should be moved up.",
      "parentUuid": "3ba04ec7_b94dda63",
      "range": {
        "startLine": 62,
        "startChar": 3,
        "endLine": 71,
        "endChar": 76
      },
      "revId": "f6419a345b732780ddc1d6a4fd4e0b891acef8e5",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "21c02c62_e2dbea39",
        "filename": "src/tint/utils/text/text_style.h",
        "patchSetId": 5
      },
      "lineNbr": 71,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2024-02-26T17:26:12Z",
      "side": 1,
      "message": "Mind if I do that as a followup? I\u0027d quite like to land the bottom 3 CLs that have past presubmits.",
      "parentUuid": "64e0ac13_85b00b97",
      "range": {
        "startLine": 62,
        "startChar": 3,
        "endLine": 71,
        "endChar": 76
      },
      "revId": "f6419a345b732780ddc1d6a4fd4e0b891acef8e5",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d99f65b8_5da7b7b8",
        "filename": "src/tint/utils/text/text_style_test.cc",
        "patchSetId": 5
      },
      "lineNbr": 66,
      "author": {
        "id": 1002361
      },
      "writtenOn": "2024-02-26T15:37:46Z",
      "side": 1,
      "message": "These tests help to demonstrate what I find might confuse us. It seems that if we have an Error, then adding a Warning to it should not be allowed, as it\u0027s probably a programmer mistake.",
      "range": {
        "startLine": 63,
        "startChar": 1,
        "endLine": 66,
        "endChar": 77
      },
      "revId": "f6419a345b732780ddc1d6a4fd4e0b891acef8e5",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "afe3954c_bb6c8197",
        "filename": "src/tint/utils/text/text_style_test.cc",
        "patchSetId": 5
      },
      "lineNbr": 66,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2024-02-26T17:10:28Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "d99f65b8_5da7b7b8",
      "range": {
        "startLine": 63,
        "startChar": 1,
        "endLine": 66,
        "endChar": 77
      },
      "revId": "f6419a345b732780ddc1d6a4fd4e0b891acef8e5",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "f6419a345b732780ddc1d6a4fd4e0b891acef8e5",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Kokoro",
        "description": {
          "value": "A maximum vote is required for the Kokoro label. A minimum vote is blocking."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Kokoro\u003dMAX AND -label:Kokoro\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "uploader:dawn-autoroll@skia-public.iam.gserviceaccount.com OR uploader:chrome-automated-expectation@chops-service-accounts.iam.gserviceaccount.com OR uploader:chrome-branch-day@chops-service-accounts.iam.gserviceaccount.com"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Kokoro=MAX AND -label:Kokoro=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Kokoro=MAX"],"failingAtoms":["label:Kokoro=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"uploader:dawn-autoroll@skia-public.iam.gserviceaccount.com OR uploader:chrome-automated-expectation@chops-service-accounts.iam.gserviceaccount.com OR uploader:chrome-branch-day@chops-service-accounts.iam.gserviceaccount.com"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["uploader:dawn-autoroll@skia-public.iam.gserviceaccount.com","uploader:chrome-automated-expectation@chops-service-accounts.iam.gserviceaccount.com","uploader:chrome-branch-day@chops-service-accounts.iam.gserviceaccount.com"]}
      },
      "patchSetCommitId": "f6419a345b732780ddc1d6a4fd4e0b891acef8e5",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "f6419a345b732780ddc1d6a4fd4e0b891acef8e5",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    }
  ]
}