{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "a63147ab_ab1e831c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 1002536
      },
      "writtenOn": "2023-11-21T09:59:09Z",
      "side": 1,
      "message": "Please take a look, thanks",
      "revId": "89cdd135558ec0b35d1aec3563eccac1e95c461e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "82447e1f_78a14b73",
        "filename": "src/dawn/native/ComputePipeline.cpp",
        "patchSetId": 10
      },
      "lineNbr": 41,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-11-21T10:16:51Z",
      "side": 1,
      "message": "[1]",
      "revId": "89cdd135558ec0b35d1aec3563eccac1e95c461e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eb43776c_9cd6ce5a",
        "filename": "src/dawn/native/ComputePipeline.cpp",
        "patchSetId": 10
      },
      "lineNbr": 42,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-11-21T10:16:51Z",
      "side": 1,
      "message": "nit: I didn\u0027t see it earlier, but we should use DAWN_INVALID_IF() and use a %s for the feature and pass the Feature::Chromium ... so it gets corectly formatted.\n\nAlso the error message conventions are that we\u0027d say \"DawnCompute ... is used without %s enabled.\"",
      "revId": "89cdd135558ec0b35d1aec3563eccac1e95c461e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2bdc1c92_dd05b7c3",
        "filename": "src/dawn/native/ComputePipeline.cpp",
        "patchSetId": 10
      },
      "lineNbr": 42,
      "author": {
        "id": 1002536
      },
      "writtenOn": "2023-11-22T18:40:50Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "eb43776c_9cd6ce5a",
      "revId": "89cdd135558ec0b35d1aec3563eccac1e95c461e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "db757225_99dc7666",
        "filename": "src/dawn/tests/end2end/ExperimentalSubgroupsTests.cpp",
        "patchSetId": 10
      },
      "lineNbr": 101,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-11-21T10:16:51Z",
      "side": 1,
      "message": "We have an IsPowerOfTwo helper :D",
      "revId": "89cdd135558ec0b35d1aec3563eccac1e95c461e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "80592d64_3e34739c",
        "filename": "src/dawn/tests/end2end/ExperimentalSubgroupsTests.cpp",
        "patchSetId": 10
      },
      "lineNbr": 101,
      "author": {
        "id": 1002536
      },
      "writtenOn": "2023-11-22T18:40:50Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "db757225_99dc7666",
      "revId": "89cdd135558ec0b35d1aec3563eccac1e95c461e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "50cec09e_927d9037",
        "filename": "src/dawn/tests/end2end/ExperimentalSubgroupsTests.cpp",
        "patchSetId": 10
      },
      "lineNbr": 113,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-11-21T10:16:51Z",
      "side": 1,
      "message": "That\u0027s always guaranteed to be at least 4 AFAIK",
      "revId": "89cdd135558ec0b35d1aec3563eccac1e95c461e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8ebd5b9c_8fda0009",
        "filename": "src/dawn/tests/end2end/ExperimentalSubgroupsTests.cpp",
        "patchSetId": 10
      },
      "lineNbr": 113,
      "author": {
        "id": 1002536
      },
      "writtenOn": "2023-11-22T18:40:50Z",
      "side": 1,
      "message": "Vulkan roadmap 2022 requires a minimum subgroup size of 4, but due to current Vulkan spec 1.3 maxSubgroupSize could be 1 if I get it right.\nChange the `if` to an expectation that `maxSubgroupSize \u003e\u003d 4` here.",
      "parentUuid": "50cec09e_927d9037",
      "revId": "89cdd135558ec0b35d1aec3563eccac1e95c461e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "88b18f38_dd9b2a66",
        "filename": "src/dawn/tests/end2end/ExperimentalSubgroupsTests.cpp",
        "patchSetId": 10
      },
      "lineNbr": 113,
      "author": {
        "id": 1002536
      },
      "writtenOn": "2023-11-29T12:54:35Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "8ebd5b9c_8fda0009",
      "revId": "89cdd135558ec0b35d1aec3563eccac1e95c461e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f82cabc9_6267ce3d",
        "filename": "src/dawn/tests/end2end/ExperimentalSubgroupsTests.cpp",
        "patchSetId": 10
      },
      "lineNbr": 140,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-11-21T10:16:51Z",
      "side": 1,
      "message": "This is a frontend validation check, and is covered by the validation tests at [2]. We could remove all these checks, and the PARAMs struct.",
      "revId": "89cdd135558ec0b35d1aec3563eccac1e95c461e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a1e008a6_e751a8e3",
        "filename": "src/dawn/tests/end2end/ExperimentalSubgroupsTests.cpp",
        "patchSetId": 10
      },
      "lineNbr": 140,
      "author": {
        "id": 1002536
      },
      "writtenOn": "2023-11-22T18:40:50Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f82cabc9_6267ce3d",
      "revId": "89cdd135558ec0b35d1aec3563eccac1e95c461e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f640fb25_74dda16e",
        "filename": "src/dawn/tests/end2end/ExperimentalSubgroupsTests.cpp",
        "patchSetId": 10
      },
      "lineNbr": 190,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-11-21T10:16:51Z",
      "side": 1,
      "message": "We don\u0027t need to actually send commands, if compiling the pipeline succeeds, then we\u0027re good to go. We can remove all this and the submit. Ditto below.",
      "revId": "89cdd135558ec0b35d1aec3563eccac1e95c461e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4a296db4_bfd99202",
        "filename": "src/dawn/tests/end2end/ExperimentalSubgroupsTests.cpp",
        "patchSetId": 10
      },
      "lineNbr": 190,
      "author": {
        "id": 1002536
      },
      "writtenOn": "2023-11-22T18:40:50Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f640fb25_74dda16e",
      "revId": "89cdd135558ec0b35d1aec3563eccac1e95c461e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ea5680e7_93ba8eec",
        "filename": "src/dawn/tests/unittests/validation/ComputeValidationTests.cpp",
        "patchSetId": 10
      },
      "lineNbr": 46,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-11-21T10:16:51Z",
      "side": 1,
      "message": "```suggestion\n            @compute @workgroup_size(1)\n            fn main() {\n         })\");\n```",
      "range": {
        "startLine": 44,
        "startChar": 0,
        "endLine": 46,
        "endChar": 5
      },
      "revId": "89cdd135558ec0b35d1aec3563eccac1e95c461e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "58ec5c61_3705a404",
        "filename": "src/dawn/tests/unittests/validation/ComputeValidationTests.cpp",
        "patchSetId": 10
      },
      "lineNbr": 46,
      "author": {
        "id": 1002536
      },
      "writtenOn": "2023-11-22T18:40:50Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ea5680e7_93ba8eec",
      "range": {
        "startLine": 44,
        "startChar": 0,
        "endLine": 46,
        "endChar": 5
      },
      "revId": "89cdd135558ec0b35d1aec3563eccac1e95c461e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bfc78f60_6581c043",
        "filename": "src/dawn/tests/unittests/validation/ComputeValidationTests.cpp",
        "patchSetId": 10
      },
      "lineNbr": 72,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-11-21T10:16:51Z",
      "side": 1,
      "message": "[2]",
      "revId": "89cdd135558ec0b35d1aec3563eccac1e95c461e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}