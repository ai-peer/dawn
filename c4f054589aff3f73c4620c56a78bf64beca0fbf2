{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "f3cbec0d_e4c3e55e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000033
      },
      "writtenOn": "2023-12-21T04:32:33Z",
      "side": 1,
      "message": "Weird, but this seems to be needed a well to pass tests when running on google3.",
      "revId": "c4f054589aff3f73c4620c56a78bf64beca0fbf2",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a0fbc0be_e58d3648",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000033
      },
      "writtenOn": "2023-12-21T04:33:06Z",
      "side": 1,
      "message": "This mirrors the code in the CreateInputStruct function.",
      "revId": "c4f054589aff3f73c4620c56a78bf64beca0fbf2",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3dc2e144_a3a2f064",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1002361
      },
      "writtenOn": "2024-01-08T19:42:22Z",
      "side": 1,
      "message": "This change is no longer needed, right, David?",
      "revId": "c4f054589aff3f73c4620c56a78bf64beca0fbf2",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3f5e9e79_48e05b15",
        "filename": "src/tint/lang/wgsl/ast/transform/canonicalize_entry_point_io.cc",
        "patchSetId": 1
      },
      "lineNbr": 659,
      "author": {
        "id": 1002361
      },
      "writtenOn": "2023-12-21T16:19:25Z",
      "side": 1,
      "message": "Am confused by the commit comment:\n\n\u003e Use tint::Transform to guarantee ordering.\n\nI don\u0027t see how this guarantees ordering any more than the code that was there before.",
      "revId": "c4f054589aff3f73c4620c56a78bf64beca0fbf2",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "458fe36b_94db6606",
        "filename": "src/tint/lang/wgsl/ast/transform/canonicalize_entry_point_io.cc",
        "patchSetId": 1
      },
      "lineNbr": 659,
      "author": {
        "id": 1002241
      },
      "writtenOn": "2023-12-21T17:56:55Z",
      "side": 1,
      "message": "Yeah, I\u0027m also confused about this. The input and output containers are both vectors, so I\u0027m not sure where the non-determinism is given that we sort `wrapper_struct_output_members` just before this.",
      "parentUuid": "3f5e9e79_48e05b15",
      "revId": "c4f054589aff3f73c4620c56a78bf64beca0fbf2",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e41fd1ff_f880828a",
        "filename": "src/tint/lang/wgsl/ast/transform/canonicalize_entry_point_io.cc",
        "patchSetId": 1
      },
      "lineNbr": 659,
      "author": {
        "id": 1000033
      },
      "writtenOn": "2023-12-21T18:00:41Z",
      "side": 1,
      "message": "Yes I\u0027m surprised by this too.\n\nWe\u0027ve been discussing and experimenting and things look fishy. This may not be the right thing to do.",
      "parentUuid": "3f5e9e79_48e05b15",
      "revId": "c4f054589aff3f73c4620c56a78bf64beca0fbf2",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Code-Review=MAX,user=non_uploader","label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "c4f054589aff3f73c4620c56a78bf64beca0fbf2",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Kokoro",
        "description": {
          "value": "A maximum vote is required for the Kokoro label. A minimum vote is blocking."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Kokoro\u003dMAX AND -label:Kokoro\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "uploader:dawn-autoroll@skia-public.iam.gserviceaccount.com OR uploader:chrome-automated-expectation@chops-service-accounts.iam.gserviceaccount.com OR uploader:chrome-branch-day@chops-service-accounts.iam.gserviceaccount.com"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Kokoro=MAX AND -label:Kokoro=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Kokoro=MAX"],"failingAtoms":["label:Kokoro=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"uploader:dawn-autoroll@skia-public.iam.gserviceaccount.com OR uploader:chrome-automated-expectation@chops-service-accounts.iam.gserviceaccount.com OR uploader:chrome-branch-day@chops-service-accounts.iam.gserviceaccount.com"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["uploader:dawn-autoroll@skia-public.iam.gserviceaccount.com","uploader:chrome-automated-expectation@chops-service-accounts.iam.gserviceaccount.com","uploader:chrome-branch-day@chops-service-accounts.iam.gserviceaccount.com"]}
      },
      "patchSetCommitId": "c4f054589aff3f73c4620c56a78bf64beca0fbf2",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforced_gerrit"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "c4f054589aff3f73c4620c56a78bf64beca0fbf2",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}