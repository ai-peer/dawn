{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "294be472_6896df89",
        "filename": "src/dawn/native/d3d11/BufferD3D11.cpp",
        "patchSetId": 9
      },
      "lineNbr": 543,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2024-01-26T18:23:45Z",
      "side": 1,
      "message": "this one looks the same; what changed?\n\ntbh I liked it better when we explicitly assigned the members. It is more obviously correct instead of trusting the order of members is correct here.",
      "revId": "9d7b25ac31c3a2dcf7c70854c0dc799a624cdf95",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "db8af526_4f5cca15",
        "filename": "src/dawn/native/d3d11/BufferD3D11.cpp",
        "patchSetId": 9
      },
      "lineNbr": 543,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2024-01-26T19:10:56Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "294be472_6896df89",
      "revId": "9d7b25ac31c3a2dcf7c70854c0dc799a624cdf95",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "325477b6_da48daa1",
        "filename": "src/dawn/native/d3d11/BufferD3D11.cpp",
        "patchSetId": 9
      },
      "lineNbr": 585,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2024-01-26T18:23:45Z",
      "side": 1,
      "message": "shouldn\u0027t this be resize() ? right now you\u0027re copying data into the buffer which is technically past what alignedBuffer.end() would tell you is the end",
      "range": {
        "startLine": 585,
        "startChar": 26,
        "endLine": 585,
        "endChar": 33
      },
      "revId": "9d7b25ac31c3a2dcf7c70854c0dc799a624cdf95",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0c91c16a_bb79181b",
        "filename": "src/dawn/native/d3d11/BufferD3D11.cpp",
        "patchSetId": 9
      },
      "lineNbr": 585,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2024-01-26T18:34:14Z",
      "side": 1,
      "message": "Just want to avoid clearing items in vector, since it will be overwrite by memcpy.",
      "parentUuid": "325477b6_da48daa1",
      "range": {
        "startLine": 585,
        "startChar": 26,
        "endLine": 585,
        "endChar": 33
      },
      "revId": "9d7b25ac31c3a2dcf7c70854c0dc799a624cdf95",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "33bbf68c_c3deb1c4",
        "filename": "src/dawn/native/d3d11/BufferD3D11.cpp",
        "patchSetId": 9
      },
      "lineNbr": 585,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2024-01-26T18:41:36Z",
      "side": 1,
      "message": "maybe do std::unique_ptr\u003cuint8_t[]\u003e instead then and alloc with `new uint8_t[size]` ?",
      "parentUuid": "0c91c16a_bb79181b",
      "range": {
        "startLine": 585,
        "startChar": 26,
        "endLine": 585,
        "endChar": 33
      },
      "revId": "9d7b25ac31c3a2dcf7c70854c0dc799a624cdf95",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a666aaa8_e9f8acca",
        "filename": "src/dawn/native/d3d11/BufferD3D11.cpp",
        "patchSetId": 9
      },
      "lineNbr": 585,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2024-01-26T19:10:56Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "33bbf68c_c3deb1c4",
      "range": {
        "startLine": 585,
        "startChar": 26,
        "endLine": 585,
        "endChar": 33
      },
      "revId": "9d7b25ac31c3a2dcf7c70854c0dc799a624cdf95",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f51a2973_bd95bce7",
        "filename": "src/dawn/native/d3d11/BufferD3D11.cpp",
        "patchSetId": 9
      },
      "lineNbr": 596,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2024-01-26T18:23:45Z",
      "side": 1,
      "message": "it is fine to do UpdateSubresource1, but it would since the old path already worked, it would be nice to add a feature check so that we use UpdateSubresource when UpdateSubresource1 is not available. We\u0027ll need to bring the old path back from WebGPU compat",
      "range": {
        "startLine": 596,
        "startChar": 24,
        "endLine": 596,
        "endChar": 42
      },
      "revId": "9d7b25ac31c3a2dcf7c70854c0dc799a624cdf95",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "836af71e_8036d4a7",
        "filename": "src/dawn/native/d3d11/BufferD3D11.cpp",
        "patchSetId": 9
      },
      "lineNbr": 596,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2024-01-26T18:33:06Z",
      "side": 1,
      "message": "UpdateSubresource1() for constant buffer should be supported since Windows 8, and we dropped Windows 7 support on Jan 2020, Windows 8 and 8.1 on Jan, 2023. So do we really care about those unsupported Windows versions?",
      "parentUuid": "f51a2973_bd95bce7",
      "range": {
        "startLine": 596,
        "startChar": 24,
        "endLine": 596,
        "endChar": 42
      },
      "revId": "9d7b25ac31c3a2dcf7c70854c0dc799a624cdf95",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b2a50de9_74a255ad",
        "filename": "src/dawn/native/d3d11/BufferD3D11.cpp",
        "patchSetId": 9
      },
      "lineNbr": 596,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2024-01-26T18:41:36Z",
      "side": 1,
      "message": "ah ok, I stand corrected. I thought this was one of the feature level 11.1 vs 11.0 differences.",
      "parentUuid": "836af71e_8036d4a7",
      "range": {
        "startLine": 596,
        "startChar": 24,
        "endLine": 596,
        "endChar": 42
      },
      "revId": "9d7b25ac31c3a2dcf7c70854c0dc799a624cdf95",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "987606d2_f191c511",
        "filename": "src/dawn/native/d3d11/BufferD3D11.cpp",
        "patchSetId": 9
      },
      "lineNbr": 638,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2024-01-26T18:23:45Z",
      "side": 1,
      "message": "ditto on preferring to assign to .left, .right, etc.",
      "revId": "9d7b25ac31c3a2dcf7c70854c0dc799a624cdf95",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3d01ebb3_de4b841c",
        "filename": "src/dawn/native/d3d11/BufferD3D11.cpp",
        "patchSetId": 9
      },
      "lineNbr": 638,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2024-01-26T19:10:56Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "987606d2_f191c511",
      "revId": "9d7b25ac31c3a2dcf7c70854c0dc799a624cdf95",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}