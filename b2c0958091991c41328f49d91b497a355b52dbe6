{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "f740ea71_90293662",
        "filename": "tools/src/cts/expectations/update.go",
        "patchSetId": 1
      },
      "lineNbr": 287,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-04-14T17:11:42Z",
      "side": 1,
      "message": "to clarify:\n\nthis copies existing RetryOnFailure status into the new result tree?\n\nshould we avoid changing the status if the new tree sees it as [ Failure ] ? I suppose that could have a problem where RetryOnFailure gets upgraded to Failure, and then only partially downgraded back to RetryOnFailure - which doesn\u0027t preserve the expectations as we intended\n\n\nwhat is the difference between doing this, versus having RetryOnFailure imply `keep` in `func (u *updater) expectation(in Expectation, keep bool)`?",
      "revId": "b2c0958091991c41328f49d91b497a355b52dbe6",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c9c33afa_a8f368d8",
        "filename": "tools/src/cts/expectations/update.go",
        "patchSetId": 1
      },
      "lineNbr": 287,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2023-04-14T18:23:57Z",
      "side": 1,
      "message": "\u003e this copies existing RetryOnFailure status into the new result tree?\n\nCorrect.\n\n\u003e should we avoid changing the status if the new tree sees it as [ Failure ] ? I suppose that could have a problem where RetryOnFailure gets upgraded to Failure, and then only partially downgraded back to RetryOnFailure - which doesn\u0027t preserve the expectations as we intended\n\nYeah exactly. This reduces flapping, which is what I think infra wants.\n\n\u003e what is the difference between doing this, versus having RetryOnFailure imply `keep` in `func (u *updater) expectation(in Expectation, keep bool)`?\n\nFaking the results means that it can glob higher than the existing `RetryOnFailure` expectations. This might be important to keep the ever-growing list under control.",
      "parentUuid": "f740ea71_90293662",
      "revId": "b2c0958091991c41328f49d91b497a355b52dbe6",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e971d6c0_4e8be6a1",
        "filename": "tools/src/cts/expectations/update.go",
        "patchSetId": 1
      },
      "lineNbr": 287,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-04-14T18:25:40Z",
      "side": 1,
      "message": "got it - thanks!",
      "parentUuid": "c9c33afa_a8f368d8",
      "revId": "b2c0958091991c41328f49d91b497a355b52dbe6",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "b2c0958091991c41328f49d91b497a355b52dbe6",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Kokoro",
        "description": {
          "value": "A maximum vote is required for the Kokoro label. A minimum vote is blocking."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Kokoro\u003dMAX AND -label:Kokoro\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "uploader:dawn-autoroll@skia-public.iam.gserviceaccount.com"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Kokoro=MAX AND -label:Kokoro=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Kokoro=MAX"],"failingAtoms":["label:Kokoro=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"uploader:dawn-autoroll@skia-public.iam.gserviceaccount.com"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["uploader:dawn-autoroll@skia-public.iam.gserviceaccount.com"]}
      },
      "patchSetCommitId": "b2c0958091991c41328f49d91b497a355b52dbe6",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "patchSetCommitId": "b2c0958091991c41328f49d91b497a355b52dbe6",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    }
  ]
}