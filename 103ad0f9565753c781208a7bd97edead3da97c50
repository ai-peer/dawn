{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "9476dd91_5c27e86f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2022-04-18T16:15:47Z",
      "side": 1,
      "message": "LGTM\n\nwe should make sure we have an end2end test for this too. Putting it in the CTS instead is OK too.\n\nWe have this test:\nhttps://source.chromium.org/chromium/chromium/src/+/main:third_party/dawn/src/dawn/tests/end2end/RenderAttachmentTests.cpp;l\u003d24?q\u003df:dawn%20%20f:tests%20Fragment\n\nbut it doesn\u0027t use writeMask. it leaves formats missing in the pipeline desc, but present in the fragment shader, but not writeMask\u0027ed out to 0.",
      "revId": "103ad0f9565753c781208a7bd97edead3da97c50",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "32427f91_f1432197",
        "filename": "src/dawn/tests/unittests/validation/RenderPipelineValidationTests.cpp",
        "patchSetId": 2
      },
      "lineNbr": 329,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2022-04-18T16:15:47Z",
      "side": 1,
      "message": "uint: generally, if these are named \"kName\" we make them `constexpr`",
      "range": {
        "startLine": 324,
        "startChar": 4,
        "endLine": 329,
        "endChar": 82
      },
      "revId": "103ad0f9565753c781208a7bd97edead3da97c50",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c9b34df7_72d3841c",
        "filename": "src/dawn/tests/unittests/validation/RenderPipelineValidationTests.cpp",
        "patchSetId": 2
      },
      "lineNbr": 329,
      "author": {
        "id": 1000685
      },
      "writtenOn": "2022-04-18T21:57:39Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "32427f91_f1432197",
      "range": {
        "startLine": 324,
        "startChar": 4,
        "endLine": 329,
        "endChar": 82
      },
      "revId": "103ad0f9565753c781208a7bd97edead3da97c50",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "09355a03_e8882fb1",
        "filename": "src/dawn/tests/unittests/validation/RenderPipelineValidationTests.cpp",
        "patchSetId": 2
      },
      "lineNbr": 344,
      "author": {
        "id": 1002831
      },
      "writtenOn": "2022-04-18T19:13:16Z",
      "side": 1,
      "message": "nit. Might be easier to read if we use absl::StrFormat instead?",
      "range": {
        "startLine": 336,
        "startChar": 12,
        "endLine": 344,
        "endChar": 98
      },
      "revId": "103ad0f9565753c781208a7bd97edead3da97c50",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2aff7462_d29cc04b",
        "filename": "src/dawn/tests/unittests/validation/RenderPipelineValidationTests.cpp",
        "patchSetId": 2
      },
      "lineNbr": 344,
      "author": {
        "id": 1000685
      },
      "writtenOn": "2022-04-18T21:57:39Z",
      "side": 1,
      "message": "That seems to require including \"dawn/native/Format.h\" and when I was working on emscripten build dawn test I was trying to avoid using absl and native stuffs in end2end/unittests (There\u0027s only one occurance in another unittest and I planned to replace that as well)\nKeeping this as is",
      "parentUuid": "09355a03_e8882fb1",
      "range": {
        "startLine": 336,
        "startChar": 12,
        "endLine": 344,
        "endChar": 98
      },
      "revId": "103ad0f9565753c781208a7bd97edead3da97c50",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9580fe0e_97d46c88",
        "filename": "src/dawn/tests/unittests/validation/RenderPipelineValidationTests.cpp",
        "patchSetId": 2
      },
      "lineNbr": 344,
      "author": {
        "id": 1002831
      },
      "writtenOn": "2022-04-18T23:36:03Z",
      "side": 1,
      "message": "Hmm, is that so that we can run unittests using emscripten? I think that avoiding native stuff in end2end makes sense, but unittests will inevitably use native stuff here and there. (In fact I would even say it SHOULD use native stuff since they are unit tests?). So while avoiding them now may be fine, I think that it would make more sense to eventually make sure that emscripten can compile our native build as is instead.",
      "parentUuid": "2aff7462_d29cc04b",
      "range": {
        "startLine": 336,
        "startChar": 12,
        "endLine": 344,
        "endChar": 98
      },
      "revId": "103ad0f9565753c781208a7bd97edead3da97c50",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4da3e3e8_df0938ab",
        "filename": "src/dawn/tests/unittests/validation/RenderPipelineValidationTests.cpp",
        "patchSetId": 2
      },
      "lineNbr": 344,
      "author": {
        "id": 1000685
      },
      "writtenOn": "2022-04-18T23:51:34Z",
      "side": 1,
      "message": "I think it\u0027s emscripten build dawn unittests without dawn (running against another prebuilt dawn implementation like chromium) So the native specific tests are not planned to build there. This render pipeline validation tests is a general tests we want to include there so we want to avoid abseil stuff.",
      "parentUuid": "9580fe0e_97d46c88",
      "range": {
        "startLine": 336,
        "startChar": 12,
        "endLine": 344,
        "endChar": 98
      },
      "revId": "103ad0f9565753c781208a7bd97edead3da97c50",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}