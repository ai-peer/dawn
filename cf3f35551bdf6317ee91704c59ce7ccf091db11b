{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "c527374b_09daee42",
        "filename": "/COMMIT_MSG",
        "patchSetId": 8
      },
      "lineNbr": 16,
      "author": {
        "id": 1000262
      },
      "writtenOn": "2023-05-26T00:46:48Z",
      "side": 1,
      "message": "With Root Signature 1.0, all of the descriptors are considered DATA_VOLATILE. You do not need Root Signature 1.1 to remove extra index clamping in Tint.\n\nRoot Signature 1.1 is for when Dawn can make additional guarantees about the data pointed to by the descriptor. Sounds like that\u0027s not the case.",
      "range": {
        "startLine": 14,
        "startChar": 53,
        "endLine": 16,
        "endChar": 29
      },
      "revId": "cf3f35551bdf6317ee91704c59ce7ccf091db11b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "42328491_f37b1f14",
        "filename": "/COMMIT_MSG",
        "patchSetId": 8
      },
      "lineNbr": 16,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2023-05-26T00:51:48Z",
      "side": 1,
      "message": "Hi Rafael,I learned from https://bugs.chromium.org/p/tint/issues/detail?id\u003d1890#c6 that with Root Signature 1.0, \"Root descriptor buffers do not have bounds checks, and worse still, some buffers can be promoted to root descriptor buffers as an optimization of D3D\", that\u0027s why we need Root Signature 1.1 to safely remove index clamping.",
      "parentUuid": "c527374b_09daee42",
      "range": {
        "startLine": 14,
        "startChar": 53,
        "endLine": 16,
        "endChar": 29
      },
      "revId": "cf3f35551bdf6317ee91704c59ce7ccf091db11b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ac900ae5_2b2f3878",
        "filename": "/COMMIT_MSG",
        "patchSetId": 8
      },
      "lineNbr": 16,
      "author": {
        "id": 1000262
      },
      "writtenOn": "2023-05-26T01:01:40Z",
      "side": 1,
      "message": "If you use Root Signature v1.1, then you must specify DESCRIPTORS_STATIC_KEEPING_BUFFER_BOUNDS_CHECKS on static descriptors to prevent them from being optimized to root descriptors by the driver.\n\nIf you\u0027re just using Root Signature v1.0, all of the descriptors are considered volatile so no promotion happens behind your back.",
      "parentUuid": "42328491_f37b1f14",
      "range": {
        "startLine": 14,
        "startChar": 53,
        "endLine": 16,
        "endChar": 29
      },
      "revId": "cf3f35551bdf6317ee91704c59ce7ccf091db11b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "03a05779_49a0d5c3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-05-24T12:19:58Z",
      "side": 1,
      "message": "LGTM",
      "revId": "cf3f35551bdf6317ee91704c59ce7ccf091db11b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9db410ec_8cda7ae3",
        "filename": "src/dawn/native/Toggles.cpp",
        "patchSetId": 8
      },
      "lineNbr": 422,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-05-24T12:19:58Z",
      "side": 1,
      "message": "u-nit: promoting",
      "range": {
        "startLine": 422,
        "startChar": 64,
        "endLine": 422,
        "endChar": 74
      },
      "revId": "cf3f35551bdf6317ee91704c59ce7ccf091db11b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8cf279e4_a296a739",
        "filename": "src/dawn/native/Toggles.cpp",
        "patchSetId": 8
      },
      "lineNbr": 422,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2023-05-26T02:25:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9db410ec_8cda7ae3",
      "range": {
        "startLine": 422,
        "startChar": 64,
        "endLine": 422,
        "endChar": 74
      },
      "revId": "cf3f35551bdf6317ee91704c59ce7ccf091db11b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b9af9c5e_b9bc0fb3",
        "filename": "src/dawn/native/d3d12/BindGroupLayoutD3D12.cpp",
        "patchSetId": 8
      },
      "lineNbr": 106,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-05-24T12:19:58Z",
      "side": 1,
      "message": "nit: I think this should be just _VOLATILE? We do set DATA_VOLATILE because we transition the textures and buffers.",
      "range": {
        "startLine": 106,
        "startChar": 29,
        "endLine": 106,
        "endChar": 42
      },
      "revId": "cf3f35551bdf6317ee91704c59ce7ccf091db11b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ba744a50_def75ae7",
        "filename": "src/dawn/native/d3d12/BindGroupLayoutD3D12.cpp",
        "patchSetId": 8
      },
      "lineNbr": 106,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2023-05-26T02:25:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b9af9c5e_b9bc0fb3",
      "range": {
        "startLine": 106,
        "startChar": 29,
        "endLine": 106,
        "endChar": 42
      },
      "revId": "cf3f35551bdf6317ee91704c59ce7ccf091db11b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8605672e_2e12ed36",
        "filename": "src/dawn/native/d3d12/BindGroupLayoutD3D12.cpp",
        "patchSetId": 8
      },
      "lineNbr": 131,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-05-24T12:19:58Z",
      "side": 1,
      "message": "ExternalTexture bindings are decayed in the frontend and backends shouldn\u0027t need to handle them.",
      "revId": "cf3f35551bdf6317ee91704c59ce7ccf091db11b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "043ae854_5ea43d8a",
        "filename": "src/dawn/native/d3d12/BindGroupLayoutD3D12.cpp",
        "patchSetId": 8
      },
      "lineNbr": 131,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2023-05-26T02:25:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8605672e_2e12ed36",
      "revId": "cf3f35551bdf6317ee91704c59ce7ccf091db11b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7a0fcf95_2e64d209",
        "filename": "src/dawn/native/d3d12/PipelineLayoutD3D12.cpp",
        "patchSetId": 8
      },
      "lineNbr": 312,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-05-24T12:19:58Z",
      "side": 1,
      "message": "nit: we could even go as far as:\n\n```\nD3D12_VERSIONED_ROOT_SIGNATURE_DESC desc \u003d {};\n        desc.Version \u003d D3D_ROOT_SIGNATURE_VERSION_1_1;\n        desc.Desc_1_1.NumParameters \u003d rootParameters.size();\n        desc.Desc_1_1.pParameters \u003d rootParameters.data();\n        desc.Desc_1_1.NumStaticSamplers \u003d 0;\n        desc.Desc_1_1.pStaticSamplers \u003d nullptr;\n        desc.Desc_1_1.Flags \u003d\n\n   ComPtr\u003cID3DBlob\u003e error;\n    HRESULT hr;\n   \n   if (use 1_1) {\n     hr \u003d ...\n   } else {\n     Serialize1_0RootSignature(device, desc, ...);\n   }\n```\n\nThen all the complexity of the 1.0 root signature is in one function and we don\u0027t need to move vectors around.",
      "revId": "cf3f35551bdf6317ee91704c59ce7ccf091db11b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "158888ad_beaacafa",
        "filename": "src/dawn/native/d3d12/PipelineLayoutD3D12.cpp",
        "patchSetId": 8
      },
      "lineNbr": 312,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2023-05-26T02:25:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7a0fcf95_2e64d209",
      "revId": "cf3f35551bdf6317ee91704c59ce7ccf091db11b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9709e728_e680c17f",
        "filename": "src/dawn/tests/end2end/BindGroupTests.cpp",
        "patchSetId": 8
      },
      "lineNbr": 1604,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-05-24T21:16:41Z",
      "side": 1,
      "message": "we should probably test the 1.0 on more tests.\nmaybe additionally:\nExternalTextureTests\nDynamicBufferOffsetTests\nPipelineLayoutTests",
      "revId": "cf3f35551bdf6317ee91704c59ce7ccf091db11b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2a1ede80_7263a63e",
        "filename": "src/dawn/tests/end2end/BindGroupTests.cpp",
        "patchSetId": 8
      },
      "lineNbr": 1604,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2023-05-26T02:25:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9709e728_e680c17f",
      "revId": "cf3f35551bdf6317ee91704c59ce7ccf091db11b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}