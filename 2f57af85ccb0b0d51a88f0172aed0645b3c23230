{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "40a37474_f00aed62",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 16,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-08-04T10:28:29Z",
      "side": 1,
      "message": "Any tests that can already be added in this CL? Also we should expose limits for the min/max subgroup size, are you planning to do it in a follow-up?",
      "revId": "2f57af85ccb0b0d51a88f0172aed0645b3c23230",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "26194be3_abd3664a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 16,
      "author": {
        "id": 1002536
      },
      "writtenOn": "2023-08-07T09:12:45Z",
      "side": 1,
      "message": "\u003e Any tests that can already be added in this CL?\n\nI can add the shader model validation tests that check the WGSL shader creation would failed if requiring extension `f16` or `chromium_experimental_subgroups` without device\u0027s support of the required features.\n\nIf that sound right I will add them tomorrow.\n\n\u003e we should expose limits for the min/max subgroup size, are you planning to do it in a follow-up?\n\nYes, I plan to add the min/max subgroup size in next CLs.",
      "parentUuid": "40a37474_f00aed62",
      "revId": "2f57af85ccb0b0d51a88f0172aed0645b3c23230",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8c0dd040_433cf345",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 16,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-08-07T10:34:21Z",
      "side": 1,
      "message": "Negative validation tests sound good.",
      "parentUuid": "26194be3_abd3664a",
      "revId": "2f57af85ccb0b0d51a88f0172aed0645b3c23230",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3d07cb1e_383d16ed",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 16,
      "author": {
        "id": 1002536
      },
      "writtenOn": "2023-08-08T09:49:00Z",
      "side": 1,
      "message": "Add unit tests for WGSL extension validation when creating shader module, test all known WGSL extension including the new-added `chromium_experimental_subgroups` WGSL extension.",
      "parentUuid": "8c0dd040_433cf345",
      "revId": "2f57af85ccb0b0d51a88f0172aed0645b3c23230",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5bde86e4_e0c6de22",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 16,
      "author": {
        "id": 1002536
      },
      "writtenOn": "2023-08-09T08:53:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3d07cb1e_383d16ed",
      "revId": "2f57af85ccb0b0d51a88f0172aed0645b3c23230",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dbb4c155_d1b08425",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1002536
      },
      "writtenOn": "2023-08-03T09:04:39Z",
      "side": 1,
      "message": "Please take a look, thanks!\nThis CL enable Dawn experimental features for subgroup, `chromium-experimental-subgroups` and `chromium-experimental-subgroup-uniform-control-flow`.\nNote that SPIRV execution mode modification for `chromium-experimental-subgroup-uniform-control-flow` is not implemented yet in this CL.",
      "revId": "2f57af85ccb0b0d51a88f0172aed0645b3c23230",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "82c59afa_ee0ba50b",
        "filename": "src/dawn/native/Features.cpp",
        "patchSetId": 6
      },
      "lineNbr": 92,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-08-04T10:28:29Z",
      "side": 1,
      "message": "Can we add info about how this is currently only used to investigate the semantic of subgroups and should not be relied upon.",
      "revId": "2f57af85ccb0b0d51a88f0172aed0645b3c23230",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c0851118_554aabb8",
        "filename": "src/dawn/native/Features.cpp",
        "patchSetId": 6
      },
      "lineNbr": 92,
      "author": {
        "id": 1002536
      },
      "writtenOn": "2023-08-07T09:12:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "82c59afa_ee0ba50b",
      "revId": "2f57af85ccb0b0d51a88f0172aed0645b3c23230",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c1ba6a6a_09cd9f1b",
        "filename": "src/dawn/native/d3d12/D3D12Info.h",
        "patchSetId": 6
      },
      "lineNbr": 42,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-08-04T10:28:29Z",
      "side": 1,
      "message": "nit: supportsWaveOps since we\u0027re in the D3D backend?",
      "revId": "2f57af85ccb0b0d51a88f0172aed0645b3c23230",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8cf83058_39ab87d1",
        "filename": "src/dawn/native/d3d12/D3D12Info.h",
        "patchSetId": 6
      },
      "lineNbr": 42,
      "author": {
        "id": 1002536
      },
      "writtenOn": "2023-08-07T09:12:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c1ba6a6a_09cd9f1b",
      "revId": "2f57af85ccb0b0d51a88f0172aed0645b3c23230",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6ef6dfce_717d02d8",
        "filename": "src/dawn/native/d3d12/D3D12Info.h",
        "patchSetId": 6
      },
      "lineNbr": 43,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-08-04T10:28:29Z",
      "side": 1,
      "message": "nit: casing in camelCase?",
      "range": {
        "startLine": 43,
        "startChar": 13,
        "endLine": 43,
        "endChar": 29
      },
      "revId": "2f57af85ccb0b0d51a88f0172aed0645b3c23230",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e5224c74_b9218ce1",
        "filename": "src/dawn/native/d3d12/D3D12Info.h",
        "patchSetId": 6
      },
      "lineNbr": 43,
      "author": {
        "id": 1002536
      },
      "writtenOn": "2023-08-07T09:12:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6ef6dfce_717d02d8",
      "range": {
        "startLine": 43,
        "startChar": 13,
        "endLine": 43,
        "endChar": 29
      },
      "revId": "2f57af85ccb0b0d51a88f0172aed0645b3c23230",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "07ce7b0a_f8ec7dac",
        "filename": "src/dawn/native/d3d12/PhysicalDeviceD3D12.cpp",
        "patchSetId": 6
      },
      "lineNbr": 146,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-08-04T10:28:29Z",
      "side": 1,
      "message": "nit: Could be folded in a single condition.",
      "revId": "2f57af85ccb0b0d51a88f0172aed0645b3c23230",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c91f5583_4cfea19e",
        "filename": "src/dawn/native/d3d12/PhysicalDeviceD3D12.cpp",
        "patchSetId": 6
      },
      "lineNbr": 146,
      "author": {
        "id": 1002536
      },
      "writtenOn": "2023-08-07T09:12:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "07ce7b0a_f8ec7dac",
      "revId": "2f57af85ccb0b0d51a88f0172aed0645b3c23230",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "40b046b3_24df6a4e",
        "filename": "src/dawn/native/vulkan/PhysicalDeviceVk.cpp",
        "patchSetId": 6
      },
      "lineNbr": 290,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-08-04T10:28:29Z",
      "side": 1,
      "message": "Alan, IIRC the subgroup_size_control isn\u0027t required for this experimental extension since the other backends don\u0027t have it?",
      "revId": "2f57af85ccb0b0d51a88f0172aed0645b3c23230",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1a53de71_a7230c9c",
        "filename": "src/dawn/native/vulkan/PhysicalDeviceVk.cpp",
        "patchSetId": 6
      },
      "lineNbr": 290,
      "author": {
        "id": 1002266
      },
      "writtenOn": "2023-08-08T16:10:09Z",
      "side": 1,
      "message": "Without that extension, Vulkan has a single subgroup size field and it is known to be unreliable. This extension provides the min/max values for subgroup sizing. I think we would require this in the final version which is why I had it listed as a requirement.",
      "parentUuid": "40b046b3_24df6a4e",
      "revId": "2f57af85ccb0b0d51a88f0172aed0645b3c23230",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}