{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "bb5ed42f_ddc492ae",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-02-15T09:07:24Z",
      "side": 1,
      "message": "I\u0027m on the fence on this one. Rafael believes that making a null SRV is better for perf, but here we are introducing a bunch of additional branches in the hot path for D3D12. (texture barrier, srv creation, etc). Overall it seems we\u0027re adding complexity for 1) slower CPU side code and maybe 2) tiny gains on the GPU side.\n\nI don\u0027t think this is worth it. If Rafael disagrees, I\u0027m happy to argue. (though it will have to wait for quite some time).\n\nThe code LGTM in terms of correctness / readability otherwise.",
      "revId": "c5593133f0635f4a955222b68e924e50dd92e928",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6d8644d1_0bcaeed6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000248
      },
      "writtenOn": "2022-02-15T17:52:20Z",
      "side": 1,
      "message": "I\u0027ll let Rafael know.\n\nOne point I\u0027m aware of is the memory saved by not allocating the D3D12 resource. A 1x1x1 RGBA8 texture appears to be only 4 bytes, but I believe it\u0027s actually 4KB due to alignment requirements.",
      "parentUuid": "bb5ed42f_ddc492ae",
      "revId": "c5593133f0635f4a955222b68e924e50dd92e928",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "009f9717_ac511904",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000248
      },
      "writtenOn": "2022-02-15T21:11:10Z",
      "side": 1,
      "message": "To add - the minimum page size for D3D is 64KB, which is non-negligible overhead for a 1x1x1 texture. In the absolute worst case scenario, Dawn\u0027s allocation scheme could require creating a 4MB heap for this texture. We must also consider the CPU cycles associated with each allocation.\n\nI\u0027ve been told that the overhead associated with what\u0027s stated above will be very apparent in a profile - so that\u0027s what I will plan to do when I have the time.",
      "parentUuid": "6d8644d1_0bcaeed6",
      "revId": "c5593133f0635f4a955222b68e924e50dd92e928",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b9100c66_cd912b14",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2022-02-17T05:36:06Z",
      "side": 1,
      "message": "I don\u0027t feel as strongly about this as Corentin, but it is indeed additional complexity without a clear promise of what it gives us.\n\nSo agreed, a profile would make sense and could be convincing. To that end, let\u0027s get this wired up in Chrome, tested, with zero-copy. And then, measure to evaluate performance.",
      "parentUuid": "009f9717_ac511904",
      "revId": "c5593133f0635f4a955222b68e924e50dd92e928",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ed901739_653a414e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000248
      },
      "writtenOn": "2022-02-17T17:36:45Z",
      "side": 1,
      "message": "Sounds fair to me. I expect this CL will sit for awhile.",
      "parentUuid": "b9100c66_cd912b14",
      "revId": "c5593133f0635f4a955222b68e924e50dd92e928",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d220fa0e_1c44f070",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000248
      },
      "writtenOn": "2022-03-11T17:11:43Z",
      "side": 1,
      "message": "I\u0027ve done some analysis on the impact of not doing this CL.\n\nI just ran a WebGPU page with 3 ExternalTexture-based videos going and analyzed the D3D12 heap contents at multiple points before and after.\n\nI found that without this CL:\n- Each external texture costs an extra 64KB, always.\n- In the worst case, the allocation manager would not have any free memory available and have to create an additional 4MB heap to store the unnecessary 64KB allocation.\n\nI did not find a significant CPU cost to creating the additional texture.\n\nThere\u0027s certainly an inefficiency to creating dummy textures, but given the very short lifetime of an external texture I do not consider it particularly impactful. If the lifetime of an external texture was increased (which I believe is still a possibility) the impact of unnecessary dummy textures would increase.",
      "parentUuid": "ed901739_653a414e",
      "revId": "c5593133f0635f4a955222b68e924e50dd92e928",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b93dab6e_20f8adb2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-03-15T14:30:42Z",
      "side": 1,
      "message": "If we deduplicate using GetOrCreate as Austin said, that would be a single 64kb allocation. Probably ok? I\u0027m still worried about the branch on the hot path, but maybe in the future we\u0027ll find a way to remove it by merging it with some other branches.",
      "parentUuid": "d220fa0e_1c44f070",
      "revId": "c5593133f0635f4a955222b68e924e50dd92e928",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8a31ee9e_faec7eba",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000248
      },
      "writtenOn": "2022-03-16T21:19:53Z",
      "side": 1,
      "message": "Sounds fine. As far as the GetOrCreate implementation - we don\u0027t have the hashing infra for textures like we do for pipeline layouts/shaders etc. and I\u0027m feeling like it\u0027s not something we\u0027re going to need in the future. Is it find if I just store a dummy texture on the device that we can reuse?",
      "parentUuid": "b93dab6e_20f8adb2",
      "revId": "c5593133f0635f4a955222b68e924e50dd92e928",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "403e51ba_0b70d05b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2022-03-16T21:23:04Z",
      "side": 1,
      "message": "yes",
      "parentUuid": "8a31ee9e_faec7eba",
      "revId": "c5593133f0635f4a955222b68e924e50dd92e928",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "818df3c9_b853592f",
        "filename": "src/dawn/native/Device.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1588,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-02-15T09:07:24Z",
      "side": 1,
      "message": "nit: GetOrCreateDummyTexture? So we can cache it on the device.",
      "revId": "c5593133f0635f4a955222b68e924e50dd92e928",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b152d435_62364c91",
        "filename": "src/dawn/native/Device.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1588,
      "author": {
        "id": 1000248
      },
      "writtenOn": "2022-03-18T21:40:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "818df3c9_b853592f",
      "revId": "c5593133f0635f4a955222b68e924e50dd92e928",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}