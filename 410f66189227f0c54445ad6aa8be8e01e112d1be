{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "f0035aac_e1d34524",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 1000248
      },
      "writtenOn": "2020-12-03T03:58:40Z",
      "side": 1,
      "message": "Comments addressed. Refactored primitive restart tests into their own class. Additionally I found that the OOB index tests do not work correctly on Intel hardware, so Iâ€™ve disabled them. Should be ready to merge if everything still looks okay.\n\n",
      "revId": "410f66189227f0c54445ad6aa8be8e01e112d1be",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "047cc522_c6c0b689",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-12-03T08:50:10Z",
      "side": 1,
      "message": "Still LGTM, feel free to land and address comments as a follow-up.",
      "revId": "410f66189227f0c54445ad6aa8be8e01e112d1be",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b394b92b_b73412c4",
        "filename": "src/tests/end2end/IndexFormatTests.cpp",
        "patchSetId": 11
      },
      "lineNbr": 291,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-12-03T08:50:10Z",
      "side": 1,
      "message": "Yet! Can you add a TODO to reenable this once vertex robust vertex access is implemented on all backends? Or is the issue that it returns something other than (0, 0, 0, 1)? If it s the later we could detect it with gl_VertexIndex \u003d 0xFFFEu or 0xFFFFFFFEu in the vertex shader and set gl_Position to a known position.",
      "revId": "410f66189227f0c54445ad6aa8be8e01e112d1be",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9a62954a_62d99e6e",
        "filename": "src/tests/end2end/IndexFormatTests.cpp",
        "patchSetId": 11
      },
      "lineNbr": 291,
      "author": {
        "id": 1000248
      },
      "writtenOn": "2020-12-03T21:43:17Z",
      "side": 1,
      "message": "Done. The behavior I see on Intel is as if the 0xFFFFFFFEu is being treated as a primitive restart value. I don\u0027t think this is relevant to Dawn since the robust access will eventually catch this - I\u0027m looking into filing the bug against the driver guys on my end though.",
      "parentUuid": "b394b92b_b73412c4",
      "revId": "410f66189227f0c54445ad6aa8be8e01e112d1be",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a8b9cb12_a414d7d8",
        "filename": "src/tests/end2end/IndexFormatTests.cpp",
        "patchSetId": 11
      },
      "lineNbr": 291,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-12-04T12:24:32Z",
      "side": 1,
      "message": "The thing is that robust access won\u0027t catch this, it is technically allowed (if not reasonably common) to use an index buffer and no vertex buffers, just for the VertexIndex builtin. 0xFFFFFFFE causing a primitive restart on Intel should be considered a bug.\n\nMy suggestion was to not wait for robust access behavior that doesn\u0027t guarantee any specific value, especially on Vulkan or in the emulation on Metal, but instead look at gl_VertexIndex in the shader.",
      "parentUuid": "9a62954a_62d99e6e",
      "revId": "410f66189227f0c54445ad6aa8be8e01e112d1be",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4785edff_7ec900b0",
        "filename": "src/tests/end2end/IndexFormatTests.cpp",
        "patchSetId": 11
      },
      "lineNbr": 291,
      "author": {
        "id": 1000248
      },
      "writtenOn": "2020-12-04T21:52:50Z",
      "side": 1,
      "message": "Test work correctly on all backends/devices with this change:\nhttps://dawn-review.googlesource.com/c/dawn/+/34924",
      "parentUuid": "a8b9cb12_a414d7d8",
      "revId": "410f66189227f0c54445ad6aa8be8e01e112d1be",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c33b8cc1_69450671",
        "filename": "src/tests/end2end/IndexFormatTests.cpp",
        "patchSetId": 11
      },
      "lineNbr": 295,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-12-03T08:50:10Z",
      "side": 1,
      "message": "nit: Make the suppression more target to Intel D3D12",
      "revId": "410f66189227f0c54445ad6aa8be8e01e112d1be",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4358f4f0_3625950a",
        "filename": "src/tests/end2end/IndexFormatTests.cpp",
        "patchSetId": 11
      },
      "lineNbr": 295,
      "author": {
        "id": 1000248
      },
      "writtenOn": "2020-12-03T21:43:17Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c33b8cc1_69450671",
      "revId": "410f66189227f0c54445ad6aa8be8e01e112d1be",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8b402be5_69c9ddfd",
        "filename": "src/tests/end2end/IndexFormatTests.cpp",
        "patchSetId": 11
      },
      "lineNbr": 421,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-12-03T08:50:10Z",
      "side": 1,
      "message": "Same comments as for triangle strip.",
      "revId": "410f66189227f0c54445ad6aa8be8e01e112d1be",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c304b5bb_20566a80",
        "filename": "src/tests/end2end/IndexFormatTests.cpp",
        "patchSetId": 11
      },
      "lineNbr": 421,
      "author": {
        "id": 1000248
      },
      "writtenOn": "2020-12-03T21:43:17Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8b402be5_69c9ddfd",
      "revId": "410f66189227f0c54445ad6aa8be8e01e112d1be",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}