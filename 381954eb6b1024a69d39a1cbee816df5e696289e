{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "c8cf75e0_dc392ad1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 25
      },
      "lineNbr": 0,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-01-25T14:36:22Z",
      "side": 1,
      "message": "LGTM, one more comment",
      "revId": "381954eb6b1024a69d39a1cbee816df5e696289e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6f93d318_fbd483a5",
        "filename": "src/dawn/native/vulkan/BufferVk.cpp",
        "patchSetId": 25
      },
      "lineNbr": 417,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-01-25T14:36:22Z",
      "side": 1,
      "message": "like the rest of the Transition methods, I still think this method should take in CommandRecordingContext* as an argument since it is recording a pipeline barrier into it.\n\nIt doesn\u0027t need Device* as an argument since the device isn\u0027t really modified by the function (only used to get the `VulkanFunction`), so we can do  `ToBackend(GetDevice())-\u003efn` instead",
      "range": {
        "startLine": 417,
        "startChar": 46,
        "endLine": 417,
        "endChar": 60
      },
      "revId": "381954eb6b1024a69d39a1cbee816df5e696289e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a004cc0f_784864e5",
        "filename": "src/dawn/native/vulkan/BufferVk.cpp",
        "patchSetId": 25
      },
      "lineNbr": 417,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2023-01-25T14:52:29Z",
      "side": 1,
      "message": "This method is a static method, `GetDevice()` will not work. I can get the device from a buffer in `buffers`, but it looks weird.",
      "parentUuid": "6f93d318_fbd483a5",
      "range": {
        "startLine": 417,
        "startChar": 46,
        "endLine": 417,
        "endChar": 60
      },
      "revId": "381954eb6b1024a69d39a1cbee816df5e696289e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b3120cec_00ae371b",
        "filename": "src/dawn/native/vulkan/BufferVk.cpp",
        "patchSetId": 25
      },
      "lineNbr": 417,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2023-01-25T14:54:25Z",
      "side": 1,
      "message": "Or put this method in class `Device`, but Corentin suggested to keep the logic in `Buffer`.",
      "parentUuid": "a004cc0f_784864e5",
      "range": {
        "startLine": 417,
        "startChar": 46,
        "endLine": 417,
        "endChar": 60
      },
      "revId": "381954eb6b1024a69d39a1cbee816df5e696289e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5307a59e_7d27068d",
        "filename": "src/dawn/native/vulkan/BufferVk.cpp",
        "patchSetId": 25
      },
      "lineNbr": 417,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-01-25T14:54:38Z",
      "side": 1,
      "message": "right, thanks for the clarification.\nhow about we get VulkanFunctions at the calllsite and pass in a reference to it then?",
      "parentUuid": "a004cc0f_784864e5",
      "range": {
        "startLine": 417,
        "startChar": 46,
        "endLine": 417,
        "endChar": 60
      },
      "revId": "381954eb6b1024a69d39a1cbee816df5e696289e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e1f3ede0_d89ff248",
        "filename": "src/dawn/native/vulkan/BufferVk.cpp",
        "patchSetId": 25
      },
      "lineNbr": 417,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2023-01-25T15:00:17Z",
      "side": 1,
      "message": "I think passing in a `Device *` is not bad comparing to passing two separate params which are all included in the `Device`",
      "parentUuid": "5307a59e_7d27068d",
      "range": {
        "startLine": 417,
        "startChar": 46,
        "endLine": 417,
        "endChar": 60
      },
      "revId": "381954eb6b1024a69d39a1cbee816df5e696289e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6f962ccc_49af5527",
        "filename": "src/dawn/native/vulkan/BufferVk.cpp",
        "patchSetId": 25
      },
      "lineNbr": 417,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-01-25T15:15:43Z",
      "side": 1,
      "message": "sure, but passing in Device* opens up many more possibilities to what side effects the function may have. Right now, it looks as if it could even be making a whole new VkCommanndBuffer, recording the pipeline barrier to it, and submitting to the queue.\nPassing in more, but more precise params limits the context that the reader needs to consider when reasoning about what the code does.\n\nI also think the more precise params is better for the future when we handle multithreading. `const VulkanFunctions\u0026` is clearly const and immutable; it doesn\u0027t need a lock. CommandRecordingContext* will need to be guarded by a lock, but presumably that lock would have already been acquired at the start of the Submit.\nPassing in Device* is a concern because using it may acquire locks again - potential daadlock.",
      "parentUuid": "e1f3ede0_d89ff248",
      "range": {
        "startLine": 417,
        "startChar": 46,
        "endLine": 417,
        "endChar": 60
      },
      "revId": "381954eb6b1024a69d39a1cbee816df5e696289e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}