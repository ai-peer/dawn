{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "b9eb9974_9a32588d",
        "filename": "src/tint/lang/msl/writer/common/option_helpers.cc",
        "patchSetId": 3
      },
      "lineNbr": 55,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2024-02-28T18:00:33Z",
      "side": 1,
      "message": "This is a much more confusing way to write what was there before as it requires an understanding that `Add` will replace and if it replaces it will return the thing that was replaced.",
      "revId": "ebda0873596e171d2df0ba75a25baa50fa223251",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "671a69d8_76a6e09d",
        "filename": "src/tint/lang/msl/writer/common/option_helpers.cc",
        "patchSetId": 3
      },
      "lineNbr": 55,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2024-02-28T18:06:15Z",
      "side": 1,
      "message": "That\u0027s the documented contract of the function, intentionally designed that way so you don\u0027t have to do two lookups in the map (one to find, one to add). It\u0027s by design, and I encourage people to use it where they can.",
      "parentUuid": "b9eb9974_9a32588d",
      "revId": "ebda0873596e171d2df0ba75a25baa50fa223251",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "22268fe3_4497c7c3",
        "filename": "src/tint/lang/msl/writer/common/option_helpers.cc",
        "patchSetId": 3
      },
      "lineNbr": 55,
      "author": {
        "id": 1002361
      },
      "writtenOn": "2024-02-28T18:11:09Z",
      "side": 1,
      "message": "Driveby comment: renaming `Add` to `TryAdd` would probably help make this contract more clear, similar to [`std::unordered_map::try_emplace`](https://en.cppreference.com/w/cpp/container/unordered_map/try_emplace)",
      "parentUuid": "671a69d8_76a6e09d",
      "revId": "ebda0873596e171d2df0ba75a25baa50fa223251",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "282a7685_04183dec",
        "filename": "src/tint/lang/msl/writer/common/option_helpers.cc",
        "patchSetId": 3
      },
      "lineNbr": 55,
      "author": {
        "id": 1003216
      },
      "writtenOn": "2024-02-28T18:11:44Z",
      "side": 1,
      "message": "It\u0027s the usage that confuses me. Even with this I didn\u0027t realize Add _woudln\u0027t_ add in this case. The naming usage here is what confuses me most. `MaybeAdd`? `GetOrAdd` ?",
      "parentUuid": "671a69d8_76a6e09d",
      "revId": "ebda0873596e171d2df0ba75a25baa50fa223251",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "acc991f1_dbba241f",
        "filename": "src/tint/lang/msl/writer/common/option_helpers.cc",
        "patchSetId": 3
      },
      "lineNbr": 55,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2024-02-28T18:15:10Z",
      "side": 1,
      "message": "\u003e Driveby comment: renaming Add to TryAdd would probably help make this contract more clear, similar to std::unordered_map::try_emplace\n\nhttps://en.cppreference.com/w/cpp/container/unordered_map/emplace\n\n\u003e Returns a pair consisting of an iterator to the inserted element, `or the already-existing element if no insertion happened`\n\nSo, it\u0027s quite like `emplace` in that it returns the old thing if there\u0027s already an entry with the key, or the new thing if it wasn\u0027t.",
      "parentUuid": "282a7685_04183dec",
      "revId": "ebda0873596e171d2df0ba75a25baa50fa223251",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e5d4b702_d55ef921",
        "filename": "src/tint/lang/msl/writer/common/option_helpers.cc",
        "patchSetId": 3
      },
      "lineNbr": 55,
      "author": {
        "id": 1002361
      },
      "writtenOn": "2024-02-28T18:22:28Z",
      "side": 1,
      "message": "You\u0027re right, I always forget that the actual difference between `emplace` and `try_emplace` is that the latter avoids constructing the value if the key already exists. Nevermind.",
      "parentUuid": "acc991f1_dbba241f",
      "revId": "ebda0873596e171d2df0ba75a25baa50fa223251",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}