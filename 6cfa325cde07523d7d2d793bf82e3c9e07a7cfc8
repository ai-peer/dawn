{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "e06fe99b_d88b1632",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000250
      },
      "writtenOn": "2021-03-18T17:51:47Z",
      "side": 1,
      "message": "PTAL",
      "revId": "6cfa325cde07523d7d2d793bf82e3c9e07a7cfc8",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4936ae56_df5f582b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000250
      },
      "writtenOn": "2021-03-18T18:33:18Z",
      "side": 1,
      "message": "Failing *-rel builds are because there is an already landed API patch in Tint that hasn\u0027t rolled through that this patch depends on.",
      "revId": "6cfa325cde07523d7d2d793bf82e3c9e07a7cfc8",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b942f92b_493a0843",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2021-03-18T18:49:48Z",
      "side": 1,
      "message": "LGTM",
      "revId": "6cfa325cde07523d7d2d793bf82e3c9e07a7cfc8",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f07ff929_d8fb77c9",
        "filename": "src/dawn_native/ShaderModule.cpp",
        "patchSetId": 3
      },
      "lineNbr": 177,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2021-03-18T18:49:48Z",
      "side": 1,
      "message": "nit: here and in the others, I would have expected this to be inside the \"default\" case.\n\nbut also - does tint ever return an invalid enum? This could be an UNREACHABLE()",
      "revId": "6cfa325cde07523d7d2d793bf82e3c9e07a7cfc8",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c479918f_46685ccc",
        "filename": "src/dawn_native/ShaderModule.cpp",
        "patchSetId": 3
      },
      "lineNbr": 177,
      "author": {
        "id": 1000250
      },
      "writtenOn": "2021-03-18T20:45:19Z",
      "side": 1,
      "message": "I went through and cleaned up the utility functions a bit. For cases where there is a mapping for all of the Tint enums into DAwn I have removed default case. The cases where there are Tint values with no Dawn mapping there is still error return, but in the specific enumerated case.",
      "parentUuid": "f07ff929_d8fb77c9",
      "revId": "6cfa325cde07523d7d2d793bf82e3c9e07a7cfc8",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fd117139_00197003",
        "filename": "src/dawn_native/ShaderModule.cpp",
        "patchSetId": 3
      },
      "lineNbr": 177,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2021-03-18T23:15:13Z",
      "side": 1,
      "message": "Just want to be sure the code we have is necessary:\n\nfor the pipeline stage kNone, Tint has\nbool IsEntryPoint() const { return pipeline_stage() !\u003d PipelineStage::kNone; }\n\nso when iterating entrypoints, I\u0027m not sure this one can happen.\n\nusage of ComponentType::kUnknown looks ok though.",
      "parentUuid": "c479918f_46685ccc",
      "revId": "6cfa325cde07523d7d2d793bf82e3c9e07a7cfc8",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2144e0d8_8aa6ae72",
        "filename": "src/dawn_native/ShaderModule.cpp",
        "patchSetId": 3
      },
      "lineNbr": 177,
      "author": {
        "id": 1000250
      },
      "writtenOn": "2021-03-22T20:51:08Z",
      "side": 1,
      "message": "Marking it as UNREACHABLE instead.",
      "parentUuid": "fd117139_00197003",
      "revId": "6cfa325cde07523d7d2d793bf82e3c9e07a7cfc8",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "11c6c07b_87c4b69a",
        "filename": "src/dawn_native/ShaderModule.cpp",
        "patchSetId": 3
      },
      "lineNbr": 1022,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2021-03-18T18:49:48Z",
      "side": 1,
      "message": "how does this happen? We assign to info-\u003ebindingType, and then we switch on it. I don\u0027t think we can hit this case unless TintResourceTypeToBindingInfoType is wrong, so it should be an ASSERT.\n\nBut also, it\u0027s kind of odd we\u0027re going from switch(resource_type) -\u003e bindingType -\u003e and then switching on resource_type.\n\nCouldn\u0027t we do the switch directly on resource_type first instead of the extra indirection?",
      "range": {
        "startLine": 1019,
        "startChar": 30,
        "endLine": 1022,
        "endChar": 62
      },
      "revId": "6cfa325cde07523d7d2d793bf82e3c9e07a7cfc8",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4d8f1a16_3c4fd7d0",
        "filename": "src/dawn_native/ShaderModule.cpp",
        "patchSetId": 3
      },
      "lineNbr": 1022,
      "author": {
        "id": 1000250
      },
      "writtenOn": "2021-03-18T20:45:19Z",
      "side": 1,
      "message": "Changed it to UNREACHABLE in the default.\n\nIn this CL, I am attempting to mirror the logic of the SPIRV-Cross code path as closely as possible, so that it can be easily verified that all of the information that is needed included. In future CLs, after the Cross path is deprecated we can refactor this.\n\nOne advantage of the current code is that for bindings of different types but at similar, like 3 types of buffer, common actions like extracting the min binding size don\u0027t have to be duplicated, though at the cost of nested switches as you mentioned..",
      "parentUuid": "11c6c07b_87c4b69a",
      "range": {
        "startLine": 1019,
        "startChar": 30,
        "endLine": 1022,
        "endChar": 62
      },
      "revId": "6cfa325cde07523d7d2d793bf82e3c9e07a7cfc8",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4967aaef_2a34fce9",
        "filename": "src/dawn_native/ShaderModule.cpp",
        "patchSetId": 3
      },
      "lineNbr": 1022,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2021-03-18T23:15:13Z",
      "side": 1,
      "message": "Ok, sounds fine.",
      "parentUuid": "4d8f1a16_3c4fd7d0",
      "range": {
        "startLine": 1019,
        "startChar": 30,
        "endLine": 1022,
        "endChar": 62
      },
      "revId": "6cfa325cde07523d7d2d793bf82e3c9e07a7cfc8",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}