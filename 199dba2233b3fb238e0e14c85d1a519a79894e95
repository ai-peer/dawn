{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "792fc003_6274f0ce",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1004586
      },
      "writtenOn": "2023-11-06T04:06:42Z",
      "side": 1,
      "message": "Austin PTAL, thanks!\n\nChromium CL: https://chromium-review.googlesource.com/c/chromium/src/+/5004606",
      "revId": "199dba2233b3fb238e0e14c85d1a519a79894e95",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "93f332b2_1bb83cc8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1004586
      },
      "writtenOn": "2023-11-06T04:34:31Z",
      "side": 1,
      "message": "```\nKokoro presubmit build finished with status: ABORTED\nResult at: http://fusion2/ci/kokoro/prod%3Adawn%2Fcommon%2Fpresubmit/activity/5746cf86-d010-4ce3-99bb-c6cd98fea45b\nLogs at: http://sponge2.corp.google.com/5746cf86-d010-4ce3-99bb-c6cd98fea45b\nLogs at: https://source.cloud.google.com/results/invocations/5746cf86-d010-4ce3-99bb-c6cd98fea45b\n```\n\nWhat does it means?",
      "revId": "199dba2233b3fb238e0e14c85d1a519a79894e95",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1bec5f96_e1a48931",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1004586
      },
      "writtenOn": "2023-11-06T05:21:38Z",
      "side": 1,
      "message": "Ah, weird, its working now!",
      "parentUuid": "93f332b2_1bb83cc8",
      "revId": "199dba2233b3fb238e0e14c85d1a519a79894e95",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "47a860e8_45795110",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1004586
      },
      "writtenOn": "2023-11-06T23:11:09Z",
      "side": 1,
      "message": "cc hitawala, and sunny",
      "revId": "199dba2233b3fb238e0e14c85d1a519a79894e95",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "791acb31_10eb9224",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-11-07T00:31:36Z",
      "side": 1,
      "message": "Because this is only implemented on Mac right now, we should gate it behind a separate wgpu::FeatureName, and have validation tests that creating a texture with this format is invalid unless the feature is explicitly enabled on the device\n\nSecondly, so I can understand the plan, do we except to implement on other platforms, or will it stay a mac-only feature?",
      "revId": "199dba2233b3fb238e0e14c85d1a519a79894e95",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4c0e56c1_8a52553c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1004586
      },
      "writtenOn": "2023-11-07T01:15:12Z",
      "side": 1,
      "message": "\u003e Because this is only implemented on Mac right now, we should gate it behind a separate wgpu::FeatureName, and have validation tests that creating a texture with this format is invalid unless the feature is explicitly enabled on the device\n\nNo problem, you mean a disa",
      "parentUuid": "791acb31_10eb9224",
      "revId": "199dba2233b3fb238e0e14c85d1a519a79894e95",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "924215cb_74ca3f20",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1004586
      },
      "writtenOn": "2023-11-07T01:15:12Z",
      "side": 1,
      "message": "\u003e Because this is only implemented on Mac right now, we should gate it behind a separate wgpu::FeatureName, and have validation tests that creating a texture with this format is invalid unless the feature is explicitly enabled on the device\n\nThanks, No problem, I will add `wgpu::FeatureName::MultiPlanarFormatNV12A`\n\n\n\u003e Secondly, so I can understand the plan, do we except to implement on other platforms, or will it stay a mac-only feature?\n\nNo other platform support decoding multi-plane alpha video, and as far as I know they dont support NV12A format for now.",
      "parentUuid": "791acb31_10eb9224",
      "revId": "199dba2233b3fb238e0e14c85d1a519a79894e95",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "24aa9c59_cafbb3c4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-11-07T03:02:30Z",
      "side": 1,
      "message": "make sure when you add the feature:\n - first use FeatureState::Experimental\n - add a markdown for the feature in //dawn/docs/dawn/features/\n - validation test it is invalid to use the feature without explicitly enabling it\n - validation test that it is then valid to use the feature when explicitly enabled\n\n(I will get this written down in some documentation)",
      "parentUuid": "924215cb_74ca3f20",
      "revId": "199dba2233b3fb238e0e14c85d1a519a79894e95",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e2cb60af_715c8d2c",
        "filename": "src/dawn/native/metal/TextureMTL.mm",
        "patchSetId": 3
      },
      "lineNbr": 1010,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-11-07T00:31:36Z",
      "side": 1,
      "message": "```suggestion\n            DAWN_ASSERT(mMtlPlaneTextures-\u003esize() \u003e 2);\n```",
      "range": {
        "startLine": 1010,
        "startChar": 50,
        "endLine": 1010,
        "endChar": 55
      },
      "revId": "199dba2233b3fb238e0e14c85d1a519a79894e95",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "487658ea_ce52ce8a",
        "filename": "src/dawn/native/metal/TextureMTL.mm",
        "patchSetId": 3
      },
      "lineNbr": 1010,
      "author": {
        "id": 1004586
      },
      "writtenOn": "2023-11-07T09:37:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e2cb60af_715c8d2c",
      "range": {
        "startLine": 1010,
        "startChar": 50,
        "endLine": 1010,
        "endChar": 55
      },
      "revId": "199dba2233b3fb238e0e14c85d1a519a79894e95",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cc76f396_6fdc5eda",
        "filename": "src/dawn/native/vulkan/TextureVk.cpp",
        "patchSetId": 3
      },
      "lineNbr": 316,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-11-07T00:31:36Z",
      "side": 1,
      "message": "this changes the behavior for biplanar formats. this should probably return Color if format.IsMultiPlanar()",
      "range": {
        "startLine": 313,
        "startChar": 0,
        "endLine": 316,
        "endChar": 0
      },
      "revId": "199dba2233b3fb238e0e14c85d1a519a79894e95",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e9904f96_6e11b93d",
        "filename": "src/dawn/native/vulkan/TextureVk.cpp",
        "patchSetId": 3
      },
      "lineNbr": 316,
      "author": {
        "id": 1004586
      },
      "writtenOn": "2023-11-07T09:37:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cc76f396_6fdc5eda",
      "range": {
        "startLine": 313,
        "startChar": 0,
        "endLine": 316,
        "endChar": 0
      },
      "revId": "199dba2233b3fb238e0e14c85d1a519a79894e95",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1231a5a3_34530a67",
        "filename": "src/dawn/tests/end2end/VideoViewsTests.cpp",
        "patchSetId": 3
      },
      "lineNbr": 264,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-11-07T00:31:36Z",
      "side": 1,
      "message": "existing nit: should be camelCase\n```suggestion\n    uint32_t planeFirstTexelOffset \u003d 0;\n```",
      "range": {
        "startLine": 264,
        "startChar": 0,
        "endLine": 264,
        "endChar": 42
      },
      "revId": "199dba2233b3fb238e0e14c85d1a519a79894e95",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5f1c69ce_299832ec",
        "filename": "src/dawn/tests/end2end/VideoViewsTests.cpp",
        "patchSetId": 3
      },
      "lineNbr": 264,
      "author": {
        "id": 1004586
      },
      "writtenOn": "2023-11-07T09:37:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1231a5a3_34530a67",
      "range": {
        "startLine": 264,
        "startChar": 0,
        "endLine": 264,
        "endChar": 42
      },
      "revId": "199dba2233b3fb238e0e14c85d1a519a79894e95",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0ff3e8bc_29a7ea54",
        "filename": "src/dawn/tests/end2end/VideoViewsTests.cpp",
        "patchSetId": 3
      },
      "lineNbr": 1905,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-11-07T00:31:36Z",
      "side": 1,
      "message": "this suppression is problem not relevant since the format isn\u0027t supported there yet",
      "range": {
        "startLine": 1903,
        "startChar": 0,
        "endLine": 1905,
        "endChar": 0
      },
      "revId": "199dba2233b3fb238e0e14c85d1a519a79894e95",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fc654f4a_5a90c262",
        "filename": "src/dawn/tests/end2end/VideoViewsTests.cpp",
        "patchSetId": 3
      },
      "lineNbr": 1905,
      "author": {
        "id": 1004586
      },
      "writtenOn": "2023-11-07T09:37:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0ff3e8bc_29a7ea54",
      "range": {
        "startLine": 1903,
        "startChar": 0,
        "endLine": 1905,
        "endChar": 0
      },
      "revId": "199dba2233b3fb238e0e14c85d1a519a79894e95",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "73d99576_3adda5e1",
        "filename": "src/dawn/tests/end2end/VideoViewsTests_gbm.cpp",
        "patchSetId": 3
      },
      "lineNbr": 175,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-11-07T00:31:36Z",
      "side": 1,
      "message": "isn\u0027t this always false?",
      "range": {
        "startLine": 175,
        "startChar": 29,
        "endLine": 175,
        "endChar": 84
      },
      "revId": "199dba2233b3fb238e0e14c85d1a519a79894e95",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0d49126e_c6db1eb1",
        "filename": "src/dawn/tests/end2end/VideoViewsTests_gbm.cpp",
        "patchSetId": 3
      },
      "lineNbr": 175,
      "author": {
        "id": 1004586
      },
      "writtenOn": "2023-11-07T09:37:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "73d99576_3adda5e1",
      "range": {
        "startLine": 175,
        "startChar": 29,
        "endLine": 175,
        "endChar": 84
      },
      "revId": "199dba2233b3fb238e0e14c85d1a519a79894e95",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}