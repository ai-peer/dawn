{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "bfd34f18_b0a50e20",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 22
      },
      "lineNbr": 0,
      "author": {
        "id": 1000024
      },
      "writtenOn": "2023-08-17T21:43:59Z",
      "side": 1,
      "message": "LGTM. Nits are at your discretion.",
      "revId": "6e9edb1f7eaba268e42a71ffd3615aca2673b61b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "036c2da6_06fc6b2c",
        "filename": "src/tint/lang/wgsl/ast/transform/texture_builtins_from_uniform.cc",
        "patchSetId": 22
      },
      "lineNbr": 204,
      "author": {
        "id": 1000024
      },
      "writtenOn": "2023-08-17T21:43:59Z",
      "side": 1,
      "message": "Nit: If there\u0027s any function needs extra param\" -\u003e \"If any functions need extra params\"",
      "revId": "6e9edb1f7eaba268e42a71ffd3615aca2673b61b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c217a30a_2e69b68f",
        "filename": "src/tint/lang/wgsl/ast/transform/texture_builtins_from_uniform.cc",
        "patchSetId": 22
      },
      "lineNbr": 204,
      "author": {
        "id": 1000685
      },
      "writtenOn": "2023-08-17T23:11:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "036c2da6_06fc6b2c",
      "revId": "6e9edb1f7eaba268e42a71ffd3615aca2673b61b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e8aa0b31_8f9c2338",
        "filename": "src/tint/lang/wgsl/ast/transform/texture_builtins_from_uniform.cc",
        "patchSetId": 22
      },
      "lineNbr": 285,
      "author": {
        "id": 1000024
      },
      "writtenOn": "2023-08-17T21:43:59Z",
      "side": 1,
      "message": "Nit: \"using\" here to avoid saying it twice?",
      "range": {
        "startLine": 285,
        "startChar": 8,
        "endLine": 285,
        "endChar": 41
      },
      "revId": "6e9edb1f7eaba268e42a71ffd3615aca2673b61b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "14fd34e2_9df01c0c",
        "filename": "src/tint/lang/wgsl/ast/transform/texture_builtins_from_uniform.cc",
        "patchSetId": 22
      },
      "lineNbr": 285,
      "author": {
        "id": 1000685
      },
      "writtenOn": "2023-08-17T23:11:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e8aa0b31_8f9c2338",
      "range": {
        "startLine": 285,
        "startChar": 8,
        "endLine": 285,
        "endChar": 41
      },
      "revId": "6e9edb1f7eaba268e42a71ffd3615aca2673b61b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "676299f4_6777fcdc",
        "filename": "src/tint/lang/wgsl/ast/transform/texture_builtins_from_uniform.cc",
        "patchSetId": 22
      },
      "lineNbr": 329,
      "author": {
        "id": 1000024
      },
      "writtenOn": "2023-08-17T21:43:59Z",
      "side": 1,
      "message": "uNit: \"Ubo\" -\u003e \"UBO\" (sorry, I\u0027m OCD about non-capitalized acronyms)",
      "revId": "6e9edb1f7eaba268e42a71ffd3615aca2673b61b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7c29fe37_f7a55faa",
        "filename": "src/tint/lang/wgsl/ast/transform/texture_builtins_from_uniform.cc",
        "patchSetId": 22
      },
      "lineNbr": 329,
      "author": {
        "id": 1000685
      },
      "writtenOn": "2023-08-17T23:11:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "676299f4_6777fcdc",
      "revId": "6e9edb1f7eaba268e42a71ffd3615aca2673b61b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aa2ab0d3_cfb99526",
        "filename": "src/tint/lang/wgsl/ast/transform/texture_builtins_from_uniform.cc",
        "patchSetId": 22
      },
      "lineNbr": 341,
      "author": {
        "id": 1000024
      },
      "writtenOn": "2023-08-17T21:43:59Z",
      "side": 1,
      "message": "Would it be any neater to store the index rather than the size, so you didn\u0027t have to convert here? If not, ignore me.",
      "revId": "6e9edb1f7eaba268e42a71ffd3615aca2673b61b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6eb65d3d_934bd26f",
        "filename": "src/tint/lang/wgsl/ast/transform/texture_builtins_from_uniform.cc",
        "patchSetId": 22
      },
      "lineNbr": 341,
      "author": {
        "id": 1000685
      },
      "writtenOn": "2023-08-17T23:11:01Z",
      "side": 1,
      "message": "ditto[2]",
      "parentUuid": "aa2ab0d3_cfb99526",
      "revId": "6e9edb1f7eaba268e42a71ffd3615aca2673b61b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "98759eb9_63e19774",
        "filename": "src/tint/lang/wgsl/ast/transform/texture_builtins_from_uniform.cc",
        "patchSetId": 22
      },
      "lineNbr": 420,
      "author": {
        "id": 1000024
      },
      "writtenOn": "2023-08-17T21:43:59Z",
      "side": 1,
      "message": "Nit: using an index would obviate the need for this sizeof().",
      "revId": "6e9edb1f7eaba268e42a71ffd3615aca2673b61b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "749d77ba_831e1b3b",
        "filename": "src/tint/lang/wgsl/ast/transform/texture_builtins_from_uniform.cc",
        "patchSetId": 22
      },
      "lineNbr": 420,
      "author": {
        "id": 1000685
      },
      "writtenOn": "2023-08-17T23:11:01Z",
      "side": 1,
      "message": "[2]`bindpoint_to_data` is passing to dawn and on dawn side a byte offset is preferred. I really don\u0027t want to introduce another temporary hashmap just to store the index. I think I will just preserve this as is.",
      "parentUuid": "98759eb9_63e19774",
      "revId": "6e9edb1f7eaba268e42a71ffd3615aca2673b61b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "803e7e84_73483dd8",
        "filename": "src/tint/lang/wgsl/ast/transform/texture_builtins_from_uniform.cc",
        "patchSetId": 22
      },
      "lineNbr": 420,
      "author": {
        "id": 1000024
      },
      "writtenOn": "2023-08-18T16:57:10Z",
      "side": 1,
      "message": "Why not just multiply by sizeof(uint32_t) on the Dawn side? I don\u0027t think you need another hashmap. Am I missing something?",
      "parentUuid": "749d77ba_831e1b3b",
      "revId": "6e9edb1f7eaba268e42a71ffd3615aca2673b61b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8513201e_b3d96d2d",
        "filename": "src/tint/lang/wgsl/ast/transform/texture_builtins_from_uniform.cc",
        "patchSetId": 22
      },
      "lineNbr": 420,
      "author": {
        "id": 1000685
      },
      "writtenOn": "2023-08-18T17:03:38Z",
      "side": 1,
      "message": "For now we only have uint32 for the data. But in future we could have other internal uniform member sharing this ubo (e.g. push constant). So I think to keep the interface all use offset is better.",
      "parentUuid": "803e7e84_73483dd8",
      "revId": "6e9edb1f7eaba268e42a71ffd3615aca2673b61b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3e075d7a_18a5c282",
        "filename": "src/tint/lang/wgsl/ast/transform/texture_builtins_from_uniform.cc",
        "patchSetId": 22
      },
      "lineNbr": 420,
      "author": {
        "id": 1000024
      },
      "writtenOn": "2023-08-18T17:48:20Z",
      "side": 1,
      "message": "In that future case, wouldn\u0027t the Dawn side also need to know the size of the fields, in order to fill the UBO? And I think you\u0027d need to come back and remove/modify the \"/ sizeof(uint32_t)\"s on the Tint side anyway. So I don\u0027t think it would be plug-and-play.\n\n(It\u0027s those divisions that bother me, TBH, for both elegance and performance.)",
      "parentUuid": "8513201e_b3d96d2d",
      "revId": "6e9edb1f7eaba268e42a71ffd3615aca2673b61b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e5c0f111_8971edd9",
        "filename": "src/tint/lang/wgsl/ast/transform/texture_builtins_from_uniform.cc",
        "patchSetId": 22
      },
      "lineNbr": 420,
      "author": {
        "id": 1000685
      },
      "writtenOn": "2023-08-18T19:32:03Z",
      "side": 1,
      "message": "Not really? The future case could be in another transform (e.g. PushConstantsFromUniform). So within this TextureBuiltinsFromUniform transform, it can always assume data this transform adds are uint32_t.\n\nBut adding another hashmap along side with `Result::BindingPointToFieldAndOffset bindpoint_to_data;` to track index, is sort of a tradeoff of (a little) memory/singleness to readability. I don\u0027t have a strong opinion against this. Let me add it anyway.\n\nWhat I really don\u0027t want to change is the interface passing result to dawn. That would be a lot of change.",
      "parentUuid": "3e075d7a_18a5c282",
      "revId": "6e9edb1f7eaba268e42a71ffd3615aca2673b61b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "61aef35c_dbef0c2a",
        "filename": "src/tint/lang/wgsl/ast/transform/texture_builtins_from_uniform.h",
        "patchSetId": 22
      },
      "lineNbr": 44,
      "author": {
        "id": 1000024
      },
      "writtenOn": "2023-08-17T21:43:59Z",
      "side": 1,
      "message": "Nit: \"is provided\" -\u003e \"are provided\"",
      "revId": "6e9edb1f7eaba268e42a71ffd3615aca2673b61b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5c95596c_5fa07856",
        "filename": "src/tint/lang/wgsl/ast/transform/texture_builtins_from_uniform.h",
        "patchSetId": 22
      },
      "lineNbr": 44,
      "author": {
        "id": 1000685
      },
      "writtenOn": "2023-08-17T23:11:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "61aef35c_dbef0c2a",
      "revId": "6e9edb1f7eaba268e42a71ffd3615aca2673b61b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6ce404eb_c6aba50b",
        "filename": "src/tint/lang/wgsl/ast/transform/texture_builtins_from_uniform.h",
        "patchSetId": 22
      },
      "lineNbr": 45,
      "author": {
        "id": 1000024
      },
      "writtenOn": "2023-08-17T21:43:59Z",
      "side": 1,
      "message": "Maybe also explain here how functions are transformed: what new parameters are added, etc.",
      "revId": "6e9edb1f7eaba268e42a71ffd3615aca2673b61b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "aa3e6dc7_5e0296b6",
        "filename": "src/tint/lang/wgsl/ast/transform/texture_builtins_from_uniform.h",
        "patchSetId": 22
      },
      "lineNbr": 45,
      "author": {
        "id": 1000685
      },
      "writtenOn": "2023-08-17T23:11:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6ce404eb_c6aba50b",
      "revId": "6e9edb1f7eaba268e42a71ffd3615aca2673b61b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}