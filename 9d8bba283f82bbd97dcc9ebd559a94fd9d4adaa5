{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "582aee7a_3bcf36d1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1002831
      },
      "writtenOn": "2022-12-09T06:00:06Z",
      "side": 1,
      "message": "Ah... the CTS failures are probably also caused by the validation. I will probably have to fix those separately and roll them before it works.",
      "revId": "9d8bba283f82bbd97dcc9ebd559a94fd9d4adaa5",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d7a3de2e_d029db03",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2022-12-09T19:46:48Z",
      "side": 1,
      "message": "LGTM\n\nsince the CTS and our tests are hitting this, I wouldn\u0027t be surprised if other apps are too. let\u0027s change this from a validation error to a deprecation warning. Then, add DeprecatedAPITests for it.\n\nAlso means that you don\u0027t need to completely disable the dawn_end2end_tests or the CTS tests. We can just add deprecation expectations for dawn_end2end_tests and then fix them up in a follow-up (and also fix CTS).",
      "revId": "9d8bba283f82bbd97dcc9ebd559a94fd9d4adaa5",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "68a3cd6d_3e9b9dac",
        "filename": "src/dawn/native/CommandEncoder.cpp",
        "patchSetId": 3
      },
      "lineNbr": 473,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2022-12-09T19:46:48Z",
      "side": 1,
      "message": "unit:\n\n\"validating render pass descriptor\" context should probably be on the ConsumedError at the callsite of `ValidateRenderPassDescriptor`\n\nThis one could be \"validating color attachment bytes per sample\" to match the spec section \"Validating GPUFragmentStateâ€™s color attachment bytes per sample\"",
      "range": {
        "startLine": 473,
        "startChar": 21,
        "endLine": 473,
        "endChar": 57
      },
      "revId": "9d8bba283f82bbd97dcc9ebd559a94fd9d4adaa5",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0862b5ab_a31fd5e4",
        "filename": "src/dawn/native/Format.h",
        "patchSetId": 3
      },
      "lineNbr": 102,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2022-12-09T19:46:48Z",
      "side": 1,
      "message": "uuu-nit: \"renderTarget...\" to match the spec language.\n\nmaybe we should also use \"ByteCost\"? since some of the formats like rgba8unorm you would expect only have a \"size\" of 4 bytes, but is actually 8",
      "revId": "9d8bba283f82bbd97dcc9ebd559a94fd9d4adaa5",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d1b7ac35_dabea306",
        "filename": "src/dawn/native/RenderBundleEncoder.cpp",
        "patchSetId": 3
      },
      "lineNbr": 72,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2022-12-09T19:46:48Z",
      "side": 1,
      "message": "nit: can be StackVector with static size kMaxColorAttachments since it\u0027s relatively small",
      "range": {
        "startLine": 72,
        "startChar": 0,
        "endLine": 72,
        "endChar": 31
      },
      "revId": "9d8bba283f82bbd97dcc9ebd559a94fd9d4adaa5",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5fb14067_e69073cb",
        "filename": "src/dawn/native/RenderBundleEncoder.cpp",
        "patchSetId": 3
      },
      "lineNbr": 79,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2022-12-09T19:46:48Z",
      "side": 1,
      "message": "ValidateColorAttachmentFormat validates the format, so this can just use `push_back(device-\u003eGetValidInternalFormat(format))`",
      "range": {
        "startLine": 78,
        "startChar": 12,
        "endLine": 79,
        "endChar": 63
      },
      "revId": "9d8bba283f82bbd97dcc9ebd559a94fd9d4adaa5",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f1edb117_2fb06a8f",
        "filename": "src/dawn/native/RenderBundleEncoder.cpp",
        "patchSetId": 3
      },
      "lineNbr": 84,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2022-12-09T19:46:48Z",
      "side": 1,
      "message": "ditto on context messages",
      "range": {
        "startLine": 84,
        "startChar": 21,
        "endLine": 84,
        "endChar": 67
      },
      "revId": "9d8bba283f82bbd97dcc9ebd559a94fd9d4adaa5",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "922b8838_a54b943e",
        "filename": "src/dawn/native/RenderPipeline.cpp",
        "patchSetId": 3
      },
      "lineNbr": 355,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2022-12-09T19:46:48Z",
      "side": 1,
      "message": "ditto",
      "range": {
        "startLine": 355,
        "startChar": 4,
        "endLine": 355,
        "endChar": 15
      },
      "revId": "9d8bba283f82bbd97dcc9ebd559a94fd9d4adaa5",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "598526dc_d5946281",
        "filename": "src/dawn/native/RenderPipeline.cpp",
        "patchSetId": 3
      },
      "lineNbr": 472,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2022-12-09T19:46:48Z",
      "side": 1,
      "message": "Already covered by `ValidateColorTargetState` and `ValidateColorAttachmentFormat` ?",
      "range": {
        "startLine": 472,
        "startChar": 24,
        "endLine": 472,
        "endChar": 68
      },
      "revId": "9d8bba283f82bbd97dcc9ebd559a94fd9d4adaa5",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "92f898ba_80af7113",
        "filename": "src/dawn/native/RenderPipeline.cpp",
        "patchSetId": 3
      },
      "lineNbr": 479,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2022-12-09T19:46:48Z",
      "side": 1,
      "message": "unit: \"with\" ?",
      "range": {
        "startLine": 479,
        "startChar": 81,
        "endLine": 479,
        "endChar": 84
      },
      "revId": "9d8bba283f82bbd97dcc9ebd559a94fd9d4adaa5",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d0ba6394_a69ab5c8",
        "filename": "src/dawn/native/RenderPipeline.cpp",
        "patchSetId": 3
      },
      "lineNbr": 479,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2022-12-09T19:46:48Z",
      "side": 1,
      "message": "uu-nit: is the colon needed?",
      "range": {
        "startLine": 479,
        "startChar": 92,
        "endLine": 479,
        "endChar": 93
      },
      "revId": "9d8bba283f82bbd97dcc9ebd559a94fd9d4adaa5",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0d6e2163_3b19766f",
        "filename": "src/dawn/native/RenderPipeline.cpp",
        "patchSetId": 3
      },
      "lineNbr": 479,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2022-12-09T19:46:48Z",
      "side": 1,
      "message": "nit: maybe \"Total color...\"",
      "range": {
        "startLine": 479,
        "startChar": 21,
        "endLine": 479,
        "endChar": 26
      },
      "revId": "9d8bba283f82bbd97dcc9ebd559a94fd9d4adaa5",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "999cb617_8aa02419",
        "filename": "src/dawn/tests/unittests/validation/RenderPipelineValidationTests.cpp",
        "patchSetId": 3
      },
      "lineNbr": 1387,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2022-12-09T19:46:48Z",
      "side": 1,
      "message": "unit: capitalize functions \"CreateShader\"",
      "range": {
        "startLine": 1387,
        "startChar": 9,
        "endLine": 1387,
        "endChar": 21
      },
      "revId": "9d8bba283f82bbd97dcc9ebd559a94fd9d4adaa5",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "415e9166_46ce1bfe",
        "filename": "src/dawn/utils/WGPUHelpers.cpp",
        "patchSetId": 3
      },
      "lineNbr": 132,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2022-12-09T19:46:48Z",
      "side": 1,
      "message": "big duplication with initializer_list version. Just delete the initializer_list one? or, rewrite to use begin/end iterators and share the implementation",
      "revId": "9d8bba283f82bbd97dcc9ebd559a94fd9d4adaa5",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}