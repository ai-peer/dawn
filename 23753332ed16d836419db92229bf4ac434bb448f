{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "c46c2b89_e86cd2a2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000685
      },
      "writtenOn": "2022-04-18T21:57:39Z",
      "side": 1,
      "message": "Add an end2end tests to cover the empty attachment case, unmatched pipeline and shader output format case, and redundant component case to make sure they are rendered correctly.",
      "revId": "23753332ed16d836419db92229bf4ac434bb448f",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b741c111_56248f70",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000685
      },
      "writtenOn": "2022-04-18T21:59:00Z",
      "side": 1,
      "message": "(full tests with all combinations of params will be added to CTS)",
      "parentUuid": "c46c2b89_e86cd2a2",
      "revId": "23753332ed16d836419db92229bf4ac434bb448f",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cb62cab8_0cc5fdf8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2022-04-18T22:31:00Z",
      "side": 1,
      "message": "nice - looks like we caught a bug in the Metal backend",
      "revId": "23753332ed16d836419db92229bf4ac434bb448f",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "05ab6036_2875fa06",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000685
      },
      "writtenOn": "2022-04-18T23:51:34Z",
      "side": 1,
      "message": "Does this indicate we need a shader patch for metal IIUC? (although predicted as no in https://github.com/gpuweb/gpuweb/pull/1918)\n\n\u003e Device lost during test: Error creating pipeline state output of type int4 is not compatible with a MTLPixelFormatRGBA8Unorm color attachement.\n\nWhich is renderTarget2: shader output is a vec4\u003ci32\u003e while color attachment is rgba8unorm. But the writeMask is set to 0. Meaning metal wouldn\u0027t allow this input.",
      "parentUuid": "cb62cab8_0cc5fdf8",
      "revId": "23753332ed16d836419db92229bf4ac434bb448f",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6e020fb2_31b0b8c5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2022-04-19T00:10:52Z",
      "side": 1,
      "message": "I don\u0027t think we need a shader patch. If we do, we should revisit the validation.\n\nI think that we should omit the blend descriptor from the pipeline for that attachment if the write mask is 0. Since you can\u0027t write it, it\u0027s effectively not there at all.\nAround here https://source.chromium.org/chromium/chromium/src/+/main:third_party/dawn/src/dawn/native/metal/RenderPipelineMTL.mm;l\u003d364;drc\u003dd138bd5bee710c5d3befd0c08f1949b99a837e06;bpv\u003d0;bpt\u003d0\n\nI\u0027m not actually sure if this will be valid in Metal - we would need to check.",
      "parentUuid": "05ab6036_2875fa06",
      "revId": "23753332ed16d836419db92229bf4ac434bb448f",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}