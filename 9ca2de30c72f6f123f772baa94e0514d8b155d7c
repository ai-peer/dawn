{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "d242aa69_d627b658",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1002926
      },
      "writtenOn": "2022-12-08T20:44:58Z",
      "side": 1,
      "message": "Hey Austin, I don\u0027t know if you think this is an acceptable solution or not\n\nhttps://dawn-review.googlesource.com/c/dawn/+/113426\n\nI get it\u0027s now doing allocations it wasn\u0027t before so if you\u0027d prefer I take some different path in CommandBufferMTL.mm that avoids the allocations rather than putting the solution in here I can do that.\n\nAlso I\u0027m not 100% yet this is the correct limit. I asked some people at apple. If I don\u0027t hear back I can only guess I should write a metal example that tests say every texture format, 1D, 2D, 3D at every power of 2 and see when metal complains.",
      "revId": "9ca2de30c72f6f123f772baa94e0514d8b155d7c",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1f60209e_d0123c5e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2022-12-08T21:18:09Z",
      "side": 1,
      "message": "sounds good to ask contacts at apple instead of guessing what the value is\n\nanother thought: it seems like the failures are only with the small formats: r8, rg8, and r16\n\nso maybe the debug layers are computing the size assuming a larger format like rgba8unorm",
      "parentUuid": "d242aa69_d627b658",
      "revId": "9ca2de30c72f6f123f772baa94e0514d8b155d7c",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "967d94a7_d0e09ad4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2022-12-15T19:21:23Z",
      "side": 1,
      "message": "FYI we\u0027ve seen at least one other case where the validation will say \"Must be less than 12345\" but actually the number 12345 was computed from specific parameters of the operation, not a fixed limit. It\u0027s really confusing. Definitely worth asking Apple contacts to look at the actual validation layer code to understand what it\u0027s doing.",
      "parentUuid": "1f60209e_d0123c5e",
      "revId": "9ca2de30c72f6f123f772baa94e0514d8b155d7c",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7a46fd26_5df0db16",
        "filename": "src/dawn/native/metal/UtilsMetal.h",
        "patchSetId": 1
      },
      "lineNbr": 58,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2022-12-08T21:18:09Z",
      "side": 1,
      "message": "can use StackVector in src/dawn/common/StackContainer.h",
      "range": {
        "startLine": 58,
        "startChar": 4,
        "endLine": 58,
        "endChar": 15
      },
      "revId": "9ca2de30c72f6f123f772baa94e0514d8b155d7c",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c3b3770c_a61fb027",
        "filename": "src/dawn/native/metal/UtilsMetal.h",
        "patchSetId": 1
      },
      "lineNbr": 58,
      "author": {
        "id": 1002926
      },
      "writtenOn": "2022-12-10T02:32:08Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7a46fd26_5df0db16",
      "range": {
        "startLine": 58,
        "startChar": 4,
        "endLine": 58,
        "endChar": 15
      },
      "revId": "9ca2de30c72f6f123f772baa94e0514d8b155d7c",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "355f798e_90f118cd",
        "filename": "src/dawn/native/metal/UtilsMetal.mm",
        "patchSetId": 1
      },
      "lineNbr": 231,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2022-12-08T21:18:09Z",
      "side": 1,
      "message": "u-nit: now that there\u0027s two workarounds, minor preference to call the variable like \"copy_row_by_row\" and you can comment \"// handle workaround case 2\"\n\nditto about giving the other bool a descriptive name",
      "range": {
        "startLine": 231,
        "startChar": 9,
        "endLine": 231,
        "endChar": 24
      },
      "revId": "9ca2de30c72f6f123f772baa94e0514d8b155d7c",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a6e85e81_a45108b8",
        "filename": "src/dawn/native/metal/UtilsMetal.mm",
        "patchSetId": 1
      },
      "lineNbr": 231,
      "author": {
        "id": 1002926
      },
      "writtenOn": "2022-12-10T02:32:08Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "355f798e_90f118cd",
      "range": {
        "startLine": 231,
        "startChar": 9,
        "endLine": 231,
        "endChar": 24
      },
      "revId": "9ca2de30c72f6f123f772baa94e0514d8b155d7c",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "444a4db8_894e543a",
        "filename": "src/dawn/native/metal/UtilsMetal.mm",
        "patchSetId": 1
      },
      "lineNbr": 239,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2022-12-08T21:18:09Z",
      "side": 1,
      "message": "hmm - does it work if we pass the values instead?\nright now it seems fine, but worried that future code might inspect the CopyInfo and be surprised to find zeros.",
      "range": {
        "startLine": 238,
        "startChar": 20,
        "endLine": 239,
        "endChar": 41
      },
      "revId": "9ca2de30c72f6f123f772baa94e0514d8b155d7c",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ed31ea61_a3bfaf63",
        "filename": "src/dawn/native/metal/UtilsMetal.mm",
        "patchSetId": 1
      },
      "lineNbr": 239,
      "author": {
        "id": 1002926
      },
      "writtenOn": "2022-12-10T02:32:08Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "444a4db8_894e543a",
      "range": {
        "startLine": 238,
        "startChar": 20,
        "endLine": 239,
        "endChar": 41
      },
      "revId": "9ca2de30c72f6f123f772baa94e0514d8b155d7c",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}