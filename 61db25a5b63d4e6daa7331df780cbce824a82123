{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "840b1490_46e5e328",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 1000248
      },
      "writtenOn": "2021-02-02T19:46:05Z",
      "side": 1,
      "message": "Idea behind this is that I can use the less intense command line option for the Intel bots. This would be followed by a chromium patch that changes the command line for only the Intel bots. Would have preferred not making the test parameters more complicated, but the only alternative I can think of is identifying when running on Intel inside Dawn and disabling state tracking - which would be undesirable for local runs.",
      "revId": "61db25a5b63d4e6daa7331df780cbce824a82123",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "53870cd9_9e9b639c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2021-02-02T22:44:13Z",
      "side": 1,
      "message": "LGTM",
      "revId": "61db25a5b63d4e6daa7331df780cbce824a82123",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d652e378_80cb5e40",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-02-03T10:19:07Z",
      "side": 1,
      "message": "Looks good! No additional comments.",
      "revId": "61db25a5b63d4e6daa7331df780cbce824a82123",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c07c3d32_3f02dd35",
        "filename": "src/include/dawn_native/DawnNative.h",
        "patchSetId": 10
      },
      "lineNbr": 132,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2021-02-02T22:44:13Z",
      "side": 1,
      "message": "LowOverhead? idk?\n\nI feel like \"Performance\" isn\u0027t quite right because we still want to convey that it\u0027s slower than \"Disabled\"",
      "range": {
        "startLine": 132,
        "startChar": 51,
        "endLine": 132,
        "endChar": 62
      },
      "revId": "61db25a5b63d4e6daa7331df780cbce824a82123",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bffdc321_da05566b",
        "filename": "src/include/dawn_native/DawnNative.h",
        "patchSetId": 10
      },
      "lineNbr": 132,
      "author": {
        "id": 1000268
      },
      "writtenOn": "2021-02-02T22:58:33Z",
      "side": 1,
      "message": "Or maybe \"validation level\" which has a per backend meaning (highest level \u003d heavy).",
      "parentUuid": "c07c3d32_3f02dd35",
      "range": {
        "startLine": 132,
        "startChar": 51,
        "endLine": 132,
        "endChar": 62
      },
      "revId": "61db25a5b63d4e6daa7331df780cbce824a82123",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "45d2dde5_fcb5cb90",
        "filename": "src/include/dawn_native/DawnNative.h",
        "patchSetId": 10
      },
      "lineNbr": 132,
      "author": {
        "id": 1000268
      },
      "writtenOn": "2021-02-02T23:00:51Z",
      "side": 1,
      "message": "AKA d0 \u003d disabled, d3 \u003d max (track + patching etc).",
      "parentUuid": "bffdc321_da05566b",
      "range": {
        "startLine": 132,
        "startChar": 51,
        "endLine": 132,
        "endChar": 62
      },
      "revId": "61db25a5b63d4e6daa7331df780cbce824a82123",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "732b9230_e372a601",
        "filename": "src/include/dawn_native/DawnNative.h",
        "patchSetId": 10
      },
      "lineNbr": 132,
      "author": {
        "id": 1000248
      },
      "writtenOn": "2021-02-03T18:08:59Z",
      "side": 1,
      "message": "I changed to low-overhead. I feel like d0,d3 hides away even more information and I\u0027d like to avoid that if possible.",
      "parentUuid": "45d2dde5_fcb5cb90",
      "range": {
        "startLine": 132,
        "startChar": 51,
        "endLine": 132,
        "endChar": 62
      },
      "revId": "61db25a5b63d4e6daa7331df780cbce824a82123",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cbdac2de_05e6d6ba",
        "filename": "src/include/dawn_native/DawnNative.h",
        "patchSetId": 10
      },
      "lineNbr": 132,
      "author": {
        "id": 1000268
      },
      "writtenOn": "2021-02-03T18:13:07Z",
      "side": 1,
      "message": "Tracking isn\u0027t guaranteed to be \"low-overhead\", I wouldn\u0027t suggest mapping these as such since they will likely change in the future. Like -o3 means \"aggressive\", it may or may not be as fast.",
      "parentUuid": "732b9230_e372a601",
      "range": {
        "startLine": 132,
        "startChar": 51,
        "endLine": 132,
        "endChar": 62
      },
      "revId": "61db25a5b63d4e6daa7331df780cbce824a82123",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "828a1878_a1a298d9",
        "filename": "src/include/dawn_native/DawnNative.h",
        "patchSetId": 10
      },
      "lineNbr": 132,
      "author": {
        "id": 1000248
      },
      "writtenOn": "2021-02-03T19:28:17Z",
      "side": 1,
      "message": "I don\u0027t understand. The purpose of the option is entirely to lower performance cost of validation. From the description of DISABLE_STATE_TRACKING on MSDN:\n    When set, GPU-based validation does not perform resource state validation \n    which greatly reduces the performance cost of GPU-based validtion.\n\nReduced performance cost translates exactly into low-overhead in my mind. As opposed to -d3, which means nothing until you go to BackendD3D12.cpp and look at what it does.\n\nOther names that make sense to me: \"partial\", \"reduced\"",
      "parentUuid": "cbdac2de_05e6d6ba",
      "range": {
        "startLine": 132,
        "startChar": 51,
        "endLine": 132,
        "endChar": 62
      },
      "revId": "61db25a5b63d4e6daa7331df780cbce824a82123",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ae16fe6b_e7b63c78",
        "filename": "src/include/dawn_native/DawnNative.h",
        "patchSetId": 10
      },
      "lineNbr": 132,
      "author": {
        "id": 1000268
      },
      "writtenOn": "2021-02-03T19:51:09Z",
      "side": 1,
      "message": "It depends on more than setting a \"no tracking\" flag whether or not there is any \"overhead\" to be removed. Otherwise, it would be named as you wish. \"partial\" and \"reduced\" seem fine. My point is we might need to modify this further (ex. add unguarded) to avoid TDRs. FYI, this is also happening on my non-Intel dGPU card.",
      "parentUuid": "828a1878_a1a298d9",
      "range": {
        "startLine": 132,
        "startChar": 51,
        "endLine": 132,
        "endChar": 62
      },
      "revId": "61db25a5b63d4e6daa7331df780cbce824a82123",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "388af2e5_33cdeeb6",
        "filename": "src/include/dawn_native/DawnNative.h",
        "patchSetId": 10
      },
      "lineNbr": 132,
      "author": {
        "id": 1000248
      },
      "writtenOn": "2021-02-03T22:15:18Z",
      "side": 1,
      "message": "Changed to \"partial\".",
      "parentUuid": "ae16fe6b_e7b63c78",
      "range": {
        "startLine": 132,
        "startChar": 51,
        "endLine": 132,
        "endChar": 62
      },
      "revId": "61db25a5b63d4e6daa7331df780cbce824a82123",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ea4d924f_2e6374e7",
        "filename": "src/tests/DawnTest.cpp",
        "patchSetId": 10
      },
      "lineNbr": 255,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2021-02-02T22:44:13Z",
      "side": 1,
      "message": "nit: maybe add \"\u003c\u003c level\" so you get an even nicer message",
      "revId": "61db25a5b63d4e6daa7331df780cbce824a82123",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "48009fcc_7bcdfd31",
        "filename": "src/tests/DawnTest.cpp",
        "patchSetId": 10
      },
      "lineNbr": 255,
      "author": {
        "id": 1000248
      },
      "writtenOn": "2021-02-03T18:08:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ea4d924f_2e6374e7",
      "revId": "61db25a5b63d4e6daa7331df780cbce824a82123",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}