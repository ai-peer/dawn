{
  "comments": [
    {
      "key": {
        "uuid": "f0035fc5_6e59c0a3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2020-07-10T10:28:58Z",
      "side": 1,
      "message": "PTAL, thanks!",
      "revId": "f4b15af08e6b48d3529df058efb979a139735987",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "06ee4eac_b1037d6e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-07-10T12:56:41Z",
      "side": 1,
      "message": "LGTM!",
      "revId": "f4b15af08e6b48d3529df058efb979a139735987",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fded3722_b0425fbb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2020-07-10T20:41:35Z",
      "side": 1,
      "message": "Sorry for the merge conflict; see: https://dawn-review.googlesource.com/c/dawn/+/24642",
      "revId": "f4b15af08e6b48d3529df058efb979a139735987",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "38b6ccf0_bd972990",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2020-07-14T08:37:05Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "fded3722_b0425fbb",
      "revId": "f4b15af08e6b48d3529df058efb979a139735987",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d0e67dc5_7134a6be",
        "filename": "src/dawn_native/d3d12/CommandBufferD3D12.cpp",
        "patchSetId": 2
      },
      "lineNbr": 132,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-07-10T12:56:41Z",
      "side": 1,
      "message": "This box could likely be precomputed for each split since it only depend on i. In general many more things could be precomputed in the D3D12_TEXTURE_COPY_LOCATIONs but it\u0027s probably not worth optimizing it more at this point.",
      "revId": "f4b15af08e6b48d3529df058efb979a139735987",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9124146f_3122b5b4",
        "filename": "src/dawn_native/d3d12/CommandBufferD3D12.cpp",
        "patchSetId": 2
      },
      "lineNbr": 132,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2020-07-13T01:56:16Z",
      "side": 1,
      "message": "I think we can do these changes in another patch, what do you think?",
      "parentUuid": "d0e67dc5_7134a6be",
      "revId": "f4b15af08e6b48d3529df058efb979a139735987",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e389be5d_c5788252",
        "filename": "src/dawn_native/d3d12/CommandBufferD3D12.cpp",
        "patchSetId": 2
      },
      "lineNbr": 132,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-07-13T08:05:45Z",
      "side": 1,
      "message": "I think a TODO is fine and someone can do it in a very long time. (so it doesn\u0027t need to be a follow-up)",
      "parentUuid": "9124146f_3122b5b4",
      "revId": "f4b15af08e6b48d3529df058efb979a139735987",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b322a91e_cdd4baaa",
        "filename": "src/dawn_native/d3d12/CommandBufferD3D12.cpp",
        "patchSetId": 2
      },
      "lineNbr": 132,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2020-07-14T08:37:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e389be5d_c5788252",
      "revId": "f4b15af08e6b48d3529df058efb979a139735987",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b4deb514_c9d4f461",
        "filename": "src/dawn_native/d3d12/CommandBufferD3D12.cpp",
        "patchSetId": 2
      },
      "lineNbr": 132,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2020-07-14T08:37:05Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "e389be5d_c5788252",
      "revId": "f4b15af08e6b48d3529df058efb979a139735987",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "63b0b056_0bf400b1",
        "filename": "src/dawn_native/d3d12/CommandBufferD3D12.cpp",
        "patchSetId": 2
      },
      "lineNbr": 687,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-07-13T08:05:45Z",
      "side": 1,
      "message": "[1] somehow that message disappeared, sorry about that. This code could become:\n\n  for (uint32_t copySlice \u003d 0; copySlice \u003c copy-\u003ecopySize.depth; ++copySlice) {\n     const TextureCopySplit\u0026 copySplit \u003d  copySplits.copies2D[copySlice % 2];\n     const uint32_t copyTextureLayer \u003d copySlice + copy-\u003edestination.origin.z;\n     const bufferOffset \u003d copySlice * bytesPerSlice;\n\n     Record()",
      "revId": "f4b15af08e6b48d3529df058efb979a139735987",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c4e18c8e_979858d7",
        "filename": "src/dawn_native/d3d12/CommandBufferD3D12.cpp",
        "patchSetId": 2
      },
      "lineNbr": 687,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2020-07-14T08:37:05Z",
      "side": 1,
      "message": "copySplits.copies2D[1] is actually computed with an extra offset \"bytesPerRow\" on the base of copySplits.copies2D[0], so \"copySlice * bytesPerSlice\" can only be applied on the copy layers that use copySplits.copies[0], while the extra offset for the copy layers that use copySplits.copies[1] should be \"(copySlice - 1) * bytesPerSlice\". So here I am using an array to track the correct extra offset for all the copy layers.",
      "parentUuid": "63b0b056_0bf400b1",
      "revId": "f4b15af08e6b48d3529df058efb979a139735987",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8a79ab2c_b64fd98d",
        "filename": "src/dawn_native/d3d12/CommandBufferD3D12.cpp",
        "patchSetId": 2
      },
      "lineNbr": 687,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-07-14T12:38:47Z",
      "side": 1,
      "message": "Ah, thanks for the explanation, it makes sense.",
      "parentUuid": "c4e18c8e_979858d7",
      "revId": "f4b15af08e6b48d3529df058efb979a139735987",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "162be4fa_19b9cdd9",
        "filename": "src/dawn_native/d3d12/TextureCopySplitter.cpp",
        "patchSetId": 2
      },
      "lineNbr": 196,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-07-10T12:56:41Z",
      "side": 1,
      "message": "This comment is quite exhaustive but it makes it a bit hard to read. For example it could explain things like:\n\n  The ComputeTextureCopySplit function decides how to split the copy based on:\n\n    - the alignment of the buffer offset with D3D12_TEXTURE_DATA_PLACEMENT_ALIGNMENT (aka 512)\n    - the alignment of the offset in 256 (D3D12 bytesPerRow constraint)\n\n  Each slice of a 3D copy might need to be split, but because of the WebGPU constraint\n  that bytesPerRow must b 256, all odd (resp. all even) slices will be at an offset\n  multiple of 512 of each other. This means that they will all result in the same 2D split.\n\n  It means that we need to compute a 2D split only for the first and second slices, and if\n  rowsPerImage is even, then they both have the same split, so we reuse it.\n\nWDYT?",
      "revId": "f4b15af08e6b48d3529df058efb979a139735987",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7f72e4a2_8a0a2b8b",
        "filename": "src/dawn_native/d3d12/TextureCopySplitter.cpp",
        "patchSetId": 2
      },
      "lineNbr": 196,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2020-07-14T08:37:05Z",
      "side": 1,
      "message": "Done. PTAL, thanks!",
      "parentUuid": "162be4fa_19b9cdd9",
      "revId": "f4b15af08e6b48d3529df058efb979a139735987",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "39dc2bcd_d081e21f",
        "filename": "src/dawn_native/d3d12/TextureCopySplitter.h",
        "patchSetId": 2
      },
      "lineNbr": 30,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-07-13T08:05:45Z",
      "side": 1,
      "message": "Maybe rename to Texture2DCopySplits",
      "range": {
        "startLine": 30,
        "startChar": 11,
        "endLine": 30,
        "endChar": 27
      },
      "revId": "f4b15af08e6b48d3529df058efb979a139735987",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "936c655a_b1374a92",
        "filename": "src/dawn_native/d3d12/TextureCopySplitter.h",
        "patchSetId": 2
      },
      "lineNbr": 30,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2020-07-14T08:37:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "39dc2bcd_d081e21f",
      "range": {
        "startLine": 30,
        "startChar": 11,
        "endLine": 30,
        "endChar": 27
      },
      "revId": "f4b15af08e6b48d3529df058efb979a139735987",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dd983b79_22401230",
        "filename": "src/dawn_native/d3d12/TextureCopySplitter.h",
        "patchSetId": 2
      },
      "lineNbr": 50,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-07-10T12:56:41Z",
      "side": 1,
      "message": "What about always having two splits, (but sometimes they are equal), this would allow simplifying the logic at [1]",
      "revId": "f4b15af08e6b48d3529df058efb979a139735987",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "44a7a751_d659d14a",
        "filename": "src/dawn_native/d3d12/TextureCopySplitter.h",
        "patchSetId": 2
      },
      "lineNbr": 50,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-07-13T08:05:45Z",
      "side": 1,
      "message": "nit: copies2D maybe? not sure.",
      "range": {
        "startLine": 50,
        "startChar": 60,
        "endLine": 50,
        "endChar": 74
      },
      "revId": "f4b15af08e6b48d3529df058efb979a139735987",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c014dce5_603b089a",
        "filename": "src/dawn_native/d3d12/TextureCopySplitter.h",
        "patchSetId": 2
      },
      "lineNbr": 50,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2020-07-14T08:37:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "44a7a751_d659d14a",
      "range": {
        "startLine": 50,
        "startChar": 60,
        "endLine": 50,
        "endChar": 74
      },
      "revId": "f4b15af08e6b48d3529df058efb979a139735987",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e7d343cf_ef9382fa",
        "filename": "src/dawn_native/d3d12/TextureCopySplitter.h",
        "patchSetId": 2
      },
      "lineNbr": 50,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2020-07-14T08:37:05Z",
      "side": 1,
      "message": "I have some problems about this idea. We can discuss it at [1].",
      "parentUuid": "dd983b79_22401230",
      "revId": "f4b15af08e6b48d3529df058efb979a139735987",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4e41bd3f_397e88f4",
        "filename": "src/dawn_native/d3d12/TextureCopySplitter.h",
        "patchSetId": 2
      },
      "lineNbr": 53,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-07-10T12:56:41Z",
      "side": 1,
      "message": "ComputeTextureCopySplit is now an implementation detail and can be removed from the header.",
      "revId": "f4b15af08e6b48d3529df058efb979a139735987",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "68f2e802_62d89825",
        "filename": "src/dawn_native/d3d12/TextureCopySplitter.h",
        "patchSetId": 2
      },
      "lineNbr": 53,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2020-07-13T01:56:16Z",
      "side": 1,
      "message": "This function is being used in many other places inside Dawn:\n1. CopySplitTests: https://source.chromium.org/chromium/chromium/src/+/master:third_party/dawn/src/tests/unittests/d3d12/CopySplitTests.cpp;l\u003d296\n2. Texture initialization:\nhttps://source.chromium.org/chromium/chromium/src/+/master:third_party/dawn/src/dawn_native/d3d12/TextureD3D12.cpp;l\u003d930\n\nI think this CL is big enough so I don\u0027t add more changes in these places. Shall we change them in another CL?",
      "parentUuid": "4e41bd3f_397e88f4",
      "revId": "f4b15af08e6b48d3529df058efb979a139735987",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ffb6184d_f864e930",
        "filename": "src/dawn_native/d3d12/TextureCopySplitter.h",
        "patchSetId": 2
      },
      "lineNbr": 53,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-07-13T08:05:45Z",
      "side": 1,
      "message": "Ah, then it\u0027s ok we don\u0027t need to do this change.",
      "parentUuid": "68f2e802_62d89825",
      "revId": "f4b15af08e6b48d3529df058efb979a139735987",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "676a2051_c0575beb",
        "filename": "src/tests/end2end/CopyTests.cpp",
        "patchSetId": 2
      },
      "lineNbr": 749,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-07-10T12:56:41Z",
      "side": 1,
      "message": "nit: when\n\nditto below",
      "range": {
        "startLine": 749,
        "startChar": 50,
        "endLine": 749,
        "endChar": 54
      },
      "revId": "f4b15af08e6b48d3529df058efb979a139735987",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "036fdc90_215a8f9a",
        "filename": "src/tests/end2end/CopyTests.cpp",
        "patchSetId": 2
      },
      "lineNbr": 749,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2020-07-14T08:37:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "676a2051_c0575beb",
      "range": {
        "startLine": 749,
        "startChar": 50,
        "endLine": 749,
        "endChar": 54
      },
      "revId": "f4b15af08e6b48d3529df058efb979a139735987",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cf63ba76_963b9683",
        "filename": "src/tests/end2end/CopyTests.cpp",
        "patchSetId": 2
      },
      "lineNbr": 776,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-07-10T12:56:41Z",
      "side": 1,
      "message": "ditto",
      "range": {
        "startLine": 776,
        "startChar": 50,
        "endLine": 776,
        "endChar": 54
      },
      "revId": "f4b15af08e6b48d3529df058efb979a139735987",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "70b1f447_437b1dad",
        "filename": "src/tests/end2end/CopyTests.cpp",
        "patchSetId": 2
      },
      "lineNbr": 776,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2020-07-14T08:37:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cf63ba76_963b9683",
      "range": {
        "startLine": 776,
        "startChar": 50,
        "endLine": 776,
        "endChar": 54
      },
      "revId": "f4b15af08e6b48d3529df058efb979a139735987",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    }
  ]
}