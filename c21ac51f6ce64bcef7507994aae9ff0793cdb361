{
  "comments": [
    {
      "key": {
        "uuid": "d1f4f4c0_d38a51a5",
        "filename": "src/dawn_native/d3d12/TextureD3D12.cpp",
        "patchSetId": 7
      },
      "lineNbr": 592,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-05-29T12:24:24Z",
      "side": 1,
      "message": "[1] The implicit promotion and decaying is per subresource thing so it should be handled inside the loops in TransitionUsageAndGetResourceBarrier and TrackUsageAndGetResourceBarrierForPass. It could be renamed \"TransitionOneSubresource\" and take the vector and new usage as argument (and maybe the current serial too) so that even more of the logic is shared between the two transition functions.",
      "revId": "c21ac51f6ce64bcef7507994aae9ff0793cdb361",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eb69b62a_7339a405",
        "filename": "src/dawn_native/d3d12/TextureD3D12.cpp",
        "patchSetId": 7
      },
      "lineNbr": 592,
      "author": {
        "id": 1000017
      },
      "writtenOn": "2020-06-02T14:40:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d1f4f4c0_d38a51a5",
      "revId": "c21ac51f6ce64bcef7507994aae9ff0793cdb361",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e625fcaa_f3b9470e",
        "filename": "src/dawn_native/d3d12/TextureD3D12.cpp",
        "patchSetId": 7
      },
      "lineNbr": 630,
      "author": {
        "id": 1000248
      },
      "writtenOn": "2020-05-29T22:27:34Z",
      "side": 1,
      "message": "This logic does not strictly follow the rules for an implicit decay. In the context of a Dawn texture, an implicit decay can only occur when the last (read-only) state was achieved through implicit promotion. Just because the last state was read-only does not mean it was achieved through implicit promotion.",
      "revId": "c21ac51f6ce64bcef7507994aae9ff0793cdb361",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8a8ed74b_ed3657f8",
        "filename": "src/dawn_native/d3d12/TextureD3D12.cpp",
        "patchSetId": 7
      },
      "lineNbr": 630,
      "author": {
        "id": 1000017
      },
      "writtenOn": "2020-06-02T14:40:53Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "e625fcaa_f3b9470e",
      "revId": "c21ac51f6ce64bcef7507994aae9ff0793cdb361",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "430b111d_cd1da6b9",
        "filename": "src/dawn_native/d3d12/TextureD3D12.cpp",
        "patchSetId": 7
      },
      "lineNbr": 648,
      "author": {
        "id": 1000248
      },
      "writtenOn": "2020-05-29T22:27:34Z",
      "side": 1,
      "message": "This is not the criteria required for an implicit promotion.\n\nImplicit promotion requires that the last state is COMMON and the new state is read-only or a single uncompressed write-state (which is only COPY_DEST in Dawn).",
      "revId": "c21ac51f6ce64bcef7507994aae9ff0793cdb361",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "233ce610_34df4c48",
        "filename": "src/dawn_native/d3d12/TextureD3D12.cpp",
        "patchSetId": 7
      },
      "lineNbr": 648,
      "author": {
        "id": 1000017
      },
      "writtenOn": "2020-06-02T14:40:53Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "430b111d_cd1da6b9",
      "revId": "c21ac51f6ce64bcef7507994aae9ff0793cdb361",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ab0f5724_f0feee92",
        "filename": "src/dawn_native/d3d12/TextureD3D12.cpp",
        "patchSetId": 7
      },
      "lineNbr": 660,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-05-29T12:24:24Z",
      "side": 1,
      "message": "Everything in the loop below this could be folded in [1]",
      "revId": "c21ac51f6ce64bcef7507994aae9ff0793cdb361",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9319bb65_53da7015",
        "filename": "src/dawn_native/d3d12/TextureD3D12.cpp",
        "patchSetId": 7
      },
      "lineNbr": 660,
      "author": {
        "id": 1000017
      },
      "writtenOn": "2020-06-02T14:40:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ab0f5724_f0feee92",
      "revId": "c21ac51f6ce64bcef7507994aae9ff0793cdb361",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0c68aa26_e14ae1ad",
        "filename": "src/dawn_native/d3d12/TextureD3D12.cpp",
        "patchSetId": 7
      },
      "lineNbr": 699,
      "author": {
        "id": 1000268
      },
      "writtenOn": "2020-05-29T18:58:34Z",
      "side": 1,
      "message": "Implicit state promotions/decay only apply to/from COMMON. If a texture was previously transitioned to say, SrcCopy (read-only) but is also used as OutputAttachment (write-only) for the pass, you cannot skip this transition, it is illegal.",
      "revId": "c21ac51f6ce64bcef7507994aae9ff0793cdb361",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1c48b388_eb9824c3",
        "filename": "src/dawn_native/d3d12/TextureD3D12.cpp",
        "patchSetId": 7
      },
      "lineNbr": 699,
      "author": {
        "id": 1000017
      },
      "writtenOn": "2020-06-02T14:40:53Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "0c68aa26_e14ae1ad",
      "revId": "c21ac51f6ce64bcef7507994aae9ff0793cdb361",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "de424a3d_5ea4751e",
        "filename": "src/dawn_native/d3d12/TextureD3D12.cpp",
        "patchSetId": 7
      },
      "lineNbr": 701,
      "author": {
        "id": 1000248
      },
      "writtenOn": "2020-05-29T22:27:34Z",
      "side": 1,
      "message": "It is not valid to implicitly transition to RENDER_TARGET or DEPTH_WRITE, even if it\u0027s a single write state.",
      "revId": "c21ac51f6ce64bcef7507994aae9ff0793cdb361",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d1fde5d4_c3cd7fd2",
        "filename": "src/dawn_native/d3d12/TextureD3D12.cpp",
        "patchSetId": 7
      },
      "lineNbr": 701,
      "author": {
        "id": 1000017
      },
      "writtenOn": "2020-06-02T14:40:53Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "de424a3d_5ea4751e",
      "revId": "c21ac51f6ce64bcef7507994aae9ff0793cdb361",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6690ebcd_dc4e95df",
        "filename": "src/dawn_native/d3d12/TextureD3D12.cpp",
        "patchSetId": 7
      },
      "lineNbr": 705,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-05-29T12:24:24Z",
      "side": 1,
      "message": "This is per-subresource and could be folded in [1]",
      "range": {
        "startLine": 697,
        "startChar": 0,
        "endLine": 705,
        "endChar": 0
      },
      "revId": "c21ac51f6ce64bcef7507994aae9ff0793cdb361",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1431ef0d_99a93195",
        "filename": "src/dawn_native/d3d12/TextureD3D12.cpp",
        "patchSetId": 7
      },
      "lineNbr": 705,
      "author": {
        "id": 1000017
      },
      "writtenOn": "2020-06-02T14:40:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6690ebcd_dc4e95df",
      "range": {
        "startLine": 697,
        "startChar": 0,
        "endLine": 705,
        "endChar": 0
      },
      "revId": "c21ac51f6ce64bcef7507994aae9ff0793cdb361",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6f6b2966_cc345506",
        "filename": "src/dawn_native/d3d12/TextureD3D12.cpp",
        "patchSetId": 7
      },
      "lineNbr": 715,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-05-29T12:24:24Z",
      "side": 1,
      "message": "ditto",
      "revId": "c21ac51f6ce64bcef7507994aae9ff0793cdb361",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "811fbadf_23bdc743",
        "filename": "src/dawn_native/d3d12/TextureD3D12.cpp",
        "patchSetId": 7
      },
      "lineNbr": 715,
      "author": {
        "id": 1000017
      },
      "writtenOn": "2020-06-02T14:40:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6f6b2966_cc345506",
      "revId": "c21ac51f6ce64bcef7507994aae9ff0793cdb361",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a85ba6fa_52d4daf3",
        "filename": "src/dawn_native/d3d12/TextureD3D12.h",
        "patchSetId": 7
      },
      "lineNbr": 122,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-05-29T12:24:24Z",
      "side": 1,
      "message": "nit: could we do this in Texture::Texture? Same comment for mLastSubresourceUsedSerial",
      "range": {
        "startLine": 121,
        "startChar": 46,
        "endLine": 122,
        "endChar": 98
      },
      "revId": "c21ac51f6ce64bcef7507994aae9ff0793cdb361",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6018c3cf_4f11d0eb",
        "filename": "src/dawn_native/d3d12/TextureD3D12.h",
        "patchSetId": 7
      },
      "lineNbr": 122,
      "author": {
        "id": 1000017
      },
      "writtenOn": "2020-06-02T14:40:53Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "a85ba6fa_52d4daf3",
      "range": {
        "startLine": 121,
        "startChar": 46,
        "endLine": 122,
        "endChar": 98
      },
      "revId": "c21ac51f6ce64bcef7507994aae9ff0793cdb361",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    }
  ]
}