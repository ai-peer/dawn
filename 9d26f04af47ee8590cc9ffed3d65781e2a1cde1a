{
  "comments": [
    {
      "key": {
        "uuid": "ceb92a83_f8100931",
        "filename": "src/dawn_native/CommandEncoder.cpp",
        "patchSetId": 2
      },
      "lineNbr": 58,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2019-06-06T14:26:26Z",
      "side": 1,
      "message": "A simpler way to round up multiples of 4 would be (widthAtLevel + 3 / 4) * 4 same for height. Can you also add a TODO for overflows?",
      "range": {
        "startLine": 56,
        "startChar": 16,
        "endLine": 58,
        "endChar": 17
      },
      "revId": "9d26f04af47ee8590cc9ffed3d65781e2a1cde1a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "03b1e19d_92fcd9ea",
        "filename": "src/dawn_native/CommandEncoder.cpp",
        "patchSetId": 2
      },
      "lineNbr": 58,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2019-06-13T07:21:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ceb92a83_f8100931",
      "range": {
        "startLine": 56,
        "startChar": 16,
        "endLine": 58,
        "endChar": 17
      },
      "revId": "9d26f04af47ee8590cc9ffed3d65781e2a1cde1a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3f55ca0e_f2b5a424",
        "filename": "src/dawn_native/CommandEncoder.cpp",
        "patchSetId": 2
      },
      "lineNbr": 113,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2019-06-06T14:26:26Z",
      "side": 1,
      "message": "Maybe we could consider non-compressed textures to be 1x1 blocked so we\u0027d replace all usage of TextureFormatPixelSize with TextureFormatTexelBlockSize and have unified code paths here for both compressed and non-compressed?",
      "range": {
        "startLine": 113,
        "startChar": 44,
        "endLine": 113,
        "endChar": 76
      },
      "revId": "9d26f04af47ee8590cc9ffed3d65781e2a1cde1a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "70ed3c8b_34319ba8",
        "filename": "src/dawn_native/CommandEncoder.cpp",
        "patchSetId": 2
      },
      "lineNbr": 113,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2019-06-13T07:21:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3f55ca0e_f2b5a424",
      "range": {
        "startLine": 113,
        "startChar": 44,
        "endLine": 113,
        "endChar": 76
      },
      "revId": "9d26f04af47ee8590cc9ffed3d65781e2a1cde1a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4ce87f5c_9a039ea4",
        "filename": "src/dawn_native/CommandEncoder.cpp",
        "patchSetId": 2
      },
      "lineNbr": 222,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2019-06-06T14:26:26Z",
      "side": 1,
      "message": "ditto unified code path.",
      "revId": "9d26f04af47ee8590cc9ffed3d65781e2a1cde1a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "da6c7627_5e1b860c",
        "filename": "src/dawn_native/CommandEncoder.cpp",
        "patchSetId": 2
      },
      "lineNbr": 222,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2019-06-13T07:21:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4ce87f5c_9a039ea4",
      "revId": "9d26f04af47ee8590cc9ffed3d65781e2a1cde1a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "effb50e8_5f3b1acb",
        "filename": "src/dawn_native/CommandEncoder.cpp",
        "patchSetId": 2
      },
      "lineNbr": 238,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2019-06-06T14:26:26Z",
      "side": 1,
      "message": "ditto unified code path",
      "revId": "9d26f04af47ee8590cc9ffed3d65781e2a1cde1a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "faf0560d_aafcb91f",
        "filename": "src/dawn_native/CommandEncoder.cpp",
        "patchSetId": 2
      },
      "lineNbr": 238,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2019-06-13T07:21:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "effb50e8_5f3b1acb",
      "revId": "9d26f04af47ee8590cc9ffed3d65781e2a1cde1a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf322aef_c21191f8",
        "filename": "src/dawn_native/CommandEncoder.cpp",
        "patchSetId": 2
      },
      "lineNbr": 256,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2019-06-06T14:26:26Z",
      "side": 1,
      "message": "ditto unified code path",
      "revId": "9d26f04af47ee8590cc9ffed3d65781e2a1cde1a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7655f677_b59c448c",
        "filename": "src/dawn_native/CommandEncoder.cpp",
        "patchSetId": 2
      },
      "lineNbr": 256,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2019-06-13T07:21:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bf322aef_c21191f8",
      "revId": "9d26f04af47ee8590cc9ffed3d65781e2a1cde1a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4a15225c_df2a9b2e",
        "filename": "src/dawn_native/CommandEncoder.cpp",
        "patchSetId": 2
      },
      "lineNbr": 275,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2019-06-06T14:26:26Z",
      "side": 1,
      "message": "We shouldn\u0027t need to validate the buffer copy view image height is a multiple of 4 because that\u0027s the number of images to skip when doing a 3D copy, which doesn\u0027t have constraints when copying compressed textures.",
      "revId": "9d26f04af47ee8590cc9ffed3d65781e2a1cde1a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a1d38bf2_b091e75d",
        "filename": "src/dawn_native/CommandEncoder.cpp",
        "patchSetId": 2
      },
      "lineNbr": 275,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2019-06-10T08:49:13Z",
      "side": 1,
      "message": "I add this check because it seems Vulkan requires this:\nhttps://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#copies-buffers-images (Chapter 18.4)\n\"For struct VkBufferImageCopy:\nIf the calling commandâ€™s VkImage parameter is a compressed image, bufferImageHeight must be a multiple of the compressed texel block height\"",
      "parentUuid": "4a15225c_df2a9b2e",
      "revId": "9d26f04af47ee8590cc9ffed3d65781e2a1cde1a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "16761783_1fbeba21",
        "filename": "src/dawn_native/CommandEncoder.cpp",
        "patchSetId": 2
      },
      "lineNbr": 275,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2019-06-10T09:48:04Z",
      "side": 1,
      "message": "Ah, thanks for the explanation, it makes sense.",
      "parentUuid": "a1d38bf2_b091e75d",
      "revId": "9d26f04af47ee8590cc9ffed3d65781e2a1cde1a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "145f90b6_c6a7fdcf",
        "filename": "src/dawn_native/CommandEncoder.cpp",
        "patchSetId": 2
      },
      "lineNbr": 275,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2019-06-13T07:21:24Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "16761783_1fbeba21",
      "revId": "9d26f04af47ee8590cc9ffed3d65781e2a1cde1a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "440aa093_82f44f34",
        "filename": "src/dawn_native/CommandEncoder.cpp",
        "patchSetId": 2
      },
      "lineNbr": 276,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2019-06-06T14:26:26Z",
      "side": 1,
      "message": "Always going through the switch is a bit unfortunate. Eventually Dawn should have a format table like ANGLE. But let\u0027s not worry about it in this CL.",
      "revId": "9d26f04af47ee8590cc9ffed3d65781e2a1cde1a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "daf4aae8_fd7b1d98",
        "filename": "src/dawn_native/CommandEncoder.cpp",
        "patchSetId": 2
      },
      "lineNbr": 276,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2019-06-13T07:21:24Z",
      "side": 1,
      "message": "Ack\nMaybe we can implement format table when we start to implement all texture formats required in WebGPU IDL.",
      "parentUuid": "440aa093_82f44f34",
      "revId": "9d26f04af47ee8590cc9ffed3d65781e2a1cde1a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9f7f68b5_35e9293a",
        "filename": "src/tests/unittests/validation/CopyCommandsValidationTests.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1019,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2019-06-06T14:26:26Z",
      "side": 1,
      "message": "nit: this isn\u0027t needed.",
      "range": {
        "startLine": 1019,
        "startChar": 26,
        "endLine": 1019,
        "endChar": 62
      },
      "revId": "9d26f04af47ee8590cc9ffed3d65781e2a1cde1a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "69df178b_7f55605b",
        "filename": "src/tests/unittests/validation/CopyCommandsValidationTests.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1019,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2019-06-13T07:21:24Z",
      "side": 1,
      "message": "Oh it is necessary that the buffer will be used in B2T tests.",
      "parentUuid": "9f7f68b5_35e9293a",
      "range": {
        "startLine": 1019,
        "startChar": 26,
        "endLine": 1019,
        "endChar": 62
      },
      "revId": "9d26f04af47ee8590cc9ffed3d65781e2a1cde1a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8ef06060_899f5700",
        "filename": "src/tests/unittests/validation/CopyCommandsValidationTests.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1027,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2019-06-06T14:26:26Z",
      "side": 1,
      "message": "Could we have a \"TestBothTBCopies\" helper that does B2T and T2B to avoid duplicating all the tests?",
      "revId": "9d26f04af47ee8590cc9ffed3d65781e2a1cde1a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "43d71a9e_39696ca6",
        "filename": "src/tests/unittests/validation/CopyCommandsValidationTests.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1027,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2019-06-06T14:26:26Z",
      "side": 1,
      "message": "Buffer copy source image height should be 1 in all tests because it isn\u0027t relevant for compressed textures.",
      "range": {
        "startLine": 1027,
        "startChar": 85,
        "endLine": 1027,
        "endChar": 86
      },
      "revId": "9d26f04af47ee8590cc9ffed3d65781e2a1cde1a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d1ae0341_a71a47b7",
        "filename": "src/tests/unittests/validation/CopyCommandsValidationTests.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1027,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2019-06-13T07:21:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8ef06060_899f5700",
      "revId": "9d26f04af47ee8590cc9ffed3d65781e2a1cde1a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f10b0555_4d1236d1",
        "filename": "src/tests/unittests/validation/CopyCommandsValidationTests.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1027,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2019-06-13T07:21:24Z",
      "side": 1,
      "message": "It should be 4 because Vulkan requires this.",
      "parentUuid": "43d71a9e_39696ca6",
      "range": {
        "startLine": 1027,
        "startChar": 85,
        "endLine": 1027,
        "endChar": 86
      },
      "revId": "9d26f04af47ee8590cc9ffed3d65781e2a1cde1a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5baa3898_e6a46f39",
        "filename": "src/tests/unittests/validation/CopyCommandsValidationTests.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1035,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2019-06-06T14:26:26Z",
      "side": 1,
      "message": "Could this be CompressedFormatBlockSizeInBytes() / 2 so we know exactly the correct constraint is checked on the offset?",
      "range": {
        "startLine": 1035,
        "startChar": 54,
        "endLine": 1035,
        "endChar": 55
      },
      "revId": "9d26f04af47ee8590cc9ffed3d65781e2a1cde1a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "46466c11_910ded07",
        "filename": "src/tests/unittests/validation/CopyCommandsValidationTests.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1035,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2019-06-13T07:21:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5baa3898_e6a46f39",
      "range": {
        "startLine": 1035,
        "startChar": 54,
        "endLine": 1035,
        "endChar": 55
      },
      "revId": "9d26f04af47ee8590cc9ffed3d65781e2a1cde1a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3ee712b4_e3207553",
        "filename": "src/tests/unittests/validation/CopyCommandsValidationTests.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1066,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2019-06-06T14:26:26Z",
      "side": 1,
      "message": "Can we also have tests for the smallest correct value for these cases? In general for tests on numerical constraints it is good to test the closest value on each side of the boundary.",
      "revId": "9d26f04af47ee8590cc9ffed3d65781e2a1cde1a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3f35b97b_54e7c39a",
        "filename": "src/tests/unittests/validation/CopyCommandsValidationTests.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1066,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2019-06-13T07:21:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3ee712b4_e3207553",
      "revId": "9d26f04af47ee8590cc9ffed3d65781e2a1cde1a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1f84d6e6_193efcc5",
        "filename": "src/tests/unittests/validation/CopyCommandsValidationTests.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1078,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2019-06-06T14:26:26Z",
      "side": 1,
      "message": "And maybe have a test were it fails too because the texture size * blocksie isn\u0027t a multiple of 256?",
      "revId": "9d26f04af47ee8590cc9ffed3d65781e2a1cde1a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "987af25f_114e0b5d",
        "filename": "src/tests/unittests/validation/CopyCommandsValidationTests.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1078,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2019-06-13T07:21:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1f84d6e6_193efcc5",
      "revId": "9d26f04af47ee8590cc9ffed3d65781e2a1cde1a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7354f46b_a1a9e1d0",
        "filename": "src/tests/unittests/validation/CopyCommandsValidationTests.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1088,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2019-06-06T14:26:26Z",
      "side": 1,
      "message": "This test should be removed because there are no constraints on the image height.",
      "revId": "9d26f04af47ee8590cc9ffed3d65781e2a1cde1a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e9817f3a_e3c9e257",
        "filename": "src/tests/unittests/validation/CopyCommandsValidationTests.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1088,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2019-06-13T07:21:24Z",
      "side": 1,
      "message": "Oh we need these tests according to our previous dialogs.",
      "parentUuid": "7354f46b_a1a9e1d0",
      "revId": "9d26f04af47ee8590cc9ffed3d65781e2a1cde1a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "81371df5_f3582a64",
        "filename": "src/tests/unittests/validation/CopyCommandsValidationTests.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1131,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2019-06-06T14:26:26Z",
      "side": 1,
      "message": "Ditto, have a helper that tests both T2T copies (swapping the arguments)",
      "revId": "9d26f04af47ee8590cc9ffed3d65781e2a1cde1a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bec0ceef_cdce5a06",
        "filename": "src/tests/unittests/validation/CopyCommandsValidationTests.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1131,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2019-06-13T07:21:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "81371df5_f3582a64",
      "revId": "9d26f04af47ee8590cc9ffed3d65781e2a1cde1a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9cfbda22_e9a9b55d",
        "filename": "src/tests/unittests/validation/CopyCommandsValidationTests.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1139,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2019-06-06T14:26:26Z",
      "side": 1,
      "message": "nit: can this have the smallest difference possible to the control case?",
      "range": {
        "startLine": 1139,
        "startChar": 0,
        "endLine": 1139,
        "endChar": 66
      },
      "revId": "9d26f04af47ee8590cc9ffed3d65781e2a1cde1a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c63ecf73_5a02d785",
        "filename": "src/tests/unittests/validation/CopyCommandsValidationTests.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1139,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2019-06-13T07:21:24Z",
      "side": 1,
      "message": "Oh I\u0027m not sure I fully understand your suggestion here.",
      "parentUuid": "9cfbda22_e9a9b55d",
      "range": {
        "startLine": 1139,
        "startChar": 0,
        "endLine": 1139,
        "endChar": 66
      },
      "revId": "9d26f04af47ee8590cc9ffed3d65781e2a1cde1a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1ae1e319_02db15c2",
        "filename": "src/tests/unittests/validation/CopyCommandsValidationTests.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1152,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2019-06-06T14:26:26Z",
      "side": 1,
      "message": "ditto",
      "revId": "9d26f04af47ee8590cc9ffed3d65781e2a1cde1a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "226f87b9_0e6ae082",
        "filename": "src/tests/unittests/validation/CopyCommandsValidationTests.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1152,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2019-06-13T07:21:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1ae1e319_02db15c2",
      "revId": "9d26f04af47ee8590cc9ffed3d65781e2a1cde1a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a90dc973_b0d042e6",
        "filename": "src/tests/unittests/validation/CopyCommandsValidationTests.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1183,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2019-06-06T14:26:26Z",
      "side": 1,
      "message": "This doesn\u0027t test T2B",
      "revId": "9d26f04af47ee8590cc9ffed3d65781e2a1cde1a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6587009b_5d3b4870",
        "filename": "src/tests/unittests/validation/CopyCommandsValidationTests.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1183,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2019-06-13T07:21:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a90dc973_b0d042e6",
      "revId": "9d26f04af47ee8590cc9ffed3d65781e2a1cde1a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    }
  ]
}