{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "035555f3_79557eb4",
        "filename": "src/dawn/native/d3d/ShaderModuleD3D.cpp",
        "patchSetId": 3
      },
      "lineNbr": 493,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-03-20T23:02:40Z",
      "side": 1,
      "message": "[1]",
      "range": {
        "startLine": 493,
        "startChar": 34,
        "endLine": 493,
        "endChar": 64
      },
      "revId": "c2fe944c27839d43f5d81c32cde9f100818e8b88",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7adc0d9e_aa9f04ce",
        "filename": "src/dawn/native/d3d/ShaderModuleD3D.cpp",
        "patchSetId": 3
      },
      "lineNbr": 602,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-03-20T23:02:40Z",
      "side": 1,
      "message": "could we instead factor things such that these lines are unique per-backend, with perhaps some duplication?\n\nSo we can have D3D11 and D3D12 version of \"BuildD3DCompilationRequest\". Then, we pass that request to ShaderModule::Compile which is all common code?\nThen, the common code doesn\u0027t need the PipelineLayout or BindGroupLayout at all.\nThis will also allow us to move the DXC stuff at [1] to only the d3d12 backend, and not common code.\n\nD3D11 will need different binding remapping code so the request will be structured differently.",
      "range": {
        "startLine": 469,
        "startChar": 4,
        "endLine": 602,
        "endChar": 69
      },
      "revId": "c2fe944c27839d43f5d81c32cde9f100818e8b88",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Code-Review=MAX,user=non_uploader","label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "c2fe944c27839d43f5d81c32cde9f100818e8b88",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Kokoro",
        "description": {
          "value": "A maximum vote is required for the Kokoro label. A minimum vote is blocking."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Kokoro\u003dMAX AND -label:Kokoro\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "uploader:dawn-autoroll@skia-public.iam.gserviceaccount.com"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Kokoro=MAX AND -label:Kokoro=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Kokoro=MAX","label:Kokoro=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"uploader:dawn-autoroll@skia-public.iam.gserviceaccount.com"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["uploader:dawn-autoroll@skia-public.iam.gserviceaccount.com"]}
      },
      "patchSetCommitId": "c2fe944c27839d43f5d81c32cde9f100818e8b88",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforced_gerrit"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "c2fe944c27839d43f5d81c32cde9f100818e8b88",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}