{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "afc1b566_5acc079e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2022-06-21T17:10:42Z",
      "side": 1,
      "message": "some of this code is still being used [here](https://source.corp.google.com/piper///depot/google3/geo/render/mirth/apps/BUILD;bpv\u003d1;bpt\u003d1;rcl\u003d455974351;l\u003d272?q\u003dsrc%2Fdawn%2Futils%2FBackendBinding.h\u0026sq\u003dpackage:piper%20file:%2F%2Fdepot%2Fgoogle3%20-file:google3%2Fexperimental)\n\nwe should check with that team and see if they still need it. If not, we could delete it in google3 as well - or if they do, we would need to help them migrate over to the new swap chain\n\nLGTM otherwise though - ok with me to remove this and remove OldSwapChain as a follow-up.",
      "revId": "f5e96cbe7dc8b627c93a620a9de00f407a53d279",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d56cc7bb_b7d7f739",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2022-06-21T17:53:42Z",
      "side": 1,
      "message": "Does this mean we have to remove from g3 before this can land? Or do we only land periodically and we can fixup g3 in the future?",
      "parentUuid": "afc1b566_5acc079e",
      "revId": "f5e96cbe7dc8b627c93a620a9de00f407a53d279",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2619b3dd_2f90d093",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2022-06-21T18:22:06Z",
      "side": 1,
      "message": "the import into google3 is somewhat manual so we can indeed fix it up in the next import. However, it may not be trivial to remove the old backend binding code and migrate to the new swap chain and configure the glfw window accordingly. And, doing that work would block the import. So I have a slight preference for updating g3 first to not introduce dependencies on the next import - unless you think it will be easy to do?",
      "parentUuid": "d56cc7bb_b7d7f739",
      "revId": "f5e96cbe7dc8b627c93a620a9de00f407a53d279",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "22ef3dea_963830f5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2022-06-21T19:14:03Z",
      "side": 1,
      "message": "Nope, I agree with you and think fixing g3 first is the right way to go. I\u0027ve moved this to work-in-progress until g3 is fixed then I can bring it back.",
      "parentUuid": "2619b3dd_2f90d093",
      "revId": "f5e96cbe7dc8b627c93a620a9de00f407a53d279",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Code-Review=MAX,user=non_uploader","label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1"]}
      },
      "patchSetCommitId": "f5e96cbe7dc8b627c93a620a9de00f407a53d279",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforced_gerrit"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "f5e96cbe7dc8b627c93a620a9de00f407a53d279",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}