{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "3e7e34e3_d820851e",
        "filename": "src/dawn/tests/DawnTest.cpp",
        "patchSetId": 46
      },
      "lineNbr": 1481,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-04-05T21:10:35Z",
      "side": 1,
      "message": "do we need an atomic bool?\nisn\u0027t the bool set to true by only a single thread? WaitABit should invoke the callback on the calling thread.\n\nEdit: nevermind. I\u0027ve realized that if two threads are waiting, which thread invokes the callback is a race. could you comment explaining why we have the atomic?",
      "revId": "e5815ae34ff24cb2b6358a7e03c7a3ddb0e910a5",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "138adf50_87ea37b6",
        "filename": "src/dawn/tests/DawnTest.cpp",
        "patchSetId": 46
      },
      "lineNbr": 1530,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-04-05T21:10:35Z",
      "side": 1,
      "message": "MapSlotsSynchronously occurs on test suite TearDown.\nperhaps it doesn\u0027t need a lock? instead we can make mNumPendingMapOperations atomic",
      "revId": "e5815ae34ff24cb2b6358a7e03c7a3ddb0e910a5",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "516df569_90938c44",
        "filename": "src/dawn/tests/end2end/MultithreadTests.cpp",
        "patchSetId": 46
      },
      "lineNbr": 1,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-04-05T21:10:35Z",
      "side": 1,
      "message": "the tests here seem quite valuable. what\u0027s the rationale for giving the other single-threaded tests a parameterization to enable the synchronization?\n\ndoes that provide coverage not already included here?",
      "revId": "e5815ae34ff24cb2b6358a7e03c7a3ddb0e910a5",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2dce7eeb_90fafc05",
        "filename": "src/dawn/tests/end2end/MultithreadTests.cpp",
        "patchSetId": 46
      },
      "lineNbr": 190,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-04-05T21:10:35Z",
      "side": 1,
      "message": "the data can be prepared once for all threads",
      "revId": "e5815ae34ff24cb2b6358a7e03c7a3ddb0e910a5",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "370523cf_6a30ba92",
        "filename": "src/dawn/tests/end2end/MultithreadTests.cpp",
        "patchSetId": 46
      },
      "lineNbr": 234,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-04-05T21:10:35Z",
      "side": 1,
      "message": "unit: capitalize the lambda name. same below",
      "revId": "e5815ae34ff24cb2b6358a7e03c7a3ddb0e910a5",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "02c3751f_4af1ef44",
        "filename": "src/dawn/tests/end2end/MultithreadTests.cpp",
        "patchSetId": 46
      },
      "lineNbr": 248,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-04-05T21:10:35Z",
      "side": 1,
      "message": "why guarded?\nthere shouldn\u0027t be a race to read it because the callback should be called strictly once.\nthere shouldn\u0027t be a race to write it because we spin waiting for isCompleted. because we wait to see isCompleted written, then the compute pipeline must also be written",
      "revId": "e5815ae34ff24cb2b6358a7e03c7a3ddb0e910a5",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "041240ef_de986603",
        "filename": "src/dawn/tests/end2end/MultithreadTests.cpp",
        "patchSetId": 46
      },
      "lineNbr": 333,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-04-05T21:10:35Z",
      "side": 1,
      "message": "ditto - why guarded?",
      "revId": "e5815ae34ff24cb2b6358a7e03c7a3ddb0e910a5",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a61f565b_cf968a84",
        "filename": "src/dawn/tests/end2end/MultithreadTests.cpp",
        "patchSetId": 46
      },
      "lineNbr": 424,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-04-05T21:10:35Z",
      "side": 1,
      "message": "why tick?",
      "revId": "e5815ae34ff24cb2b6358a7e03c7a3ddb0e910a5",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}