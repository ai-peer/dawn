{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "d700c511_5ec41a71",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 7,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-03-27T21:24:20Z",
      "side": 1,
      "message": "Implementation",
      "range": {
        "startLine": 7,
        "startChar": 21,
        "endLine": 7,
        "endChar": 34
      },
      "revId": "08f54ff07418686a66b07ef73df76fe33e0721e1",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "83bdfbca_6f8e7c7e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 7,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2023-03-28T05:49:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d700c511_5ec41a71",
      "range": {
        "startLine": 7,
        "startChar": 21,
        "endLine": 7,
        "endChar": 34
      },
      "revId": "08f54ff07418686a66b07ef73df76fe33e0721e1",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "db357da5_22dfa2d1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2023-03-27T08:36:57Z",
      "side": 1,
      "message": "PTAL, this is the 3/3 of \"Refactor Memory Service\"(https://dawn-review.googlesource.com/c/dawn/+/124880)",
      "revId": "08f54ff07418686a66b07ef73df76fe33e0721e1",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "244f05fd_8ccad772",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-03-27T21:24:20Z",
      "side": 1,
      "message": "overall LGTM",
      "revId": "08f54ff07418686a66b07ef73df76fe33e0721e1",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "de823975_76116ad4",
        "filename": "src/dawn/native/CMakeLists.txt",
        "patchSetId": 3
      },
      "lineNbr": 588,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-03-28T09:55:31Z",
      "side": 1,
      "message": "There is a leftover merge conflict here.",
      "revId": "08f54ff07418686a66b07ef73df76fe33e0721e1",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "87c1b76c_e8bfbd30",
        "filename": "src/dawn/native/CMakeLists.txt",
        "patchSetId": 3
      },
      "lineNbr": 599,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-03-27T21:24:20Z",
      "side": 1,
      "message": "merge artifact",
      "range": {
        "startLine": 588,
        "startChar": 0,
        "endLine": 599,
        "endChar": 82
      },
      "revId": "08f54ff07418686a66b07ef73df76fe33e0721e1",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e213048f_83520244",
        "filename": "src/dawn/native/CMakeLists.txt",
        "patchSetId": 3
      },
      "lineNbr": 599,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2023-03-28T05:49:51Z",
      "side": 1,
      "message": "Sry. I didn\u0027t notice that my local change failed to save....",
      "parentUuid": "87c1b76c_e8bfbd30",
      "range": {
        "startLine": 588,
        "startChar": 0,
        "endLine": 599,
        "endChar": 82
      },
      "revId": "08f54ff07418686a66b07ef73df76fe33e0721e1",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0637a16a_68e308e3",
        "filename": "src/dawn/native/vulkan/external_memory/MemoryService.cpp",
        "patchSetId": 3
      },
      "lineNbr": 25,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-03-27T21:24:20Z",
      "side": 1,
      "message": "there is no #if CHROMEOS because that is inside #if LINUX, correct? so MemoryServiceImplementationDmaBuf.h is already included?",
      "revId": "08f54ff07418686a66b07ef73df76fe33e0721e1",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "90a316ac_d1254e04",
        "filename": "src/dawn/native/vulkan/external_memory/MemoryService.cpp",
        "patchSetId": 3
      },
      "lineNbr": 25,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2023-03-28T05:49:51Z",
      "side": 1,
      "message": "Yes, Technically DAWN_PLATFORM_IS(LINUX) contains CHROMEOS(I think). But explicitly add DAWN_PLATFORM_IS(CHROMEOS) make code easier to understand. Done.",
      "parentUuid": "0637a16a_68e308e3",
      "revId": "08f54ff07418686a66b07ef73df76fe33e0721e1",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5d025adf_fb5b3d9d",
        "filename": "src/dawn/native/vulkan/external_memory/MemoryService.cpp",
        "patchSetId": 3
      },
      "lineNbr": 36,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-03-27T21:24:20Z",
      "side": 1,
      "message": "may have missed it but, is this function used? \n\nI think for example, that `ServiceImplementationAHardwareBuffer` already directly calls ServiceImplementationAHardwareBuffer::CheckSupport, and we may not need this version to proxy to it.\n\nIf this function is not needed, then we also don\u0027t need CheckAHardwareBufferSupport, CheckZirconHandleSupport, etc. either\n\n\nEdit: nvm - is it because of `Adapter::SupportsExternalImages` ?",
      "range": {
        "startLine": 36,
        "startChar": 5,
        "endLine": 36,
        "endChar": 26
      },
      "revId": "08f54ff07418686a66b07ef73df76fe33e0721e1",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4ebbcb9a_9831ad45",
        "filename": "src/dawn/native/vulkan/external_memory/MemoryService.cpp",
        "patchSetId": 3
      },
      "lineNbr": 36,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2023-03-28T05:49:51Z",
      "side": 1,
      "message": "\u003e nvm - is it because of `Adapter::SupportsExternalImages` ?\n\nYes, due to this call.",
      "parentUuid": "5d025adf_fb5b3d9d",
      "range": {
        "startLine": 36,
        "startChar": 5,
        "endLine": 36,
        "endChar": 26
      },
      "revId": "08f54ff07418686a66b07ef73df76fe33e0721e1",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0fc5442a_a92e8892",
        "filename": "src/dawn/native/vulkan/external_memory/MemoryService.cpp",
        "patchSetId": 3
      },
      "lineNbr": 36,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-03-28T16:04:04Z",
      "side": 1,
      "message": "Acknowledged\n\nFYI later, we should have dawn.json optional features that surface to the application what type of external imports are supported (one for DmaBuf, one for AHardwareBuffer, one for OpaqueFD, etc.) Then, we can remove SupportsExternalImages and replace it in Chromium with a check for WebGPU that makes sure it supports the one of semaphore types that Chromium uses on the platform, and one of the external memory types that Chromium uses on the platform.",
      "parentUuid": "4ebbcb9a_9831ad45",
      "range": {
        "startLine": 36,
        "startChar": 5,
        "endLine": 36,
        "endChar": 26
      },
      "revId": "08f54ff07418686a66b07ef73df76fe33e0721e1",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3042956e_9081d704",
        "filename": "src/dawn/native/vulkan/external_memory/MemoryService.cpp",
        "patchSetId": 3
      },
      "lineNbr": 44,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-03-27T21:24:20Z",
      "side": 1,
      "message": "will it compile to also check for CheckOpaqueFDSupport ?\nit\u0027s preferable to include as I think there can be CrOS GPUs that only support opaque fd and not dmabuf",
      "revId": "08f54ff07418686a66b07ef73df76fe33e0721e1",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "01a4dea9_a60d2b32",
        "filename": "src/dawn/native/vulkan/external_memory/MemoryService.cpp",
        "patchSetId": 3
      },
      "lineNbr": 44,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2023-03-28T05:49:51Z",
      "side": 1,
      "message": "Good point. Jie confirmed this concern. Address it.",
      "parentUuid": "3042956e_9081d704",
      "revId": "08f54ff07418686a66b07ef73df76fe33e0721e1",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b9900d31_5a846dd9",
        "filename": "src/dawn/native/vulkan/external_memory/MemoryService.cpp",
        "patchSetId": 3
      },
      "lineNbr": 109,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-03-27T21:24:20Z",
      "side": 1,
      "message": "perhaps here, we should check for support before creating the service. That way we avoid the allocation if it will be deleted immediately after.\n\n```\nif (CheckZirconHandleSupport(...)) {\n  mServiceImpls.emplace(..., CreateZirconHandleService(...));\n}\n```\n?\n\nOr alternatively, have CreateZicronHandleService return nullptr if it is not supported.\n\n```\nmemoryServiceHandle \u003d ...;\nif (!memoryServiceHandle) {\n  mServiceImpls.emplace(...);\n}\n```\n?",
      "revId": "08f54ff07418686a66b07ef73df76fe33e0721e1",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5108b109_79c01622",
        "filename": "src/dawn/native/vulkan/external_memory/MemoryService.cpp",
        "patchSetId": 3
      },
      "lineNbr": 109,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2023-03-28T05:49:51Z",
      "side": 1,
      "message": "Thanks for the suggestion. Chooes the check then create and directly return type.",
      "parentUuid": "b9900d31_5a846dd9",
      "revId": "08f54ff07418686a66b07ef73df76fe33e0721e1",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0c9030c3_8e176707",
        "filename": "src/dawn/native/vulkan/external_memory/MemoryService.cpp",
        "patchSetId": 3
      },
      "lineNbr": 144,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-03-27T21:24:20Z",
      "side": 1,
      "message": "why not return it directly after emplacing? emplace returns the iterator where it was inserted",
      "range": {
        "startLine": 144,
        "startChar": 0,
        "endLine": 144,
        "endChar": 50
      },
      "revId": "08f54ff07418686a66b07ef73df76fe33e0721e1",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2b3e4d57_7142bcf6",
        "filename": "src/dawn/native/vulkan/external_memory/MemoryService.cpp",
        "patchSetId": 3
      },
      "lineNbr": 144,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2023-03-28T05:49:51Z",
      "side": 1,
      "message": "Ah...Thanks for telling me this. Direct return.",
      "parentUuid": "0c9030c3_8e176707",
      "range": {
        "startLine": 144,
        "startChar": 0,
        "endLine": 144,
        "endChar": 50
      },
      "revId": "08f54ff07418686a66b07ef73df76fe33e0721e1",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f95be66b_7bc7c4bb",
        "filename": "src/dawn/native/vulkan/external_memory/MemoryService.cpp",
        "patchSetId": 3
      },
      "lineNbr": 146,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-03-27T21:24:20Z",
      "side": 1,
      "message": "if the image type isn\u0027t supported, then there will be no service found.\n\nInstead, return nullptr, and then in IsSupported implementations, check `service !\u003d nullptr \u0026\u0026 service-\u003eSupportsImportMemory(...)` ?",
      "range": {
        "startLine": 146,
        "startChar": 0,
        "endLine": 146,
        "endChar": 42
      },
      "revId": "08f54ff07418686a66b07ef73df76fe33e0721e1",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "861f3e05_2acdde97",
        "filename": "src/dawn/native/vulkan/external_memory/MemoryService.cpp",
        "patchSetId": 3
      },
      "lineNbr": 146,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2023-03-28T05:49:51Z",
      "side": 1,
      "message": "Addressed return nullptr.\nBut not quite sure what is `IsSupported` used for? Adding nullptr checks in Service API implementations. And I think SemaphoreService side also need this change (with follow-up CL).",
      "parentUuid": "f95be66b_7bc7c4bb",
      "range": {
        "startLine": 146,
        "startChar": 0,
        "endLine": 146,
        "endChar": 42
      },
      "revId": "08f54ff07418686a66b07ef73df76fe33e0721e1",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ac20cf27_9a5a41a2",
        "filename": "src/dawn/native/vulkan/external_memory/MemoryService.cpp",
        "patchSetId": 3
      },
      "lineNbr": 146,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-03-28T16:04:04Z",
      "side": 1,
      "message": "IsSupported checks are so we can check it just once before doing GetMemoryImportParams and ImportMemory, so we shouldn\u0027t need the other checks at [a] they could be ASSERTs.\n\nGiven that we always should check support first, it makes me think that slightly restructuring the API could be beneficial. So that you need to check support before even getting the object on which to call GetMemoryImportParams and ImportMemory. That said, this is complex enough right now that I think we should keep the structure the same for now and revisit it after we can support runtime selection of the service. There\u0027s other things that should eventually be improved as well - see [here](https://source.chromium.org/chromium/chromium/src/+/main:third_party/dawn/src/dawn/native/vulkan/DeviceVk.cpp;l\u003d928;drc\u003d8101d6d81854e4f437e0f03f77694a01aaa8df7a;bpv\u003d1;bpt\u003d1)",
      "parentUuid": "861f3e05_2acdde97",
      "range": {
        "startLine": 146,
        "startChar": 0,
        "endLine": 146,
        "endChar": 42
      },
      "revId": "08f54ff07418686a66b07ef73df76fe33e0721e1",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bdb3e99f_02497ef4",
        "filename": "src/dawn/native/vulkan/external_memory/MemoryService.h",
        "patchSetId": 3
      },
      "lineNbr": 41,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-03-28T09:55:31Z",
      "side": 1,
      "message": "nit: This is a value type, no need for const here and below.",
      "range": {
        "startLine": 41,
        "startChar": 30,
        "endLine": 41,
        "endChar": 35
      },
      "revId": "08f54ff07418686a66b07ef73df76fe33e0721e1",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ff650174_47522fb7",
        "filename": "src/dawn/native/vulkan/external_memory/MemoryServiceImplementationZirconHandle.h",
        "patchSetId": 3
      },
      "lineNbr": 29,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-03-28T09:55:31Z",
      "side": 1,
      "message": "nit: Zircon",
      "range": {
        "startLine": 29,
        "startChar": 39,
        "endLine": 29,
        "endChar": 64
      },
      "revId": "08f54ff07418686a66b07ef73df76fe33e0721e1",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}