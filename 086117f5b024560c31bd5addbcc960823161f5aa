{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "00c2a3a2_1f09f121",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 15
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-07-19T10:00:45Z",
      "side": 1,
      "message": "LGTM",
      "revId": "086117f5b024560c31bd5addbcc960823161f5aa",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4b70bc02_bfb90cb3",
        "filename": "src/dawn/tests/white_box/VulkanImageWrappingTests.cpp",
        "patchSetId": 15
      },
      "lineNbr": 66,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-07-19T10:00:45Z",
      "side": 1,
      "message": "Why? Isn\u0027t [1] sufficient?",
      "revId": "086117f5b024560c31bd5addbcc960823161f5aa",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "58133c0e_2c73835f",
        "filename": "src/dawn/tests/white_box/VulkanImageWrappingTests.cpp",
        "patchSetId": 15
      },
      "lineNbr": 66,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2023-07-20T06:18:13Z",
      "side": 1,
      "message": "Done. Swiftshader DmaBuf fails to createGBMDevice. Made changes in DmaBuf backend cpp file to handle this.",
      "parentUuid": "4b70bc02_bfb90cb3",
      "revId": "086117f5b024560c31bd5addbcc960823161f5aa",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "167ebb67_781ecad0",
        "filename": "src/dawn/tests/white_box/VulkanImageWrappingTests.cpp",
        "patchSetId": 15
      },
      "lineNbr": 84,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-07-19T10:00:45Z",
      "side": 1,
      "message": "[1]",
      "revId": "086117f5b024560c31bd5addbcc960823161f5aa",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a0347863_e77623fe",
        "filename": "src/dawn/tests/white_box/VulkanImageWrappingTests.cpp",
        "patchSetId": 15
      },
      "lineNbr": 84,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2023-07-20T06:18:13Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "167ebb67_781ecad0",
      "revId": "086117f5b024560c31bd5addbcc960823161f5aa",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "83d9d2a9_01138ae2",
        "filename": "src/dawn/tests/white_box/VulkanImageWrappingTests.h",
        "patchSetId": 15
      },
      "lineNbr": 78,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-07-19T10:00:45Z",
      "side": 1,
      "message": "This struct doesn\u0027t seem to do anything now. Previously it was so that the test backend could pass the correct type, but now the type is just forwarded in the constructor so we could remove the struct.",
      "revId": "086117f5b024560c31bd5addbcc960823161f5aa",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "65175e7c_8b243891",
        "filename": "src/dawn/tests/white_box/VulkanImageWrappingTests.h",
        "patchSetId": 15
      },
      "lineNbr": 78,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2023-07-20T06:18:13Z",
      "side": 1,
      "message": "Unfortunately, Constructors of ExternalImageDescriptorVk(type) and ExternalImageExportInfoVk(type) are protected functions. So we still need these helper structures to set ExternalImageType.",
      "parentUuid": "83d9d2a9_01138ae2",
      "revId": "086117f5b024560c31bd5addbcc960823161f5aa",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a9f76bd4_a34fab31",
        "filename": "src/dawn/tests/white_box/VulkanImageWrappingTests_DmaBuf.cpp",
        "patchSetId": 15
      },
      "lineNbr": 201,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-07-19T10:00:45Z",
      "side": 1,
      "message": "Can\u0027t this be done in the constructor so we just go `return std::make_unique ...`",
      "revId": "086117f5b024560c31bd5addbcc960823161f5aa",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e6dd6e24_0cffe83f",
        "filename": "src/dawn/tests/white_box/VulkanImageWrappingTests_DmaBuf.cpp",
        "patchSetId": 15
      },
      "lineNbr": 201,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2023-07-20T06:18:13Z",
      "side": 1,
      "message": "(Combined with [1])\nThe bots results shows that for DmaBuf backend, swiftshader fails to createGbmDevice() which crash the bots. So I changed CreateGbmDevice() to return bool and move it to SupportsTestParams().",
      "parentUuid": "a9f76bd4_a34fab31",
      "revId": "086117f5b024560c31bd5addbcc960823161f5aa",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "48822c33_a7d574a9",
        "filename": "src/dawn/tests/white_box/VulkanImageWrappingTests_DmaBuf.cpp",
        "patchSetId": 15
      },
      "lineNbr": 201,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-07-21T08:33:15Z",
      "side": 1,
      "message": "Can\u0027t we do it in the constructor and in supportParams check if the mGbmDevice !\u003d nullptr?",
      "parentUuid": "e6dd6e24_0cffe83f",
      "revId": "086117f5b024560c31bd5addbcc960823161f5aa",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f513599b_0eddc032",
        "filename": "src/dawn/tests/white_box/VulkanImageWrappingTests_DmaBuf.cpp",
        "patchSetId": 15
      },
      "lineNbr": 201,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2023-07-21T08:55:08Z",
      "side": 1,
      "message": "Done. Better now :P",
      "parentUuid": "48822c33_a7d574a9",
      "revId": "086117f5b024560c31bd5addbcc960823161f5aa",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "49967e5f_b8c7cdd7",
        "filename": "src/dawn/tests/white_box/VulkanImageWrappingTests_OpaqueFD.cpp",
        "patchSetId": 15
      },
      "lineNbr": 283,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-07-19T10:00:45Z",
      "side": 1,
      "message": "Doesn\u0027t just return std::make_unique ... work?",
      "revId": "086117f5b024560c31bd5addbcc960823161f5aa",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5c4d1c56_72519be9",
        "filename": "src/dawn/tests/white_box/VulkanImageWrappingTests_OpaqueFD.cpp",
        "patchSetId": 15
      },
      "lineNbr": 283,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2023-07-20T06:18:13Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "49967e5f_b8c7cdd7",
      "revId": "086117f5b024560c31bd5addbcc960823161f5aa",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}