{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "bd390687_de669540",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2021-09-30T21:02:28Z",
      "side": 1,
      "message": "PTAL!",
      "revId": "18716dea3a691595a5ed657ef6669e60389d6531",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d69e8597_fb55b4a4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1001591
      },
      "writtenOn": "2021-09-30T23:02:55Z",
      "side": 1,
      "message": "LGTM, and kudos for doing such a thorough job across so many files!",
      "revId": "18716dea3a691595a5ed657ef6669e60389d6531",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "95d89cbd_665e03ff",
        "filename": "src/dawn_native/ProgrammablePassEncoder.cpp",
        "patchSetId": 4
      },
      "lineNbr": 148,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-10-01T08:21:41Z",
      "side": 1,
      "message": "nit: we have the same line twice.",
      "revId": "18716dea3a691595a5ed657ef6669e60389d6531",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9389948c_3fac69d3",
        "filename": "src/dawn_native/ProgrammablePassEncoder.cpp",
        "patchSetId": 4
      },
      "lineNbr": 148,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2021-10-01T19:00:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "95d89cbd_665e03ff",
      "revId": "18716dea3a691595a5ed657ef6669e60389d6531",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "16591a99_bd6b1649",
        "filename": "src/dawn_native/RenderEncoderBase.cpp",
        "patchSetId": 4
      },
      "lineNbr": 40,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-10-01T08:21:41Z",
      "side": 1,
      "message": "Shouldn\u0027t we have a value for this?\n\nBut also we keep piping these values that depend on the limits around. What about passing the limits to IndirectMetadata\u0027s constructor and just storing them there?",
      "range": {
        "startLine": 40,
        "startChar": 10,
        "endLine": 40,
        "endChar": 48
      },
      "revId": "18716dea3a691595a5ed657ef6669e60389d6531",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c2580001_29068f8d",
        "filename": "src/dawn_native/RenderEncoderBase.cpp",
        "patchSetId": 4
      },
      "lineNbr": 40,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2021-10-01T19:00:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "16591a99_bd6b1649",
      "range": {
        "startLine": 40,
        "startChar": 10,
        "endLine": 40,
        "endChar": 48
      },
      "revId": "18716dea3a691595a5ed657ef6669e60389d6531",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "17e53e8a_762a87b4",
        "filename": "src/dawn_native/ShaderModule.cpp",
        "patchSetId": 4
      },
      "lineNbr": 688,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-10-01T08:21:41Z",
      "side": 1,
      "message": "Maybe we should keep a comment about the overflow here.",
      "revId": "18716dea3a691595a5ed657ef6669e60389d6531",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "43c5af44_1d7059e7",
        "filename": "src/dawn_native/ShaderModule.cpp",
        "patchSetId": 4
      },
      "lineNbr": 688,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2021-10-01T19:00:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "17e53e8a_762a87b4",
      "revId": "18716dea3a691595a5ed657ef6669e60389d6531",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2795ca06_705a71e5",
        "filename": "src/tests/end2end/BindGroupTests.cpp",
        "patchSetId": 4
      },
      "lineNbr": 28,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-10-01T08:21:41Z",
      "side": 1,
      "message": "In this change and other similar changes in end2end tests. Are we trying to test the limits actually supported by the device? Otherwise I\u0027m not sure what\u0027s the value or making these non-constants.\n\nWe could move the constants to a test-only header if we wanted.",
      "revId": "18716dea3a691595a5ed657ef6669e60389d6531",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "007bdb71_e864cffc",
        "filename": "src/tests/end2end/BindGroupTests.cpp",
        "patchSetId": 4
      },
      "lineNbr": 28,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2021-10-01T16:22:19Z",
      "side": 1,
      "message": "Not trying to test limits supported by the device right now (because this currently always getting the defaults). Mostly trying to remove all of the constants and structure the validation and code around the limits.\n\nA test-only header would work too though.",
      "parentUuid": "2795ca06_705a71e5",
      "revId": "18716dea3a691595a5ed657ef6669e60389d6531",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d2d37f58_c96ad380",
        "filename": "src/tests/end2end/BindGroupTests.cpp",
        "patchSetId": 4
      },
      "lineNbr": 28,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2021-10-01T19:00:30Z",
      "side": 1,
      "message": "though soon we will want to test the actual device limits. Keeping as is for now.",
      "parentUuid": "007bdb71_e864cffc",
      "revId": "18716dea3a691595a5ed657ef6669e60389d6531",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}