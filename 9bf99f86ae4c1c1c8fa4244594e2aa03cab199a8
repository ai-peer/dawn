{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "87bc664c_4248d0c1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2023-02-07T14:44:47Z",
      "side": 1,
      "message": "Hm, I\u0027m not sure I see the benefit of removing this. Previously we always had a return type for a function, even if `void` can\u0027t be written, it makes the internal code clearer.",
      "revId": "9bf99f86ae4c1c1c8fa4244594e2aa03cab199a8",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b4620d49_7576f3d0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1002421
      },
      "writtenOn": "2023-02-07T16:29:38Z",
      "side": 1,
      "message": "All the places that constructed `ast::Void` AST nodes, continue to use `ty.void_()`. It returns `nullptr`.\n\nThe AST is supposed to map the the source as closely as possible. `void` is not something that is found in the source, so it doesn\u0027t make sense to have an AST node for it.\n\nWhen I\u0027m done, there will only a single `ast::Type` node with an `ast::IdentifierExpression`. There\u0027s nothing I can put in the `ast::IdentifierExpression` that makes sense for `void`.",
      "parentUuid": "87bc664c_4248d0c1",
      "revId": "9bf99f86ae4c1c1c8fa4244594e2aa03cab199a8",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9d8a3ac4_444ac6e6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2023-02-07T16:33:31Z",
      "side": 1,
      "message": "Sure, but at all the usage sites you  now need to make sure you check for a possible nullptr. So, while void isn\u0027t written in the language, it\u0027s implicit.\n\nWouldn\u0027t your IdentifierExpression just be an Identifier with `void` in it? The same as any other builtin type?",
      "parentUuid": "b4620d49_7576f3d0",
      "revId": "9bf99f86ae4c1c1c8fa4244594e2aa03cab199a8",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9cf3309d_e6cfa80c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2023-02-07T16:34:28Z",
      "side": 1,
      "message": "\u003e Wouldn\u0027t your IdentifierExpression just be an Identifier with `void` in it? The same as any other builtin type?\n\nNo, because `void` is not a WGSL type.",
      "parentUuid": "9d8a3ac4_444ac6e6",
      "revId": "9bf99f86ae4c1c1c8fa4244594e2aa03cab199a8",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "97037c7e_2ebda363",
        "filename": "src/tint/ast/function_test.cc",
        "patchSetId": 2
      },
      "lineNbr": 37,
      "author": {
        "id": 1002241
      },
      "writtenOn": "2023-02-07T14:39:28Z",
      "side": 1,
      "message": "Nit: Probably also good to have a test that uses a non-null return type too.",
      "revId": "9bf99f86ae4c1c1c8fa4244594e2aa03cab199a8",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}