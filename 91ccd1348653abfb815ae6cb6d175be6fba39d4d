{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "2f593b16_6e4edc85",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2023-06-06T19:43:35Z",
      "side": 1,
      "message": "lgtm overall but the need to maintain the InboundBranches on the Initializer seems, off? Like, if the loop is always an inbound branch it should get addded in the builder I think.\n\nWe should decide if we want to always have it go into the Initializer and then just NextIteration to the Body in all cases, tehn your check in the spirv just becomes if the Initializer()-\u003eLength() \u003e 1 or something similar.",
      "revId": "91ccd1348653abfb815ae6cb6d175be6fba39d4d",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9c65336d_fe4e04b8",
        "filename": "src/tint/ir/from_program.cc",
        "patchSetId": 1
      },
      "lineNbr": 650,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2023-06-06T19:43:35Z",
      "side": 1,
      "message": "There is no branch here? How does control flow move from the initializer to the body block?\n\nDoes this need to push a NextIteration branch?",
      "revId": "91ccd1348653abfb815ae6cb6d175be6fba39d4d",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "88bc24ce_4a36b5a3",
        "filename": "src/tint/ir/from_program.cc",
        "patchSetId": 1
      },
      "lineNbr": 650,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2023-06-06T19:47:25Z",
      "side": 1,
      "message": "I misread the Body as Initializer. So, this seems fine.",
      "parentUuid": "9c65336d_fe4e04b8",
      "revId": "91ccd1348653abfb815ae6cb6d175be6fba39d4d",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e7e0b33d_7a9fbd44",
        "filename": "src/tint/ir/from_program.cc",
        "patchSetId": 1
      },
      "lineNbr": 697,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2023-06-06T19:43:35Z",
      "side": 1,
      "message": "ditto need a branch",
      "revId": "91ccd1348653abfb815ae6cb6d175be6fba39d4d",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fe89fde9_83cb8b32",
        "filename": "src/tint/ir/from_program.cc",
        "patchSetId": 1
      },
      "lineNbr": 697,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2023-06-06T19:47:25Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "e7e0b33d_7a9fbd44",
      "revId": "91ccd1348653abfb815ae6cb6d175be6fba39d4d",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2b3c74b8_12add4ed",
        "filename": "src/tint/ir/from_program.cc",
        "patchSetId": 1
      },
      "lineNbr": 757,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2023-06-06T19:43:35Z",
      "side": 1,
      "message": "need a branch",
      "revId": "91ccd1348653abfb815ae6cb6d175be6fba39d4d",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "83111703_483be37f",
        "filename": "src/tint/ir/from_program.cc",
        "patchSetId": 1
      },
      "lineNbr": 757,
      "author": {
        "id": 1002421
      },
      "writtenOn": "2023-06-06T21:50:58Z",
      "side": 1,
      "message": "The initializer is optional. If omitted, it\u0027s not used.",
      "parentUuid": "2b3c74b8_12add4ed",
      "revId": "91ccd1348653abfb815ae6cb6d175be6fba39d4d",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2f9b0524_85a3baed",
        "filename": "src/tint/ir/loop.h",
        "patchSetId": 1
      },
      "lineNbr": 32,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2023-06-06T19:43:35Z",
      "side": 1,
      "message": "Make non-optional and always NextIteration?",
      "revId": "91ccd1348653abfb815ae6cb6d175be6fba39d4d",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1b82a7db_e33fc42c",
        "filename": "src/tint/ir/loop.h",
        "patchSetId": 1
      },
      "lineNbr": 32,
      "author": {
        "id": 1002421
      },
      "writtenOn": "2023-06-06T21:50:58Z",
      "side": 1,
      "message": "We have conditional blocks for if-false, right?\nI\u0027d prefer to omit the blocks if they\u0027re not used, if just to keep the IR disassembly noise down.\n\nIf you feel that they should always be emitted, can we please followup with a change to make all blocks non-optional (including `if` ?)",
      "parentUuid": "2f9b0524_85a3baed",
      "revId": "91ccd1348653abfb815ae6cb6d175be6fba39d4d",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5cdbc0e4_a7c611c8",
        "filename": "src/tint/writer/spirv/ir/generator_impl_ir.cc",
        "patchSetId": 1
      },
      "lineNbr": 715,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2023-06-06T19:43:35Z",
      "side": 1,
      "message": "maybe add a `loop-\u003eHasInitializer()` ?",
      "revId": "91ccd1348653abfb815ae6cb6d175be6fba39d4d",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7a0d639b_79efd3a6",
        "filename": "src/tint/writer/spirv/ir/generator_impl_ir.cc",
        "patchSetId": 1
      },
      "lineNbr": 715,
      "author": {
        "id": 1002421
      },
      "writtenOn": "2023-06-06T21:50:58Z",
      "side": 1,
      "message": "Good idea. Done",
      "parentUuid": "5cdbc0e4_a7c611c8",
      "revId": "91ccd1348653abfb815ae6cb6d175be6fba39d4d",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}