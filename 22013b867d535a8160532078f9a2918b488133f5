{
  "comments": [
    {
      "key": {
        "uuid": "c68a6a72_6dc37cbe",
        "filename": "src/tests/unittests/wire/WireMemoryTransferServiceTests.cpp",
        "patchSetId": 2
      },
      "lineNbr": 634,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-04-07T16:33:49Z",
      "side": 1,
      "message": "Shouldn\u0027t that be FlushClient() ?\n\nalso nit: for a little more clarity on what causes what, maybe put the expectations and the thing that causes it right next to each other.\n\nEXPECT_CALL(clientMemoryTransferService, OnReadHandleDestroy(clientHandle)).Times(1);\nwgpuBufferDestroy(buffer);\n\nEXPECT_CALL(serverMemoryTransferService, OnReadHandleDestroy(serverHandle)).Times(1);\nEXPECT_CALL(api, BufferDestroy(apiBuffer)).Times(1);\nFlushClient();",
      "range": {
        "startLine": 629,
        "startChar": 4,
        "endLine": 634,
        "endChar": 18
      },
      "revId": "22013b867d535a8160532078f9a2918b488133f5",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "379200bc_d2916860",
        "filename": "src/tests/unittests/wire/WireMemoryTransferServiceTests.cpp",
        "patchSetId": 2
      },
      "lineNbr": 634,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-04-08T09:56:35Z",
      "side": 1,
      "message": "Good suggestion, done.",
      "parentUuid": "c68a6a72_6dc37cbe",
      "range": {
        "startLine": 629,
        "startChar": 4,
        "endLine": 634,
        "endChar": 18
      },
      "revId": "22013b867d535a8160532078f9a2918b488133f5",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dc7287a1_6f720aed",
        "filename": "src/tests/unittests/wire/WireMemoryTransferServiceTests.cpp",
        "patchSetId": 2
      },
      "lineNbr": 640,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-04-07T16:33:49Z",
      "side": 1,
      "message": "Only looking at this code, it\u0027s unclear why the unmap is part of the test.\nHere, and in the other tests, could you add a comment that normally we would see the writeHandle serialized/deserialized on the client/server, but that doesn\u0027t happen since the mapping is discarded?",
      "range": {
        "startLine": 636,
        "startChar": 4,
        "endLine": 640,
        "endChar": 0
      },
      "revId": "22013b867d535a8160532078f9a2918b488133f5",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c95d73c3_1db8268e",
        "filename": "src/tests/unittests/wire/WireMemoryTransferServiceTests.cpp",
        "patchSetId": 2
      },
      "lineNbr": 640,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2020-04-07T19:42:39Z",
      "side": 1,
      "message": "Can you EXPECT_CALL().Times(0) as documentation (even if it doesn\u0027t affect the actual test result)?",
      "parentUuid": "dc7287a1_6f720aed",
      "range": {
        "startLine": 636,
        "startChar": 4,
        "endLine": 640,
        "endChar": 0
      },
      "revId": "22013b867d535a8160532078f9a2918b488133f5",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1757f9e9_75d73114",
        "filename": "src/tests/unittests/wire/WireMemoryTransferServiceTests.cpp",
        "patchSetId": 2
      },
      "lineNbr": 640,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-04-08T09:56:35Z",
      "side": 1,
      "message": "I don\u0027t think that\u0027s needed because the mock are StrictMocks already. Added a comment that unmap only results in unmap.",
      "parentUuid": "c95d73c3_1db8268e",
      "range": {
        "startLine": 636,
        "startChar": 4,
        "endLine": 640,
        "endChar": 0
      },
      "revId": "22013b867d535a8160532078f9a2918b488133f5",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    }
  ]
}