{
  "comments": [
    {
      "key": {
        "uuid": "897c35e6_e79c7f27",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 9
      },
      "lineNbr": 0,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-07-07T19:26:30Z",
      "side": 1,
      "message": "LGTM",
      "revId": "2441e942bfc39c285060d12fbb5efe982fcd7b89",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6e6baef3_178c0538",
        "filename": "src/dawn_native/Queue.cpp",
        "patchSetId": 9
      },
      "lineNbr": 154,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-07-08T10:09:25Z",
      "side": 1,
      "message": "u-nit: dataSize, and propagate the argument name to other functions for consistency.",
      "range": {
        "startLine": 154,
        "startChar": 55,
        "endLine": 154,
        "endChar": 59
      },
      "revId": "2441e942bfc39c285060d12fbb5efe982fcd7b89",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "96f1f543_1dc41097",
        "filename": "src/dawn_native/Queue.cpp",
        "patchSetId": 9
      },
      "lineNbr": 154,
      "author": {
        "id": 1000961
      },
      "writtenOn": "2020-07-08T10:59:49Z",
      "side": 1,
      "message": "I don\u0027t quite get that comment. If you mean that data is not passed to ValidateWriteTexture, it\u0027s the same as for ValidateWriteBuffer.",
      "parentUuid": "6e6baef3_178c0538",
      "range": {
        "startLine": 154,
        "startChar": 55,
        "endLine": 154,
        "endChar": 59
      },
      "revId": "2441e942bfc39c285060d12fbb5efe982fcd7b89",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "340c561f_247b007c",
        "filename": "src/dawn_wire/server/ServerQueue.cpp",
        "patchSetId": 9
      },
      "lineNbr": 64,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-07-08T10:09:25Z",
      "side": 1,
      "message": "there is no buffer",
      "range": {
        "startLine": 64,
        "startChar": 48,
        "endLine": 64,
        "endChar": 61
      },
      "revId": "2441e942bfc39c285060d12fbb5efe982fcd7b89",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d2079775_75357b81",
        "filename": "src/dawn_wire/server/ServerQueue.cpp",
        "patchSetId": 9
      },
      "lineNbr": 64,
      "author": {
        "id": 1000961
      },
      "writtenOn": "2020-07-08T10:59:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "340c561f_247b007c",
      "range": {
        "startLine": 64,
        "startChar": 48,
        "endLine": 64,
        "endChar": 61
      },
      "revId": "2441e942bfc39c285060d12fbb5efe982fcd7b89",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7050524a_24b0db66",
        "filename": "src/tests/unittests/validation/QueueSubmitValidationTests.cpp",
        "patchSetId": 9
      },
      "lineNbr": 18,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-07-07T19:26:30Z",
      "side": 1,
      "message": "nit: common comes before utils, alphabetically\n\nalthough it looks like this change isn\u0027t needed anymore",
      "range": {
        "startLine": 18,
        "startChar": 0,
        "endLine": 18,
        "endChar": 24
      },
      "revId": "2441e942bfc39c285060d12fbb5efe982fcd7b89",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7b42a77e_e5519ac4",
        "filename": "src/tests/unittests/validation/QueueSubmitValidationTests.cpp",
        "patchSetId": 9
      },
      "lineNbr": 18,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-07-08T10:09:25Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "7050524a_24b0db66",
      "range": {
        "startLine": 18,
        "startChar": 0,
        "endLine": 18,
        "endChar": 24
      },
      "revId": "2441e942bfc39c285060d12fbb5efe982fcd7b89",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "13f38b20_d3334281",
        "filename": "src/tests/unittests/validation/QueueSubmitValidationTests.cpp",
        "patchSetId": 9
      },
      "lineNbr": 18,
      "author": {
        "id": 1000961
      },
      "writtenOn": "2020-07-08T10:59:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7050524a_24b0db66",
      "range": {
        "startLine": 18,
        "startChar": 0,
        "endLine": 18,
        "endChar": 24
      },
      "revId": "2441e942bfc39c285060d12fbb5efe982fcd7b89",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f79195c6_cae6cabc",
        "filename": "src/tests/unittests/validation/QueueWriteTextureValidationTests.cpp",
        "patchSetId": 9
      },
      "lineNbr": 1,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-07-07T19:26:30Z",
      "side": 1,
      "message": "nit: 2020",
      "range": {
        "startLine": 1,
        "startChar": 13,
        "endLine": 1,
        "endChar": 17
      },
      "revId": "2441e942bfc39c285060d12fbb5efe982fcd7b89",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9c6a10fe_49754511",
        "filename": "src/tests/unittests/validation/QueueWriteTextureValidationTests.cpp",
        "patchSetId": 9
      },
      "lineNbr": 1,
      "author": {
        "id": 1000961
      },
      "writtenOn": "2020-07-08T10:59:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f79195c6_cae6cabc",
      "range": {
        "startLine": 1,
        "startChar": 13,
        "endLine": 1,
        "endChar": 17
      },
      "revId": "2441e942bfc39c285060d12fbb5efe982fcd7b89",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a7b91b1_a215acf6",
        "filename": "src/tests/unittests/validation/QueueWriteTextureValidationTests.cpp",
        "patchSetId": 9
      },
      "lineNbr": 17,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-07-08T10:09:25Z",
      "side": 1,
      "message": "nit: sort alphabetically. `git cl format` should do that for you.",
      "revId": "2441e942bfc39c285060d12fbb5efe982fcd7b89",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "398073fd_186cb7a8",
        "filename": "src/tests/unittests/validation/QueueWriteTextureValidationTests.cpp",
        "patchSetId": 9
      },
      "lineNbr": 17,
      "author": {
        "id": 1000961
      },
      "writtenOn": "2020-07-08T10:59:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1a7b91b1_a215acf6",
      "revId": "2441e942bfc39c285060d12fbb5efe982fcd7b89",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2bdb3bbe_5b321b09",
        "filename": "src/tests/unittests/validation/QueueWriteTextureValidationTests.cpp",
        "patchSetId": 9
      },
      "lineNbr": 48,
      "author": {
        "id": 1000961
      },
      "writtenOn": "2020-07-07T18:53:01Z",
      "side": 1,
      "message": "I\u0027m using a different function than in CopyB2T tests.",
      "revId": "2441e942bfc39c285060d12fbb5efe982fcd7b89",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "910d6439_9cee2f73",
        "filename": "src/tests/unittests/validation/QueueWriteTextureValidationTests.cpp",
        "patchSetId": 9
      },
      "lineNbr": 48,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-07-08T10:09:25Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "2bdb3bbe_5b321b09",
      "revId": "2441e942bfc39c285060d12fbb5efe982fcd7b89",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ae78744d_87c510c9",
        "filename": "src/tests/unittests/validation/QueueWriteTextureValidationTests.cpp",
        "patchSetId": 9
      },
      "lineNbr": 89,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-07-07T19:26:30Z",
      "side": 1,
      "message": "here and in the rest of the tests, the data you `malloc` is never freed! Use `std::vector\u003cuint8_t\u003e(dataSize);` instead so the lifetime is automatically managed.\n\nHowever, it seems like we don\u0027t actually do anything with the |data| in the test. You could probably remove it from all the tests, and just create it inside TestWriteTexture instead of passing it in.",
      "range": {
        "startLine": 89,
        "startChar": 23,
        "endLine": 89,
        "endChar": 29
      },
      "revId": "2441e942bfc39c285060d12fbb5efe982fcd7b89",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cec5280c_9a2c556d",
        "filename": "src/tests/unittests/validation/QueueWriteTextureValidationTests.cpp",
        "patchSetId": 9
      },
      "lineNbr": 89,
      "author": {
        "id": 1000961
      },
      "writtenOn": "2020-07-08T10:59:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ae78744d_87c510c9",
      "range": {
        "startLine": 89,
        "startChar": 23,
        "endLine": 89,
        "endChar": 29
      },
      "revId": "2441e942bfc39c285060d12fbb5efe982fcd7b89",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b40278c2_171d2232",
        "filename": "src/tests/unittests/validation/QueueWriteTextureValidationTests.cpp",
        "patchSetId": 9
      },
      "lineNbr": 168,
      "author": {
        "id": 1000961
      },
      "writtenOn": "2020-07-07T18:53:01Z",
      "side": 1,
      "message": "This is changed",
      "revId": "2441e942bfc39c285060d12fbb5efe982fcd7b89",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "49dcdda4_1b079311",
        "filename": "src/tests/unittests/validation/QueueWriteTextureValidationTests.cpp",
        "patchSetId": 9
      },
      "lineNbr": 168,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-07-08T10:09:25Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "b40278c2_171d2232",
      "revId": "2441e942bfc39c285060d12fbb5efe982fcd7b89",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7662bc05_35b257e6",
        "filename": "src/tests/unittests/validation/QueueWriteTextureValidationTests.cpp",
        "patchSetId": 9
      },
      "lineNbr": 214,
      "author": {
        "id": 1000961
      },
      "writtenOn": "2020-07-07T18:53:01Z",
      "side": 1,
      "message": "This is changed.",
      "revId": "2441e942bfc39c285060d12fbb5efe982fcd7b89",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f8c4bb4a_19bf1fd8",
        "filename": "src/tests/unittests/validation/QueueWriteTextureValidationTests.cpp",
        "patchSetId": 9
      },
      "lineNbr": 214,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-07-08T10:09:25Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "7662bc05_35b257e6",
      "revId": "2441e942bfc39c285060d12fbb5efe982fcd7b89",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4728a013_20118a4d",
        "filename": "src/tests/unittests/validation/QueueWriteTextureValidationTests.cpp",
        "patchSetId": 9
      },
      "lineNbr": 224,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-07-08T10:09:25Z",
      "side": 1,
      "message": "nit: comment before the test",
      "revId": "2441e942bfc39c285060d12fbb5efe982fcd7b89",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c40f1fd8_ab0d04c6",
        "filename": "src/tests/unittests/validation/QueueWriteTextureValidationTests.cpp",
        "patchSetId": 9
      },
      "lineNbr": 224,
      "author": {
        "id": 1000961
      },
      "writtenOn": "2020-07-08T10:59:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4728a013_20118a4d",
      "revId": "2441e942bfc39c285060d12fbb5efe982fcd7b89",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5afe8d31_7fa79615",
        "filename": "src/tests/unittests/validation/QueueWriteTextureValidationTests.cpp",
        "patchSetId": 9
      },
      "lineNbr": 235,
      "author": {
        "id": 1000961
      },
      "writtenOn": "2020-07-07T18:53:01Z",
      "side": 1,
      "message": "This is changed.",
      "revId": "2441e942bfc39c285060d12fbb5efe982fcd7b89",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fa5aa36e_da45aed2",
        "filename": "src/tests/unittests/validation/QueueWriteTextureValidationTests.cpp",
        "patchSetId": 9
      },
      "lineNbr": 235,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-07-08T10:09:25Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "5afe8d31_7fa79615",
      "revId": "2441e942bfc39c285060d12fbb5efe982fcd7b89",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8c014c8b_d2a4e24a",
        "filename": "src/tests/unittests/validation/QueueWriteTextureValidationTests.cpp",
        "patchSetId": 9
      },
      "lineNbr": 243,
      "author": {
        "id": 1000961
      },
      "writtenOn": "2020-07-07T18:53:01Z",
      "side": 1,
      "message": "This is a new test.",
      "revId": "2441e942bfc39c285060d12fbb5efe982fcd7b89",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9c329148_aaab687f",
        "filename": "src/tests/unittests/validation/QueueWriteTextureValidationTests.cpp",
        "patchSetId": 9
      },
      "lineNbr": 243,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-07-08T10:09:25Z",
      "side": 1,
      "message": "nit: BytesPerRowNotDivisbleBy256Allowed\n\nbut also isn\u0027t this test basically a duplicate of IncorrectBytesPerRow? We should probably merge them and only test 0, 11 and 12, while noting that the 256 limitation isn\u0027t present.",
      "parentUuid": "8c014c8b_d2a4e24a",
      "revId": "2441e942bfc39c285060d12fbb5efe982fcd7b89",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f9e376bd_680ba44a",
        "filename": "src/tests/unittests/validation/QueueWriteTextureValidationTests.cpp",
        "patchSetId": 9
      },
      "lineNbr": 243,
      "author": {
        "id": 1000961
      },
      "writtenOn": "2020-07-08T10:59:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9c329148_aaab687f",
      "revId": "2441e942bfc39c285060d12fbb5efe982fcd7b89",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d6b40cff_792817ce",
        "filename": "src/tests/unittests/validation/QueueWriteTextureValidationTests.cpp",
        "patchSetId": 9
      },
      "lineNbr": 258,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-07-07T19:26:30Z",
      "side": 1,
      "message": "nit: missing a comment that 11 is below the minimum of 12",
      "range": {
        "startLine": 258,
        "startChar": 4,
        "endLine": 258,
        "endChar": 23
      },
      "revId": "2441e942bfc39c285060d12fbb5efe982fcd7b89",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7d160e32_a6f8dfb8",
        "filename": "src/tests/unittests/validation/QueueWriteTextureValidationTests.cpp",
        "patchSetId": 9
      },
      "lineNbr": 258,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-07-08T10:09:25Z",
      "side": 1,
      "message": "And can we have a check for exactly 12? In general it is good to test exactly at the limit, and just past the limit (so 11 and 12 here)",
      "parentUuid": "d6b40cff_792817ce",
      "range": {
        "startLine": 258,
        "startChar": 4,
        "endLine": 258,
        "endChar": 23
      },
      "revId": "2441e942bfc39c285060d12fbb5efe982fcd7b89",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eef689fc_08ac730a",
        "filename": "src/tests/unittests/validation/QueueWriteTextureValidationTests.cpp",
        "patchSetId": 9
      },
      "lineNbr": 258,
      "author": {
        "id": 1000961
      },
      "writtenOn": "2020-07-08T10:59:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d6b40cff_792817ce",
      "range": {
        "startLine": 258,
        "startChar": 4,
        "endLine": 258,
        "endChar": 23
      },
      "revId": "2441e942bfc39c285060d12fbb5efe982fcd7b89",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ea3eaa4e_ec065b31",
        "filename": "src/tests/unittests/validation/QueueWriteTextureValidationTests.cpp",
        "patchSetId": 9
      },
      "lineNbr": 262,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-07-07T19:26:30Z",
      "side": 1,
      "message": "nit: Comment before the test name, describing what it tests",
      "range": {
        "startLine": 262,
        "startChar": 0,
        "endLine": 262,
        "endChar": 6
      },
      "revId": "2441e942bfc39c285060d12fbb5efe982fcd7b89",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f3bc32d2_5052451e",
        "filename": "src/tests/unittests/validation/QueueWriteTextureValidationTests.cpp",
        "patchSetId": 9
      },
      "lineNbr": 262,
      "author": {
        "id": 1000961
      },
      "writtenOn": "2020-07-08T10:59:49Z",
      "side": 1,
      "message": "Done, this should be changed in CopyB2T tests too.",
      "parentUuid": "ea3eaa4e_ec065b31",
      "range": {
        "startLine": 262,
        "startChar": 0,
        "endLine": 262,
        "endChar": 6
      },
      "revId": "2441e942bfc39c285060d12fbb5efe982fcd7b89",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2e1dd12a_cc9197b4",
        "filename": "src/tests/unittests/validation/QueueWriteTextureValidationTests.cpp",
        "patchSetId": 9
      },
      "lineNbr": 273,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-07-07T19:26:30Z",
      "side": 1,
      "message": "nit: I think this should be 4",
      "range": {
        "startLine": 273,
        "startChar": 45,
        "endLine": 273,
        "endChar": 46
      },
      "revId": "2441e942bfc39c285060d12fbb5efe982fcd7b89",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ab33c85c_9e8ec513",
        "filename": "src/tests/unittests/validation/QueueWriteTextureValidationTests.cpp",
        "patchSetId": 9
      },
      "lineNbr": 273,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-07-08T10:09:25Z",
      "side": 1,
      "message": "And the same in the CopyCommand tests.",
      "parentUuid": "2e1dd12a_cc9197b4",
      "range": {
        "startLine": 273,
        "startChar": 45,
        "endLine": 273,
        "endChar": 46
      },
      "revId": "2441e942bfc39c285060d12fbb5efe982fcd7b89",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "68e1de36_e3aa8e2c",
        "filename": "src/tests/unittests/validation/QueueWriteTextureValidationTests.cpp",
        "patchSetId": 9
      },
      "lineNbr": 273,
      "author": {
        "id": 1000961
      },
      "writtenOn": "2020-07-08T10:59:49Z",
      "side": 1,
      "message": "Yes, this should be changed in CopyB2T tests too.",
      "parentUuid": "2e1dd12a_cc9197b4",
      "range": {
        "startLine": 273,
        "startChar": 45,
        "endLine": 273,
        "endChar": 46
      },
      "revId": "2441e942bfc39c285060d12fbb5efe982fcd7b89",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7cc145c1_ba94ac79",
        "filename": "src/tests/unittests/validation/QueueWriteTextureValidationTests.cpp",
        "patchSetId": 9
      },
      "lineNbr": 276,
      "author": {
        "id": 1000961
      },
      "writtenOn": "2020-07-07T18:53:01Z",
      "side": 1,
      "message": "This is changed.",
      "revId": "2441e942bfc39c285060d12fbb5efe982fcd7b89",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0ca3ef15_59f03593",
        "filename": "src/tests/unittests/validation/QueueWriteTextureValidationTests.cpp",
        "patchSetId": 9
      },
      "lineNbr": 276,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-07-08T10:09:25Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "7cc145c1_ba94ac79",
      "revId": "2441e942bfc39c285060d12fbb5efe982fcd7b89",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "51c165ef_8acb2acd",
        "filename": "src/tests/unittests/validation/QueueWriteTextureValidationTests.cpp",
        "patchSetId": 9
      },
      "lineNbr": 300,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-07-08T10:09:25Z",
      "side": 1,
      "message": "nit: only one is needed.",
      "revId": "2441e942bfc39c285060d12fbb5efe982fcd7b89",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "55e699d7_70abd779",
        "filename": "src/tests/unittests/validation/QueueWriteTextureValidationTests.cpp",
        "patchSetId": 9
      },
      "lineNbr": 300,
      "author": {
        "id": 1000961
      },
      "writtenOn": "2020-07-08T10:59:49Z",
      "side": 1,
      "message": "Done. CopyB2T tests include all of them though.",
      "parentUuid": "51c165ef_8acb2acd",
      "revId": "2441e942bfc39c285060d12fbb5efe982fcd7b89",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ac8d300d_d293e0eb",
        "filename": "src/tests/unittests/validation/QueueWriteTextureValidationTests.cpp",
        "patchSetId": 9
      },
      "lineNbr": 308,
      "author": {
        "id": 1000961
      },
      "writtenOn": "2020-07-07T18:53:01Z",
      "side": 1,
      "message": "This is changed.",
      "revId": "2441e942bfc39c285060d12fbb5efe982fcd7b89",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eeb449b5_c11a1f00",
        "filename": "src/tests/unittests/validation/QueueWriteTextureValidationTests.cpp",
        "patchSetId": 9
      },
      "lineNbr": 308,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-07-07T19:26:30Z",
      "side": 1,
      "message": "I don\u0027t think this should be allowed. for Buffer to Texture copies, we validate that the texture is not multisampled. Right now, you can\u0027t upload multisampled data in WebGPU\n\nhttps://source.chromium.org/chromium/chromium/src/+/master:third_party/dawn/src/dawn_native/CommandEncoder.cpp;l\u003d776",
      "parentUuid": "ac8d300d_d293e0eb",
      "revId": "2441e942bfc39c285060d12fbb5efe982fcd7b89",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f30cd193_b942cd9b",
        "filename": "src/tests/unittests/validation/QueueWriteTextureValidationTests.cpp",
        "patchSetId": 9
      },
      "lineNbr": 308,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-07-08T10:09:25Z",
      "side": 1,
      "message": "If it is allowed by the spec, then it is a spec bug.",
      "parentUuid": "eeb449b5_c11a1f00",
      "revId": "2441e942bfc39c285060d12fbb5efe982fcd7b89",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "efecccbb_6ad687b1",
        "filename": "src/tests/unittests/validation/QueueWriteTextureValidationTests.cpp",
        "patchSetId": 9
      },
      "lineNbr": 308,
      "author": {
        "id": 1000961
      },
      "writtenOn": "2020-07-08T10:59:49Z",
      "side": 1,
      "message": "I have changed this and the actual validation for that in Queue.cpp, but it needs to be added in WebGPU spec.",
      "parentUuid": "eeb449b5_c11a1f00",
      "revId": "2441e942bfc39c285060d12fbb5efe982fcd7b89",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "495a6a08_12405e6e",
        "filename": "src/tests/unittests/validation/QueueWriteTextureValidationTests.cpp",
        "patchSetId": 9
      },
      "lineNbr": 489,
      "author": {
        "id": 1000961
      },
      "writtenOn": "2020-07-07T18:53:01Z",
      "side": 1,
      "message": "This is changed.",
      "revId": "2441e942bfc39c285060d12fbb5efe982fcd7b89",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fb5e7990_e0851ca9",
        "filename": "src/tests/unittests/validation/QueueWriteTextureValidationTests.cpp",
        "patchSetId": 9
      },
      "lineNbr": 489,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-07-08T10:09:25Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "495a6a08_12405e6e",
      "revId": "2441e942bfc39c285060d12fbb5efe982fcd7b89",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "450443cc_7c08d345",
        "filename": "src/tests/unittests/validation/QueueWriteTextureValidationTests.cpp",
        "patchSetId": 9
      },
      "lineNbr": 501,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-07-08T10:09:25Z",
      "side": 1,
      "message": "This test is probably not needed.",
      "revId": "2441e942bfc39c285060d12fbb5efe982fcd7b89",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "23921944_31735a49",
        "filename": "src/tests/unittests/validation/QueueWriteTextureValidationTests.cpp",
        "patchSetId": 9
      },
      "lineNbr": 501,
      "author": {
        "id": 1000961
      },
      "writtenOn": "2020-07-08T10:59:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "450443cc_7c08d345",
      "revId": "2441e942bfc39c285060d12fbb5efe982fcd7b89",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4ad1a6eb_7cc3df5c",
        "filename": "src/tests/unittests/validation/QueueWriteTextureValidationTests.cpp",
        "patchSetId": 9
      },
      "lineNbr": 514,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-07-08T10:09:25Z",
      "side": 1,
      "message": "The test actually tests the contrary, that bytesPerRow doesn\u0027t need to be a multiple of the compressed texture block width.",
      "revId": "2441e942bfc39c285060d12fbb5efe982fcd7b89",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f0f2aba4_3c7ff9d7",
        "filename": "src/tests/unittests/validation/QueueWriteTextureValidationTests.cpp",
        "patchSetId": 9
      },
      "lineNbr": 514,
      "author": {
        "id": 1000961
      },
      "writtenOn": "2020-07-08T10:59:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4ad1a6eb_7cc3df5c",
      "revId": "2441e942bfc39c285060d12fbb5efe982fcd7b89",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "59a6d05e_8a5b690d",
        "filename": "src/tests/unittests/validation/QueueWriteTextureValidationTests.cpp",
        "patchSetId": 9
      },
      "lineNbr": 515,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-07-08T10:09:25Z",
      "side": 1,
      "message": "nit: the second sentence isn\u0027t strictly necessary and could be removed. In general comments about how the code came to be can be left to commit messages or CL review comments.",
      "revId": "2441e942bfc39c285060d12fbb5efe982fcd7b89",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f683bf95_e40b093c",
        "filename": "src/tests/unittests/validation/QueueWriteTextureValidationTests.cpp",
        "patchSetId": 9
      },
      "lineNbr": 515,
      "author": {
        "id": 1000961
      },
      "writtenOn": "2020-07-08T10:59:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "59a6d05e_8a5b690d",
      "revId": "2441e942bfc39c285060d12fbb5efe982fcd7b89",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cbc8dde1_260ba448",
        "filename": "src/tests/unittests/validation/QueueWriteTextureValidationTests.cpp",
        "patchSetId": 9
      },
      "lineNbr": 517,
      "author": {
        "id": 1000961
      },
      "writtenOn": "2020-07-07T18:53:01Z",
      "side": 1,
      "message": "This is a new test.",
      "revId": "2441e942bfc39c285060d12fbb5efe982fcd7b89",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9196fee6_c5120d63",
        "filename": "src/tests/unittests/validation/QueueWriteTextureValidationTests.cpp",
        "patchSetId": 9
      },
      "lineNbr": 517,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-07-08T10:09:25Z",
      "side": 1,
      "message": "nit: BytesPerRow",
      "range": {
        "startLine": 517,
        "startChar": 50,
        "endLine": 517,
        "endChar": 60
      },
      "revId": "2441e942bfc39c285060d12fbb5efe982fcd7b89",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "258132f4_a98e896e",
        "filename": "src/tests/unittests/validation/QueueWriteTextureValidationTests.cpp",
        "patchSetId": 9
      },
      "lineNbr": 517,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-07-08T10:09:25Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "cbc8dde1_260ba448",
      "revId": "2441e942bfc39c285060d12fbb5efe982fcd7b89",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "705c836a_e9a740b8",
        "filename": "src/tests/unittests/validation/QueueWriteTextureValidationTests.cpp",
        "patchSetId": 9
      },
      "lineNbr": 517,
      "author": {
        "id": 1000961
      },
      "writtenOn": "2020-07-08T10:59:49Z",
      "side": 1,
      "message": "I have merged this with the previous test.\n\nThe names ImageHeight and ImageWidth are used in CopyB2T tests, I\u0027ve changed them to rowsPerImage and bytesPerRow now.",
      "parentUuid": "9196fee6_c5120d63",
      "range": {
        "startLine": 517,
        "startChar": 50,
        "endLine": 517,
        "endChar": 60
      },
      "revId": "2441e942bfc39c285060d12fbb5efe982fcd7b89",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "87a0910d_18a42052",
        "filename": "src/tests/unittests/validation/QueueWriteTextureValidationTests.cpp",
        "patchSetId": 9
      },
      "lineNbr": 525,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-07-08T10:09:25Z",
      "side": 1,
      "message": "That\u0027s bytesPerRow",
      "range": {
        "startLine": 525,
        "startChar": 31,
        "endLine": 525,
        "endChar": 47
      },
      "revId": "2441e942bfc39c285060d12fbb5efe982fcd7b89",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "06382486_be95af24",
        "filename": "src/tests/unittests/validation/QueueWriteTextureValidationTests.cpp",
        "patchSetId": 9
      },
      "lineNbr": 525,
      "author": {
        "id": 1000961
      },
      "writtenOn": "2020-07-08T10:59:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "87a0910d_18a42052",
      "range": {
        "startLine": 525,
        "startChar": 31,
        "endLine": 525,
        "endChar": 47
      },
      "revId": "2441e942bfc39c285060d12fbb5efe982fcd7b89",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "41ecd3fd_ada4b39e",
        "filename": "src/tests/unittests/validation/QueueWriteTextureValidationTests.cpp",
        "patchSetId": 9
      },
      "lineNbr": 541,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-07-08T10:09:25Z",
      "side": 1,
      "message": "This is now called rowsPerImage",
      "range": {
        "startLine": 541,
        "startChar": 50,
        "endLine": 541,
        "endChar": 61
      },
      "revId": "2441e942bfc39c285060d12fbb5efe982fcd7b89",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c8e6bf90_7abc6463",
        "filename": "src/tests/unittests/validation/QueueWriteTextureValidationTests.cpp",
        "patchSetId": 9
      },
      "lineNbr": 541,
      "author": {
        "id": 1000961
      },
      "writtenOn": "2020-07-08T10:59:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "41ecd3fd_ada4b39e",
      "range": {
        "startLine": 541,
        "startChar": 50,
        "endLine": 541,
        "endChar": 61
      },
      "revId": "2441e942bfc39c285060d12fbb5efe982fcd7b89",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9295f257_9b575417",
        "filename": "src/tests/unittests/validation/QueueWriteTextureValidationTests.cpp",
        "patchSetId": 9
      },
      "lineNbr": 549,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-07-08T10:09:25Z",
      "side": 1,
      "message": "We should test 8, 4(the exact limit) and 2(the largest invalid alignment)",
      "revId": "2441e942bfc39c285060d12fbb5efe982fcd7b89",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3f940019_eaa60179",
        "filename": "src/tests/unittests/validation/QueueWriteTextureValidationTests.cpp",
        "patchSetId": 9
      },
      "lineNbr": 549,
      "author": {
        "id": 1000961
      },
      "writtenOn": "2020-07-08T10:59:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9295f257_9b575417",
      "revId": "2441e942bfc39c285060d12fbb5efe982fcd7b89",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    }
  ]
}