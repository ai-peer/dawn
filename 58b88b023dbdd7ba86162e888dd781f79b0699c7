{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "06310bef_67e9571b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 14
      },
      "lineNbr": 0,
      "author": {
        "id": 1000033
      },
      "writtenOn": "2024-02-05T17:44:38Z",
      "side": 1,
      "message": "partial review",
      "revId": "58b88b023dbdd7ba86162e888dd781f79b0699c7",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b4b94bcc_8a963285",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 14
      },
      "lineNbr": 0,
      "author": {
        "id": 1000033
      },
      "writtenOn": "2024-02-05T17:52:37Z",
      "side": 1,
      "message": "I have a nit about the comment on TypeCode.\nPlease address the one-sided error.",
      "revId": "58b88b023dbdd7ba86162e888dd781f79b0699c7",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fe56b214_15e134b3",
        "filename": "src/tint/utils/rtti/castable.h",
        "patchSetId": 14
      },
      "lineNbr": 101,
      "author": {
        "id": 1000033
      },
      "writtenOn": "2024-02-05T17:44:38Z",
      "side": 1,
      "message": "I seems this has a one-sided error:\nTypeCodes can have collisions. What does a collision entail? Is it a type1 or type 2 error (?)",
      "range": {
        "startLine": 100,
        "startChar": 60,
        "endLine": 101,
        "endChar": 19
      },
      "revId": "58b88b023dbdd7ba86162e888dd781f79b0699c7",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b232d584_55de004a",
        "filename": "src/tint/utils/rtti/castable.h",
        "patchSetId": 14
      },
      "lineNbr": 101,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2024-02-05T18:01:57Z",
      "side": 1,
      "message": "I\u0027m not sure the statement is incorrect. It is `used by Tint\u0027s RTTI system to determine whether two types are related by inheritance` - I\u0027m not stating _how_ it is used. The comment on `TypeCodeSet` is pretty thorough in explaining how they\u0027re used in a bloom-filter. I can shove a `@see TypeCodeSet` at the end of this comment?",
      "parentUuid": "fe56b214_15e134b3",
      "range": {
        "startLine": 100,
        "startChar": 60,
        "endLine": 101,
        "endChar": 19
      },
      "revId": "58b88b023dbdd7ba86162e888dd781f79b0699c7",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6ce5cb9c_1b3137e4",
        "filename": "src/tint/utils/rtti/castable.h",
        "patchSetId": 14
      },
      "lineNbr": 101,
      "author": {
        "id": 1000033
      },
      "writtenOn": "2024-02-05T18:03:41Z",
      "side": 1,
      "message": "ok, point taken. You\u0027re right.  I lodged the comment before reading further.\nThe bloom filter discussion is good.",
      "parentUuid": "b232d584_55de004a",
      "range": {
        "startLine": 100,
        "startChar": 60,
        "endLine": 101,
        "endChar": 19
      },
      "revId": "58b88b023dbdd7ba86162e888dd781f79b0699c7",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f8ccdb26_6760e547",
        "filename": "src/tint/utils/rtti/castable.h",
        "patchSetId": 14
      },
      "lineNbr": 115,
      "author": {
        "id": 1000033
      },
      "writtenOn": "2024-02-05T17:44:38Z",
      "side": 1,
      "message": "This is a non-standard GCC extension.\nBut the nice thing is if it\u0027s not supported, we\u0027ll get a compilation error.",
      "range": {
        "startLine": 115,
        "startChar": 41,
        "endLine": 115,
        "endChar": 60
      },
      "revId": "58b88b023dbdd7ba86162e888dd781f79b0699c7",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "32b7fcd0_2214a730",
        "filename": "src/tint/utils/rtti/castable.h",
        "patchSetId": 14
      },
      "lineNbr": 119,
      "author": {
        "id": 1000033
      },
      "writtenOn": "2024-02-05T17:44:38Z",
      "side": 1,
      "message": "If bit_b \u003d\u003d 63 and bit_a \u003d\u003d 63 then the bit_c \u003d 0.\nThat violates the invariant.",
      "range": {
        "startLine": 119,
        "startChar": 18,
        "endLine": 119,
        "endChar": 77
      },
      "revId": "58b88b023dbdd7ba86162e888dd781f79b0699c7",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ff89207e_179ceaeb",
        "filename": "src/tint/utils/rtti/castable.h",
        "patchSetId": 14
      },
      "lineNbr": 119,
      "author": {
        "id": 1000033
      },
      "writtenOn": "2024-02-05T17:46:16Z",
      "side": 1,
      "message": "oh, never mind.  It\u0027s ok for bit_c to equal zero. It just has to be different from bit_a.",
      "parentUuid": "32b7fcd0_2214a730",
      "range": {
        "startLine": 119,
        "startChar": 18,
        "endLine": 119,
        "endChar": 77
      },
      "revId": "58b88b023dbdd7ba86162e888dd781f79b0699c7",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "58b88b023dbdd7ba86162e888dd781f79b0699c7",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Kokoro",
        "description": {
          "value": "A maximum vote is required for the Kokoro label. A minimum vote is blocking."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Kokoro\u003dMAX AND -label:Kokoro\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "uploader:dawn-autoroll@skia-public.iam.gserviceaccount.com OR uploader:chrome-automated-expectation@chops-service-accounts.iam.gserviceaccount.com OR uploader:chrome-branch-day@chops-service-accounts.iam.gserviceaccount.com"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Kokoro=MAX AND -label:Kokoro=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Kokoro=MAX"],"failingAtoms":["label:Kokoro=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"uploader:dawn-autoroll@skia-public.iam.gserviceaccount.com OR uploader:chrome-automated-expectation@chops-service-accounts.iam.gserviceaccount.com OR uploader:chrome-branch-day@chops-service-accounts.iam.gserviceaccount.com"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["uploader:dawn-autoroll@skia-public.iam.gserviceaccount.com","uploader:chrome-automated-expectation@chops-service-accounts.iam.gserviceaccount.com","uploader:chrome-branch-day@chops-service-accounts.iam.gserviceaccount.com"]}
      },
      "patchSetCommitId": "58b88b023dbdd7ba86162e888dd781f79b0699c7",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "58b88b023dbdd7ba86162e888dd781f79b0699c7",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    }
  ]
}