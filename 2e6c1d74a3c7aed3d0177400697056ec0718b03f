{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "2842ff7e_a8184004",
        "filename": "src/tint/resolver/const_eval_builtin_test.cc",
        "patchSetId": 4
      },
      "lineNbr": 1225,
      "author": {
        "id": 1002361
      },
      "writtenOn": "2022-11-18T19:58:08Z",
      "side": 1,
      "message": "Since we\u0027re separating these tests per type, there\u0027s not much point in having the `T` template param, and casting values. May as well remove `T` and use the type suffixes (e.g. `C({0_a}, 0_a)`).\n\nOn a related note, I would prefer all three be merged into one function and `if constexpr` over the type of T be used to make it clear that the expected values for four of the inputs differ because of the type.",
      "range": {
        "startLine": 1183,
        "startChar": 0,
        "endLine": 1225,
        "endChar": 6
      },
      "revId": "2e6c1d74a3c7aed3d0177400697056ec0718b03f",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "674b6254_d3092c6f",
        "filename": "src/tint/resolver/const_eval_builtin_test.cc",
        "patchSetId": 4
      },
      "lineNbr": 1225,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2022-11-18T21:27:09Z",
      "side": 1,
      "message": "I went back and forth on using the `0_a` and decided to go with `T`. It\u0027s not needed, but it keeps the tests the same format as the other tests in the file. I think the consistency is worth it over the strangeness.\n\nMerging these together into a single test, I think, makes the test file harder to read. Instead of knowing these are specifically for f16, I have to parse through a bunch of if conditionals and decide whats in test and what isn\u0027t.",
      "parentUuid": "2842ff7e_a8184004",
      "range": {
        "startLine": 1183,
        "startChar": 0,
        "endLine": 1225,
        "endChar": 6
      },
      "revId": "2e6c1d74a3c7aed3d0177400697056ec0718b03f",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2d7196ae_761ed95c",
        "filename": "src/tint/resolver/const_eval_builtin_test.cc",
        "patchSetId": 4
      },
      "lineNbr": 1225,
      "author": {
        "id": 1002361
      },
      "writtenOn": "2022-11-18T21:41:41Z",
      "side": 1,
      "message": "ACK, let\u0027s go with this then.",
      "parentUuid": "674b6254_d3092c6f",
      "range": {
        "startLine": 1183,
        "startChar": 0,
        "endLine": 1225,
        "endChar": 6
      },
      "revId": "2e6c1d74a3c7aed3d0177400697056ec0718b03f",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0011c4ea_38d86366",
        "filename": "test/tint/builtins/repeated_use.wgsl.expected.glsl",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2022-11-17T23:25:08Z",
      "side": 1,
      "message": "This could do with being fixed. Bit counting builtins have no `@const`, so you could try one of them.",
      "revId": "2e6c1d74a3c7aed3d0177400697056ec0718b03f",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b655e4aa_369fb719",
        "filename": "test/tint/builtins/repeated_use.wgsl.expected.glsl",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2022-11-18T21:27:09Z",
      "side": 1,
      "message": "I gather this test is for things where we polyfil to very that multiple polyfills works?",
      "parentUuid": "0011c4ea_38d86366",
      "revId": "2e6c1d74a3c7aed3d0177400697056ec0718b03f",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a8855f31_b3915e0b",
        "filename": "test/tint/builtins/repeated_use.wgsl.expected.glsl",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2022-11-21T15:43:03Z",
      "side": 1,
      "message": "Instead of changing the builtin, move the value to a `let`.",
      "parentUuid": "b655e4aa_369fb719",
      "revId": "2e6c1d74a3c7aed3d0177400697056ec0718b03f",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}