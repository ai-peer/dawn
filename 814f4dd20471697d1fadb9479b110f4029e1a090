{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "6f5349e3_b22cb328",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2023-04-19T23:04:06Z",
      "side": 1,
      "message": "Blocked in favor of https://dawn-review.googlesource.com/c/dawn/+/128061",
      "revId": "814f4dd20471697d1fadb9479b110f4029e1a090",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f8670d5f_38e45a44",
        "filename": "src/dawn/native/Error.h",
        "patchSetId": 4
      },
      "lineNbr": 112,
      "author": {
        "id": 1002831
      },
      "writtenOn": "2023-04-19T19:50:13Z",
      "side": 1,
      "message": "nit. Maybe `DAWN_DEPRECATION_WARNING_IF`? I think/suspect that we should remove `DAWN_DEPRECATED_IF` entirely in it\u0027s current form once we remove all the other code paths that are using it because the flag doesn\u0027t actually make sense with rolling deprecation stuff, only with the V1 launch.\n\nThen as we deprecate stuff we can just go from `DAWN_DEPRECATION_WARNING_IF` to `DAWN_INVALID_IF` as you mention in the comments.",
      "range": {
        "startLine": 112,
        "startChar": 8,
        "endLine": 112,
        "endChar": 23
      },
      "revId": "814f4dd20471697d1fadb9479b110f4029e1a090",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5bbcad21_5790ad3c",
        "filename": "src/dawn/tests/unittests/validation/RenderPipelineValidationTests.cpp",
        "patchSetId": 4
      },
      "lineNbr": 902,
      "author": {
        "id": 1002831
      },
      "writtenOn": "2023-04-19T19:50:13Z",
      "side": 1,
      "message": "I don\u0027t think we need to use the `DeprecationTests` fixture for this given that the fixture was specifically for testing with and without the flag which doesn\u0027t really apply here.",
      "range": {
        "startLine": 902,
        "startChar": 7,
        "endLine": 902,
        "endChar": 23
      },
      "revId": "814f4dd20471697d1fadb9479b110f4029e1a090",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Code-Review=MAX,user=non_uploader","label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "814f4dd20471697d1fadb9479b110f4029e1a090",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Kokoro",
        "description": {
          "value": "A maximum vote is required for the Kokoro label. A minimum vote is blocking."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Kokoro\u003dMAX AND -label:Kokoro\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "uploader:dawn-autoroll@skia-public.iam.gserviceaccount.com"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Kokoro=MAX AND -label:Kokoro=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Kokoro=MAX"],"failingAtoms":["label:Kokoro=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"uploader:dawn-autoroll@skia-public.iam.gserviceaccount.com"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["uploader:dawn-autoroll@skia-public.iam.gserviceaccount.com"]}
      },
      "patchSetCommitId": "814f4dd20471697d1fadb9479b110f4029e1a090",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforced_gerrit"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "814f4dd20471697d1fadb9479b110f4029e1a090",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}