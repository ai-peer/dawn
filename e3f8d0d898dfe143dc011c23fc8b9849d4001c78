{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "1aef0f52_5849c1e5",
        "filename": "src/dawn_native/Extensions.h",
        "patchSetId": 8
      },
      "lineNbr": 31,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-12-10T15:16:10Z",
      "side": 1,
      "message": "optional: Like you pointed out in a previous comment, we shouldn\u0027t add an extension for this because it isn\u0027t an optional feature in WebGPU, but instead maxAnisotropy gets clamped to 1 if it is not available. Or do you think we should have it as an optional feature but always request it in Blink?",
      "revId": "e3f8d0d898dfe143dc011c23fc8b9849d4001c78",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "946acfc2_765c422e",
        "filename": "src/dawn_native/Extensions.h",
        "patchSetId": 8
      },
      "lineNbr": 31,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-12-10T16:58:04Z",
      "side": 1,
      "message": "I don\u0027t feel so strongly, but I think we shouldn\u0027t add the extension for consistency with WebGPU. If I remember correctly, in the group we concluded that a developer isn\u0027t going to do anything different if the extension is present or not - especially since the sampling pattern/implementation is not specified.\n\nI guess it would also allow native developers to have some notion of \"definitely won\u0027t support\" and \"maybe will support\". But again, not sure if they will react to that or just notify the user to get a new GPU card for higher quality graphics.",
      "parentUuid": "1aef0f52_5849c1e5",
      "revId": "e3f8d0d898dfe143dc011c23fc8b9849d4001c78",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5c92f2e0_569d09f4",
        "filename": "src/dawn_native/Extensions.h",
        "patchSetId": 8
      },
      "lineNbr": 31,
      "author": {
        "id": 1000685
      },
      "writtenOn": "2020-12-17T03:37:49Z",
      "side": 1,
      "message": "Hmm... I thought adding an enum here but don\u0027t make a pr for webgpu extensions and pass nullptr to is enough. So do you indicate using a private variable to mark if it\u0027s on?",
      "parentUuid": "946acfc2_765c422e",
      "revId": "e3f8d0d898dfe143dc011c23fc8b9849d4001c78",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cd6dd884_db2b6718",
        "filename": "src/dawn_native/Extensions.h",
        "patchSetId": 8
      },
      "lineNbr": 31,
      "author": {
        "id": 1000685
      },
      "writtenOn": "2020-12-18T02:36:07Z",
      "side": 1,
      "message": "Removed this extension",
      "parentUuid": "5c92f2e0_569d09f4",
      "revId": "e3f8d0d898dfe143dc011c23fc8b9849d4001c78",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "599006b4_f6dd4208",
        "filename": "src/dawn_native/Sampler.cpp",
        "patchSetId": 8
      },
      "lineNbr": 63,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-12-10T15:16:10Z",
      "side": 1,
      "message": "You might have missed this comment from a previous patchset:\n\n\u003e I think we might want to clamp to a backend-dependent values (or max-clamp to 16 and add a TODO to clamp to the backend specific value)",
      "revId": "e3f8d0d898dfe143dc011c23fc8b9849d4001c78",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fdfc589a_8376019d",
        "filename": "src/dawn_native/Sampler.cpp",
        "patchSetId": 8
      },
      "lineNbr": 63,
      "author": {
        "id": 1000685
      },
      "writtenOn": "2020-12-17T03:37:49Z",
      "side": 1,
      "message": "I think this clamp is used to clamp 0 to 1 for generating the equivalent hash, and we can do backend-dependent clamp in SamplerMTL/Vk?",
      "parentUuid": "599006b4_f6dd4208",
      "revId": "e3f8d0d898dfe143dc011c23fc8b9849d4001c78",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "59b3f6f7_5b13f840",
        "filename": "src/dawn_native/Sampler.h",
        "patchSetId": 8
      },
      "lineNbr": 29,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-12-10T15:16:10Z",
      "side": 1,
      "message": "nit: this isn\u0027t used anywhere outside of Sampler.cpp so instead the function can completely live inside Sampler.cpp in an anonymous namespace (that we usually put at the top of the dawn_native namespace)",
      "revId": "e3f8d0d898dfe143dc011c23fc8b9849d4001c78",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "15bdcb0e_c4a158d5",
        "filename": "src/dawn_native/Sampler.h",
        "patchSetId": 8
      },
      "lineNbr": 29,
      "author": {
        "id": 1000685
      },
      "writtenOn": "2020-12-17T03:37:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "59b3f6f7_5b13f840",
      "revId": "e3f8d0d898dfe143dc011c23fc8b9849d4001c78",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0a39348d_8191b602",
        "filename": "src/dawn_native/opengl/SamplerGL.cpp",
        "patchSetId": 8
      },
      "lineNbr": 75,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-12-10T15:16:10Z",
      "side": 1,
      "message": "nit: this can be done directly in [1] since SetupGLSampler is called only once. The mSupportTextureFilterAnisotropic would disappear.",
      "revId": "e3f8d0d898dfe143dc011c23fc8b9849d4001c78",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ff09cb8f_b0690456",
        "filename": "src/dawn_native/opengl/SamplerGL.cpp",
        "patchSetId": 8
      },
      "lineNbr": 75,
      "author": {
        "id": 1000685
      },
      "writtenOn": "2020-12-10T18:44:26Z",
      "side": 1,
      "message": "I think reason I put it here is that I don\u0027t have a device available at [1] (mDevice seems private) -_-",
      "parentUuid": "0a39348d_8191b602",
      "revId": "e3f8d0d898dfe143dc011c23fc8b9849d4001c78",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4776f694_fa49d768",
        "filename": "src/dawn_native/opengl/SamplerGL.cpp",
        "patchSetId": 8
      },
      "lineNbr": 75,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-12-10T18:46:38Z",
      "side": 1,
      "message": "Ah, you can always get the device with GetDevice() and then cast it to the backend with ToBackend\n\nYou\u0027ll see these ToBackend(GetDevice()) everywhere.",
      "parentUuid": "ff09cb8f_b0690456",
      "revId": "e3f8d0d898dfe143dc011c23fc8b9849d4001c78",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3fbccd56_c071d7cd",
        "filename": "src/dawn_native/opengl/SamplerGL.cpp",
        "patchSetId": 8
      },
      "lineNbr": 75,
      "author": {
        "id": 1000685
      },
      "writtenOn": "2020-12-17T03:37:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4776f694_fa49d768",
      "revId": "e3f8d0d898dfe143dc011c23fc8b9849d4001c78",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2f62dec5_ccf531ca",
        "filename": "src/dawn_native/opengl/SamplerGL.cpp",
        "patchSetId": 8
      },
      "lineNbr": 113,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-12-10T15:16:10Z",
      "side": 1,
      "message": "[1]",
      "revId": "e3f8d0d898dfe143dc011c23fc8b9849d4001c78",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1df03944_4449ea0e",
        "filename": "src/dawn_native/opengl/SamplerGL.cpp",
        "patchSetId": 8
      },
      "lineNbr": 113,
      "author": {
        "id": 1000685
      },
      "writtenOn": "2020-12-17T03:37:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2f62dec5_ccf531ca",
      "revId": "e3f8d0d898dfe143dc011c23fc8b9849d4001c78",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}