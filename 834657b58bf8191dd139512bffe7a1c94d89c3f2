{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "7fdb493f_e5d74847",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-11-10T22:55:28Z",
      "side": 1,
      "message": "LGTM overall, one more question",
      "revId": "834657b58bf8191dd139512bffe7a1c94d89c3f2",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cfa0f06c_c9256ef7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-11-12T11:03:51Z",
      "side": 1,
      "message": "LGTM too but the change-detecting test is unfortunate.",
      "revId": "834657b58bf8191dd139512bffe7a1c94d89c3f2",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "af08852e_3975023b",
        "filename": "src/dawn_native/d3d12/DeviceD3D12.cpp",
        "patchSetId": 1
      },
      "lineNbr": 264,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-11-12T11:03:51Z",
      "side": 1,
      "message": "nit: I think this can be \u003c\u003d ?",
      "range": {
        "startLine": 264,
        "startChar": 27,
        "endLine": 264,
        "endChar": 28
      },
      "revId": "834657b58bf8191dd139512bffe7a1c94d89c3f2",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a500716d_85a3933d",
        "filename": "src/dawn_native/d3d12/DeviceD3D12.cpp",
        "patchSetId": 1
      },
      "lineNbr": 264,
      "author": {
        "id": 1000248
      },
      "writtenOn": "2020-11-12T18:29:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "af08852e_3975023b",
      "range": {
        "startLine": 264,
        "startChar": 27,
        "endLine": 264,
        "endChar": 28
      },
      "revId": "834657b58bf8191dd139512bffe7a1c94d89c3f2",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4d9c94e3_376f7998",
        "filename": "src/dawn_native/d3d12/DeviceD3D12.cpp",
        "patchSetId": 1
      },
      "lineNbr": 267,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-11-10T18:47:21Z",
      "side": 1,
      "message": "Hm.. could you explain why we do this?",
      "range": {
        "startLine": 264,
        "startChar": 8,
        "endLine": 267,
        "endChar": 0
      },
      "revId": "834657b58bf8191dd139512bffe7a1c94d89c3f2",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "16bf5aaa_7b7ec4e2",
        "filename": "src/dawn_native/d3d12/DeviceD3D12.cpp",
        "patchSetId": 1
      },
      "lineNbr": 267,
      "author": {
        "id": 1000248
      },
      "writtenOn": "2020-11-10T20:21:53Z",
      "side": 1,
      "message": "In the function that calls CheckAndUpdateCompletedSerials(), DeviceBase::CheckPassedSerials(), returning 0 causes mCompletedSerial to not be updated - which is what we want when no progress was made. \n\nIf we don\u0027t return 0, and don\u0027t make forward progress inside TickImpl, it\u0027s possible we would try to update mCompletedSerial with a lower value when mCompletedSerial has been incremented outside of CheckPassedSerials (i.e. AssumeCommandsCompleted()) - which is not allowed.",
      "parentUuid": "4d9c94e3_376f7998",
      "range": {
        "startLine": 264,
        "startChar": 8,
        "endLine": 267,
        "endChar": 0
      },
      "revId": "834657b58bf8191dd139512bffe7a1c94d89c3f2",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8bcb618c_505a96c8",
        "filename": "src/dawn_native/d3d12/DeviceD3D12.cpp",
        "patchSetId": 1
      },
      "lineNbr": 267,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-11-10T22:55:28Z",
      "side": 1,
      "message": "Ah I see. I hadn\u0027t remembered returning 0 indicates nothing happened. I see now that the other backends do this and the comment in Device.h describes it.",
      "parentUuid": "16bf5aaa_7b7ec4e2",
      "range": {
        "startLine": 264,
        "startChar": 8,
        "endLine": 267,
        "endChar": 0
      },
      "revId": "834657b58bf8191dd139512bffe7a1c94d89c3f2",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3f91a5ab_5a9a7b6a",
        "filename": "src/tests/white_box/D3D12DescriptorHeapTests.cpp",
        "patchSetId": 1
      },
      "lineNbr": 243,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-11-10T22:55:28Z",
      "side": 1,
      "message": "I don\u0027t think we should be touching the specific internals here. Would we test the same thing if all the tests in this suite did an empty queue.submit instead ?",
      "range": {
        "startLine": 240,
        "startChar": 8,
        "endLine": 243,
        "endChar": 58
      },
      "revId": "834657b58bf8191dd139512bffe7a1c94d89c3f2",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2a2b6fc7_7b2d75bb",
        "filename": "src/tests/white_box/D3D12DescriptorHeapTests.cpp",
        "patchSetId": 1
      },
      "lineNbr": 243,
      "author": {
        "id": 1000248
      },
      "writtenOn": "2020-11-11T00:00:44Z",
      "side": 1,
      "message": "Yeah, it\u0027s not ideal. This test was designed around mCompletedSerial and mLastSubmittedSerial incrementing by one each loop. Now that we don\u0027t increment serials upon Tick(), anytime we call Tick() (Queue.Submit calls Tick()) we will call AssumeCommandsComplete(), and it will increment mCompletedSerial by more than one. This causes different behavior in the AllocateAndSwitch() call.",
      "parentUuid": "3f91a5ab_5a9a7b6a",
      "range": {
        "startLine": 240,
        "startChar": 8,
        "endLine": 243,
        "endChar": 58
      },
      "revId": "834657b58bf8191dd139512bffe7a1c94d89c3f2",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3825c2a3_63c5e641",
        "filename": "src/tests/white_box/D3D12DescriptorHeapTests.cpp",
        "patchSetId": 1
      },
      "lineNbr": 243,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-11-11T21:40:25Z",
      "side": 1,
      "message": "mm okay. I don\u0027t have any better suggestions here then",
      "parentUuid": "2a2b6fc7_7b2d75bb",
      "range": {
        "startLine": 240,
        "startChar": 8,
        "endLine": 243,
        "endChar": 58
      },
      "revId": "834657b58bf8191dd139512bffe7a1c94d89c3f2",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7aebe3e6_dd9181b1",
        "filename": "src/tests/white_box/D3D12DescriptorHeapTests.cpp",
        "patchSetId": 1
      },
      "lineNbr": 243,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-11-12T11:03:51Z",
      "side": 1,
      "message": "It is unfortunate that this is a change-detecting test. Maybe it would be ok to do what Austin suggested and call Tick or an empty submit and update the constants in the test accordingly?",
      "parentUuid": "3825c2a3_63c5e641",
      "range": {
        "startLine": 240,
        "startChar": 8,
        "endLine": 243,
        "endChar": 58
      },
      "revId": "834657b58bf8191dd139512bffe7a1c94d89c3f2",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5bbde2e8_9b2fd297",
        "filename": "src/tests/white_box/D3D12DescriptorHeapTests.cpp",
        "patchSetId": 1
      },
      "lineNbr": 243,
      "author": {
        "id": 1000248
      },
      "writtenOn": "2020-11-12T18:29:38Z",
      "side": 1,
      "message": "The test relies on serials being +1\u0027d each Tick(), but an empty submit will cause +2 because of AssumeCommandsComplete(). Instead I\u0027ve found that doing Queue.Write will produce the +1 behavior needed.",
      "parentUuid": "7aebe3e6_dd9181b1",
      "range": {
        "startLine": 240,
        "startChar": 8,
        "endLine": 243,
        "endChar": 58
      },
      "revId": "834657b58bf8191dd139512bffe7a1c94d89c3f2",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "909d330d_fa993e1b",
        "filename": "src/tests/white_box/D3D12DescriptorHeapTests.cpp",
        "patchSetId": 1
      },
      "lineNbr": 243,
      "author": {
        "id": 1000248
      },
      "writtenOn": "2020-11-12T23:43:30Z",
      "side": 1,
      "message": "I\u0027ve reverted back to the original test workaround. I think this is the best solution short of putting more time into a test that works differently. \n\nThe test is reliant on always +1ing the serials every tick, but I don\u0027t believe it is possible to do just +1 without exposing internal members because Tick() will +2 mCompletedSerial when it calls AssumeCommandsComplete(). \n\nI think we can be somewhat lenient on using the internal functions since this is a whitebox test. I\u0027m hoping that we can merge this as is - WDYT?",
      "parentUuid": "5bbde2e8_9b2fd297",
      "range": {
        "startLine": 240,
        "startChar": 8,
        "endLine": 243,
        "endChar": 58
      },
      "revId": "834657b58bf8191dd139512bffe7a1c94d89c3f2",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b9f7c29d_d29b2d04",
        "filename": "src/tests/white_box/D3D12DescriptorHeapTests.cpp",
        "patchSetId": 1
      },
      "lineNbr": 243,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-11-13T00:44:39Z",
      "side": 1,
      "message": "Fine to merge as is",
      "parentUuid": "909d330d_fa993e1b",
      "range": {
        "startLine": 240,
        "startChar": 8,
        "endLine": 243,
        "endChar": 58
      },
      "revId": "834657b58bf8191dd139512bffe7a1c94d89c3f2",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}