{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "7fdb493f_e5d74847",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-11-10T22:55:28Z",
      "side": 1,
      "message": "LGTM overall, one more question",
      "revId": "834657b58bf8191dd139512bffe7a1c94d89c3f2",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4d9c94e3_376f7998",
        "filename": "src/dawn_native/d3d12/DeviceD3D12.cpp",
        "patchSetId": 1
      },
      "lineNbr": 267,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-11-10T18:47:21Z",
      "side": 1,
      "message": "Hm.. could you explain why we do this?",
      "range": {
        "startLine": 264,
        "startChar": 8,
        "endLine": 267,
        "endChar": 0
      },
      "revId": "834657b58bf8191dd139512bffe7a1c94d89c3f2",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "16bf5aaa_7b7ec4e2",
        "filename": "src/dawn_native/d3d12/DeviceD3D12.cpp",
        "patchSetId": 1
      },
      "lineNbr": 267,
      "author": {
        "id": 1000248
      },
      "writtenOn": "2020-11-10T20:21:53Z",
      "side": 1,
      "message": "In the function that calls CheckAndUpdateCompletedSerials(), DeviceBase::CheckPassedSerials(), returning 0 causes mCompletedSerial to not be updated - which is what we want when no progress was made. \n\nIf we don\u0027t return 0, and don\u0027t make forward progress inside TickImpl, it\u0027s possible we would try to update mCompletedSerial with a lower value when mCompletedSerial has been incremented outside of CheckPassedSerials (i.e. AssumeCommandsCompleted()) - which is not allowed.",
      "parentUuid": "4d9c94e3_376f7998",
      "range": {
        "startLine": 264,
        "startChar": 8,
        "endLine": 267,
        "endChar": 0
      },
      "revId": "834657b58bf8191dd139512bffe7a1c94d89c3f2",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8bcb618c_505a96c8",
        "filename": "src/dawn_native/d3d12/DeviceD3D12.cpp",
        "patchSetId": 1
      },
      "lineNbr": 267,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-11-10T22:55:28Z",
      "side": 1,
      "message": "Ah I see. I hadn\u0027t remembered returning 0 indicates nothing happened. I see now that the other backends do this and the comment in Device.h describes it.",
      "parentUuid": "16bf5aaa_7b7ec4e2",
      "range": {
        "startLine": 264,
        "startChar": 8,
        "endLine": 267,
        "endChar": 0
      },
      "revId": "834657b58bf8191dd139512bffe7a1c94d89c3f2",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3f91a5ab_5a9a7b6a",
        "filename": "src/tests/white_box/D3D12DescriptorHeapTests.cpp",
        "patchSetId": 1
      },
      "lineNbr": 243,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-11-10T22:55:28Z",
      "side": 1,
      "message": "I don\u0027t think we should be touching the specific internals here. Would we test the same thing if all the tests in this suite did an empty queue.submit instead ?",
      "range": {
        "startLine": 240,
        "startChar": 8,
        "endLine": 243,
        "endChar": 58
      },
      "revId": "834657b58bf8191dd139512bffe7a1c94d89c3f2",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2a2b6fc7_7b2d75bb",
        "filename": "src/tests/white_box/D3D12DescriptorHeapTests.cpp",
        "patchSetId": 1
      },
      "lineNbr": 243,
      "author": {
        "id": 1000248
      },
      "writtenOn": "2020-11-11T00:00:44Z",
      "side": 1,
      "message": "Yeah, it\u0027s not ideal. This test was designed around mCompletedSerial and mLastSubmittedSerial incrementing by one each loop. Now that we don\u0027t increment serials upon Tick(), anytime we call Tick() (Queue.Submit calls Tick()) we will call AssumeCommandsComplete(), and it will increment mCompletedSerial by more than one. This causes different behavior in the AllocateAndSwitch() call.",
      "parentUuid": "3f91a5ab_5a9a7b6a",
      "range": {
        "startLine": 240,
        "startChar": 8,
        "endLine": 243,
        "endChar": 58
      },
      "revId": "834657b58bf8191dd139512bffe7a1c94d89c3f2",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}