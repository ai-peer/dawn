{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "1a56c4db_9b4b6187",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2023-02-28T00:33:53Z",
      "side": 1,
      "message": "PTAL.",
      "revId": "f58ba743d9fdaee989b528e7e9fbbbbe4c502098",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8b18f2e2_c5d2f564",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2023-02-28T12:14:07Z",
      "side": 1,
      "message": "Approving so you can start landing. Please address comments at the end of the stack.",
      "revId": "f58ba743d9fdaee989b528e7e9fbbbbe4c502098",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d47f7068_25715889",
        "filename": "src/tint/utils/string_stream.h",
        "patchSetId": 2
      },
      "lineNbr": 38,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2023-02-28T11:42:26Z",
      "side": 1,
      "message": "I\u0027d recommend declaring a `private` helper:\n\n```\ntemplate\u003ctypename T\u003e\nusing IsFloat \u003d std::is_floating_point_v\u003cstd::decay_t\u003cT\u003e\u003e;\n```\n\nThen you can reduce this to:\n\n`typename \u003d std::enable_if_t\u003c!IsFloat\u003cT\u003e\u003e`\n\nAnd the negation below.",
      "range": {
        "startLine": 38,
        "startChar": 14,
        "endLine": 38,
        "endChar": 89
      },
      "revId": "f58ba743d9fdaee989b528e7e9fbbbbe4c502098",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5c05e000_6159a3c0",
        "filename": "src/tint/utils/string_stream.h",
        "patchSetId": 2
      },
      "lineNbr": 39,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2023-02-28T11:42:26Z",
      "side": 1,
      "message": "`T\u0026\u0026 value`",
      "range": {
        "startLine": 39,
        "startChar": 29,
        "endLine": 39,
        "endChar": 43
      },
      "revId": "f58ba743d9fdaee989b528e7e9fbbbbe4c502098",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d10b2db6_c18e0a43",
        "filename": "src/tint/utils/string_stream.h",
        "patchSetId": 2
      },
      "lineNbr": 39,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2023-02-28T13:03:35Z",
      "side": 1,
      "message": "Do we really want to move into the emission operator? That seems like it could cause use-after-move errors down the road? Looking at the `ostream` definition, it doesn\u0027t even use a reference here, it\u0027s a copy.",
      "parentUuid": "5c05e000_6159a3c0",
      "range": {
        "startLine": 39,
        "startChar": 29,
        "endLine": 39,
        "endChar": 43
      },
      "revId": "f58ba743d9fdaee989b528e7e9fbbbbe4c502098",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4ccd7b1d_530e1918",
        "filename": "src/tint/utils/string_stream.h",
        "patchSetId": 2
      },
      "lineNbr": 40,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2023-02-28T11:42:26Z",
      "side": 1,
      "message": "`std::forward\u003cT\u003e(value)` to do perfect forwarding.\n\nI suspect that this would mean you can drop the `StdEndl` stuff below.",
      "range": {
        "startLine": 40,
        "startChar": 20,
        "endLine": 40,
        "endChar": 25
      },
      "revId": "f58ba743d9fdaee989b528e7e9fbbbbe4c502098",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "f58ba743d9fdaee989b528e7e9fbbbbe4c502098",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Kokoro",
        "description": {
          "value": "A maximum vote is required for the Kokoro label. A minimum vote is blocking."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Kokoro\u003dMAX AND -label:Kokoro\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "uploader:dawn-autoroll@skia-public.iam.gserviceaccount.com"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Kokoro=MAX AND -label:Kokoro=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Kokoro=MAX"],"failingAtoms":["label:Kokoro=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"uploader:dawn-autoroll@skia-public.iam.gserviceaccount.com"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["uploader:dawn-autoroll@skia-public.iam.gserviceaccount.com"]}
      },
      "patchSetCommitId": "f58ba743d9fdaee989b528e7e9fbbbbe4c502098",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "patchSetCommitId": "f58ba743d9fdaee989b528e7e9fbbbbe4c502098",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    }
  ]
}