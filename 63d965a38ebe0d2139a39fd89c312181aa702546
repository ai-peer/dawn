{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "3e18f0f1_fe518372",
        "filename": "src/tint/ir/disassembler.cc",
        "patchSetId": 2
      },
      "lineNbr": 546,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2023-06-29T10:36:18Z",
      "side": 1,
      "message": "```suggestion\n    // True block is assumed to have instructions\n```",
      "range": {
        "startLine": 546,
        "startChar": 7,
        "endLine": 546,
        "endChar": 31
      },
      "revId": "63d965a38ebe0d2139a39fd89c312181aa702546",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8ad17c07_6ea7b0aa",
        "filename": "src/tint/ir/disassembler.cc",
        "patchSetId": 2
      },
      "lineNbr": 546,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2023-06-29T13:03:03Z",
      "side": 1,
      "message": "Fix applied.",
      "parentUuid": "3e18f0f1_fe518372",
      "range": {
        "startLine": 546,
        "startChar": 7,
        "endLine": 546,
        "endChar": 31
      },
      "revId": "63d965a38ebe0d2139a39fd89c312181aa702546",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "88ac29fa_cf4125c2",
        "filename": "src/tint/ir/validate.cc",
        "patchSetId": 2
      },
      "lineNbr": 408,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2023-06-29T10:39:01Z",
      "side": 1,
      "message": "missing tests?",
      "revId": "63d965a38ebe0d2139a39fd89c312181aa702546",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2136157d_85c48d7f",
        "filename": "src/tint/ir/validate.cc",
        "patchSetId": 2
      },
      "lineNbr": 408,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2023-06-29T13:03:03Z",
      "side": 1,
      "message": "Missing tests for what? The empty block is tested already by the generic block code. If the block is empty it doesn\u0027t end in a terminator. We want the errors to appear if the true is empty.",
      "parentUuid": "88ac29fa_cf4125c2",
      "revId": "63d965a38ebe0d2139a39fd89c312181aa702546",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "58a1aac9_aad58cf5",
        "filename": "src/tint/ir/validate.cc",
        "patchSetId": 2
      },
      "lineNbr": 421,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2023-06-29T10:38:01Z",
      "side": 1,
      "message": "`HasContinuing()` for symmetry above?",
      "range": {
        "startLine": 421,
        "startChar": 16,
        "endLine": 421,
        "endChar": 37
      },
      "revId": "63d965a38ebe0d2139a39fd89c312181aa702546",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9e74ac0a_4cc47fd4",
        "filename": "src/tint/ir/validate.cc",
        "patchSetId": 2
      },
      "lineNbr": 421,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2023-06-29T13:03:03Z",
      "side": 1,
      "message": "Possibly, but will do in a followup. Even looking at it now, `HasInitializer` doesn\u0027t do what I expected it to do, so the above is changed.",
      "parentUuid": "58a1aac9_aad58cf5",
      "range": {
        "startLine": 421,
        "startChar": 16,
        "endLine": 421,
        "endChar": 37
      },
      "revId": "63d965a38ebe0d2139a39fd89c312181aa702546",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}