{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "464e3fd7_edfad75c",
        "filename": "src/dawn/native/CommandEncoder.cpp",
        "patchSetId": 8
      },
      "lineNbr": 1200,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2024-04-23T03:06:05Z",
      "side": 0,
      "message": "I believe you can delete `CreateImplicitMSAARenderTextureViewFor` now.\n\nAdmittedly I\u0027m still a bit curious at how things would look if we did just a little bit of caching here - since the current implementation makes no attempt at that. For N render passes, we have N live textures which last all the way from encoding till submit completes - that\u0027s quite a long time!",
      "range": {
        "startLine": 1200,
        "startChar": 0,
        "endLine": 1200,
        "endChar": 83
      },
      "revId": "b7c1a98e50cdfd4c7adc67fb5584c5f182b69c9a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "61e23220_4cd31127",
        "filename": "src/dawn/native/CommandEncoder.cpp",
        "patchSetId": 8
      },
      "lineNbr": 1200,
      "author": {
        "id": 1003501
      },
      "writtenOn": "2024-04-23T10:27:19Z",
      "side": 0,
      "message": "Done. I was reluctant to implement caching in Dawn since it seems like there would have been two memory managements running independently in Graphite. Even though Graphite wants to control the memory tightly.",
      "parentUuid": "464e3fd7_edfad75c",
      "range": {
        "startLine": 1200,
        "startChar": 0,
        "endLine": 1200,
        "endChar": 83
      },
      "revId": "b7c1a98e50cdfd4c7adc67fb5584c5f182b69c9a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}