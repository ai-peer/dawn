{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "aae43248_0ccde699",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2022-06-28T05:07:05Z",
      "side": 1,
      "message": "PTAL at the implementation - I had intended to expand the tests to do specific shader cache testing but haven\u0027t found time to do it yet. We\u0027ll still need to compile a pipeline in order to get the shaders to compile though.",
      "revId": "8115c58f1a4583dfe60af6aa8f8f45572161b93a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b2e12c78_1111d2b7",
        "filename": "src/dawn/native/CacheKey.cpp",
        "patchSetId": 4
      },
      "lineNbr": 21,
      "author": {
        "id": 1002831
      },
      "writtenOn": "2022-06-28T20:11:05Z",
      "side": 1,
      "message": "Why is this needed?",
      "range": {
        "startLine": 21,
        "startChar": 0,
        "endLine": 21,
        "endChar": 29
      },
      "revId": "8115c58f1a4583dfe60af6aa8f8f45572161b93a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b4999a1c_a8ddf0bd",
        "filename": "src/dawn/native/CacheKey.cpp",
        "patchSetId": 4
      },
      "lineNbr": 21,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2022-06-28T22:56:30Z",
      "side": 1,
      "message": "Removed.",
      "parentUuid": "b2e12c78_1111d2b7",
      "range": {
        "startLine": 21,
        "startChar": 0,
        "endLine": 21,
        "endChar": 29
      },
      "revId": "8115c58f1a4583dfe60af6aa8f8f45572161b93a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "408d1552_9a2276ad",
        "filename": "src/dawn/native/CacheKey.h",
        "patchSetId": 4
      },
      "lineNbr": 288,
      "author": {
        "id": 1002831
      },
      "writtenOn": "2022-06-28T20:11:05Z",
      "side": 1,
      "message": "Are these necessary? I thought that for templates, the forward decls don\u0027t need to be in the header, and it will figure it out on its own? (If they aren\u0027t necessary, the forward decls of the types can also be removed.)",
      "range": {
        "startLine": 271,
        "startChar": 0,
        "endLine": 288,
        "endChar": 2
      },
      "revId": "8115c58f1a4583dfe60af6aa8f8f45572161b93a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a7adcb99_8f04e44f",
        "filename": "src/dawn/native/CacheKey.h",
        "patchSetId": 4
      },
      "lineNbr": 288,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2022-06-28T22:56:30Z",
      "side": 1,
      "message": "Removed.",
      "parentUuid": "408d1552_9a2276ad",
      "range": {
        "startLine": 271,
        "startChar": 0,
        "endLine": 288,
        "endChar": 2
      },
      "revId": "8115c58f1a4583dfe60af6aa8f8f45572161b93a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "640ec476_d9f65c72",
        "filename": "src/dawn/native/CacheResult.h",
        "patchSetId": 4
      },
      "lineNbr": 64,
      "author": {
        "id": 1002831
      },
      "writtenOn": "2022-06-28T20:11:05Z",
      "side": 1,
      "message": "Hmm, WDYT about making the BlobCache a member of CacheResult. It (sorta) makes sense since the cache result is only a hit/miss w.r.t to the actual cache. Then I think this can be simplified a bit and skip passing args.",
      "range": {
        "startLine": 58,
        "startChar": 4,
        "endLine": 64,
        "endChar": 5
      },
      "revId": "8115c58f1a4583dfe60af6aa8f8f45572161b93a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "92ff7fb6_56fea1ae",
        "filename": "src/dawn/native/CacheResult.h",
        "patchSetId": 4
      },
      "lineNbr": 64,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2022-06-28T22:56:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "640ec476_d9f65c72",
      "range": {
        "startLine": 58,
        "startChar": 4,
        "endLine": 64,
        "endChar": 5
      },
      "revId": "8115c58f1a4583dfe60af6aa8f8f45572161b93a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dece2596_ed3206f8",
        "filename": "src/dawn/native/vulkan/ShaderModuleVk.cpp",
        "patchSetId": 4
      },
      "lineNbr": 240,
      "author": {
        "id": 1002831
      },
      "writtenOn": "2022-06-28T20:11:05Z",
      "side": 1,
      "message": "IIUC, rn this drops the CacheKey::Type right? I remember you had intentions to change that somehow, probably something such that the CacheRequest type determines the encoded \"type\" of the cache entry.",
      "range": {
        "startLine": 240,
        "startChar": 8,
        "endLine": 240,
        "endChar": 18
      },
      "revId": "8115c58f1a4583dfe60af6aa8f8f45572161b93a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5fd170d3_d2764349",
        "filename": "src/dawn/native/vulkan/ShaderModuleVk.cpp",
        "patchSetId": 4
      },
      "lineNbr": 240,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2022-06-28T22:56:30Z",
      "side": 1,
      "message": "DAWN_MAKE_CACHE_REQUEST includes the name of the struct as a string. So that\u0027s a bit more bloated than the enum but doesn\u0027t require defining an enum for each new one. I think we can make it better in the future though.",
      "parentUuid": "dece2596_ed3206f8",
      "range": {
        "startLine": 240,
        "startChar": 8,
        "endLine": 240,
        "endChar": 18
      },
      "revId": "8115c58f1a4583dfe60af6aa8f8f45572161b93a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8354805a_2a47c135",
        "filename": "src/dawn/native/vulkan/ShaderModuleVk.cpp",
        "patchSetId": 4
      },
      "lineNbr": 242,
      "author": {
        "id": 1002831
      },
      "writtenOn": "2022-06-28T20:11:05Z",
      "side": 1,
      "message": "Huh, I\u0027m wondering if we could potentially make (and enforce) this as const. (For all cache requests for that matter). Probably not important for this CL though. Also idk if it\u0027s possible with the unsafe stuff...",
      "range": {
        "startLine": 242,
        "startChar": 15,
        "endLine": 242,
        "endChar": 38
      },
      "revId": "8115c58f1a4583dfe60af6aa8f8f45572161b93a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bcc4d3bc_2d73e6c1",
        "filename": "src/dawn/tests/end2end/PipelineCachingTests.cpp",
        "patchSetId": 4
      },
      "lineNbr": 424,
      "author": {
        "id": 1002831
      },
      "writtenOn": "2022-06-28T20:11:05Z",
      "side": 1,
      "message": "nit. vertex shader module.",
      "range": {
        "startLine": 424,
        "startChar": 42,
        "endLine": 424,
        "endChar": 56
      },
      "revId": "8115c58f1a4583dfe60af6aa8f8f45572161b93a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f44415e0_8f665c88",
        "filename": "src/dawn/tests/end2end/PipelineCachingTests.cpp",
        "patchSetId": 4
      },
      "lineNbr": 424,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2022-06-28T22:56:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bcc4d3bc_2d73e6c1",
      "range": {
        "startLine": 424,
        "startChar": 42,
        "endLine": 424,
        "endChar": 56
      },
      "revId": "8115c58f1a4583dfe60af6aa8f8f45572161b93a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "191bc6dd_c6615a32",
        "filename": "src/dawn/tests/end2end/PipelineCachingTests.cpp",
        "patchSetId": 4
      },
      "lineNbr": 425,
      "author": {
        "id": 1002831
      },
      "writtenOn": "2022-06-28T20:11:05Z",
      "side": 1,
      "message": "nit. fragment shader module.",
      "range": {
        "startLine": 425,
        "startChar": 43,
        "endLine": 425,
        "endChar": 57
      },
      "revId": "8115c58f1a4583dfe60af6aa8f8f45572161b93a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "722cfe3f_072baeae",
        "filename": "src/dawn/tests/end2end/PipelineCachingTests.cpp",
        "patchSetId": 4
      },
      "lineNbr": 425,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2022-06-28T22:56:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "191bc6dd_c6615a32",
      "range": {
        "startLine": 425,
        "startChar": 43,
        "endLine": 425,
        "endChar": 57
      },
      "revId": "8115c58f1a4583dfe60af6aa8f8f45572161b93a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "27a80f86_d9aee4f1",
        "filename": "src/dawn/tests/end2end/PipelineCachingTests.cpp",
        "patchSetId": 4
      },
      "lineNbr": 434,
      "author": {
        "id": 1002831
      },
      "writtenOn": "2022-06-28T20:11:05Z",
      "side": 1,
      "message": "nit. count.shaderModule",
      "range": {
        "startLine": 434,
        "startChar": 37,
        "endLine": 434,
        "endChar": 39
      },
      "revId": "8115c58f1a4583dfe60af6aa8f8f45572161b93a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ec42778f_3ded8f9a",
        "filename": "src/dawn/tests/end2end/PipelineCachingTests.cpp",
        "patchSetId": 4
      },
      "lineNbr": 434,
      "author": {
        "id": 1002831
      },
      "writtenOn": "2022-06-28T20:12:01Z",
      "side": 1,
      "message": "Actually, might not be nit, might actually be causing test failures in windows.",
      "parentUuid": "27a80f86_d9aee4f1",
      "range": {
        "startLine": 434,
        "startChar": 37,
        "endLine": 434,
        "endChar": 39
      },
      "revId": "8115c58f1a4583dfe60af6aa8f8f45572161b93a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a312cae9_3df976fe",
        "filename": "src/dawn/tests/end2end/PipelineCachingTests.cpp",
        "patchSetId": 4
      },
      "lineNbr": 434,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2022-06-28T22:56:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ec42778f_3ded8f9a",
      "range": {
        "startLine": 434,
        "startChar": 37,
        "endLine": 434,
        "endChar": 39
      },
      "revId": "8115c58f1a4583dfe60af6aa8f8f45572161b93a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ef7c5bf6_a1122658",
        "filename": "src/dawn/tests/end2end/PipelineCachingTests.cpp",
        "patchSetId": 4
      },
      "lineNbr": 449,
      "author": {
        "id": 1002831
      },
      "writtenOn": "2022-06-28T20:11:05Z",
      "side": 1,
      "message": "nit. count.shaderModule",
      "range": {
        "startLine": 449,
        "startChar": 37,
        "endLine": 449,
        "endChar": 39
      },
      "revId": "8115c58f1a4583dfe60af6aa8f8f45572161b93a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e71f6596_ead8007f",
        "filename": "src/dawn/tests/end2end/PipelineCachingTests.cpp",
        "patchSetId": 4
      },
      "lineNbr": 449,
      "author": {
        "id": 1002831
      },
      "writtenOn": "2022-06-28T20:12:01Z",
      "side": 1,
      "message": "Same as above.",
      "parentUuid": "ef7c5bf6_a1122658",
      "range": {
        "startLine": 449,
        "startChar": 37,
        "endLine": 449,
        "endChar": 39
      },
      "revId": "8115c58f1a4583dfe60af6aa8f8f45572161b93a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fa8d131c_731abef9",
        "filename": "src/dawn/tests/end2end/PipelineCachingTests.cpp",
        "patchSetId": 4
      },
      "lineNbr": 449,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2022-06-28T22:56:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e71f6596_ead8007f",
      "range": {
        "startLine": 449,
        "startChar": 37,
        "endLine": 449,
        "endChar": 39
      },
      "revId": "8115c58f1a4583dfe60af6aa8f8f45572161b93a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a1a13bc6_711dc74d",
        "filename": "src/dawn/tests/unittests/native/CacheKeyTests.cpp",
        "patchSetId": 4
      },
      "lineNbr": 209,
      "author": {
        "id": 1002831
      },
      "writtenOn": "2022-06-28T20:11:05Z",
      "side": 1,
      "message": "nit. expected.Record(s);",
      "range": {
        "startLine": 208,
        "startChar": 4,
        "endLine": 209,
        "endChar": 56
      },
      "revId": "8115c58f1a4583dfe60af6aa8f8f45572161b93a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "82e275e2_85cce7d3",
        "filename": "src/dawn/tests/unittests/native/CacheKeyTests.cpp",
        "patchSetId": 4
      },
      "lineNbr": 209,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2022-06-28T22:56:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a1a13bc6_711dc74d",
      "range": {
        "startLine": 208,
        "startChar": 4,
        "endLine": 209,
        "endChar": 56
      },
      "revId": "8115c58f1a4583dfe60af6aa8f8f45572161b93a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}