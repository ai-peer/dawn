{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "a2b39692_56889454",
        "filename": "src/dawn/dawn.json",
        "patchSetId": 15
      },
      "lineNbr": 3023,
      "author": {
        "id": 1002831
      },
      "writtenOn": "2024-02-21T00:34:55Z",
      "side": 1,
      "message": "Not sure off the bat, but this might need `\"annotation\": \"const*\"`, see `get compilation info` for example.\n\nProbably also need a `status` field with a corresponding `request adapter info status` code. Mainly to handle the `instance dropped` case.",
      "range": {
        "startLine": 3023,
        "startChar": 12,
        "endLine": 3023,
        "endChar": 61
      },
      "revId": "f46aa72792d4aeb7b300f50781e3dbeb78652618",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a1eef500_4923e1b6",
        "filename": "src/dawn/tests/unittests/wire/WireAdapterInfoTests.cpp",
        "patchSetId": 15
      },
      "lineNbr": 126,
      "author": {
        "id": 1000480
      },
      "writtenOn": "2024-02-20T16:03:37Z",
      "side": 1,
      "message": "I\u0027ve started adding a skeleton for wire adapter info tests but I get this.\n@lokokung@google.com Does that make sense to you?\n\n```\n[1/4] WireAdapterInfoTests.RequestAdapterInfoSuccess/Async (17 ms)\n[2/4] WireAdapterInfoTests.RequestAdapterInfoSuccess/WaitOnly (0 ms)\n[3/4] WireAdapterInfoTests.RequestAdapterInfoSuccess/ProcessEvents (0 ms)\n[4/4] WireAdapterInfoTests.RequestAdapterInfoSuccess/Spontaneous (TIMED OUT)\n1 test timed out:\n    WireAdapterInfoTests.RequestAdapterInfoSuccess/Spontaneous (../../third_party/dawn/src/dawn/tests/unittests/wire/WireAdapterInfoTests.cpp:125)\n```",
      "revId": "f46aa72792d4aeb7b300f50781e3dbeb78652618",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f74bfa11_2d598895",
        "filename": "src/dawn/tests/unittests/wire/WireAdapterInfoTests.cpp",
        "patchSetId": 15
      },
      "lineNbr": 126,
      "author": {
        "id": 1002831
      },
      "writtenOn": "2024-02-21T00:34:55Z",
      "side": 1,
      "message": "You need an expectation and reply block, example:\n\n```\nWGPUAdapterInfo info;\n\nEXPECT_CALL(api, OnRequestAdapterInfo(apiAdapter, NotNull(), NotNull()))\n    .WillOnce([]() {\n        // Call the callback so the test doesn\u0027t wait indefinitely.\n        api.CallAdapterRequestAdapterInfoCallback(\n            apiAdapter,\n            WGPURequestAdapterInfo_Success,\n            \u0026info\n        );\n    });\nFlushClient();\nFlushFutures();\nExpectWireCallbacksWhen([\u0026](auto\u0026 mockCb) {\n    EXPECT_CALL(mockCb, Call).Times(1);\n\n    FlushCallbacks();\n});\n```",
      "parentUuid": "a1eef500_4923e1b6",
      "revId": "f46aa72792d4aeb7b300f50781e3dbeb78652618",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}