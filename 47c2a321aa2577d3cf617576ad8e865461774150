{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "03bdb284_0412f1b2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1002956
      },
      "writtenOn": "2021-11-22T12:25:30Z",
      "side": 1,
      "message": "PTAL, thanks.",
      "revId": "47c2a321aa2577d3cf617576ad8e865461774150",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e81720f2_1bf808ce",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-11-22T15:49:56Z",
      "side": 1,
      "message": "Still LGTM, thanks for the update.\n\nCan someone else take a look? Austin, Jiawei?",
      "revId": "47c2a321aa2577d3cf617576ad8e865461774150",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b52e37ef_3d8afd08",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2021-11-22T19:13:00Z",
      "side": 1,
      "message": "LGTM",
      "revId": "47c2a321aa2577d3cf617576ad8e865461774150",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "09b84eab_30726157",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1002176
      },
      "writtenOn": "2021-11-23T06:13:37Z",
      "side": 1,
      "message": "LGTM, thanks Junwei.",
      "revId": "47c2a321aa2577d3cf617576ad8e865461774150",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "566cd75e_3837892d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1002956
      },
      "writtenOn": "2021-11-23T07:34:54Z",
      "side": 1,
      "message": "PTAL, thanks.",
      "revId": "47c2a321aa2577d3cf617576ad8e865461774150",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7c50b104_877848c3",
        "filename": "dawn.json",
        "patchSetId": 6
      },
      "lineNbr": 23,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2021-11-22T19:13:00Z",
      "side": 1,
      "message": "unit: maybe the generator could infer c_prefix to be namespace.upper() if it\u0027s not provided. Perhaps other APIs using this will follow the same pattern where they are the same except for casing. c_prefix can still be explicitly provided though in case something different is needed",
      "range": {
        "startLine": 22,
        "startChar": 8,
        "endLine": 23,
        "endChar": 27
      },
      "revId": "47c2a321aa2577d3cf617576ad8e865461774150",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a2e88584_7bed002c",
        "filename": "dawn.json",
        "patchSetId": 6
      },
      "lineNbr": 23,
      "author": {
        "id": 1002956
      },
      "writtenOn": "2021-11-23T07:34:54Z",
      "side": 1,
      "message": "Make c_prefix optional, PTAL thanks.\n\nYes, both c_prefix and namespace can infer for various usage, for example the as_cMethod[1] prefix \"wgpu\" that can be converted with c_prefix.\n\n[1] https://dawn-review.googlesource.com/c/dawn/+/70220/6/generator/dawn_json_generator.py#641",
      "parentUuid": "7c50b104_877848c3",
      "range": {
        "startLine": 22,
        "startChar": 8,
        "endLine": 23,
        "endChar": 27
      },
      "revId": "47c2a321aa2577d3cf617576ad8e865461774150",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "51b1a2f1_60ff0b3c",
        "filename": "generator/templates/api.h",
        "patchSetId": 6
      },
      "lineNbr": 24,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-11-22T15:49:56Z",
      "side": 1,
      "message": "nit: will the copyright year need to be customized for WebNN?",
      "range": {
        "startLine": 24,
        "startChar": 17,
        "endLine": 24,
        "endChar": 21
      },
      "revId": "47c2a321aa2577d3cf617576ad8e865461774150",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5fb3ff87_0bbfe6e7",
        "filename": "generator/templates/api.h",
        "patchSetId": 6
      },
      "lineNbr": 24,
      "author": {
        "id": 1002176
      },
      "writtenOn": "2021-11-23T06:13:37Z",
      "side": 1,
      "message": "WebNN probably needs to set the copyright year to 2021.",
      "parentUuid": "51b1a2f1_60ff0b3c",
      "range": {
        "startLine": 24,
        "startChar": 17,
        "endLine": 24,
        "endChar": 21
      },
      "revId": "47c2a321aa2577d3cf617576ad8e865461774150",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "31719e73_2e322321",
        "filename": "generator/templates/api.h",
        "patchSetId": 6
      },
      "lineNbr": 24,
      "author": {
        "id": 1002956
      },
      "writtenOn": "2021-11-23T07:34:54Z",
      "side": 1,
      "message": "Add optional entry \"copyright_year\".",
      "parentUuid": "51b1a2f1_60ff0b3c",
      "range": {
        "startLine": 24,
        "startChar": 17,
        "endLine": 24,
        "endChar": 21
      },
      "revId": "47c2a321aa2577d3cf617576ad8e865461774150",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}