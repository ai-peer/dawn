{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "8e2a059a_84400754",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 12,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-03-07T22:25:56Z",
      "side": 1,
      "message": "no `Bug:`?",
      "revId": "d276685326a5b5378f484e8b514376696895a7b8",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f236a55b_ec8cecf7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-03-07T22:25:56Z",
      "side": 1,
      "message": "LGTM\n\nwow there are three Antonio\u0027s on this CL :)",
      "revId": "d276685326a5b5378f484e8b514376696895a7b8",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5b54cd01_551a72c5",
        "filename": "src/dawn/tests/end2end/ComputeFlowControlTests.cpp",
        "patchSetId": 6
      },
      "lineNbr": 19,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-03-07T22:25:56Z",
      "side": 1,
      "message": "could you also describe what the problem it finds is?",
      "revId": "d276685326a5b5378f484e8b514376696895a7b8",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5c48099e_3759f201",
        "filename": "src/dawn/tests/end2end/ComputeFlowControlTests.cpp",
        "patchSetId": 6
      },
      "lineNbr": 335,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-03-07T22:25:56Z",
      "side": 1,
      "message": "above this test, and the others, provide a short description of what it\u0027s testing. Generally we do this for all tests in Dawn.\n\nsome tests it\u0027s obvious, but it\u0027s still preferable to include it.\nFor example, for this one it took me a while to understand that \"NoCountPlusPlus\" was talking about the `.count++` operation. I thought that the test had \"no count\".\na description in a comment makes things less ambiguous",
      "range": {
        "startLine": 335,
        "startChar": 0,
        "endLine": 335,
        "endChar": 57
      },
      "revId": "d276685326a5b5378f484e8b514376696895a7b8",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}