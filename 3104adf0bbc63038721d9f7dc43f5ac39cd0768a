{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "b6088dd0_efc3e640",
        "filename": "src/tint/lang/core/intrinsic/table.cc",
        "patchSetId": 2
      },
      "lineNbr": 139,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2024-02-20T14:40:29Z",
      "side": 1,
      "message": "This seems more like a parameter then a template.",
      "revId": "3104adf0bbc63038721d9f7dc43f5ac39cd0768a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f89ccf91_e82b300a",
        "filename": "src/tint/lang/core/intrinsic/table.cc",
        "patchSetId": 2
      },
      "lineNbr": 139,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2024-02-20T16:03:21Z",
      "side": 1,
      "message": "It\u0027s intentionally a template for performance reasons. By making it a template, we\u0027ll produce two implementations of the function - one that early outs without repeated checks on the parameter, one that doesn\u0027t.",
      "parentUuid": "b6088dd0_efc3e640",
      "revId": "3104adf0bbc63038721d9f7dc43f5ac39cd0768a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "54433dd0_c46a41c0",
        "filename": "src/tint/lang/core/intrinsic/table.cc",
        "patchSetId": 2
      },
      "lineNbr": 139,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2024-02-20T16:05:12Z",
      "side": 1,
      "message": "Sure, but is the performance benefit over an `if (LIKLEY(early_exit)) { return; }` worth the extra maintenance overhead.",
      "parentUuid": "f89ccf91_e82b300a",
      "revId": "3104adf0bbc63038721d9f7dc43f5ac39cd0768a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0f5a7236_873d9b1f",
        "filename": "src/tint/lang/core/intrinsic/table.cc",
        "patchSetId": 2
      },
      "lineNbr": 139,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2024-02-20T16:51:34Z",
      "side": 1,
      "message": "It\u0027s extremely hot code, so I\u0027d argue that keeping the innermost function as lean as possible is probably worth it.\n\n[Perfmon seems to think the wins are worthwhile](https://dawn-review.googlesource.com/c/dawn/+/175246/2#message-9a0caccdd184ed1f19ba9565f4616fd920d5f6b2).\n\n\nIs the maintenance overhead really that much more than what you\u0027re proposing?",
      "parentUuid": "54433dd0_c46a41c0",
      "revId": "3104adf0bbc63038721d9f7dc43f5ac39cd0768a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8dc851f7_6656affe",
        "filename": "src/tint/lang/core/intrinsic/table.cc",
        "patchSetId": 2
      },
      "lineNbr": 139,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2024-02-20T17:33:48Z",
      "side": 1,
      "message": "The perfmon result is for the early exit, but it doesn\u0027t really compare against the same thing using a parameter.\n\nI\u0027m not saying the change isn\u0027t worthwhile, the early exit makese sense, I\u0027m questoning if there is a benefit to doing it as a template parameter (which is a bit odd for what it\u0027s doing) vs just passing a parameter.",
      "parentUuid": "0f5a7236_873d9b1f",
      "revId": "3104adf0bbc63038721d9f7dc43f5ac39cd0768a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4bde4f78_253ad2f2",
        "filename": "src/tint/lang/core/intrinsic/table.cc",
        "patchSetId": 2
      },
      "lineNbr": 139,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2024-02-20T17:45:25Z",
      "side": 1,
      "message": "\u003e I\u0027m questoning if there is a benefit to doing it as a template parameter (which is a bit odd for what it\u0027s doing) vs just passing a parameter.\n\nA conditional on a parameter as you\u0027re suggesting, is more instructions for the hot function to execute, and introduces more branches into the inner function. Branches are not free. Your branch prediction hint may help reduce the cost of the typical no-match, but will likely cause a branch misprediction for an overload match.\n\nWe can keep on nitpicking over the % gain the template parameter provides, but there\u0027s clearly _some gain_.\n\nSo, the question is about maintenance. Why do you feel that a template parameter is more maintenance than a function parameter?",
      "parentUuid": "8dc851f7_6656affe",
      "revId": "3104adf0bbc63038721d9f7dc43f5ac39cd0768a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ddea94ee_db9aa80f",
        "filename": "src/tint/lang/core/intrinsic/table.cc",
        "patchSetId": 2
      },
      "lineNbr": 139,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2024-02-20T17:50:10Z",
      "side": 1,
      "message": "Because someone will come along and say why is this a template, as that isn\u0027t how you usually pass an enum into a method and then have to figure out why it\u0027s built this way. They\u0027ll then get to vague claims of \"it\u0027s faster\", which then leaves them to do some experimentation to determine if it\u0027s actualy faster.\n\nI think it\u0027s more maintenance because it seems like an odd way to pass an enum into a function.",
      "parentUuid": "4bde4f78_253ad2f2",
      "revId": "3104adf0bbc63038721d9f7dc43f5ac39cd0768a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "69d5db99_2a06d529",
        "filename": "src/tint/lang/core/intrinsic/table.cc",
        "patchSetId": 2
      },
      "lineNbr": 139,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2024-02-20T17:59:17Z",
      "side": 1,
      "message": "Added a template parameter comment explaining why it\u0027s not a regular parameter. I\u0027m really not keen on making this a regular parameter, because I really don\u0027t want to emit pointless conditionals for the hot path.",
      "parentUuid": "ddea94ee_db9aa80f",
      "revId": "3104adf0bbc63038721d9f7dc43f5ac39cd0768a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c5416562_2176c470",
        "filename": "src/tint/lang/core/intrinsic/table.cc",
        "patchSetId": 2
      },
      "lineNbr": 139,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2024-02-20T18:05:15Z",
      "side": 1,
      "message": "ok.",
      "parentUuid": "69d5db99_2a06d529",
      "revId": "3104adf0bbc63038721d9f7dc43f5ac39cd0768a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "79406b36_4f87dcf5",
        "filename": "src/tint/lang/core/intrinsic/table.cc",
        "patchSetId": 2
      },
      "lineNbr": 139,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2024-02-20T18:47:39Z",
      "side": 1,
      "message": "Thanks",
      "parentUuid": "c5416562_2176c470",
      "revId": "3104adf0bbc63038721d9f7dc43f5ac39cd0768a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}