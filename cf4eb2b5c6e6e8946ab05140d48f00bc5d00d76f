{
  "comments": [
    {
      "key": {
        "uuid": "a5073b4b_21c3084b",
        "filename": "src/dawn_native/d3d12/DeviceD3D12.cpp",
        "patchSetId": 2
      },
      "lineNbr": 107,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-05-11T19:00:21Z",
      "side": 1,
      "message": "nit: add a comment that these use the residency manager and must be initialized after it.",
      "revId": "cf4eb2b5c6e6e8946ab05140d48f00bc5d00d76f",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1735f21a_97884b7b",
        "filename": "src/dawn_native/d3d12/DeviceD3D12.cpp",
        "patchSetId": 2
      },
      "lineNbr": 107,
      "author": {
        "id": 1000248
      },
      "writtenOn": "2020-05-18T18:31:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a5073b4b_21c3084b",
      "revId": "cf4eb2b5c6e6e8946ab05140d48f00bc5d00d76f",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f73e226d_f2867b5a",
        "filename": "src/dawn_native/d3d12/ShaderVisibleDescriptorAllocatorD3D12.cpp",
        "patchSetId": 2
      },
      "lineNbr": 136,
      "author": {
        "id": 1000268
      },
      "writtenOn": "2020-05-11T19:27:18Z",
      "side": 1,
      "message": "nit: please add a comment that sizeIncrement X count is known to be ridiculously inaccurate and could consider using a non-tracking based method instead.",
      "revId": "cf4eb2b5c6e6e8946ab05140d48f00bc5d00d76f",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "184da76c_5df7732f",
        "filename": "src/dawn_native/d3d12/ShaderVisibleDescriptorAllocatorD3D12.cpp",
        "patchSetId": 2
      },
      "lineNbr": 136,
      "author": {
        "id": 1000262
      },
      "writtenOn": "2020-05-13T23:31:02Z",
      "side": 1,
      "message": "I am not sure what you mean by \"non-tracking based method\" but using \u0027mSizeIncrement * descriptorCount\u0027 is the best heuristic we have at the moment. The driver can decide to use more memory than the calculated amount and can differ from the size returned in various desc structures. \n\nOne strategy we discussed offline is that if CreateXXXHeap/MakeResident fails, we can try to evict a few more resources and make additional attempts. I\u0027m fine with tackling this as a separate change.",
      "parentUuid": "f73e226d_f2867b5a",
      "revId": "cf4eb2b5c6e6e8946ab05140d48f00bc5d00d76f",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "103e7e33_1317bab0",
        "filename": "src/dawn_native/d3d12/ShaderVisibleDescriptorAllocatorD3D12.cpp",
        "patchSetId": 2
      },
      "lineNbr": 136,
      "author": {
        "id": 1000268
      },
      "writtenOn": "2020-05-14T00:01:23Z",
      "side": 1,
      "message": "@RC, the computed size is being tracked for purposes of residency and a TODO also SGTM.",
      "parentUuid": "184da76c_5df7732f",
      "revId": "cf4eb2b5c6e6e8946ab05140d48f00bc5d00d76f",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e95eaf4d_1e12884d",
        "filename": "src/dawn_native/d3d12/ShaderVisibleDescriptorAllocatorD3D12.cpp",
        "patchSetId": 2
      },
      "lineNbr": 136,
      "author": {
        "id": 1000248
      },
      "writtenOn": "2020-05-18T18:31:37Z",
      "side": 1,
      "message": "Added comments.",
      "parentUuid": "103e7e33_1317bab0",
      "revId": "cf4eb2b5c6e6e8946ab05140d48f00bc5d00d76f",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6a800853_5a5c8e40",
        "filename": "src/dawn_native/d3d12/ShaderVisibleDescriptorAllocatorD3D12.cpp",
        "patchSetId": 2
      },
      "lineNbr": 178,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-05-11T19:00:21Z",
      "side": 1,
      "message": "boolean getters can be \"Is.....\"",
      "range": {
        "startLine": 178,
        "startChar": 43,
        "endLine": 178,
        "endChar": 89
      },
      "revId": "cf4eb2b5c6e6e8946ab05140d48f00bc5d00d76f",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "83afe19f_d6fb0178",
        "filename": "src/dawn_native/d3d12/ShaderVisibleDescriptorAllocatorD3D12.cpp",
        "patchSetId": 2
      },
      "lineNbr": 178,
      "author": {
        "id": 1000248
      },
      "writtenOn": "2020-05-18T18:31:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6a800853_5a5c8e40",
      "range": {
        "startLine": 178,
        "startChar": 43,
        "endLine": 178,
        "endChar": 89
      },
      "revId": "cf4eb2b5c6e6e8946ab05140d48f00bc5d00d76f",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8807e075_432a9403",
        "filename": "src/dawn_native/d3d12/ShaderVisibleDescriptorAllocatorD3D12.cpp",
        "patchSetId": 2
      },
      "lineNbr": 182,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-05-11T19:00:21Z",
      "side": 1,
      "message": "ditto",
      "range": {
        "startLine": 182,
        "startChar": 43,
        "endLine": 182,
        "endChar": 84
      },
      "revId": "cf4eb2b5c6e6e8946ab05140d48f00bc5d00d76f",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cf29277e_fdd3bd31",
        "filename": "src/dawn_native/d3d12/ShaderVisibleDescriptorAllocatorD3D12.cpp",
        "patchSetId": 2
      },
      "lineNbr": 182,
      "author": {
        "id": 1000248
      },
      "writtenOn": "2020-05-18T18:31:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8807e075_432a9403",
      "range": {
        "startLine": 182,
        "startChar": 43,
        "endLine": 182,
        "endChar": 84
      },
      "revId": "cf4eb2b5c6e6e8946ab05140d48f00bc5d00d76f",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4c47f392_0302e7dd",
        "filename": "src/tests/white_box/D3D12ResidencyTests.cpp",
        "patchSetId": 2
      },
      "lineNbr": 370,
      "author": {
        "id": 1000268
      },
      "writtenOn": "2020-05-11T19:27:18Z",
      "side": 1,
      "message": "This test is quite fragile and will fail once sampler de-dupling merges. \u003d( \n\nDo you mind creating views instead? Those will remain uncached.",
      "revId": "cf4eb2b5c6e6e8946ab05140d48f00bc5d00d76f",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "be367a8f_8a81903a",
        "filename": "src/tests/white_box/D3D12ResidencyTests.cpp",
        "patchSetId": 2
      },
      "lineNbr": 370,
      "author": {
        "id": 1000248
      },
      "writtenOn": "2020-05-18T18:31:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4c47f392_0302e7dd",
      "revId": "cf4eb2b5c6e6e8946ab05140d48f00bc5d00d76f",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    }
  ]
}