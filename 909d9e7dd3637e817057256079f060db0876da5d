{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "268ac784_93371d6a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000122
      },
      "writtenOn": "2024-03-20T12:50:29Z",
      "side": 1,
      "message": "Hi folks,\n\nHere\u0027s an initial CL adding the ability to set a static sampler in a sampler binding layout. Before we go further however, I have a question: Is having Sampler instances in static samplers actually what we need? i.e., our only use case is YCbCr, and I have an impression (but could be wrong here) that for YCbCr what Dawn would save under the hood in the Vulkan backend would actually be the YCbCr info itself rather than a Vulkan sampler instance that would correspond to the Dawn sampler instance passed in the static sampler?\n\nIn other words, what will we actually need to pass for setting YCbCr samplers as part of sampler binding layout? We should make sure that the general-purpose setup we\u0027re doing here actually paves the way for that.",
      "revId": "909d9e7dd3637e817057256079f060db0876da5d",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "68c8e8c8_b9bb3845",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000122
      },
      "writtenOn": "2024-03-20T15:51:09Z",
      "side": 1,
      "message": "BTW, I chatted with Vasiliy and Nicolette and both of them indicated that it\u0027s the YCbCr Vulkan sampler *object* that is put in the pipeline layout. So if that\u0027s the case, then we\u0027re definitely going in the right direction here.",
      "parentUuid": "268ac784_93371d6a",
      "revId": "909d9e7dd3637e817057256079f060db0876da5d",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "59816864_bb3a5d6e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000122
      },
      "writtenOn": "2024-03-21T16:17:53Z",
      "side": 1,
      "message": "friendly ping, thanks!",
      "revId": "909d9e7dd3637e817057256079f060db0876da5d",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b95c933e_d34fa7b7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000122
      },
      "writtenOn": "2024-03-21T16:21:39Z",
      "side": 1,
      "message": "Austin informed me offline that he\u0027s handling P0 matters today so there will likely be a delay in reviewing. No worries as this CL is definitely not P0 :).",
      "revId": "909d9e7dd3637e817057256079f060db0876da5d",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4e99ba45_1fb43bcc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000122
      },
      "writtenOn": "2024-03-21T17:17:50Z",
      "side": 1,
      "message": "Thanks!",
      "revId": "909d9e7dd3637e817057256079f060db0876da5d",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8c69712c_25abd58a",
        "filename": "src/dawn/native/BindGroupLayoutInternal.cpp",
        "patchSetId": 4
      },
      "lineNbr": 124,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2024-03-22T16:42:47Z",
      "side": 1,
      "message": "nit: here you should do something like:\n\n```\nauto sampler \u003d ValidateAndUnpack(entry-\u003esampler);\nDAWN_INVALID_IF(sampler.Get\u003cStaticSampler\u003e() \u0026\u0026 !HasFeature(..), msg, ...);\n```\n\nRight now, you\u0027re checking for *any* nextInChain, not just StaticSampler, so the message will be confusing.\n\nValidateAndUnpack is autogenerated and will check for unknown/invalid chains too.\n\nWe can add a test that passing some other arbitrary struct is invalid.",
      "revId": "909d9e7dd3637e817057256079f060db0876da5d",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3ebbd238_61995636",
        "filename": "src/dawn/native/BindGroupLayoutInternal.cpp",
        "patchSetId": 4
      },
      "lineNbr": 124,
      "author": {
        "id": 1000122
      },
      "writtenOn": "2024-03-25T14:09:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8c69712c_25abd58a",
      "revId": "909d9e7dd3637e817057256079f060db0876da5d",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "78daa4b1_062d8f4d",
        "filename": "src/dawn/native/BindGroupLayoutInternal.cpp",
        "patchSetId": 4
      },
      "lineNbr": 132,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2024-03-22T17:22:44Z",
      "side": 1,
      "message": "nit: add validation that entry-\u003esampler is not invalid (device-\u003eValidateObject(..))",
      "revId": "909d9e7dd3637e817057256079f060db0876da5d",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "39413985_122b9124",
        "filename": "src/dawn/native/BindGroupLayoutInternal.cpp",
        "patchSetId": 4
      },
      "lineNbr": 132,
      "author": {
        "id": 1000122
      },
      "writtenOn": "2024-03-25T14:09:57Z",
      "side": 1,
      "message": "I initially interpreted this to mean validating the sampler object attached to the static sampler, which I\u0027ve done. However, did you also mean adding this validation for `\u0026entry-\u003esampler` itself? FWIW that doesn\u0027t compile as it\u0027s not the right type for `ValidateObject()`, but it\u0027s entirely possible that I\u0027m missing something about your suggestion there.",
      "parentUuid": "78daa4b1_062d8f4d",
      "revId": "909d9e7dd3637e817057256079f060db0876da5d",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9a32609d_e50fcbae",
        "filename": "src/dawn/native/BindGroupLayoutInternal.cpp",
        "patchSetId": 4
      },
      "lineNbr": 132,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2024-03-25T22:59:03Z",
      "side": 1,
      "message": "oops - yes I meant the actual sampler object",
      "parentUuid": "39413985_122b9124",
      "revId": "909d9e7dd3637e817057256079f060db0876da5d",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d4f8252c_b34603b7",
        "filename": "src/dawn/tests/unittests/validation/CreateBindGroupLayoutValidationTests.cpp",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2024-03-22T16:45:03Z",
      "side": 1,
      "message": "probably can be moved to BindGroupValidationTests.cpp",
      "revId": "909d9e7dd3637e817057256079f060db0876da5d",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8a2da650_bc01b665",
        "filename": "src/dawn/tests/unittests/validation/CreateBindGroupLayoutValidationTests.cpp",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000122
      },
      "writtenOn": "2024-03-25T14:09:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d4f8252c_b34603b7",
      "revId": "909d9e7dd3637e817057256079f060db0876da5d",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0e1d8165_e65a5777",
        "filename": "src/dawn/tests/unittests/validation/CreateBindGroupLayoutValidationTests.cpp",
        "patchSetId": 4
      },
      "lineNbr": 40,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2024-03-22T16:42:47Z",
      "side": 1,
      "message": "it should work on the wire",
      "revId": "909d9e7dd3637e817057256079f060db0876da5d",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4c482640_bddf6210",
        "filename": "src/dawn/tests/unittests/validation/CreateBindGroupLayoutValidationTests.cpp",
        "patchSetId": 4
      },
      "lineNbr": 40,
      "author": {
        "id": 1000122
      },
      "writtenOn": "2024-03-25T14:09:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0e1d8165_e65a5777",
      "revId": "909d9e7dd3637e817057256079f060db0876da5d",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a495b547_a8d5f271",
        "filename": "src/dawn/tests/unittests/validation/CreateBindGroupLayoutValidationTests.cpp",
        "patchSetId": 4
      },
      "lineNbr": 66,
      "author": {
        "id": 1004687
      },
      "writtenOn": "2024-03-21T17:15:27Z",
      "side": 1,
      "message": "nit question for my knowledge: Is there a reason this and similar comment docs wrap at a lower line length than the test or class definitions?",
      "range": {
        "startLine": 65,
        "startChar": 0,
        "endLine": 66,
        "endChar": 31
      },
      "revId": "909d9e7dd3637e817057256079f060db0876da5d",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "daeecc0a_e56d2609",
        "filename": "src/dawn/tests/unittests/validation/CreateBindGroupLayoutValidationTests.cpp",
        "patchSetId": 4
      },
      "lineNbr": 66,
      "author": {
        "id": 1000122
      },
      "writtenOn": "2024-03-21T17:17:50Z",
      "side": 1,
      "message": "My editor wraps at 80 but I think Dawn style is something else (presumably 100), although I can\u0027t find the Dawn style guide online immediately.",
      "parentUuid": "a495b547_a8d5f271",
      "range": {
        "startLine": 65,
        "startChar": 0,
        "endLine": 66,
        "endChar": 31
      },
      "revId": "909d9e7dd3637e817057256079f060db0876da5d",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0dcf4610_9de50bd9",
        "filename": "src/dawn/tests/unittests/validation/CreateBindGroupLayoutValidationTests.cpp",
        "patchSetId": 4
      },
      "lineNbr": 66,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2024-03-22T16:42:47Z",
      "side": 1,
      "message": "yes, our third_party/dawn/.clang-format is 100 cols",
      "parentUuid": "daeecc0a_e56d2609",
      "range": {
        "startLine": 65,
        "startChar": 0,
        "endLine": 66,
        "endChar": 31
      },
      "revId": "909d9e7dd3637e817057256079f060db0876da5d",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ef81273f_0cc4d215",
        "filename": "src/dawn/tests/unittests/validation/CreateBindGroupLayoutValidationTests.cpp",
        "patchSetId": 4
      },
      "lineNbr": 66,
      "author": {
        "id": 1000122
      },
      "writtenOn": "2024-03-25T14:09:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0dcf4610_9de50bd9",
      "range": {
        "startLine": 65,
        "startChar": 0,
        "endLine": 66,
        "endChar": 31
      },
      "revId": "909d9e7dd3637e817057256079f060db0876da5d",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cad55367_66bd1f88",
        "filename": "src/dawn/tests/unittests/validation/CreateBindGroupLayoutValidationTests.cpp",
        "patchSetId": 4
      },
      "lineNbr": 68,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2024-03-22T16:42:47Z",
      "side": 1,
      "message": "ditto - should work on the wire",
      "revId": "909d9e7dd3637e817057256079f060db0876da5d",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "91be0960_17af3080",
        "filename": "src/dawn/tests/unittests/validation/CreateBindGroupLayoutValidationTests.cpp",
        "patchSetId": 4
      },
      "lineNbr": 68,
      "author": {
        "id": 1000122
      },
      "writtenOn": "2024-03-25T14:09:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cad55367_66bd1f88",
      "revId": "909d9e7dd3637e817057256079f060db0876da5d",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}