{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "f9dc3f47_dbf9d822",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 14
      },
      "lineNbr": 0,
      "author": {
        "id": 1002726
      },
      "writtenOn": "2021-09-10T00:10:28Z",
      "side": 1,
      "message": "I would love your thoughts on the open issues below. Thank you!",
      "revId": "6f36af6416882cf5519e7ede783f136abc6f58fd",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0d8322d7_740d6f38",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 14
      },
      "lineNbr": 0,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2021-09-10T02:15:12Z",
      "side": 1,
      "message": "LGTM",
      "revId": "6f36af6416882cf5519e7ede783f136abc6f58fd",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "87d472a4_08930d4e",
        "filename": "src/dawn_native/d3d12/ShaderModuleD3D12.cpp",
        "patchSetId": 14
      },
      "lineNbr": 106,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-09-10T10:27:04Z",
      "side": 1,
      "message": "This would need to be in ShaderCompilationRequest since it influences the compilation.",
      "range": {
        "startLine": 106,
        "startChar": 42,
        "endLine": 106,
        "endChar": 94
      },
      "revId": "6f36af6416882cf5519e7ede783f136abc6f58fd",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "01cb7aee_8bb16f22",
        "filename": "src/dawn_native/d3d12/ShaderModuleD3D12.cpp",
        "patchSetId": 14
      },
      "lineNbr": 409,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2021-09-10T02:15:12Z",
      "side": 1,
      "message": "nit: \"pipeline layout\u0027s root signature\"",
      "range": {
        "startLine": 409,
        "startChar": 23,
        "endLine": 409,
        "endChar": 38
      },
      "revId": "6f36af6416882cf5519e7ede783f136abc6f58fd",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0712c9ac_a31f2ef4",
        "filename": "src/dawn_native/d3d12/ShaderModuleD3D12.cpp",
        "patchSetId": 14
      },
      "lineNbr": 409,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-09-10T10:27:04Z",
      "side": 1,
      "message": "Why not serialize the pipeline layout? It\u0027s not clear that everything that influence the output HLSL is encoded in the root signature.",
      "parentUuid": "01cb7aee_8bb16f22",
      "range": {
        "startLine": 409,
        "startChar": 23,
        "endLine": 409,
        "endChar": 38
      },
      "revId": "6f36af6416882cf5519e7ede783f136abc6f58fd",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bf84994f_b1de7d87",
        "filename": "src/dawn_native/d3d12/ShaderModuleD3D12.h",
        "patchSetId": 14
      },
      "lineNbr": 60,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-09-10T10:27:04Z",
      "side": 1,
      "message": "I have some concerns about doing the caching with the inputs to HLSL translation without prior hardening. It is easy to forget to add some of the arguments to the cache, which would cause hard to debug issues.\n\nOne solution would be to make a `ShaderCompilationRequest` that contains everything that will impact the shader output, including toggles and enabled extension. It would have a way to get a PersistentCacheKey from it, and would be used as an input to TranslateToHLSL. To enforce that TranslateToHLSL and others don\u0027t use outside state, it could be given only the ShaderCompilationRequest and platform functions.",
      "revId": "6f36af6416882cf5519e7ede783f136abc6f58fd",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}