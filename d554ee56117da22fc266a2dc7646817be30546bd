{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "4c350318_c527bc45",
        "filename": "/COMMIT_MSG",
        "patchSetId": 26
      },
      "lineNbr": 11,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-12-19T13:37:36Z",
      "side": 1,
      "message": "nit: contains",
      "range": {
        "startLine": 11,
        "startChar": 8,
        "endLine": 11,
        "endChar": 15
      },
      "revId": "d554ee56117da22fc266a2dc7646817be30546bd",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "180459a8_b4527cc3",
        "filename": "/COMMIT_MSG",
        "patchSetId": 26
      },
      "lineNbr": 21,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-12-19T13:37:36Z",
      "side": 1,
      "message": "Do we have a tracking issue for this stack of CLs? It would be nice",
      "revId": "d554ee56117da22fc266a2dc7646817be30546bd",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4c26c9d6_c2f67c6e",
        "filename": "dawn_lpm.json",
        "patchSetId": 26
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-12-19T13:37:36Z",
      "side": 1,
      "message": "nit: Maybe this file could be in src/dawn/fuzzers to be better scoped (we want to move dawn.json eventually too).",
      "revId": "d554ee56117da22fc266a2dc7646817be30546bd",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3af39e99_e9f4d1f2",
        "filename": "dawn_lpm.json",
        "patchSetId": 26
      },
      "lineNbr": 18,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-12-19T13:38:53Z",
      "side": 1,
      "message": "Can we also start updating that doc with this CL stack?",
      "revId": "d554ee56117da22fc266a2dc7646817be30546bd",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7a96e591_a932b1d7",
        "filename": "generator/dawn_json_generator.py",
        "patchSetId": 26
      },
      "lineNbr": 1045,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-12-19T13:37:36Z",
      "side": 1,
      "message": "why {}? It is where future stuff will be added?",
      "range": {
        "startLine": 1045,
        "startChar": 54,
        "endLine": 1045,
        "endChar": 56
      },
      "revId": "d554ee56117da22fc266a2dc7646817be30546bd",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0b01a9dc_48c41f59",
        "filename": "generator/dawn_json_generator.py",
        "patchSetId": 26
      },
      "lineNbr": 1053,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-12-19T13:37:36Z",
      "side": 1,
      "message": "any reason both targets need to be separated instead of having a single dawn_lpmfuzz?",
      "revId": "d554ee56117da22fc266a2dc7646817be30546bd",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "422af91d_a5446fda",
        "filename": "generator/dawn_json_generator.py",
        "patchSetId": 26
      },
      "lineNbr": 1080,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-12-19T13:37:36Z",
      "side": 1,
      "message": "This needs modification too to account for the lpm.json.",
      "revId": "d554ee56117da22fc266a2dc7646817be30546bd",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "47cbb903_c41a9907",
        "filename": "generator/templates/dawn/fuzzers/lpmfuzz/DawnLPMSerializer.h",
        "patchSetId": 26
      },
      "lineNbr": 26,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-12-19T13:37:36Z",
      "side": 1,
      "message": "nit: ObjectIdProvider? Since that\u0027s the interface and DawnLPMObjectIdProvider is the implementation?",
      "range": {
        "startLine": 26,
        "startChar": 29,
        "endLine": 26,
        "endChar": 52
      },
      "revId": "d554ee56117da22fc266a2dc7646817be30546bd",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "375e880c_8cca66b3",
        "filename": "generator/templates/dawn/fuzzers/lpmfuzz/dawn_lpm.proto",
        "patchSetId": 26
      },
      "lineNbr": 19,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-12-19T13:37:36Z",
      "side": 1,
      "message": "nit: this comment will be replicated many times and will say \"command\". Did you mean to put {{command}} or something else?",
      "revId": "d554ee56117da22fc266a2dc7646817be30546bd",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fcd3035b_2fc9b74d",
        "filename": "src/dawn/fuzzers/BUILD.gn",
        "patchSetId": 26
      },
      "lineNbr": 28,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-12-19T13:37:36Z",
      "side": 1,
      "message": "[1]",
      "revId": "d554ee56117da22fc266a2dc7646817be30546bd",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "08604475_55277824",
        "filename": "src/dawn/fuzzers/BUILD.gn",
        "patchSetId": 26
      },
      "lineNbr": 113,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-12-19T14:04:57Z",
      "side": 1,
      "message": "Given this is only tested with Chromium if fuzzing is enabled, we have a HIGH likelihood to break the code when we do updates to Dawn because this code will not compile neither in local builds or on CQ.\n\nIMHO we\u0027ll need to add some compilation of it on CQ before we turn it on by default. So in the meantime can it be all gated behind a GN variable that defaults to false?",
      "revId": "d554ee56117da22fc266a2dc7646817be30546bd",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "500455fc_fda2c4c7",
        "filename": "src/dawn/fuzzers/BUILD.gn",
        "patchSetId": 26
      },
      "lineNbr": 114,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-12-19T13:37:36Z",
      "side": 1,
      "message": "This is already done at [1]",
      "revId": "d554ee56117da22fc266a2dc7646817be30546bd",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a7fc90cf_425d0470",
        "filename": "src/dawn/fuzzers/BUILD.gn",
        "patchSetId": 26
      },
      "lineNbr": 133,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-12-19T13:37:36Z",
      "side": 1,
      "message": "Ah you probably used two targets so that get_target_outputs() works here?",
      "revId": "d554ee56117da22fc266a2dc7646817be30546bd",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "caf75c2f_80c3e4e5",
        "filename": "src/dawn/fuzzers/BUILD.gn",
        "patchSetId": 26
      },
      "lineNbr": 143,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-12-19T13:37:36Z",
      "side": 1,
      "message": "How hard would it be to fix? I worry that if the protobuf generator changes paths then we\u0027ll have to do very complicated updates between Dawn and Chromium. But maybe that will never happen.",
      "revId": "d554ee56117da22fc266a2dc7646817be30546bd",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}