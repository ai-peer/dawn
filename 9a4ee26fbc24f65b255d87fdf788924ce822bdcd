{
  "comments": [
    {
      "key": {
        "uuid": "de1587cb_85f1f85a",
        "filename": "src/tests/DawnTest.cpp",
        "patchSetId": 2
      },
      "lineNbr": 156,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-05-19T09:59:53Z",
      "side": 1,
      "message": "What do you think of doing this in the D3D12 backend instead by for example adding the device ID in parenthesis (or RDP / WARP based on the device ID)?",
      "revId": "9a4ee26fbc24f65b255d87fdf788924ce822bdcd",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9945dc6d_a335d174",
        "filename": "src/tests/DawnTest.cpp",
        "patchSetId": 2
      },
      "lineNbr": 156,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2020-05-19T12:06:01Z",
      "side": 1,
      "message": "The device id of these two adapters named \"Microsoft Basic Render Driver\" are both 0x008C, and the only difference is the adapter type.",
      "parentUuid": "de1587cb_85f1f85a",
      "revId": "9a4ee26fbc24f65b255d87fdf788924ce822bdcd",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "67f7f388_378a0ed6",
        "filename": "src/tests/DawnTest.cpp",
        "patchSetId": 2
      },
      "lineNbr": 156,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-05-19T12:52:07Z",
      "side": 1,
      "message": "Ah ok. I\u0027m not sure what\u0027s the best solution, doing it here as a workaround, or in the D3D12 backend. Austin WDYT?",
      "parentUuid": "9945dc6d_a335d174",
      "revId": "9a4ee26fbc24f65b255d87fdf788924ce822bdcd",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "90e7cbdd_a2048913",
        "filename": "src/tests/DawnTest.cpp",
        "patchSetId": 2
      },
      "lineNbr": 156,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-05-19T17:41:40Z",
      "side": 1,
      "message": "Are both of these using WARP then and not the Intel driver? If so, maybe we could deduplicate them when we discover adapters.\n\nOtherwise, it\u0027s fine with me to do it here as a workaround. Maybe we could have the vendorID instead if it\u0027s different.",
      "parentUuid": "67f7f388_378a0ed6",
      "revId": "9a4ee26fbc24f65b255d87fdf788924ce822bdcd",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e9547703_0384b2e4",
        "filename": "src/tests/DawnTest.cpp",
        "patchSetId": 2
      },
      "lineNbr": 156,
      "author": {
        "id": 1000262
      },
      "writtenOn": "2020-05-19T21:38:21Z",
      "side": 1,
      "message": "Warp can be determined via the vendor id of 0x1414 and the device id of 0x8C. \n\nYes, Warp sometimes appears twice. For software, you generally want to use the Warp adapter with 1 or more outputs. Since this is the adapter the DWM uses, you will minimize the number of copies between your adapter and the DWM adapter.  The Warp adapter with outputs also has the advantage of becoming removed on driver upgrade.",
      "parentUuid": "90e7cbdd_a2048913",
      "revId": "9a4ee26fbc24f65b255d87fdf788924ce822bdcd",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0ef5a27f_ccde338c",
        "filename": "src/tests/DawnTest.cpp",
        "patchSetId": 2
      },
      "lineNbr": 156,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-05-19T23:31:41Z",
      "side": 1,
      "message": "Sorry, not sure what you mean by \"Warp adapter with outputs\". In the case Jiawei is talking about, is the Intel integrated GPU the \"output\" ? How do you distinguish between Warp with outputs and Warp without outputs ?",
      "parentUuid": "e9547703_0384b2e4",
      "revId": "9a4ee26fbc24f65b255d87fdf788924ce822bdcd",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9c36c75d_adea2907",
        "filename": "src/tests/DawnTest.cpp",
        "patchSetId": 2
      },
      "lineNbr": 156,
      "author": {
        "id": 1000262
      },
      "writtenOn": "2020-05-20T00:08:42Z",
      "side": 1,
      "message": "Apologies for the confusion. The outputs I was referring to were the ones returned by IDXGIAdapter::EnumOutputs.",
      "parentUuid": "0ef5a27f_ccde338c",
      "revId": "9a4ee26fbc24f65b255d87fdf788924ce822bdcd",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "779f2968_42651731",
        "filename": "src/tests/DawnTest.cpp",
        "patchSetId": 2
      },
      "lineNbr": 156,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-05-20T09:53:30Z",
      "side": 1,
      "message": "I don\u0027t think this patch tries to figure out which WARP adapter to use, just unblock end2end tests. If we need to select the correct WARP, let\u0027s do that with a different CL that handles it in D3D12 backend.",
      "parentUuid": "9c36c75d_adea2907",
      "revId": "9a4ee26fbc24f65b255d87fdf788924ce822bdcd",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9f3a7f03_c75bbfee",
        "filename": "src/tests/DawnTest.cpp",
        "patchSetId": 2
      },
      "lineNbr": 156,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-05-20T17:21:26Z",
      "side": 1,
      "message": "Okay, sounds like these are indeed distinct WARP adapters, so it makes sense to workaround the naming problem in DawnTest since this is just to make googletest happy.",
      "parentUuid": "779f2968_42651731",
      "revId": "9a4ee26fbc24f65b255d87fdf788924ce822bdcd",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "963de2ba_4b36e8a7",
        "filename": "src/tests/DawnTest.cpp",
        "patchSetId": 2
      },
      "lineNbr": 156,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2020-05-21T00:23:07Z",
      "side": 1,
      "message": "Thanks for Corentin and Austin\u0027s suggestions. I will handle the correct WARP in another CL.",
      "parentUuid": "9f3a7f03_c75bbfee",
      "revId": "9a4ee26fbc24f65b255d87fdf788924ce822bdcd",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9df58af6_2c40df49",
        "filename": "src/tests/DawnTest.cpp",
        "patchSetId": 2
      },
      "lineNbr": 161,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-05-19T17:41:40Z",
      "side": 1,
      "message": "We don\u0027t need this full regex. Only need to replace spaces with underscores.",
      "range": {
        "startLine": 160,
        "startChar": 43,
        "endLine": 161,
        "endChar": 100
      },
      "revId": "9a4ee26fbc24f65b255d87fdf788924ce822bdcd",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "00360f55_acdc9980",
        "filename": "src/tests/DawnTest.cpp",
        "patchSetId": 2
      },
      "lineNbr": 161,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2020-05-20T03:46:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9df58af6_2c40df49",
      "range": {
        "startLine": 160,
        "startChar": 43,
        "endLine": 161,
        "endChar": 100
      },
      "revId": "9a4ee26fbc24f65b255d87fdf788924ce822bdcd",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    }
  ]
}