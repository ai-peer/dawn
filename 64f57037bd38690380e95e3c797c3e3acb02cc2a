{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "47fedae7_aa53b817",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-12-12T01:59:46Z",
      "side": 1,
      "message": "see the test SetUp in this patch for how we can override requestAdapter and requestDevice in Chromium.\n\nI\u0027m thinking however it might be a good idea to have the wire server add a chained struct to the RequestAdapterOptions or DeviceDescriptor with a pointer to itself. This would make it significantly easier to get a pointer to the current webgpu decoder instead of:\n - the static hack I\u0027m doing here - though it would indeed work in Chrome.\n - make some \"fake\" WGPUInstance and WGPUAdapter objects that we proxy commands through and store a back reference to the decoder.",
      "revId": "64f57037bd38690380e95e3c797c3e3acb02cc2a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "07734b7c_d4c18c2c",
        "filename": "src/tests/DawnTest.cpp",
        "patchSetId": 2
      },
      "lineNbr": 765,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-12-14T14:50:27Z",
      "side": 1,
      "message": "Don\u0027t we want to implement these functions in dawn_native first, then expose GetProperties in dawn_wire and finally use the async functions directly?",
      "revId": "64f57037bd38690380e95e3c797c3e3acb02cc2a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0babbd09_d4906d5a",
        "filename": "src/tests/DawnTest.cpp",
        "patchSetId": 2
      },
      "lineNbr": 765,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-12-14T18:03:16Z",
      "side": 1,
      "message": "For the tests yea we can do that, though at the time I didn\u0027t implement GetProperties and the stuff in this patch stack is a bit out of order.\n\nIn Chromium we\u0027ll have to override this because we can\u0027t directly give the Renderer whatever is requests. Do you think something like this would work?\n\nIn the other comment:\n\nI\u0027m thinking however it might be a good idea to have the wire server add a chained struct to the RequestAdapterOptions or DeviceDescriptor with a pointer to itself. This would make it significantly easier to get a pointer to the current webgpu decoder instead of:\n\n - the static hack I\u0027m doing here - though it would indeed work in Chrome.\n - make some \"fake\" WGPUInstance and WGPUAdapter objects that we proxy commands through and store a back reference to the decoder.",
      "parentUuid": "07734b7c_d4c18c2c",
      "revId": "64f57037bd38690380e95e3c797c3e3acb02cc2a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "add82c6e_26a556bd",
        "filename": "src/tests/DawnTest.cpp",
        "patchSetId": 2
      },
      "lineNbr": 765,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-12-16T14:11:16Z",
      "side": 1,
      "message": "How would the pointer to the WireServer help? We would still need to go through a map from WireServer to WebGPUCommandDecoderImpl or something like that. The \"fake\" WGPUInstance and WGPUAdapter would work well and isn\u0027t that much work, there\u0027s only some casts to do in some places and the we could hide this into a small helper library that exposes base classes for the fake adapter and the fake device and that you initialize with a factory method for fake instances.",
      "parentUuid": "0babbd09_d4906d5a",
      "revId": "64f57037bd38690380e95e3c797c3e3acb02cc2a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b565d93f_f6c38e84",
        "filename": "src/tests/DawnTest.cpp",
        "patchSetId": 2
      },
      "lineNbr": 765,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-12-16T22:14:19Z",
      "side": 1,
      "message": "I don\u0027t love the \"fake\" instance/adapter so much since there\u0027s just more casting places to mess up or accidentally use the \"fake\" pointer for something. We talked about this offline just putting it here so I remember:\n\npointer to the wire server helps because the embedder can extend WireServer and get a pointer to itself. That way, when instanceRequestAdapter happens insider WireServer::HandleCommands, you know which server it\u0027s originating from.",
      "parentUuid": "add82c6e_26a556bd",
      "revId": "64f57037bd38690380e95e3c797c3e3acb02cc2a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}