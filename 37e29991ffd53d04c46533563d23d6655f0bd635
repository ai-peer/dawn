{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "992f02a1_b1e4c4fe",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 7,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2024-04-23T09:43:22Z",
      "side": 1,
      "message": "nit: multi-planar. And also maybe explain what produces multi-planar multi-layer textures?",
      "revId": "37e29991ffd53d04c46533563d23d6655f0bd635",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "aed77d1b_7b57bb7d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 7,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2024-04-23T18:34:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "992f02a1_b1e4c4fe",
      "revId": "37e29991ffd53d04c46533563d23d6655f0bd635",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b7c043d4_5792d5bd",
        "filename": "src/dawn/native/Texture.cpp",
        "patchSetId": 5
      },
      "lineNbr": 535,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2024-04-23T02:02:43Z",
      "side": 1,
      "message": "this only changes the behavior for multi-planar formats. The non-multiplanar format now always allows multiple layer textures. That is OK if there\u0027s a test for it, but there are none. So either disallow multi-layer imports for all wrapped single-planar formats, or add a test to make sure it works",
      "revId": "37e29991ffd53d04c46533563d23d6655f0bd635",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0e95c373_9df84141",
        "filename": "src/dawn/native/Texture.cpp",
        "patchSetId": 5
      },
      "lineNbr": 535,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2024-04-23T09:43:22Z",
      "side": 1,
      "message": "My understanding from reading the linked issue was that this CL was for swapchain textures that aren\u0027t multiplanar. Or did I miss something?",
      "revId": "37e29991ffd53d04c46533563d23d6655f0bd635",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "04fa379a_92bc9bf7",
        "filename": "src/dawn/native/Texture.cpp",
        "patchSetId": 5
      },
      "lineNbr": 535,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2024-04-23T18:34:44Z",
      "side": 1,
      "message": "Yeah. Chrome uses decode swapchain to present video frames stored in one texture with multiple layers. However something, it may fallback to use graphite to sample the texture layers. So we need to import this texture into dawn.\n\nThe change here is for limiting the feature only in d3d backend. graphite only needs it on Windows. And I don\u0027t verify if it can be support with other backend, especially IOSurface may not be able support it.",
      "parentUuid": "0e95c373_9df84141",
      "revId": "37e29991ffd53d04c46533563d23d6655f0bd635",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1f50f098_3615d559",
        "filename": "src/dawn/native/Texture.cpp",
        "patchSetId": 5
      },
      "lineNbr": 535,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2024-04-23T18:34:44Z",
      "side": 1,
      "message": "Done.",
      "parentUuid": "b7c043d4_5792d5bd",
      "revId": "37e29991ffd53d04c46533563d23d6655f0bd635",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6eac1332_fa439c09",
        "filename": "src/dawn/native/Texture.h",
        "patchSetId": 5
      },
      "lineNbr": 59,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2024-04-23T09:43:22Z",
      "side": 1,
      "message": "u-nit: this could be an enum similar to `AllowMultiPlanarTextureFormat`.",
      "revId": "37e29991ffd53d04c46533563d23d6655f0bd635",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8828f20b_c425c50e",
        "filename": "src/dawn/native/Texture.h",
        "patchSetId": 5
      },
      "lineNbr": 59,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2024-04-23T18:34:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6eac1332_fa439c09",
      "revId": "37e29991ffd53d04c46533563d23d6655f0bd635",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a4445d27_e7ba8e01",
        "filename": "src/dawn/tests/end2end/VideoViewsTests.cpp",
        "patchSetId": 5
      },
      "lineNbr": 405,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2024-04-23T02:02:43Z",
      "side": 1,
      "message": "what about d3d12 doesn\u0027t work? they have similar import paths",
      "range": {
        "startLine": 405,
        "startChar": 0,
        "endLine": 405,
        "endChar": 69
      },
      "revId": "37e29991ffd53d04c46533563d23d6655f0bd635",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2777d231_3112f07e",
        "filename": "src/dawn/tests/end2end/VideoViewsTests.cpp",
        "patchSetId": 5
      },
      "lineNbr": 405,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2024-04-23T09:43:22Z",
      "side": 1,
      "message": "When does this happen? On D3D12? It might be easy-ish to support on that backend se we should at least have a TODO to eventually support it.",
      "revId": "37e29991ffd53d04c46533563d23d6655f0bd635",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6a124575_9b64beb3",
        "filename": "src/dawn/tests/end2end/VideoViewsTests.cpp",
        "patchSetId": 5
      },
      "lineNbr": 405,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2024-04-23T18:34:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2777d231_3112f07e",
      "revId": "37e29991ffd53d04c46533563d23d6655f0bd635",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3cef2e6d_22490990",
        "filename": "src/dawn/tests/end2end/VideoViewsTests.cpp",
        "patchSetId": 5
      },
      "lineNbr": 405,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2024-04-23T18:34:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a4445d27_e7ba8e01",
      "range": {
        "startLine": 405,
        "startChar": 0,
        "endLine": 405,
        "endChar": 69
      },
      "revId": "37e29991ffd53d04c46533563d23d6655f0bd635",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "749fd629_f5806a14",
        "filename": "src/dawn/tests/end2end/VideoViewsTests.cpp",
        "patchSetId": 5
      },
      "lineNbr": 585,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2024-04-23T02:02:43Z",
      "side": 1,
      "message": "on all of these tests, you\u0027re only testing the 0th layer. To be sure this works, including all the transitions, we\u0027ll need to:\n - test that both layers can be used\n - test that multiple layers can be used simultaneously\n - test that multiple layers can be used independently - like sample from one, and render to the other. OR validate that this type of thing is disallowed.",
      "revId": "37e29991ffd53d04c46533563d23d6655f0bd635",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3a252ae6_6a287106",
        "filename": "src/dawn/tests/end2end/VideoViewsTests.cpp",
        "patchSetId": 5
      },
      "lineNbr": 585,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2024-04-23T18:34:44Z",
      "side": 1,
      "message": "Does end2end already cover those transitions for texture array? And  VideoViewsTests can just focus on verify importing texture array, right?\n\nI modify tests to cover basic accessing for the second layer.\nDone",
      "parentUuid": "749fd629_f5806a14",
      "revId": "37e29991ffd53d04c46533563d23d6655f0bd635",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8c3723c0_4d7668e2",
        "filename": "src/dawn/tests/end2end/VideoViewsTests.cpp",
        "patchSetId": 5
      },
      "lineNbr": 2641,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2024-04-23T09:43:22Z",
      "side": 1,
      "message": "There is no test to import a layer that\u0027s not 0, not a test to use two different layers as two different usages in the same render pass.",
      "revId": "37e29991ffd53d04c46533563d23d6655f0bd635",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "809083fa_5c75f122",
        "filename": "src/dawn/tests/end2end/VideoViewsTests.cpp",
        "patchSetId": 5
      },
      "lineNbr": 2641,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2024-04-23T18:34:44Z",
      "side": 1,
      "message": "dawn do have the tests for those cases. Just they are not for external image cases only. Do we really need to have all similar tests for imported textures?\n\nhttps://source.chromium.org/chromium/chromium/src/+/main:third_party/dawn/src/dawn/tests/end2end/TextureSubresourceTests.cpp;l\u003d194\n\nhttps://source.chromium.org/search?q\u003d%22.baseArrayLayer%20%3D%20%22\u0026sq\u003d\u0026ss\u003dchromium%2Fchromium%2Fsrc:third_party%2Fdawn%2Fsrc%2Fdawn%2Ftests%2Fend2end%2F",
      "parentUuid": "8c3723c0_4d7668e2",
      "revId": "37e29991ffd53d04c46533563d23d6655f0bd635",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ff56fe15_e3f40f34",
        "filename": "src/dawn/tests/end2end/VideoViewsTests.cpp",
        "patchSetId": 5
      },
      "lineNbr": 2663,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2024-04-23T09:43:22Z",
      "side": 1,
      "message": "Why hardcode 1, 2 here insteead of VideoViewTestBackend::LayerCounts()?\n\nOr we could hardcode 1, 2 everywhere but ask the backends if they support importing multilayer textures.",
      "revId": "37e29991ffd53d04c46533563d23d6655f0bd635",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ba5c9ef5_8ffa9a3a",
        "filename": "src/dawn/tests/end2end/VideoViewsTests.cpp",
        "patchSetId": 5
      },
      "lineNbr": 2663,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2024-04-23T18:34:44Z",
      "side": 1,
      "message": "I tried using `VideoViewsTestBackend::LayerCounts())` here, but it causes compile errors. I guess the compiler cannot find the right overload. I have to explicitly use the right type for other test params to make it compile.",
      "parentUuid": "ff56fe15_e3f40f34",
      "revId": "37e29991ffd53d04c46533563d23d6655f0bd635",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9a41c8f4_ab090121",
        "filename": "src/dawn/tests/end2end/VideoViewsTests_gbm.cpp",
        "patchSetId": 5
      },
      "lineNbr": 158,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2024-04-23T02:02:43Z",
      "side": 1,
      "message": "is this needed if LayerCounts() returns {1} ?",
      "revId": "37e29991ffd53d04c46533563d23d6655f0bd635",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "47b9a2b2_cc4725be",
        "filename": "src/dawn/tests/end2end/VideoViewsTests_gbm.cpp",
        "patchSetId": 5
      },
      "lineNbr": 158,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2024-04-23T18:34:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9a41c8f4_ab090121",
      "revId": "37e29991ffd53d04c46533563d23d6655f0bd635",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "633a93fa_a5056b5d",
        "filename": "src/dawn/tests/end2end/VideoViewsTests_mac.cpp",
        "patchSetId": 5
      },
      "lineNbr": 67,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2024-04-23T02:02:43Z",
      "side": 1,
      "message": "is this needed if LayerCounts() returns {1} ?",
      "revId": "37e29991ffd53d04c46533563d23d6655f0bd635",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8ce298d5_434a4097",
        "filename": "src/dawn/tests/end2end/VideoViewsTests_mac.cpp",
        "patchSetId": 5
      },
      "lineNbr": 67,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2024-04-23T18:34:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "633a93fa_a5056b5d",
      "revId": "37e29991ffd53d04c46533563d23d6655f0bd635",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2e1e4b0f_28062831",
        "filename": "src/dawn/tests/end2end/VideoViewsTests_win.cpp",
        "patchSetId": 5
      },
      "lineNbr": 149,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2024-04-23T02:02:43Z",
      "side": 1,
      "message": "stray comment",
      "range": {
        "startLine": 149,
        "startChar": 0,
        "endLine": 149,
        "endChar": 39
      },
      "revId": "37e29991ffd53d04c46533563d23d6655f0bd635",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7752a461_303ea642",
        "filename": "src/dawn/tests/end2end/VideoViewsTests_win.cpp",
        "patchSetId": 5
      },
      "lineNbr": 149,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2024-04-23T09:43:22Z",
      "side": 1,
      "message": "nit: stray comment.",
      "revId": "37e29991ffd53d04c46533563d23d6655f0bd635",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0c96323c_b4955c2b",
        "filename": "src/dawn/tests/end2end/VideoViewsTests_win.cpp",
        "patchSetId": 5
      },
      "lineNbr": 149,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2024-04-23T18:34:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7752a461_303ea642",
      "revId": "37e29991ffd53d04c46533563d23d6655f0bd635",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "979fb384_93a574cc",
        "filename": "src/dawn/tests/end2end/VideoViewsTests_win.cpp",
        "patchSetId": 5
      },
      "lineNbr": 149,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2024-04-23T18:34:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2e1e4b0f_28062831",
      "range": {
        "startLine": 149,
        "startChar": 0,
        "endLine": 149,
        "endChar": 39
      },
      "revId": "37e29991ffd53d04c46533563d23d6655f0bd635",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}