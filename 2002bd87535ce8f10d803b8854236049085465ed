{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "9dfb99b5_c3df2356",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000017
      },
      "writtenOn": "2021-06-22T05:32:17Z",
      "side": 1,
      "message": "PTAL. Thanks! This CL is the last one of 3D texture copy related change on my local machine. I will work on 3D texture sampling. ",
      "revId": "2002bd87535ce8f10d803b8854236049085465ed",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7784feb4_18b9e6d6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2021-06-22T22:17:30Z",
      "side": 1,
      "message": "LGTM",
      "revId": "2002bd87535ce8f10d803b8854236049085465ed",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "18b6e4d2_103c3a56",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-06-23T13:41:05Z",
      "side": 1,
      "message": "LGTM too!",
      "revId": "2002bd87535ce8f10d803b8854236049085465ed",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7acc7864_ad10f365",
        "filename": "src/tests/end2end/CopyTests.cpp",
        "patchSetId": 1
      },
      "lineNbr": 417,
      "author": {
        "id": 1000017
      },
      "writtenOn": "2021-06-22T05:32:17Z",
      "side": 1,
      "message": "The offset of output buffer should not be zero. It should be the same with the sw-copy buffer\u0027s offset below (expectedDstDataPerSlice). In addition, the calculation of the offset (which is expectedDstDataOffset) was incorrect before. \n\nThese two bugs were not covered because in previous tests either copy width is aligned with bytesPerRow (say width \u003d 256) or dst copy offset/origin is {0, 0, 0}, so it worked fine in those tests.",
      "range": {
        "startLine": 417,
        "startChar": 26,
        "endLine": 417,
        "endChar": 47
      },
      "revId": "2002bd87535ce8f10d803b8854236049085465ed",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dafe30b5_78680c19",
        "filename": "src/tests/end2end/CopyTests.cpp",
        "patchSetId": 1
      },
      "lineNbr": 417,
      "author": {
        "id": 1000017
      },
      "writtenOn": "2021-06-22T05:33:46Z",
      "side": 1,
      "message": "This is [1] I mentioned below.",
      "parentUuid": "7acc7864_ad10f365",
      "range": {
        "startLine": 417,
        "startChar": 26,
        "endLine": 417,
        "endChar": 47
      },
      "revId": "2002bd87535ce8f10d803b8854236049085465ed",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b7616f4d_daf3edd4",
        "filename": "src/tests/end2end/CopyTests.cpp",
        "patchSetId": 1
      },
      "lineNbr": 417,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2021-06-22T15:10:00Z",
      "side": 1,
      "message": "Is the buffer big enough if we copy with this offset now? we the size of outputBuffer is |dstDataCopyLayout.byteLength|. Maybe we need to add |expectedDstDataOffset| bytes",
      "parentUuid": "dafe30b5_78680c19",
      "range": {
        "startLine": 417,
        "startChar": 26,
        "endLine": 417,
        "endChar": 47
      },
      "revId": "2002bd87535ce8f10d803b8854236049085465ed",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "51bc0f2b_1a966795",
        "filename": "src/tests/end2end/CopyTests.cpp",
        "patchSetId": 1
      },
      "lineNbr": 417,
      "author": {
        "id": 1000017
      },
      "writtenOn": "2021-06-22T15:45:18Z",
      "side": 1,
      "message": "The size of outputBuffer is big enough. The dstDataCopyLayout.byteLength is very close to (bytesPerImage * copyImages\u0027 number) except the last row of the last image is its real size (less than bytesPerRow). While the offset is smaller than bytesPerImage because it is just x and y offset within one the copied image. In addition, the offset has already been included in dstDataCopyLayout.byteLength when it is calculating its size: no matter it is a full copy or a partial copy, the size is always the entire copied images including offset/padding/irrelevant data(whatever you name it). If copy origin is not OOB for the texture (which will be captured by validation), it will never be OOB for the outputBuffer. \n\nNote that z offset is not calculated (dstSpec.copyorigin.z * bytesPerImage) for both outputBuffer (T2B copy) and expectedDstDataPerSlice (sw buffer to buffer copy for comparison). So it is fair and correct for both of them during pixel-by-pixel comparison.",
      "parentUuid": "b7616f4d_daf3edd4",
      "range": {
        "startLine": 417,
        "startChar": 26,
        "endLine": 417,
        "endChar": 47
      },
      "revId": "2002bd87535ce8f10d803b8854236049085465ed",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d1dce487_c9c5531e",
        "filename": "src/tests/end2end/CopyTests.cpp",
        "patchSetId": 1
      },
      "lineNbr": 417,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2021-06-22T22:17:30Z",
      "side": 1,
      "message": "Right, I see now that the buffer is sized for the entire texture, and not just the copied region. Thanks for the clarification.",
      "parentUuid": "51bc0f2b_1a966795",
      "range": {
        "startLine": 417,
        "startChar": 26,
        "endLine": 417,
        "endChar": 47
      },
      "revId": "2002bd87535ce8f10d803b8854236049085465ed",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dbfd42ec_6778acde",
        "filename": "src/tests/end2end/CopyTests.cpp",
        "patchSetId": 1
      },
      "lineNbr": 920,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-06-23T13:41:05Z",
      "side": 1,
      "message": "u-nit (since this was preexisting): we use TODO(crbug.com/dawn/....) for suppressions usually.",
      "revId": "2002bd87535ce8f10d803b8854236049085465ed",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "15959c65_5a76d50e",
        "filename": "src/tests/end2end/CopyTests.cpp",
        "patchSetId": 1
      },
      "lineNbr": 920,
      "author": {
        "id": 1000017
      },
      "writtenOn": "2021-06-23T17:04:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "dbfd42ec_6778acde",
      "revId": "2002bd87535ce8f10d803b8854236049085465ed",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "57a023bf_12b5e057",
        "filename": "src/tests/end2end/CopyTests.cpp",
        "patchSetId": 1
      },
      "lineNbr": 2204,
      "author": {
        "id": 1000017
      },
      "writtenOn": "2021-06-22T05:32:17Z",
      "side": 1,
      "message": "I mentioned a few more tests at https://dawn-review.googlesource.com/c/dawn/+/50243/7..11/src/tests/end2end/CopyTests.cpp#b1801. I added them via this test. This test exposed a bug in T2T test, which was fixed at [1].",
      "revId": "2002bd87535ce8f10d803b8854236049085465ed",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}