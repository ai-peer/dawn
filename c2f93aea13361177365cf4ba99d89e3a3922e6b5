{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "66327cee_08c59bdc",
        "filename": "CMakeLists.txt",
        "patchSetId": 22
      },
      "lineNbr": 35,
      "author": {
        "id": 3498813
      },
      "writtenOn": "2024-06-29T09:53:15Z",
      "side": 0,
      "message": "@jaswant.panchumarti@kitware.com this is big thank you. I tests this on Android and iOS.\nOn Android: everything ok. The library size is huge (450mb) but I will file a separate issue for it since this is unrelated to this PR.\nOn iOS: I am missing the following for it to work:\n target_link_libraries(webgpu_c_bundled \"-framework CoreFoundation\" \"-framework IOSurface\" \"-framework Metal\" \"-framework QuartzCore\" \"-framework Foundation\")",
      "revId": "c2f93aea13361177365cf4ba99d89e3a3922e6b5",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "35d2803e_cfacc5fb",
        "filename": "CMakeLists.txt",
        "patchSetId": 22
      },
      "lineNbr": 35,
      "author": {
        "id": 1004191
      },
      "writtenOn": "2024-06-29T13:53:46Z",
      "side": 0,
      "message": "Hey. Any reason to still build `webgpu_c_bundled` from `tools/android`? Please build the project normally and you should get a `libwebgpu_dawn` shared library.\n\nHere\u0027s a summary (I will get around to updating the docs with install step soon)\n\n1. git clone https://dawn.googlesource.com/dawn\n2. cd dawn\n3. cmake -S . -B out -DDAWN_FETCH_DEPENDENCIES\u003dON\n4. cmake --build out\n5. cmake --install out --prefix install\n6. ls install\n   should show libwebgpu_dawn.so/dylib",
      "parentUuid": "66327cee_08c59bdc",
      "revId": "c2f93aea13361177365cf4ba99d89e3a3922e6b5",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fed1e501_e0d8996d",
        "filename": "CMakeLists.txt",
        "patchSetId": 22
      },
      "lineNbr": 35,
      "author": {
        "id": 1004191
      },
      "writtenOn": "2024-06-29T13:54:56Z",
      "side": 0,
      "message": "Since this CL hasn\u0027t landed yet, after step 2, you need to pull this CL.\n\n`git pull https://dawn.googlesource.com/dawn refs/changes/96/195996/22`",
      "parentUuid": "35d2803e_cfacc5fb",
      "revId": "c2f93aea13361177365cf4ba99d89e3a3922e6b5",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e56483ec_8778697f",
        "filename": "CMakeLists.txt",
        "patchSetId": 22
      },
      "lineNbr": 35,
      "author": {
        "id": 1004191
      },
      "writtenOn": "2024-06-29T14:18:43Z",
      "side": 0,
      "message": "Try latest patchset `git pull https://dawn.googlesource.com/dawn refs/changes/96/195996/23` instead. I may push more commits, so you can get the command from the 3 dots button on the top left -\u003e Download patch",
      "parentUuid": "fed1e501_e0d8996d",
      "revId": "c2f93aea13361177365cf4ba99d89e3a3922e6b5",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4d293a7a_a1cc7f35",
        "filename": "CMakeLists.txt",
        "patchSetId": 22
      },
      "lineNbr": 35,
      "author": {
        "id": 3498813
      },
      "writtenOn": "2024-06-29T17:26:41Z",
      "side": 0,
      "message": "Sorry for the confusion with the \"bundled\" naming. For Android I am running:\n`cmake .. -DCMAKE_TOOLCHAIN_FILE\u003d$ANDROID_NDK/build/cmake/android.toolchain.cmake -DANDROID_PLATFORM\u003dandroid-26 -DDAWN_BUILD_MONOLITHIC_LIBRARY\u003dON`\nEverything works great but I have a huge .so file (600MB). I filed a bug report for it. I will also try with a newer NDK version just in case.\n\nFor iOS, I have two ways to do it. Both lead to the same error:\n`cmake .. -DCMAKE_TOOLCHAIN_FILE\u003d/Users/wcandillon/.../ios.toolchain.cmake -DPLATFORM\u003dSIMULATOR64 -DDAWN_BUILD_MONOLITHIC_LIBRARY\u003dON` \nyields:\n```\ncocoa_platform.h:29:10: fatal error: \u0027Carbon/Carbon.h\u0027 file not found\n#include \u003cCarbon/Carbon.h\u003e\n         ^~~~~~~~~~~~~~~~~\n```\n\nThis is the second command I try: `cmake .. -DCMAKE_OSX_ARCHITECTURES\u003darm64 -DPLATFORM\u003dOS64 -DCMAKE_OSX_SYSROOT\u003d$(xcrun --sdk iphoneos --show-sdk-path) -DDAWN_BUILD_MONOLITHIC_LIBRARY\u003dON`\n\n`ios.toolchain.cmake` is taken from https://github.com/leetal/ios-cmake",
      "parentUuid": "e56483ec_8778697f",
      "revId": "c2f93aea13361177365cf4ba99d89e3a3922e6b5",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9affcc1b_8a8ea16d",
        "filename": "CMakeLists.txt",
        "patchSetId": 22
      },
      "lineNbr": 35,
      "author": {
        "id": 3498813
      },
      "writtenOn": "2024-06-29T17:48:25Z",
      "side": 0,
      "message": "My apologies for the last command. My build command for iOS was wrong. It is now `cmake .. -DDAWN_FETCH_DEPENDENCIES\u003dON -DCMAKE_TOOLCHAIN_FILE\u003d/Users/wcandillon/.../ios.toolchain.cmake -DPLATFORM\u003dOS64 -DDAWN_BUILD_MONOLITHIC_LIBRARY\u003dON -DDAWN_USE_GLFW\u003dOFF -DBUILD_SAMPLES\u003dOFF -DTINT_BUILD_IR_BINARY\u003dOFF -DTINT_BUILD_CMD_TOOLS\u003dOFF -DTINT_BUILD_TESTS\u003dOFF -DDAWN_BUILD_SAMPLES\u003dOFF -DCMAKE_BUILD_TYPE\u003dRelease` however I still get the same linking issues due to the following missing:\n```\nif(IOS)\n  target_link_libraries(${not sure the name anymore?} \"-framework CoreFoundation\" \"-framework IOSurface\" \"-framework Metal\" \"-framework QuartzCore\" \"-framework Foundation\")\nendif()\n```\n\nthis is the cmake error:\nhttps://gist.github.com/wcandillon/468e65f083f0755eb110416ff32795d8",
      "parentUuid": "4d293a7a_a1cc7f35",
      "revId": "c2f93aea13361177365cf4ba99d89e3a3922e6b5",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "56227615_1eb5d7fc",
        "filename": "CMakeLists.txt",
        "patchSetId": 22
      },
      "lineNbr": 35,
      "author": {
        "id": 3498813
      },
      "writtenOn": "2024-06-29T18:53:24Z",
      "side": 0,
      "message": "Adding the if condition below in src/dawn/native solves the issue on iOS.\n```\n+if(IOS)\n+  target_link_libraries(webgpu_dawn PRIVATE \"-framework CoreFoundation\" \"-framework IOSurface\" \"-framework Metal\" \"-framework QuartzCore\" \"-framework Foundation\")\n+endif()\n```",
      "parentUuid": "9affcc1b_8a8ea16d",
      "revId": "c2f93aea13361177365cf4ba99d89e3a3922e6b5",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6a5e03d0_29764df8",
        "filename": "CMakeLists.txt",
        "patchSetId": 22
      },
      "lineNbr": 35,
      "author": {
        "id": 1004191
      },
      "writtenOn": "2024-06-30T00:28:44Z",
      "side": 0,
      "message": "Most of these are already added in lines 529-537 of src/dawn/native/CMakeLists.txt. The only framework if\u0027ed out is \"-framework Cocoa\". It\u0027s conditionally added when `DAWN_TARGET_MACOS\u003dtrue`. Unfortunately, this variable is set to true in root `CMakeLists.txt` only for CMAKE_SYSTEM_NAME \u003d\u003d \"Darwin\" | \"MacOS\". I believe we need another variable `DAWN_TARGET_IOS`.",
      "parentUuid": "56227615_1eb5d7fc",
      "revId": "c2f93aea13361177365cf4ba99d89e3a3922e6b5",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7ff64861_f758edb9",
        "filename": "CMakeLists.txt",
        "patchSetId": 22
      },
      "lineNbr": 35,
      "author": {
        "id": 1004191
      },
      "writtenOn": "2024-06-30T00:35:56Z",
      "side": 0,
      "message": "Updated to add `-framework Cocoa` to link list for iOS as well. Hopefully that is sufficient and brings in the rest like `CoreFoundation`, etc. Please try latest patchset and let me know if it works!",
      "parentUuid": "6a5e03d0_29764df8",
      "revId": "c2f93aea13361177365cf4ba99d89e3a3922e6b5",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4c873569_c09a155c",
        "filename": "CMakeLists.txt",
        "patchSetId": 22
      },
      "lineNbr": 35,
      "author": {
        "id": 3498813
      },
      "writtenOn": "2024-06-30T07:02:51Z",
      "side": 0,
      "message": "The problem is that Cocoa doesn\u0027t exists on iOS.\nThe following works however:\n```\n    if (DAWN_TARGET_MACOS)\n        list(APPEND conditional_private_platform_depends \"-framework Cocoa\")\n    endif()\n    list(APPEND conditional_private_platform_depends\n        \"-framework Foundation\"\n        \"-framework IOKit\"\n        \"-framework IOSurface\"\n        \"-framework QuartzCore\"\n        \"-framework Metal\"\n    )\n```\nAlternatively, you can add `-framework Foundation` only for iOS, and that will work too.\n\nBig thank you again for making this patch :)",
      "parentUuid": "7ff64861_f758edb9",
      "revId": "c2f93aea13361177365cf4ba99d89e3a3922e6b5",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7635e322_84225359",
        "filename": "CMakeLists.txt",
        "patchSetId": 22
      },
      "lineNbr": 35,
      "author": {
        "id": 3498813
      },
      "writtenOn": "2024-06-30T08:43:30Z",
      "side": 0,
      "message": "On iOS I am getting a linking error when compiling my app:\n  \"dawn::native::NativeDeviceTick(WGPUDeviceImpl*)\", referenced from:\n      _wgpuDeviceTick in libDoubleConversion.a[11](webgpu_dawn_native_proc.cpp.o)\n... (for all dawn::native symbols). What is libDoubleConversion.a? I\u0027m a bit confused by this error.",
      "parentUuid": "4c873569_c09a155c",
      "revId": "c2f93aea13361177365cf4ba99d89e3a3922e6b5",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}