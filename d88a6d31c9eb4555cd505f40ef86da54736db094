{
  "comments": [
    {
      "key": {
        "uuid": "e7db3e4f_8a45cf50",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-09-10T15:42:16Z",
      "side": 1,
      "message": "Here\u0027s the WIP of the change I worked on yesterday in case you want to look early.\n\nI still need to go build Chromium and see if it fixes things there.\nAlso didn\u0027t change the dmabuf tests, but should.\n\nAlso, Kai is your AMD card back? I\u0027m curious to know if this fixes the image wrapping there.\n\n(also this doesn\u0027t actually build on non-linux. I tried to remove what I thought were duplicate args, but then realized they were needed to avoid a bunch of #ifdefs and conditional compilation)",
      "revId": "d88a6d31c9eb4555cd505f40ef86da54736db094",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "36040656_8def8a21",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2020-09-10T20:38:03Z",
      "side": 1,
      "message": "\u003e Also, Kai is your AMD card back? I\u0027m curious to know if this fixes the image wrapping there.\n\nNot yet. I\u0027ll try this as soon as it is.",
      "parentUuid": "e7db3e4f_8a45cf50",
      "revId": "d88a6d31c9eb4555cd505f40ef86da54736db094",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "069bd62f_31ad79c1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-09-11T07:39:54Z",
      "side": 1,
      "message": "LGTM overall.",
      "revId": "d88a6d31c9eb4555cd505f40ef86da54736db094",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "35525c6d_4ae6ec4c",
        "filename": "src/dawn_native/vulkan/TextureVk.cpp",
        "patchSetId": 1
      },
      "lineNbr": 552,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-09-10T15:50:15Z",
      "side": 1,
      "message": "this is a nice optimization. We can actually skip the entire queue transfer if we don\u0027t care about the previous contents.\n\nNot sure if we still need the semaphore though?",
      "range": {
        "startLine": 550,
        "startChar": 8,
        "endLine": 552,
        "endChar": 94
      },
      "revId": "d88a6d31c9eb4555cd505f40ef86da54736db094",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d0436d47_e9a7ce5c",
        "filename": "src/dawn_native/vulkan/TextureVk.cpp",
        "patchSetId": 1
      },
      "lineNbr": 552,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2020-09-10T20:46:39Z",
      "side": 1,
      "message": "We may still need it to make sure the previous contents aren\u0027t still in use by something?",
      "parentUuid": "35525c6d_4ae6ec4c",
      "range": {
        "startLine": 550,
        "startChar": 8,
        "endLine": 552,
        "endChar": 94
      },
      "revId": "d88a6d31c9eb4555cd505f40ef86da54736db094",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6a6a7c45_3d4c627b",
        "filename": "src/dawn_native/vulkan/TextureVk.cpp",
        "patchSetId": 1
      },
      "lineNbr": 552,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-09-11T07:39:54Z",
      "side": 1,
      "message": "What Kai said, we need to make sure the previous commands using the texture are completed, so we still need to wait on the semaphore.",
      "parentUuid": "d0436d47_e9a7ce5c",
      "range": {
        "startLine": 550,
        "startChar": 8,
        "endLine": 552,
        "endChar": 94
      },
      "revId": "d88a6d31c9eb4555cd505f40ef86da54736db094",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "70fb0e7f_a9c13b24",
        "filename": "src/dawn_native/vulkan/TextureVk.cpp",
        "patchSetId": 1
      },
      "lineNbr": 553,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-09-11T07:39:54Z",
      "side": 1,
      "message": "I think that if !isCleared this can be uninitialized too and in TweakTransitionForExternalUsage we can detect that and just use the newLayout.",
      "revId": "d88a6d31c9eb4555cd505f40ef86da54736db094",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aaa568a9_e394730d",
        "filename": "src/dawn_native/vulkan/TextureVk.cpp",
        "patchSetId": 1
      },
      "lineNbr": 621,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-09-10T15:50:15Z",
      "side": 1,
      "message": "not sure if we\u0027ll ever need multi-subresource import/export",
      "range": {
        "startLine": 621,
        "startChar": 8,
        "endLine": 621,
        "endChar": 61
      },
      "revId": "d88a6d31c9eb4555cd505f40ef86da54736db094",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "58b9aea5_466242e1",
        "filename": "src/dawn_native/vulkan/TextureVk.cpp",
        "patchSetId": 1
      },
      "lineNbr": 621,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2020-09-10T20:46:39Z",
      "side": 1,
      "message": "Possibly for VR (2+ layers)?",
      "parentUuid": "aaa568a9_e394730d",
      "range": {
        "startLine": 621,
        "startChar": 8,
        "endLine": 621,
        "endChar": 61
      },
      "revId": "d88a6d31c9eb4555cd505f40ef86da54736db094",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cdc89461_369892a8",
        "filename": "src/dawn_native/vulkan/TextureVk.cpp",
        "patchSetId": 1
      },
      "lineNbr": 622,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-09-10T15:50:15Z",
      "side": 1,
      "message": "I did this barrier directly. Not sure if using the existing mechanisms + TweakExternal make sense because the inverse operation of layout -\u003e wgpu::TextureUsage isn\u0027t so possible",
      "revId": "d88a6d31c9eb4555cd505f40ef86da54736db094",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a264acc4_3386df86",
        "filename": "src/dawn_native/vulkan/TextureVk.cpp",
        "patchSetId": 1
      },
      "lineNbr": 622,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2020-09-10T20:46:39Z",
      "side": 1,
      "message": "Seems straightforward enough that doing it directly is fine.",
      "parentUuid": "cdc89461_369892a8",
      "revId": "d88a6d31c9eb4555cd505f40ef86da54736db094",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0abfa037_4b8eefa5",
        "filename": "src/dawn_native/vulkan/TextureVk.cpp",
        "patchSetId": 1
      },
      "lineNbr": 623,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-09-11T07:39:54Z",
      "side": 1,
      "message": "Maybe explain relevant parts of this. For example that dstAccessMask can be 0 because the visibility operation will be done on the other side of the barrier, that newLayout can be anything if the desiredLayout is undefined because the content will be lost anyway. And that we wait for all operations to be finished (that\u0027s why we use TOP_OF_PIPE_BIT)",
      "revId": "d88a6d31c9eb4555cd505f40ef86da54736db094",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3399b50a_1d4d60f4",
        "filename": "src/dawn_native/vulkan/TextureVk.cpp",
        "patchSetId": 1
      },
      "lineNbr": 715,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-09-11T07:39:54Z",
      "side": 1,
      "message": "[1]",
      "revId": "d88a6d31c9eb4555cd505f40ef86da54736db094",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "445baab4_39d24dd5",
        "filename": "src/dawn_native/vulkan/TextureVk.cpp",
        "patchSetId": 1
      },
      "lineNbr": 748,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-09-11T07:39:54Z",
      "side": 1,
      "message": "I think it might be more readable to create a barrier from scratch and copy the subresourceRange over.",
      "revId": "d88a6d31c9eb4555cd505f40ef86da54736db094",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "27c3e025_b712874a",
        "filename": "src/include/dawn_native/VulkanBackend.h",
        "patchSetId": 1
      },
      "lineNbr": 57,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-09-10T15:50:15Z",
      "side": 1,
      "message": "one day, I think this stuff will be encapsulated in some \"ExternalImage\" interface and we won\u0027t need the separate import Descriptor and export Info.",
      "range": {
        "startLine": 56,
        "startChar": 12,
        "endLine": 57,
        "endChar": 70
      },
      "revId": "d88a6d31c9eb4555cd505f40ef86da54736db094",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e33550a1_1160a15b",
        "filename": "src/include/dawn_native/VulkanBackend.h",
        "patchSetId": 1
      },
      "lineNbr": 86,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-09-11T07:39:54Z",
      "side": 1,
      "message": "Shouldn\u0027t this be an argument to ExportVulkanImage?",
      "revId": "d88a6d31c9eb4555cd505f40ef86da54736db094",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b5c0b03d_0e15fa93",
        "filename": "src/include/dawn_native/VulkanBackend.h",
        "patchSetId": 1
      },
      "lineNbr": 89,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-09-11T07:39:54Z",
      "side": 1,
      "message": "Maybe this should be an std::vector just in case for later multiqueue support.",
      "revId": "d88a6d31c9eb4555cd505f40ef86da54736db094",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "68cbf50f_453d5b9a",
        "filename": "src/tests/white_box/VulkanImageWrappingTestsOpaqueFD.cpp",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-09-11T07:39:54Z",
      "side": 1,
      "message": "All changes done to this file will also need to be done for the DmaBuf version.",
      "revId": "d88a6d31c9eb4555cd505f40ef86da54736db094",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c7120187_a36c93dd",
        "filename": "src/tests/white_box/VulkanImageWrappingTestsOpaqueFD.cpp",
        "patchSetId": 1
      },
      "lineNbr": 154,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-09-11T07:39:54Z",
      "side": 1,
      "message": "Should this overload be deleted?",
      "revId": "d88a6d31c9eb4555cd505f40ef86da54736db094",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3dcd4f59_4ae42ee2",
        "filename": "src/tests/white_box/VulkanImageWrappingTestsOpaqueFD.cpp",
        "patchSetId": 1
      },
      "lineNbr": 498,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-09-10T15:50:15Z",
      "side": 1,
      "message": "I changed these tests to go directly to the new layout. Probably also need a couple tests that go through an intermediate first.",
      "revId": "d88a6d31c9eb4555cd505f40ef86da54736db094",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4369e5ca_7966c58a",
        "filename": "src/tests/white_box/VulkanImageWrappingTestsOpaqueFD.cpp",
        "patchSetId": 1
      },
      "lineNbr": 529,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-09-11T07:39:54Z",
      "side": 1,
      "message": "\"This one must wrap this one\" isn\u0027t very explicit. I don\u0027t know if we should support the aliased usecase now because of how the layouts must match 100% and we have no API to make sure of that.\n\nSo I think we should remove this test and the corresponding one for DmaBuf.",
      "revId": "d88a6d31c9eb4555cd505f40ef86da54736db094",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8b2099ff_06e578da",
        "filename": "src/tests/white_box/VulkanImageWrappingTestsOpaqueFD.cpp",
        "patchSetId": 1
      },
      "lineNbr": 550,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-09-11T07:39:54Z",
      "side": 1,
      "message": "Eeek we\u0027re just reimporting the texture to have a device wait on another :S",
      "revId": "d88a6d31c9eb4555cd505f40ef86da54736db094",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    }
  ]
}