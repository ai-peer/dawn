{
  "comments": [
    {
      "key": {
        "uuid": "e0ee64d7_894059c7",
        "filename": "src/dawn_native/CommandBufferStateTracker.cpp",
        "patchSetId": 1
      },
      "lineNbr": 134,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-06-02T13:00:20Z",
      "side": 1,
      "message": "That\u0027s not what we want to check with minBufferSize. The intent is to check the two following things:\n\n - On BindGroup creation, for bindings with a minBufferSize, check that the binding is at least minBufferSize.\n - On Pipeline creation, for bindings with a minBufferSize in the layout, check that the size needed by the pipeline is at most minBufferSize. (minBufferSize would be deduced when defaulting the pipeline layout).\n\nThen on draw call, if minBufferSize is not set for a binding, we\u0027d check that the size set is at least what\u0027s required by the pipeline.",
      "revId": "4628551ab45166de58f5eac195f29af55c130ad2",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c2b9760d_2303342e",
        "filename": "src/dawn_native/CommandBufferStateTracker.cpp",
        "patchSetId": 1
      },
      "lineNbr": 134,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-06-02T15:14:02Z",
      "side": 1,
      "message": "Isn\u0027t this the last draw call check (except it always happens)? Implementing the other checks and correct deduction shouldn\u0027t change the draw call validation (except perhaps skipping it). So I would think having this validation here vs. deleting it would be good enough to get a rough idea of the per-draw cost of not specifiying minimumBufferSize.",
      "parentUuid": "e0ee64d7_894059c7",
      "revId": "4628551ab45166de58f5eac195f29af55c130ad2",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eb55fc27_1d5bae52",
        "filename": "src/dawn_native/CommandBufferStateTracker.cpp",
        "patchSetId": 1
      },
      "lineNbr": 134,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-06-02T15:22:54Z",
      "side": 1,
      "message": "Here the size of the bind group entry is checked against the minBufferSize in the bind group layout. It should be checking against the pipeline\u0027s static usage instead.\n\nAlso I think we could do the optimization where at least on the pipeline, the minimum required sizes are laid out in a vector (and maybe the same for bind groups) and are then checked in a tight loop on drawcall. Here we seem to be branching a lot vs. the amount of computation.",
      "parentUuid": "c2b9760d_2303342e",
      "revId": "4628551ab45166de58f5eac195f29af55c130ad2",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bcfb7436_4582f9b5",
        "filename": "src/dawn_native/CommandBufferStateTracker.cpp",
        "patchSetId": 1
      },
      "lineNbr": 150,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-06-01T17:48:56Z",
      "side": 1,
      "message": "We could add a helper function and return early if it\u0027s not valid. That would be more readable than breaking early out of nested loops.",
      "range": {
        "startLine": 135,
        "startChar": 32,
        "endLine": 150,
        "endChar": 17
      },
      "revId": "4628551ab45166de58f5eac195f29af55c130ad2",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    }
  ]
}