{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "007d6af7_3f324c3f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-08-21T18:02:21Z",
      "side": 1,
      "message": "If we add this, we should add an end2end test that such creation works.\nOn Metal, you cannot simply create a texture of format  wgpu::TextureFormat::R8BG8Biplanar420Unorm. You can emulate it by making an IOSurface with that format, then wrapping it. Not sure about other backends.\n\nPerhaps this ought to be a feature that we query support for.\n\nIf we can\u0027t support creation everywhere, an alternative could be to make two separate textures one for each plane - so long as we\u0027re able to copy/blit those planes into the real backing afterward (adding rendering + copy support is a separate issue).",
      "revId": "6401e4ddc18bfce86e9c5082cc226a1eba93693b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cfb998a4_8de607ea",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1002831
      },
      "writtenOn": "2023-08-21T20:05:52Z",
      "side": 1,
      "message": "+1 that this should probably be a feature, not a toggle.",
      "parentUuid": "007d6af7_3f324c3f",
      "revId": "6401e4ddc18bfce86e9c5082cc226a1eba93693b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "91e9db30_1b6b57b2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1003501
      },
      "writtenOn": "2023-08-21T23:26:13Z",
      "side": 1,
      "message": "This toggle is currently only relevant to swiftshader usage in chrome. Because currently multiplanar IOSurface cannot be imported into Dawn\u0027s Vulkan backend, the workaround in chrome is creating a multiplanar wgpu::Texture and copying the IOSurface content into it. But Dawn currently blocks that.\n\nThis workaround is not needed for any other backends. Because the native APIs (metal, d3d, etc) already support the shared image type (IOSurface, D3D) specific to their platform.\n\nTbh, I feel adding a feature just to enable swiftshader to create a multiplanar `wgpu::Texture` seems too complicated for this simple use case. Now I realized that currently Dawn doesn\u0027t even allow copy buffer to multiplanar texture either [1]. Should I create two additional features (allow creation \u0026 allow copy dest)?\n\nEmulating Vulkan\u0027s IOSurfaceExternalImage directly inside Dawn instead of Chrome would have been a better/simpler choice. It reduces the duplicated mutliplanar tests (in Dawn and in Chrome), it could avoid the shenanigans such as these extra features.\n\n[1] https://source.chromium.org/chromium/chromium/src/+/main:third_party/dawn/src/dawn/native/Texture.cpp;drc\u003d6d6ff81c27d10c12e3308b6bd488b042cf8967ac;l\u003d358",
      "parentUuid": "cfb998a4_8de607ea",
      "revId": "6401e4ddc18bfce86e9c5082cc226a1eba93693b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3d2ff828_9717fae0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1003501
      },
      "writtenOn": "2023-08-22T10:13:05Z",
      "side": 1,
      "message": "Btw, I have added the composite feature `MultiPlanarFormatExtendedUsages` which allows the multi-planar texture to be created \u0026 copied to/from buffer.\n\nPTAL.",
      "parentUuid": "91e9db30_1b6b57b2",
      "revId": "6401e4ddc18bfce86e9c5082cc226a1eba93693b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e5b3eafd_3dd5c7c6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-08-22T15:59:38Z",
      "side": 1,
      "message": "Thank you; I think eventually we can fold them all into one feature that supports creation and all the types of usages - but it\u0027s better that they are separate now since some parts are still experimental",
      "parentUuid": "3d2ff828_9717fae0",
      "revId": "6401e4ddc18bfce86e9c5082cc226a1eba93693b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}