{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "e0de8dd7_7ee2bd32",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2023-04-08T12:42:15Z",
      "side": 1,
      "message": "PTAL.",
      "revId": "8c3e50dbd1450a2a24b73dae7291b6a4e970f64a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b659b63e_2814d628",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2023-04-10T17:56:29Z",
      "side": 1,
      "message": "Surprised this was broken but guessing we broke the error callbacks at some point (probably moving their call site from immediate to ProcessEvents) and didn\u0027t notice?",
      "revId": "8c3e50dbd1450a2a24b73dae7291b6a4e970f64a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6f8a442d_adaac8d3",
        "filename": "src/dawn/samples/SampleUtils.cpp",
        "patchSetId": 1
      },
      "lineNbr": 396,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2023-04-08T12:47:37Z",
      "side": 1,
      "message": "Is it better to use this, or do do a `device.Tick()` in each of the samples?",
      "revId": "8c3e50dbd1450a2a24b73dae7291b6a4e970f64a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "99298787_e2b74177",
        "filename": "src/dawn/samples/SampleUtils.cpp",
        "patchSetId": 1
      },
      "lineNbr": 396,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-04-08T17:05:13Z",
      "side": 1,
      "message": "device.Tick is meant to disappear in favor of this method eventually, so this is good. Or better `wgpu::Instance(instance-\u003eGet()).ProcessEvents()`. At some point we should try to stop using dawn::native::Instance and instead go through wgpu::Instance as much as we can.",
      "parentUuid": "6f8a442d_adaac8d3",
      "revId": "8c3e50dbd1450a2a24b73dae7291b6a4e970f64a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "63959f29_2b0c922d",
        "filename": "src/dawn/samples/SampleUtils.cpp",
        "patchSetId": 1
      },
      "lineNbr": 396,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2023-04-10T17:56:29Z",
      "side": 1,
      "message": "+1, and rename this helper from Tick to ProcessEvents maybe (to adopt the new language)",
      "parentUuid": "99298787_e2b74177",
      "revId": "8c3e50dbd1450a2a24b73dae7291b6a4e970f64a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8fc6f628_350a91a2",
        "filename": "src/dawn/samples/SampleUtils.cpp",
        "patchSetId": 1
      },
      "lineNbr": 396,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2023-04-11T19:22:27Z",
      "side": 1,
      "message": "I renamed to `ProcessEvents`. I am unable to get the alternate method call to work. It seems like with the `dawn::native` call we get the right serializer, but with the `ProcessEvents` version we don\u0027t have a serializer set.\n\nThe right serialize is setup when it creates the terrible command buffer as the `c2sBuf` but I don\u0027t know how to get that hooked into the instance created?",
      "parentUuid": "63959f29_2b0c922d",
      "revId": "8c3e50dbd1450a2a24b73dae7291b6a4e970f64a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "33bc1282_2ba29fd9",
        "filename": "src/dawn/samples/SampleUtils.cpp",
        "patchSetId": 1
      },
      "lineNbr": 396,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2023-04-12T03:24:25Z",
      "side": 1,
      "message": "Not sure if this makes sense, but it seems like they\u0027re two different `Instance` objects? It seems like the one is a `dawn::native::Instance` and the other is expecting a `dawn::wire::client::Instance` the native::Instance doesn\u0027t have the Client, while the client::Instance would. We cast, pull out the non-existant client, and get random memory.",
      "parentUuid": "8fc6f628_350a91a2",
      "revId": "8c3e50dbd1450a2a24b73dae7291b6a4e970f64a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}