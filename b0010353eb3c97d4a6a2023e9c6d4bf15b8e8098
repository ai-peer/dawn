{
  "comments": [
    {
      "key": {
        "uuid": "b5cb4b27_f0b3639b",
        "filename": "examples/ManualSwapChainTest.cpp",
        "patchSetId": 4
      },
      "lineNbr": 41,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2020-03-20T02:28:27Z",
      "side": 1,
      "message": "\"as VSync in\"?",
      "range": {
        "startLine": 41,
        "startChar": 72,
        "endLine": 41,
        "endChar": 83
      },
      "revId": "b0010353eb3c97d4a6a2023e9c6d4bf15b8e8098",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "41945a21_d595dedb",
        "filename": "examples/ManualSwapChainTest.cpp",
        "patchSetId": 4
      },
      "lineNbr": 103,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-03-19T23:27:31Z",
      "side": 1,
      "message": "nit: Not that it matters so much, but is this what you wanted?",
      "range": {
        "startLine": 103,
        "startChar": 52,
        "endLine": 103,
        "endChar": 69
      },
      "revId": "b0010353eb3c97d4a6a2023e9c6d4bf15b8e8098",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4ec6c28a_11f8e408",
        "filename": "examples/ManualSwapChainTest.cpp",
        "patchSetId": 4
      },
      "lineNbr": 103,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2020-03-20T02:28:27Z",
      "side": 1,
      "message": "The title gets set later during runtime.",
      "parentUuid": "41945a21_d595dedb",
      "range": {
        "startLine": 103,
        "startChar": 52,
        "endLine": 103,
        "endChar": 69
      },
      "revId": "b0010353eb3c97d4a6a2023e9c6d4bf15b8e8098",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "21471a8f_005c983f",
        "filename": "examples/ManualSwapChainTest.cpp",
        "patchSetId": 4
      },
      "lineNbr": 270,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-03-19T23:27:31Z",
      "side": 1,
      "message": "why not use SampleUtils.h ? That way we can reuse the argument parsing, backend selection, and a bunch of set up code.\n\noh, nvm. Those use the old swapchains which is the opposite of what we want. Maybe we can factor some of it, like device setup and arg parsing?\n\nMainly would like to see the backend selection in this manual test so on systems which support more than one API we can more easily test them all.",
      "range": {
        "startLine": 260,
        "startChar": 4,
        "endLine": 270,
        "endChar": 0
      },
      "revId": "b0010353eb3c97d4a6a2023e9c6d4bf15b8e8098",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "592d4cbe_18547adf",
        "filename": "examples/ManualSwapChainTest.cpp",
        "patchSetId": 4
      },
      "lineNbr": 298,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2020-03-20T02:28:27Z",
      "side": 1,
      "message": "\"Or\"?",
      "range": {
        "startLine": 298,
        "startChar": 7,
        "endLine": 298,
        "endChar": 9
      },
      "revId": "b0010353eb3c97d4a6a2023e9c6d4bf15b8e8098",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ac1eb7e0_54f88771",
        "filename": "examples/ManualSwapChainTest.cpp",
        "patchSetId": 4
      },
      "lineNbr": 332,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-03-19T23:27:31Z",
      "side": 1,
      "message": "instead of the break, may be more clear to have separate for-loops\n\nfor (auto\u0026 it : windows) {\n  if shouldClose() it \u003d windows.erase(it);\n}\nfor (it : windows) {\n  renderStuff()\n}",
      "range": {
        "startLine": 325,
        "startChar": 8,
        "endLine": 332,
        "endChar": 13
      },
      "revId": "b0010353eb3c97d4a6a2023e9c6d4bf15b8e8098",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6f0303ba_924944ae",
        "filename": "src/dawn_native/metal/SwapChainMTL.mm",
        "patchSetId": 4
      },
      "lineNbr": 116,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-03-19T23:27:31Z",
      "side": 1,
      "message": "nit: the created texture view",
      "range": {
        "startLine": 116,
        "startChar": 11,
        "endLine": 116,
        "endChar": 19
      },
      "revId": "b0010353eb3c97d4a6a2023e9c6d4bf15b8e8098",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "699c21a1_af764040",
        "filename": "src/dawn_native/metal/SwapChainMTL.mm",
        "patchSetId": 4
      },
      "lineNbr": 129,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-03-19T23:27:31Z",
      "side": 1,
      "message": "calls that mutate the SwapChain should leave it with mTexture and mCurrentDrawable either both non-null or both null. ASSERT mCurrentDrawable \u003d\u003d nil in the else case (or just after the if). That way the assumption is clear that if the texture was null, the drawable should also be nil",
      "range": {
        "startLine": 129,
        "startChar": 8,
        "endLine": 129,
        "endChar": 9
      },
      "revId": "b0010353eb3c97d4a6a2023e9c6d4bf15b8e8098",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "85adaf3d_cb82baea",
        "filename": "src/tests/end2end/SwapChainTests.cpp",
        "patchSetId": 4
      },
      "lineNbr": 172,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2020-03-20T02:28:27Z",
      "side": 1,
      "message": "wrong comment",
      "revId": "b0010353eb3c97d4a6a2023e9c6d4bf15b8e8098",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    }
  ]
}