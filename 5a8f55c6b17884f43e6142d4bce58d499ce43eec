{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "ff4b299f_8bd2b9d2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 12
      },
      "lineNbr": 0,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2021-12-03T08:19:13Z",
      "side": 1,
      "message": "PTAL",
      "revId": "5a8f55c6b17884f43e6142d4bce58d499ce43eec",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "81018500_69447d07",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 12
      },
      "lineNbr": 0,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2021-12-03T21:50:43Z",
      "side": 1,
      "message": "LGTM",
      "revId": "5a8f55c6b17884f43e6142d4bce58d499ce43eec",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "af7f20d5_5db3a3d6",
        "filename": "src/tests/end2end/VideoViewsTests.cpp",
        "patchSetId": 12
      },
      "lineNbr": 36,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2021-12-03T21:50:43Z",
      "side": 1,
      "message": "Are these ever called, or can we make then pure virtual \"\u003d 0\" in the header?",
      "range": {
        "startLine": 20,
        "startChar": 0,
        "endLine": 36,
        "endChar": 1
      },
      "revId": "5a8f55c6b17884f43e6142d4bce58d499ce43eec",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1f3f3557_3143b756",
        "filename": "src/tests/end2end/VideoViewsTests.h",
        "patchSetId": 12
      },
      "lineNbr": 16,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2021-12-03T21:50:43Z",
      "side": 1,
      "message": "u-unit: newline after the #define",
      "revId": "5a8f55c6b17884f43e6142d4bce58d499ce43eec",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7bad0e79_d4d8618e",
        "filename": "src/tests/end2end/VideoViewsTests.h",
        "patchSetId": 12
      },
      "lineNbr": 29,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2021-12-03T21:50:43Z",
      "side": 1,
      "message": "nit: \u003d default, but best to define it in the .cpp next to OnSetUp, etc?",
      "range": {
        "startLine": 27,
        "startChar": 37,
        "endLine": 29,
        "endChar": 0
      },
      "revId": "5a8f55c6b17884f43e6142d4bce58d499ce43eec",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3113133e_7c70280c",
        "filename": "src/tests/end2end/VideoViewsTests.h",
        "patchSetId": 12
      },
      "lineNbr": 38,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2021-12-03T21:50:43Z",
      "side": 1,
      "message": "create could return std::unique_ptr\u003cPlatformTexture\u003e where PlatformTexture is an abstract class.\n\nThen, the handle implementation is inside the derived class, and we don\u0027t need void*\n\nwe can return nullptr instead of returning false on failure.\nAlthough, looking at the implementations, CreateVideoTextureForTest never returns false. for _win and _gbm",
      "range": {
        "startLine": 34,
        "startChar": 4,
        "endLine": 38,
        "endChar": 17
      },
      "revId": "5a8f55c6b17884f43e6142d4bce58d499ce43eec",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4f703a74_baae0795",
        "filename": "src/tests/end2end/VideoViewsTests_gbm.cpp",
        "patchSetId": 12
      },
      "lineNbr": 74,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2021-12-03T21:50:43Z",
      "side": 1,
      "message": "not needed since there is UNREACHABLE()",
      "range": {
        "startLine": 74,
        "startChar": 0,
        "endLine": 74,
        "endChar": 26
      },
      "revId": "5a8f55c6b17884f43e6142d4bce58d499ce43eec",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fb6c6b5f_033f73ae",
        "filename": "src/tests/end2end/VideoViewsTests_gbm.cpp",
        "patchSetId": 12
      },
      "lineNbr": 84,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2021-12-03T21:50:43Z",
      "side": 1,
      "message": "not needed since there is UNREACHABLE()",
      "range": {
        "startLine": 84,
        "startChar": 0,
        "endLine": 84,
        "endChar": 51
      },
      "revId": "5a8f55c6b17884f43e6142d4bce58d499ce43eec",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "98823791_c888240b",
        "filename": "src/tests/end2end/VideoViewsTests_gbm.cpp",
        "patchSetId": 12
      },
      "lineNbr": 94,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2021-12-03T21:50:43Z",
      "side": 1,
      "message": "not needed since there is UNREACHABLE()",
      "range": {
        "startLine": 94,
        "startChar": 0,
        "endLine": 94,
        "endChar": 45
      },
      "revId": "5a8f55c6b17884f43e6142d4bce58d499ce43eec",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2cf204db_ee54adbf",
        "filename": "src/tests/end2end/VideoViewsTests_gbm.cpp",
        "patchSetId": 12
      },
      "lineNbr": 99,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2021-12-03T21:50:43Z",
      "side": 1,
      "message": "it\u0027s unfortunate we need to create a texture to check support, only to destroy and create it again later.\n\nAlternatively, we could perhaps change the code to be like:\n\n  auto platformTexture \u003d backend-\u003eCreateVideoTextureForTest(...);\n  if (!platformTexture-\u003eCanWrapAsWGPUTexture()) {\n    backend-\u003eDestroyVideoTextureForTest(std::move(platformTexture));\n    GTEST_SKIP() \u003c\u003c \"Skipped because not supported\".\n  }\n  backend-\u003eInitializeTestData(platformTexture.get());\n  ...",
      "revId": "5a8f55c6b17884f43e6142d4bce58d499ce43eec",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9fa778c9_8315b951",
        "filename": "src/tests/end2end/VideoViewsTests_gbm.cpp",
        "patchSetId": 12
      },
      "lineNbr": 126,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2021-12-03T21:50:43Z",
      "side": 1,
      "message": "instead of hardcoding NV12 here, did you intend to call GetGbmBoFormat which is never called?\n\nI guess that means we will need to change IsSupported() to be IsSupported(format)",
      "revId": "5a8f55c6b17884f43e6142d4bce58d499ce43eec",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "77fd4dd8_c4c60079",
        "filename": "src/tests/end2end/VideoViewsTests_gbm.cpp",
        "patchSetId": 12
      },
      "lineNbr": 158,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2021-12-03T21:50:43Z",
      "side": 1,
      "message": "above, we can use the C++ api, and then here reinterpret_cast from const wgpu::TextureDescriptor* to const WGPUTextureDescriptor*. We have static_asserts to ensure they are castable.",
      "range": {
        "startLine": 158,
        "startChar": 40,
        "endLine": 158,
        "endChar": 53
      },
      "revId": "5a8f55c6b17884f43e6142d4bce58d499ce43eec",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "54df4874_ec39d049",
        "filename": "src/tests/end2end/VideoViewsTests_win.cpp",
        "patchSetId": 12
      },
      "lineNbr": 77,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2021-12-03T21:50:43Z",
      "side": 1,
      "message": "not needed since there is UNREACHABLE",
      "range": {
        "startLine": 77,
        "startChar": 0,
        "endLine": 77,
        "endChar": 43
      },
      "revId": "5a8f55c6b17884f43e6142d4bce58d499ce43eec",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}