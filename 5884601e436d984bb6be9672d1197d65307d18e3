{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "b4d6ae30_c21777e6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2022-02-23T08:55:31Z",
      "side": 1,
      "message": "Apply https://chromium-review.googlesource.com/c/chromium/src/+/3479376 in chromium \nAnd try the sample:\nhttps://austin-eng.com/webgpu-samples/samples/videoUploading (CPU decoding)\nand the https://source.chromium.org/chromium/chromium/src/+/main:content/test/data/gpu/vc/webgpu_videos_mxn.html (GPU decoding)\n",
      "revId": "5884601e436d984bb6be9672d1197d65307d18e3",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9180fa7e_cf55ec3d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2022-02-24T02:08:25Z",
      "side": 1,
      "message": "Also cc enga@ and kai@ for comments,\nThe basic idea here is to Retain the external iosurface from the shared image which contains a multiplanar IOSurface (get from multiplanar CVPixelBuffer) in the WGPUTexture for AssociateMailbox. Then Creating per plane mtlTexture from IOSurface when user creating texture view on this texture through Dawn and WGPUTextureView holds the per plane mtlTexture. \nDo you think this is the correct direction in Dawn? If yes, I\u0027ll iterate on this CL to make it mature.",
      "revId": "5884601e436d984bb6be9672d1197d65307d18e3",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ded86f46_c3762ef3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2022-02-24T02:12:39Z",
      "side": 1,
      "message": "I\u0027ll think about it (haven\u0027t read the CL yet) but - did you have any alternative ideas in mind for how to do this that we should consider?",
      "parentUuid": "9180fa7e_cf55ec3d",
      "revId": "5884601e436d984bb6be9672d1197d65307d18e3",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b8bf885a_ac5b00d0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2022-02-24T02:25:54Z",
      "side": 1,
      "message": "I think the other one is to obey the GLImageIOSurface format which has been per plane format already. So we could create mtlTexture on IOSurface plane during the initialization and keep the mtlTexture in Dawn(But I\u0027m not sure whether the IOSurface could be released unexpected in chromium). User in render process could call AssociateMailbox twice with mailbox[0] and mailbox[1] to get 2 WebGPUMailboxTexture. Then they could call creating texture view for each texture.",
      "parentUuid": "ded86f46_c3762ef3",
      "revId": "5884601e436d984bb6be9672d1197d65307d18e3",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ae89d830_8e16388d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2022-02-24T02:31:17Z",
      "side": 1,
      "message": "I think ccameron@ CL is the shape of the above idea\nChromium side: https://chromium-review.googlesource.com/c/chromium/src/+/3473901\nDawn side(not complete) https://dawn-review.googlesource.com/c/dawn/+/81022",
      "parentUuid": "b8bf885a_ac5b00d0",
      "revId": "5884601e436d984bb6be9672d1197d65307d18e3",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0afb3064_e7375e92",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2022-02-24T04:27:30Z",
      "side": 1,
      "message": "I have a preference for wrapping the whole IOSurface directly instead of creating two WGPUTextures which each point to a plane of the IOSurface. Because architecturally, it seems simpler to think about. We have a 1:1 mapping of external IOSurface -\u003e WGPUTexture. And we just create views normally.\n\nHowever, I\u0027m not sure what details need to be considered on the Chromium side. Looking at those patches, you said:\n\n\u003e Note that this requires invoke AssociateMailbox in render process always use the mailbox[0]. \n\nIf in Chromium, the planes are separate SharedImages, then maybe it\u0027s better having a 1:1 SharedImage -\u003e WGPUTexture association instead of a 1:1 IOSurface -\u003e WGPUTexture mapping. \nOr - is there a plan for a single SharedImage with multiple planes?\n\n(sunnyps@ had messaged me about 0-copy on Mac last week, but the messages have disappeared, so I don\u0027t remember what he said. So Sunny please chime in if you have additional thoughts).",
      "parentUuid": "ae89d830_8e16388d",
      "revId": "5884601e436d984bb6be9672d1197d65307d18e3",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ce0175d0_d5b3ccdd",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2022-02-24T04:39:23Z",
      "side": 1,
      "message": "Also, for RG16Unorm and R16Unorm, please feel free to add them as a Dawn extension.",
      "parentUuid": "0afb3064_e7375e92",
      "revId": "5884601e436d984bb6be9672d1197d65307d18e3",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1d242676_62ec6656",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2022-02-24T05:54:05Z",
      "side": 1,
      "message": "\u003e If in Chromium, the planes are separate SharedImages, then maybe it\u0027s better having a 1:1 SharedImage -\u003e WGPUTexture association instead of a 1:1 IOSurface -\u003e WGPUTexture mapping. Or - is there a plan for a single SharedImage with multiple planes?\n\n(My understanding, ccameron@ pls correct me if I\u0027m wrong)\nUnfortunately, on current chromium side, the shared image will wrap the whole CVPixelBuffer but expose the single plane infos. So the videoFrame contains two SIs and each of them wrap the same CVPixelBufferRef but expose different plane info. But I\u0027m not sure whether there is plan to have a single video shared image (It would be ideal if there is such plan).\n\n\u003e Also, for RG16Unorm and R16Unorm, please feel free to add them as a Dawn extension.\n\nAck.",
      "parentUuid": "ce0175d0_d5b3ccdd",
      "revId": "5884601e436d984bb6be9672d1197d65307d18e3",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bd344d35_2796fa0e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2022-02-24T05:55:06Z",
      "side": 1,
      "message": "BTW, the chromium side CL for wrapping whole IOSurface https://chromium-review.googlesource.com/c/chromium/src/+/3479376",
      "parentUuid": "1d242676_62ec6656",
      "revId": "5884601e436d984bb6be9672d1197d65307d18e3",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "be55e6de_a5f18722",
        "filename": "src/dawn/native/metal/BackendMTL.mm",
        "patchSetId": 3
      },
      "lineNbr": 363,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2022-02-23T08:59:11Z",
      "side": 1,
      "message": "I don\u0027t know whether wrap CVPixelBuffer directly and create mtlTexture on it could support 0-copy path on more devices.",
      "revId": "5884601e436d984bb6be9672d1197d65307d18e3",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b4fca9c7_8627e308",
        "filename": "src/dawn/native/metal/BackendMTL.mm",
        "patchSetId": 3
      },
      "lineNbr": 363,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2022-02-24T02:19:55Z",
      "side": 1,
      "message": "this looks fine to me. we require macOS 11, and don\u0027t need iOS for Chrome",
      "parentUuid": "be55e6de_a5f18722",
      "revId": "5884601e436d984bb6be9672d1197d65307d18e3",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}