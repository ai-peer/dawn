{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "19245d29_357fe878",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-01-14T13:40:23Z",
      "side": 1,
      "message": "LGTM!",
      "revId": "47aabcd2c8b81a9257a13d3f573cd4463cd7cafc",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f736c9f2_8dca2336",
        "filename": "src/dawn_native/d3d12/PipelineLayoutD3D12.cpp",
        "patchSetId": 3
      },
      "lineNbr": 154,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-01-14T13:40:23Z",
      "side": 1,
      "message": "For a first version adding the offset unconditionally in all root signatures seems ok, but in the future we should create root signatures from the pipeline layout on demand (and cache them in the layout) so that pipelines that don\u0027t use gl_VertexIndex / gl_InstanceIndex don\u0027t need to have a bigger root signature.",
      "revId": "47aabcd2c8b81a9257a13d3f573cd4463cd7cafc",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ceb044ab_59bfba1e",
        "filename": "src/tests/end2end/FirstIndexOffsetTests.cpp",
        "patchSetId": 3
      },
      "lineNbr": 52,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-01-14T13:40:23Z",
      "side": 1,
      "message": "I think this problem would disappear if we were drawing a single point, is that an option?",
      "revId": "47aabcd2c8b81a9257a13d3f573cd4463cd7cafc",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bd55d9b9_dadead90",
        "filename": "src/tests/end2end/FirstIndexOffsetTests.cpp",
        "patchSetId": 3
      },
      "lineNbr": 104,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-01-14T13:40:23Z",
      "side": 1,
      "message": "nit: let\u0027s use vertex_index instead of idx because it was fixed in the upstream WGSL spec. (ditto for out_ and in_ versions of the variable)",
      "range": {
        "startLine": 104,
        "startChar": 40,
        "endLine": 104,
        "endChar": 50
      },
      "revId": "47aabcd2c8b81a9257a13d3f573cd4463cd7cafc",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7abf8e26_c44cd277",
        "filename": "src/tests/end2end/FirstIndexOffsetTests.cpp",
        "patchSetId": 3
      },
      "lineNbr": 105,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-01-14T13:40:23Z",
      "side": 1,
      "message": "We should be able to hardcode position 0 and 1 for vertex_index and instance_index respectively . WebGPU should allow sparse varyings.",
      "range": {
        "startLine": 105,
        "startChar": 25,
        "endLine": 105,
        "endChar": 33
      },
      "revId": "47aabcd2c8b81a9257a13d3f573cd4463cd7cafc",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "56231b64_88d235c2",
        "filename": "src/tests/end2end/FirstIndexOffsetTests.cpp",
        "patchSetId": 3
      },
      "lineNbr": 116,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-01-14T13:40:23Z",
      "side": 1,
      "message": "ditto instance_index.",
      "range": {
        "startLine": 116,
        "startChar": 46,
        "endLine": 116,
        "endChar": 58
      },
      "revId": "47aabcd2c8b81a9257a13d3f573cd4463cd7cafc",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "763b0a25_e1681e35",
        "filename": "src/tests/end2end/FirstIndexOffsetTests.cpp",
        "patchSetId": 3
      },
      "lineNbr": 204,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-01-14T13:40:23Z",
      "side": 1,
      "message": "this should be optional",
      "range": {
        "startLine": 204,
        "startChar": 57,
        "endLine": 204,
        "endChar": 82
      },
      "revId": "47aabcd2c8b81a9257a13d3f573cd4463cd7cafc",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a5875f06_6c649ab5",
        "filename": "src/tests/end2end/FirstIndexOffsetTests.cpp",
        "patchSetId": 3
      },
      "lineNbr": 207,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-01-14T13:40:23Z",
      "side": 1,
      "message": "nit: maybe call it firstIndex and firstInstance?",
      "range": {
        "startLine": 207,
        "startChar": 34,
        "endLine": 207,
        "endChar": 45
      },
      "revId": "47aabcd2c8b81a9257a13d3f573cd4463cd7cafc",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f249ec55_73c8eda2",
        "filename": "src/tests/end2end/FirstIndexOffsetTests.cpp",
        "patchSetId": 3
      },
      "lineNbr": 230,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-01-14T13:40:23Z",
      "side": 1,
      "message": "nit: the constants don\u0027t exist, did you mean to set them to 7 and 11 respectively?",
      "range": {
        "startLine": 230,
        "startChar": 54,
        "endLine": 230,
        "endChar": 72
      },
      "revId": "47aabcd2c8b81a9257a13d3f573cd4463cd7cafc",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}