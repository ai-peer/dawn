{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "ef57d5b6_81d55c55",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-11-07T12:55:13Z",
      "side": 1,
      "message": "This is a very impressive first contribution! LGTM\n\nNote however that for full support of this format we\u0027ll also need to update ExternalTexture to support getting an additional third plane for the alpha. See https://developer.chrome.com/blog/new-in-webgpu-116/#webcodecs-integration\n\nRelevant files are third_party/dawn/src/dawn/native/ExternalTexture.cpp third_party/dawn/src/tint/lang/wgsl/ast/transform/multiplanar_external_texture.cc and third_party/dawn/src/tint/lang/core/ir/transform/multiplanar_external_texture.cc (we are in the middle of the AST -\u003e IR transition so there is some duplication)",
      "revId": "44a9f74384409ed76d84efabaa4e4f70578bb3e4",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e4953bce_cb1c23f6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1004586
      },
      "writtenOn": "2023-11-07T14:04:24Z",
      "side": 1,
      "message": "Sure, @Corentin! I am not a WebGPU expert for that part now, just somebody who met the problem and wants to contribute some codes to solve the current problem. I think skia graphite and dawn has a lot work unfinished like implement YV12 and I420 format which also being used on macOS (seems they all broken on Canary if user hit the SkiaGraphite finch experiment). \n\nFor those parts of the content you mentioned, I will need some time to digest, so I will submit another CL to do that part of the job, is that okey with you? for now, the current code could at least make \u003cvideo\u003e element not crash, but indeed we don\u0027t have full support of this format.",
      "parentUuid": "ef57d5b6_81d55c55",
      "revId": "44a9f74384409ed76d84efabaa4e4f70578bb3e4",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2ffd8fd2_3ffd7fa4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-11-07T14:43:15Z",
      "side": 1,
      "message": "Oh good catch, did you file issues about these formats so the Graphite team is aware?\n\nOf course ExternalTexture support would be another CL, but feel free to push back and someone on the Dawn team will take care of it!",
      "parentUuid": "e4953bce_cb1c23f6",
      "revId": "44a9f74384409ed76d84efabaa4e4f70578bb3e4",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f978ea76_9501f4aa",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1004586
      },
      "writtenOn": "2023-11-07T14:59:21Z",
      "side": 1,
      "message": "I donâ€™t have a sample to reproduce but sincd that dawn only support two multi-plane format (nv12, p010), it has a high chance to cause problem.\n\nIt seems that:\n\nYV12: https://source.chromium.org/chromium/chromium/src/+/main:components/exo/buffer.cc;l\u003d107\n\nI420/I420A/I444: https://source.chromium.org/chromium/chromium/src/+/main:third_party/blink/renderer/modules/webcodecs/fuzzer_inputs.proto;l\u003d48\n\nall these four formats and some other 420/422/444 format are missing.",
      "parentUuid": "2ffd8fd2_3ffd7fa4",
      "revId": "44a9f74384409ed76d84efabaa4e4f70578bb3e4",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c7c7c969_ccc782de",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1004586
      },
      "writtenOn": "2023-11-09T05:52:48Z",
      "side": 1,
      "message": "Any Update?",
      "revId": "44a9f74384409ed76d84efabaa4e4f70578bb3e4",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fd154bf8_4573bd54",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-11-09T09:30:16Z",
      "side": 1,
      "message": "Yep I forgot to press the button. Austin does it LGTY as well?",
      "revId": "44a9f74384409ed76d84efabaa4e4f70578bb3e4",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "aef48c14_e2bf78e9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1004586
      },
      "writtenOn": "2023-11-09T09:37:35Z",
      "side": 1,
      "message": "Thanks Corentin, let wait for Austin. I will take some time this weekend implement ExternalTexture part that you mentioned (if everything goes well and no revert).",
      "parentUuid": "fd154bf8_4573bd54",
      "revId": "44a9f74384409ed76d84efabaa4e4f70578bb3e4",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8563dcd1_096fef31",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-11-09T17:49:47Z",
      "side": 1,
      "message": "LGTM",
      "revId": "44a9f74384409ed76d84efabaa4e4f70578bb3e4",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "44a9f74384409ed76d84efabaa4e4f70578bb3e4",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Kokoro",
        "description": {
          "value": "A maximum vote is required for the Kokoro label. A minimum vote is blocking."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Kokoro\u003dMAX AND -label:Kokoro\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "uploader:dawn-autoroll@skia-public.iam.gserviceaccount.com OR uploader:chrome-automated-expectation@chops-service-accounts.iam.gserviceaccount.com OR uploader:chrome-branch-day@chops-service-accounts.iam.gserviceaccount.com"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Kokoro=MAX AND -label:Kokoro=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Kokoro=MAX"],"failingAtoms":["label:Kokoro=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"uploader:dawn-autoroll@skia-public.iam.gserviceaccount.com OR uploader:chrome-automated-expectation@chops-service-accounts.iam.gserviceaccount.com OR uploader:chrome-branch-day@chops-service-accounts.iam.gserviceaccount.com"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["uploader:dawn-autoroll@skia-public.iam.gserviceaccount.com","uploader:chrome-automated-expectation@chops-service-accounts.iam.gserviceaccount.com","uploader:chrome-branch-day@chops-service-accounts.iam.gserviceaccount.com"]}
      },
      "patchSetCommitId": "44a9f74384409ed76d84efabaa4e4f70578bb3e4",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "patchSetCommitId": "44a9f74384409ed76d84efabaa4e4f70578bb3e4",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    }
  ]
}