# Copyright 2019 The Dawn Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("../../scripts/dawn_overrides_with_defaults.gni")

import("${dawn_root}/scripts/dawn_component.gni")
import("${dawn_root}/generator/dawn_generator.gni")

###############################################################################
# libdawn_wire
###############################################################################

# Public libdawn_wire headers so they can be publically visible for
# dependencies of libdawn_wire
source_set("libdawn_wire_headers") {
  public_deps = [
    "${dawn_root}/src/dawn:dawn_headers",
  ]
  public_configs = [ "${dawn_root}/src/common:dawn_public" ]
  sources = [
    "${dawn_root}/src/include/dawn_wire/Wire.h",
    "${dawn_root}/src/include/dawn_wire/WireClient.h",
    "${dawn_root}/src/include/dawn_wire/WireServer.h",
    "${dawn_root}/src/include/dawn_wire/dawn_wire_export.h",
  ]
}

dawn_generator("libdawn_wire_gen") {
  target = "dawn_wire"

  # Generate as if we were in the main BUILD.gn because that was historically
  # the case and we can't move generated files without clobbering the build.
  custom_gen_dir = "${target_gen_dir}/../.."
  outputs = [
    "dawn_wire/TypeTraits_autogen.h",
    "dawn_wire/WireCmd_autogen.h",
    "dawn_wire/WireCmd_autogen.cpp",
    "dawn_wire/client/ApiObjects_autogen.h",
    "dawn_wire/client/ApiProcs_autogen.cpp",
    "dawn_wire/client/ApiProcs_autogen.h",
    "dawn_wire/client/ClientBase_autogen.h",
    "dawn_wire/client/ClientDoers_autogen.cpp",
    "dawn_wire/client/ClientHandlers_autogen.cpp",
    "dawn_wire/client/ClientPrototypes_autogen.inl",
    "dawn_wire/server/ServerBase_autogen.h",
    "dawn_wire/server/ServerCallbacks_autogen.cpp",
    "dawn_wire/server/ServerDoers_autogen.cpp",
    "dawn_wire/server/ServerHandlers_autogen.cpp",
    "dawn_wire/server/ServerPrototypes_autogen.inl",
  ]
}

dawn_component("libdawn_wire") {
  DEFINE_PREFIX = "DAWN_WIRE"

  deps = [
    ":libdawn_wire_gen",
    ":libdawn_wire_headers",
    "${dawn_root}/src/common",
  ]

  configs = [ "${dawn_root}/src/common:dawn_internal" ]
  sources = get_target_outputs(":libdawn_wire_gen")
  sources += [
    "WireClient.cpp",
    "WireDeserializeAllocator.cpp",
    "WireDeserializeAllocator.h",
    "WireServer.cpp",
    "client/ApiObjects.h",
    "client/ApiProcs.cpp",
    "client/Buffer.cpp",
    "client/Buffer.h",
    "client/Client.cpp",
    "client/Client.h",
    "client/ClientDoers.cpp",
    "client/Device.cpp",
    "client/Device.h",
    "client/Fence.cpp",
    "client/Fence.h",
    "client/ObjectAllocator.h",
    "server/ObjectStorage.h",
    "server/Server.cpp",
    "server/Server.h",
    "server/ServerBuffer.cpp",
    "server/ServerDevice.cpp",
    "server/ServerFence.cpp",
    "server/ServerQueue.cpp",
  ]

  # Make headers publically visible
  public_deps = [
    ":libdawn_wire_headers",
  ]
}
