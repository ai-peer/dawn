// Copyright 2022 The Tint Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

#include "gmock/gmock.h"
#include "src/tint/writer/glsl/test_helper.h"

using ::testing::HasSubstr;

namespace tint::writer::glsl {
namespace {

using GlslGeneratorImplTest_StorageBuffer = TestHelper;

void TestAlign(ProgramBuilder* ctx) {
    // struct Nephews {
    //   @align(256) huey  : f32;
    //   @align(256) dewey : f32;
    //   @align(256) louie : f32;
    // };
    // @group(0) @binding(0) var<storage, read_write> nephews : Nephews;
    auto* nephews =
        ctx->Structure("Nephews", {
                                      ctx->Member("huey", ctx->ty.f32(), {ctx->MemberAlign(256)}),
                                      ctx->Member("dewey", ctx->ty.f32(), {ctx->MemberAlign(256)}),
                                      ctx->Member("louie", ctx->ty.f32(), {ctx->MemberAlign(256)}),
                                  });
    ctx->GlobalVar("nephews", ctx->ty.Of(nephews), ast::StorageClass::kStorage,
                   ast::AttributeList{
                       ctx->create<ast::BindingAttribute>(0u),
                       ctx->create<ast::GroupAttribute>(0u),
                   });
}

TEST_F(GlslGeneratorImplTest_StorageBuffer, Align) {
    TestAlign(this);

    GeneratorImpl& gen = Build();

    // TODO(crbug.com/tint/1421) offsets do not currently work on GLSL ES.
    // They will likely require manual padding.
    ASSERT_TRUE(gen.Generate()) << gen.error();
    EXPECT_EQ(gen.result(), R"(#version 310 es

struct Nephews {
  float huey;
  uint pad;
  uint pad_1;
  uint pad_2;
  uint pad_3;
  uint pad_4;
  uint pad_5;
  uint pad_6;
  uint pad_7;
  uint pad_8;
  uint pad_9;
  uint pad_10;
  uint pad_11;
  uint pad_12;
  uint pad_13;
  uint pad_14;
  uint pad_15;
  uint pad_16;
  uint pad_17;
  uint pad_18;
  uint pad_19;
  uint pad_20;
  uint pad_21;
  uint pad_22;
  uint pad_23;
  uint pad_24;
  uint pad_25;
  uint pad_26;
  uint pad_27;
  uint pad_28;
  uint pad_29;
  uint pad_30;
  uint pad_31;
  uint pad_32;
  uint pad_33;
  uint pad_34;
  uint pad_35;
  uint pad_36;
  uint pad_37;
  uint pad_38;
  uint pad_39;
  uint pad_40;
  uint pad_41;
  uint pad_42;
  uint pad_43;
  uint pad_44;
  uint pad_45;
  uint pad_46;
  uint pad_47;
  uint pad_48;
  uint pad_49;
  uint pad_50;
  uint pad_51;
  uint pad_52;
  uint pad_53;
  uint pad_54;
  uint pad_55;
  uint pad_56;
  uint pad_57;
  uint pad_58;
  uint pad_59;
  uint pad_60;
  uint pad_61;
  uint pad_62;
  float dewey;
  uint pad_63;
  uint pad_64;
  uint pad_65;
  uint pad_66;
  uint pad_67;
  uint pad_68;
  uint pad_69;
  uint pad_70;
  uint pad_71;
  uint pad_72;
  uint pad_73;
  uint pad_74;
  uint pad_75;
  uint pad_76;
  uint pad_77;
  uint pad_78;
  uint pad_79;
  uint pad_80;
  uint pad_81;
  uint pad_82;
  uint pad_83;
  uint pad_84;
  uint pad_85;
  uint pad_86;
  uint pad_87;
  uint pad_88;
  uint pad_89;
  uint pad_90;
  uint pad_91;
  uint pad_92;
  uint pad_93;
  uint pad_94;
  uint pad_95;
  uint pad_96;
  uint pad_97;
  uint pad_98;
  uint pad_99;
  uint pad_100;
  uint pad_101;
  uint pad_102;
  uint pad_103;
  uint pad_104;
  uint pad_105;
  uint pad_106;
  uint pad_107;
  uint pad_108;
  uint pad_109;
  uint pad_110;
  uint pad_111;
  uint pad_112;
  uint pad_113;
  uint pad_114;
  uint pad_115;
  uint pad_116;
  uint pad_117;
  uint pad_118;
  uint pad_119;
  uint pad_120;
  uint pad_121;
  uint pad_122;
  uint pad_123;
  uint pad_124;
  uint pad_125;
  float louie;
  uint pad_126;
  uint pad_127;
  uint pad_128;
  uint pad_129;
  uint pad_130;
  uint pad_131;
  uint pad_132;
  uint pad_133;
  uint pad_134;
  uint pad_135;
  uint pad_136;
  uint pad_137;
  uint pad_138;
  uint pad_139;
  uint pad_140;
  uint pad_141;
  uint pad_142;
  uint pad_143;
  uint pad_144;
  uint pad_145;
  uint pad_146;
  uint pad_147;
  uint pad_148;
  uint pad_149;
  uint pad_150;
  uint pad_151;
  uint pad_152;
  uint pad_153;
  uint pad_154;
  uint pad_155;
  uint pad_156;
  uint pad_157;
  uint pad_158;
  uint pad_159;
  uint pad_160;
  uint pad_161;
  uint pad_162;
  uint pad_163;
  uint pad_164;
  uint pad_165;
  uint pad_166;
  uint pad_167;
  uint pad_168;
  uint pad_169;
  uint pad_170;
  uint pad_171;
  uint pad_172;
  uint pad_173;
  uint pad_174;
  uint pad_175;
  uint pad_176;
  uint pad_177;
  uint pad_178;
  uint pad_179;
  uint pad_180;
  uint pad_181;
  uint pad_182;
  uint pad_183;
  uint pad_184;
  uint pad_185;
  uint pad_186;
  uint pad_187;
  uint pad_188;
};

layout(binding = 0, std430) buffer Nephews_1 {
  float huey;
  uint pad_189;
  uint pad_190;
  uint pad_191;
  uint pad_192;
  uint pad_193;
  uint pad_194;
  uint pad_195;
  uint pad_196;
  uint pad_197;
  uint pad_198;
  uint pad_199;
  uint pad_200;
  uint pad_201;
  uint pad_202;
  uint pad_203;
  uint pad_204;
  uint pad_205;
  uint pad_206;
  uint pad_207;
  uint pad_208;
  uint pad_209;
  uint pad_210;
  uint pad_211;
  uint pad_212;
  uint pad_213;
  uint pad_214;
  uint pad_215;
  uint pad_216;
  uint pad_217;
  uint pad_218;
  uint pad_219;
  uint pad_220;
  uint pad_221;
  uint pad_222;
  uint pad_223;
  uint pad_224;
  uint pad_225;
  uint pad_226;
  uint pad_227;
  uint pad_228;
  uint pad_229;
  uint pad_230;
  uint pad_231;
  uint pad_232;
  uint pad_233;
  uint pad_234;
  uint pad_235;
  uint pad_236;
  uint pad_237;
  uint pad_238;
  uint pad_239;
  uint pad_240;
  uint pad_241;
  uint pad_242;
  uint pad_243;
  uint pad_244;
  uint pad_245;
  uint pad_246;
  uint pad_247;
  uint pad_248;
  uint pad_249;
  uint pad_250;
  uint pad_251;
  float dewey;
  uint pad_252;
  uint pad_253;
  uint pad_254;
  uint pad_255;
  uint pad_256;
  uint pad_257;
  uint pad_258;
  uint pad_259;
  uint pad_260;
  uint pad_261;
  uint pad_262;
  uint pad_263;
  uint pad_264;
  uint pad_265;
  uint pad_266;
  uint pad_267;
  uint pad_268;
  uint pad_269;
  uint pad_270;
  uint pad_271;
  uint pad_272;
  uint pad_273;
  uint pad_274;
  uint pad_275;
  uint pad_276;
  uint pad_277;
  uint pad_278;
  uint pad_279;
  uint pad_280;
  uint pad_281;
  uint pad_282;
  uint pad_283;
  uint pad_284;
  uint pad_285;
  uint pad_286;
  uint pad_287;
  uint pad_288;
  uint pad_289;
  uint pad_290;
  uint pad_291;
  uint pad_292;
  uint pad_293;
  uint pad_294;
  uint pad_295;
  uint pad_296;
  uint pad_297;
  uint pad_298;
  uint pad_299;
  uint pad_300;
  uint pad_301;
  uint pad_302;
  uint pad_303;
  uint pad_304;
  uint pad_305;
  uint pad_306;
  uint pad_307;
  uint pad_308;
  uint pad_309;
  uint pad_310;
  uint pad_311;
  uint pad_312;
  uint pad_313;
  uint pad_314;
  float louie;
  uint pad_315;
  uint pad_316;
  uint pad_317;
  uint pad_318;
  uint pad_319;
  uint pad_320;
  uint pad_321;
  uint pad_322;
  uint pad_323;
  uint pad_324;
  uint pad_325;
  uint pad_326;
  uint pad_327;
  uint pad_328;
  uint pad_329;
  uint pad_330;
  uint pad_331;
  uint pad_332;
  uint pad_333;
  uint pad_334;
  uint pad_335;
  uint pad_336;
  uint pad_337;
  uint pad_338;
  uint pad_339;
  uint pad_340;
  uint pad_341;
  uint pad_342;
  uint pad_343;
  uint pad_344;
  uint pad_345;
  uint pad_346;
  uint pad_347;
  uint pad_348;
  uint pad_349;
  uint pad_350;
  uint pad_351;
  uint pad_352;
  uint pad_353;
  uint pad_354;
  uint pad_355;
  uint pad_356;
  uint pad_357;
  uint pad_358;
  uint pad_359;
  uint pad_360;
  uint pad_361;
  uint pad_362;
  uint pad_363;
  uint pad_364;
  uint pad_365;
  uint pad_366;
  uint pad_367;
  uint pad_368;
  uint pad_369;
  uint pad_370;
  uint pad_371;
  uint pad_372;
  uint pad_373;
  uint pad_374;
  uint pad_375;
  uint pad_376;
  uint pad_377;
} nephews;
)");
}

TEST_F(GlslGeneratorImplTest_StorageBuffer, Align_Desktop) {
    TestAlign(this);

    GeneratorImpl& gen = Build(Version(Version::Standard::kDesktop, 4, 4));

    ASSERT_TRUE(gen.Generate()) << gen.error();
    EXPECT_EQ(gen.result(), R"(#version 440

struct Nephews {
  float huey;
  uint pad;
  uint pad_1;
  uint pad_2;
  uint pad_3;
  uint pad_4;
  uint pad_5;
  uint pad_6;
  uint pad_7;
  uint pad_8;
  uint pad_9;
  uint pad_10;
  uint pad_11;
  uint pad_12;
  uint pad_13;
  uint pad_14;
  uint pad_15;
  uint pad_16;
  uint pad_17;
  uint pad_18;
  uint pad_19;
  uint pad_20;
  uint pad_21;
  uint pad_22;
  uint pad_23;
  uint pad_24;
  uint pad_25;
  uint pad_26;
  uint pad_27;
  uint pad_28;
  uint pad_29;
  uint pad_30;
  uint pad_31;
  uint pad_32;
  uint pad_33;
  uint pad_34;
  uint pad_35;
  uint pad_36;
  uint pad_37;
  uint pad_38;
  uint pad_39;
  uint pad_40;
  uint pad_41;
  uint pad_42;
  uint pad_43;
  uint pad_44;
  uint pad_45;
  uint pad_46;
  uint pad_47;
  uint pad_48;
  uint pad_49;
  uint pad_50;
  uint pad_51;
  uint pad_52;
  uint pad_53;
  uint pad_54;
  uint pad_55;
  uint pad_56;
  uint pad_57;
  uint pad_58;
  uint pad_59;
  uint pad_60;
  uint pad_61;
  uint pad_62;
  float dewey;
  uint pad_63;
  uint pad_64;
  uint pad_65;
  uint pad_66;
  uint pad_67;
  uint pad_68;
  uint pad_69;
  uint pad_70;
  uint pad_71;
  uint pad_72;
  uint pad_73;
  uint pad_74;
  uint pad_75;
  uint pad_76;
  uint pad_77;
  uint pad_78;
  uint pad_79;
  uint pad_80;
  uint pad_81;
  uint pad_82;
  uint pad_83;
  uint pad_84;
  uint pad_85;
  uint pad_86;
  uint pad_87;
  uint pad_88;
  uint pad_89;
  uint pad_90;
  uint pad_91;
  uint pad_92;
  uint pad_93;
  uint pad_94;
  uint pad_95;
  uint pad_96;
  uint pad_97;
  uint pad_98;
  uint pad_99;
  uint pad_100;
  uint pad_101;
  uint pad_102;
  uint pad_103;
  uint pad_104;
  uint pad_105;
  uint pad_106;
  uint pad_107;
  uint pad_108;
  uint pad_109;
  uint pad_110;
  uint pad_111;
  uint pad_112;
  uint pad_113;
  uint pad_114;
  uint pad_115;
  uint pad_116;
  uint pad_117;
  uint pad_118;
  uint pad_119;
  uint pad_120;
  uint pad_121;
  uint pad_122;
  uint pad_123;
  uint pad_124;
  uint pad_125;
  float louie;
  uint pad_126;
  uint pad_127;
  uint pad_128;
  uint pad_129;
  uint pad_130;
  uint pad_131;
  uint pad_132;
  uint pad_133;
  uint pad_134;
  uint pad_135;
  uint pad_136;
  uint pad_137;
  uint pad_138;
  uint pad_139;
  uint pad_140;
  uint pad_141;
  uint pad_142;
  uint pad_143;
  uint pad_144;
  uint pad_145;
  uint pad_146;
  uint pad_147;
  uint pad_148;
  uint pad_149;
  uint pad_150;
  uint pad_151;
  uint pad_152;
  uint pad_153;
  uint pad_154;
  uint pad_155;
  uint pad_156;
  uint pad_157;
  uint pad_158;
  uint pad_159;
  uint pad_160;
  uint pad_161;
  uint pad_162;
  uint pad_163;
  uint pad_164;
  uint pad_165;
  uint pad_166;
  uint pad_167;
  uint pad_168;
  uint pad_169;
  uint pad_170;
  uint pad_171;
  uint pad_172;
  uint pad_173;
  uint pad_174;
  uint pad_175;
  uint pad_176;
  uint pad_177;
  uint pad_178;
  uint pad_179;
  uint pad_180;
  uint pad_181;
  uint pad_182;
  uint pad_183;
  uint pad_184;
  uint pad_185;
  uint pad_186;
  uint pad_187;
  uint pad_188;
};

layout(binding = 0, std430) buffer Nephews_1 {
  float huey;
  uint pad_189;
  uint pad_190;
  uint pad_191;
  uint pad_192;
  uint pad_193;
  uint pad_194;
  uint pad_195;
  uint pad_196;
  uint pad_197;
  uint pad_198;
  uint pad_199;
  uint pad_200;
  uint pad_201;
  uint pad_202;
  uint pad_203;
  uint pad_204;
  uint pad_205;
  uint pad_206;
  uint pad_207;
  uint pad_208;
  uint pad_209;
  uint pad_210;
  uint pad_211;
  uint pad_212;
  uint pad_213;
  uint pad_214;
  uint pad_215;
  uint pad_216;
  uint pad_217;
  uint pad_218;
  uint pad_219;
  uint pad_220;
  uint pad_221;
  uint pad_222;
  uint pad_223;
  uint pad_224;
  uint pad_225;
  uint pad_226;
  uint pad_227;
  uint pad_228;
  uint pad_229;
  uint pad_230;
  uint pad_231;
  uint pad_232;
  uint pad_233;
  uint pad_234;
  uint pad_235;
  uint pad_236;
  uint pad_237;
  uint pad_238;
  uint pad_239;
  uint pad_240;
  uint pad_241;
  uint pad_242;
  uint pad_243;
  uint pad_244;
  uint pad_245;
  uint pad_246;
  uint pad_247;
  uint pad_248;
  uint pad_249;
  uint pad_250;
  uint pad_251;
  float dewey;
  uint pad_252;
  uint pad_253;
  uint pad_254;
  uint pad_255;
  uint pad_256;
  uint pad_257;
  uint pad_258;
  uint pad_259;
  uint pad_260;
  uint pad_261;
  uint pad_262;
  uint pad_263;
  uint pad_264;
  uint pad_265;
  uint pad_266;
  uint pad_267;
  uint pad_268;
  uint pad_269;
  uint pad_270;
  uint pad_271;
  uint pad_272;
  uint pad_273;
  uint pad_274;
  uint pad_275;
  uint pad_276;
  uint pad_277;
  uint pad_278;
  uint pad_279;
  uint pad_280;
  uint pad_281;
  uint pad_282;
  uint pad_283;
  uint pad_284;
  uint pad_285;
  uint pad_286;
  uint pad_287;
  uint pad_288;
  uint pad_289;
  uint pad_290;
  uint pad_291;
  uint pad_292;
  uint pad_293;
  uint pad_294;
  uint pad_295;
  uint pad_296;
  uint pad_297;
  uint pad_298;
  uint pad_299;
  uint pad_300;
  uint pad_301;
  uint pad_302;
  uint pad_303;
  uint pad_304;
  uint pad_305;
  uint pad_306;
  uint pad_307;
  uint pad_308;
  uint pad_309;
  uint pad_310;
  uint pad_311;
  uint pad_312;
  uint pad_313;
  uint pad_314;
  float louie;
  uint pad_315;
  uint pad_316;
  uint pad_317;
  uint pad_318;
  uint pad_319;
  uint pad_320;
  uint pad_321;
  uint pad_322;
  uint pad_323;
  uint pad_324;
  uint pad_325;
  uint pad_326;
  uint pad_327;
  uint pad_328;
  uint pad_329;
  uint pad_330;
  uint pad_331;
  uint pad_332;
  uint pad_333;
  uint pad_334;
  uint pad_335;
  uint pad_336;
  uint pad_337;
  uint pad_338;
  uint pad_339;
  uint pad_340;
  uint pad_341;
  uint pad_342;
  uint pad_343;
  uint pad_344;
  uint pad_345;
  uint pad_346;
  uint pad_347;
  uint pad_348;
  uint pad_349;
  uint pad_350;
  uint pad_351;
  uint pad_352;
  uint pad_353;
  uint pad_354;
  uint pad_355;
  uint pad_356;
  uint pad_357;
  uint pad_358;
  uint pad_359;
  uint pad_360;
  uint pad_361;
  uint pad_362;
  uint pad_363;
  uint pad_364;
  uint pad_365;
  uint pad_366;
  uint pad_367;
  uint pad_368;
  uint pad_369;
  uint pad_370;
  uint pad_371;
  uint pad_372;
  uint pad_373;
  uint pad_374;
  uint pad_375;
  uint pad_376;
  uint pad_377;
} nephews;
)");
}

}  // namespace
}  // namespace tint::writer::glsl
