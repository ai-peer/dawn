# Copyright 2021 The Tint Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# GEN_BUILD:DO_NOT_GENERATE - Don't regenerate this file with `./tools run gen`

import("//build_overrides/build.gni")

import("../../../tint_overrides_with_defaults.gni")

import("${tint_src_dir}/tint.gni")

source_set("tint_cmd_helper") {
  sources = [
    "generate_external_texture_bindings.cc",
    "generate_external_texture_bindings.h",
    "helper.cc",
    "helper.h",
  ]

  deps = [
    "${tint_src_dir}/lang/core/type",
    "${tint_src_dir}/lang/wgsl/ast",
    "${tint_src_dir}/lang/wgsl/program",
    "${tint_src_dir}/lang/wgsl/sem",
    "${tint_src_dir}/utils/diagnostic",
    "${tint_src_dir}/utils/text",
  ]
  if (tint_build_spv_reader || tint_build_spv_writer) {
    deps += [ "${tint_spirv_tools_dir}/:spvtools_headers" ]
  }
}

executable("tint") {
  sources = [ "main.cc" ]
  deps = [
    ":tint_cmd_helper",
    "${tint_spirv_tools_dir}/:spvtools",
    "${tint_spirv_tools_dir}/:spvtools_opt",
    "${tint_spirv_tools_dir}/:spvtools_val",
    "${tint_src_dir}:libtint",
    "${tint_src_dir}/lang/wgsl/ast",
    "${tint_src_dir}/utils/cli",
    "${tint_src_dir}/utils/command",
    "${tint_src_dir}/utils/containers",
    "${tint_src_dir}/utils/diagnostic",
    "${tint_src_dir}/utils/macros",
    "${tint_src_dir}/utils/text",
  ]

  if (tint_build_glsl_writer) {
    deps += [
      "${tint_root_dir}/third_party/vulkan-deps/glslang/src:glslang_default_resource_limits_sources",
      "${tint_root_dir}/third_party/vulkan-deps/glslang/src:glslang_lib_sources",
    ]
  }

  configs += [
    "${tint_src_dir}:tint_common_config",
    "${tint_src_dir}:tint_config",
  ]

  if (build_with_chromium) {
    configs -= [ "//build/config/compiler:chromium_code" ]
    configs += [ "//build/config/compiler:no_chromium_code" ]
  }
}

executable("tint_info") {
  sources = [ "info.cc" ]
  deps = [
    ":tint_cmd_helper",
    "${tint_spirv_tools_dir}/:spvtools",
    "${tint_spirv_tools_dir}/:spvtools_opt",
    "${tint_spirv_tools_dir}/:spvtools_val",
    "${tint_src_dir}/lang/core/type",
    "${tint_src_dir}/lang/wgsl/ast",
    "${tint_src_dir}/utils/command",
    "${tint_src_dir}/utils/containers",
    "${tint_src_dir}/utils/text",
  ]

  configs += [
    "${tint_src_dir}:tint_common_config",
    "${tint_src_dir}:tint_config",
  ]

  if (build_with_chromium) {
    configs -= [ "//build/config/compiler:chromium_code" ]
    configs += [ "//build/config/compiler:no_chromium_code" ]
  }
}

tint_unittests_source_set("unittests") {
  sources = [ "generate_external_texture_bindings_test.cc" ]
  deps = [
    ":tint_cmd_helper",
    "${tint_src_dir}/lang/wgsl/program",
    "${tint_src_dir}/lang/wgsl/resolver",
  ]
}
