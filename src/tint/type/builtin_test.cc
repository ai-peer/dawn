// Copyright 2022 The Tint Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

////////////////////////////////////////////////////////////////////////////////
// File generated by tools/src/cmd/gen
// using the template:
//   src/tint/type/builtin_test.cc.tmpl
//
// Do not modify this file directly
////////////////////////////////////////////////////////////////////////////////

#include "src/tint/type/builtin.h"

#include <string>

#include "gtest/gtest.h"

#include "src/tint/utils/string.h"

namespace tint::type {
namespace {

namespace parse_print_tests {

struct Case {
    const char* string;
    Builtin value;
};

inline std::ostream& operator<<(std::ostream& out, Case c) {
    return out << "'" << std::string(c.string) << "'";
}

static constexpr Case kValidCases[] = {
    {"bool", Builtin::kBool},
    {"f16", Builtin::kF16},
    {"f32", Builtin::kF32},
    {"i32", Builtin::kI32},
    {"mat2x2", Builtin::kMat2X2},
    {"mat2x2f", Builtin::kMat2X2F},
    {"mat2x2h", Builtin::kMat2X2H},
    {"mat2x3", Builtin::kMat2X3},
    {"mat2x3f", Builtin::kMat2X3F},
    {"mat2x3h", Builtin::kMat2X3H},
    {"mat2x4", Builtin::kMat2X4},
    {"mat2x4f", Builtin::kMat2X4F},
    {"mat2x4h", Builtin::kMat2X4H},
    {"mat3x2", Builtin::kMat3X2},
    {"mat3x2f", Builtin::kMat3X2F},
    {"mat3x2h", Builtin::kMat3X2H},
    {"mat3x3", Builtin::kMat3X3},
    {"mat3x3f", Builtin::kMat3X3F},
    {"mat3x3h", Builtin::kMat3X3H},
    {"mat3x4", Builtin::kMat3X4},
    {"mat3x4f", Builtin::kMat3X4F},
    {"mat3x4h", Builtin::kMat3X4H},
    {"mat4x2", Builtin::kMat4X2},
    {"mat4x2f", Builtin::kMat4X2F},
    {"mat4x2h", Builtin::kMat4X2H},
    {"mat4x3", Builtin::kMat4X3},
    {"mat4x3f", Builtin::kMat4X3F},
    {"mat4x3h", Builtin::kMat4X3H},
    {"mat4x4", Builtin::kMat4X4},
    {"mat4x4f", Builtin::kMat4X4F},
    {"mat4x4h", Builtin::kMat4X4H},
    {"sampler", Builtin::kSampler},
    {"sampler_comparison", Builtin::kSamplerComparison},
    {"texture_depth_2d", Builtin::kTextureDepth2D},
    {"texture_depth_2d_array", Builtin::kTextureDepth2DArray},
    {"texture_depth_cube", Builtin::kTextureDepthCube},
    {"texture_depth_cube_array", Builtin::kTextureDepthCubeArray},
    {"texture_depth_multisampled_2d", Builtin::kTextureDepthMultisampled2D},
    {"texture_external", Builtin::kTextureExternal},
    {"u32", Builtin::kU32},
    {"vec2f", Builtin::kVec2F},
    {"vec2h", Builtin::kVec2H},
    {"vec2i", Builtin::kVec2I},
    {"vec2u", Builtin::kVec2U},
    {"vec3f", Builtin::kVec3F},
    {"vec3h", Builtin::kVec3H},
    {"vec3i", Builtin::kVec3I},
    {"vec3u", Builtin::kVec3U},
    {"vec4f", Builtin::kVec4F},
    {"vec4h", Builtin::kVec4H},
    {"vec4i", Builtin::kVec4I},
    {"vec4u", Builtin::kVec4U},
};

static constexpr Case kInvalidCases[] = {
    {"ccol", Builtin::kUndefined},
    {"3", Builtin::kUndefined},
    {"bVol", Builtin::kUndefined},
    {"116", Builtin::kUndefined},
    {"qJ6", Builtin::kUndefined},
    {"f17ll", Builtin::kUndefined},
    {"fppqH", Builtin::kUndefined},
    {"", Builtin::kUndefined},
    {"Gb", Builtin::kUndefined},
    {"i3vi", Builtin::kUndefined},
    {"i8WW", Builtin::kUndefined},
    {"ixx", Builtin::kUndefined},
    {"maXggx", Builtin::kUndefined},
    {"Xtx2", Builtin::kUndefined},
    {"mat3x", Builtin::kUndefined},
    {"at2x2f", Builtin::kUndefined},
    {"matjjx2f", Builtin::kUndefined},
    {"mvxtWf", Builtin::kUndefined},
    {"KKyyt2x2jj", Builtin::kUndefined},
    {"Rat2xP", Builtin::kUndefined},
    {"mt2x2h", Builtin::kUndefined},
    {"Satxdj", Builtin::kUndefined},
    {"Jat2V3", Builtin::kUndefined},
    {"may2x", Builtin::kUndefined},
    {"llnarr2773f", Builtin::kUndefined},
    {"mat24300", Builtin::kUndefined},
    {"a2oof", Builtin::kUndefined},
    {"zz2x3h", Builtin::kUndefined},
    {"miitppx1", Builtin::kUndefined},
    {"mat2xXXh", Builtin::kUndefined},
    {"55IIt2nn99", Builtin::kUndefined},
    {"aHHrrt2xSS", Builtin::kUndefined},
    {"kkx4", Builtin::kUndefined},
    {"jatgRx", Builtin::kUndefined},
    {"mb2x4", Builtin::kUndefined},
    {"mat2xjf", Builtin::kUndefined},
    {"at2x4h", Builtin::kUndefined},
    {"q2x4h", Builtin::kUndefined},
    {"matNN4h", Builtin::kUndefined},
    {"mavv2", Builtin::kUndefined},
    {"maQQx2", Builtin::kUndefined},
    {"a3xrf", Builtin::kUndefined},
    {"mat3xjf", Builtin::kUndefined},
    {"mNNw3x28", Builtin::kUndefined},
    {"matx2f", Builtin::kUndefined},
    {"mrrt3x2h", Builtin::kUndefined},
    {"Gat3x2h", Builtin::kUndefined},
    {"mat3x2FF", Builtin::kUndefined},
    {"mtx", Builtin::kUndefined},
    {"mrrt3x", Builtin::kUndefined},
    {"ma3x", Builtin::kUndefined},
    {"Da3xJJf", Builtin::kUndefined},
    {"ma83", Builtin::kUndefined},
    {"m11k3", Builtin::kUndefined},
    {"matx3h", Builtin::kUndefined},
    {"maJx3h", Builtin::kUndefined},
    {"mat3c3h", Builtin::kUndefined},
    {"mat3O4", Builtin::kUndefined},
    {"ttKavv3x__", Builtin::kUndefined},
    {"5txxx8", Builtin::kUndefined},
    {"__qatF4", Builtin::kUndefined},
    {"matqx4f", Builtin::kUndefined},
    {"33atOx4f", Builtin::kUndefined},
    {"mtt63x9oQQ", Builtin::kUndefined},
    {"ma3x66h", Builtin::kUndefined},
    {"mtOxzz66", Builtin::kUndefined},
    {"myyt4x2", Builtin::kUndefined},
    {"HHZx2", Builtin::kUndefined},
    {"mWq4442", Builtin::kUndefined},
    {"mOO4x2f", Builtin::kUndefined},
    {"oatY2f", Builtin::kUndefined},
    {"matx", Builtin::kUndefined},
    {"ma4xFh", Builtin::kUndefined},
    {"at4x2w", Builtin::kUndefined},
    {"fGtxKh", Builtin::kUndefined},
    {"qatKKx3", Builtin::kUndefined},
    {"mmmt4x3", Builtin::kUndefined},
    {"at4x3", Builtin::kUndefined},
    {"mt4x3q", Builtin::kUndefined},
    {"mat4xbb", Builtin::kUndefined},
    {"mi4x3f", Builtin::kUndefined},
    {"maOO4xq", Builtin::kUndefined},
    {"matTvvx3h", Builtin::kUndefined},
    {"maFF4x3h", Builtin::kUndefined},
    {"mtQ00P", Builtin::kUndefined},
    {"maP4x4", Builtin::kUndefined},
    {"mss4x77", Builtin::kUndefined},
    {"RRCbb4x4f", Builtin::kUndefined},
    {"mXXt4x4f", Builtin::kUndefined},
    {"qaCC4xOOf", Builtin::kUndefined},
    {"ma4s4L", Builtin::kUndefined},
    {"mXt4x4h", Builtin::kUndefined},
    {"mat44h", Builtin::kUndefined},
    {"qapOe", Builtin::kUndefined},
    {"sampl22r", Builtin::kUndefined},
    {"syzzp0XX", Builtin::kUndefined},
    {"samiler_coVPpariso", Builtin::kUndefined},
    {"samClnnrcomparison", Builtin::kUndefined},
    {"sampleHHcompAAisqqn", Builtin::kUndefined},
    {"exture_depth_2d", Builtin::kUndefined},
    {"texture_dKKfh_2", Builtin::kUndefined},
    {"lePtre_dggpth_d", Builtin::kUndefined},
    {"texture_depth_2_array", Builtin::kUndefined},
    {"tcxture_deTTNh_2d_4rray", Builtin::kUndefined},
    {"t77xture_deth_ld_pprray", Builtin::kUndefined},
    {"textug_dzzpth_NNub", Builtin::kUndefined},
    {"txturuuXXepth_cbbbe", Builtin::kUndefined},
    {"texture_depthcube", Builtin::kUndefined},
    {"texture_depth88cbe_rraK", Builtin::kUndefined},
    {"textureqepth_cube_ar9ay", Builtin::kUndefined},
    {"texture_de11th_cube_array", Builtin::kUndefined},
    {"textur_deptii_multis22mpFed_2d", Builtin::kUndefined},
    {"texture_depth_m77ltisamped_2d", Builtin::kUndefined},
    {"2exture_depth_multsamplNNd_2d", Builtin::kUndefined},
    {"textVVre_external", Builtin::kUndefined},
    {"texwure_WWFt11rnal", Builtin::kUndefined},
    {"textureewwternal", Builtin::kUndefined},
    {"uD2", Builtin::kUndefined},
    {"uK", Builtin::kUndefined},
    {"1PP3h", Builtin::kUndefined},
    {"ve2f", Builtin::kUndefined},
    {"vec2YY", Builtin::kUndefined},
    {"vkktHH", Builtin::kUndefined},
    {"rrec2h", Builtin::kUndefined},
    {"vWWssh", Builtin::kUndefined},
    {"veYh", Builtin::kUndefined},
    {"eq2f", Builtin::kUndefined},
    {"u22ec2i", Builtin::kUndefined},
    {"c2i", Builtin::kUndefined},
    {"vec2", Builtin::kUndefined},
    {"vYyc27E", Builtin::kUndefined},
    {"veMou", Builtin::kUndefined},
    {"ve3MM", Builtin::kUndefined},
    {"55ec3f", Builtin::kUndefined},
    {"N3f", Builtin::kUndefined},
    {"ve33h", Builtin::kUndefined},
    {"3ec3h", Builtin::kUndefined},
    {"mecI", Builtin::kUndefined},
    {"vrnK3i", Builtin::kUndefined},
    {"v3", Builtin::kUndefined},
    {"ILLci", Builtin::kUndefined},
    {"ecf", Builtin::kUndefined},
    {"UecRY", Builtin::kUndefined},
    {"vechu", Builtin::kUndefined},
    {"qeIIu", Builtin::kUndefined},
    {"Hec4f", Builtin::kUndefined},
    {"eQQvv", Builtin::kUndefined},
    {"e66h", Builtin::kUndefined},
    {"7Wc4", Builtin::kUndefined},
    {"ve055DD", Builtin::kUndefined},
    {"IIec4i", Builtin::kUndefined},
    {"vec4", Builtin::kUndefined},
    {"rec4", Builtin::kUndefined},
    {"lec4u", Builtin::kUndefined},
    {"GeJ4u", Builtin::kUndefined},
    {"ey4u", Builtin::kUndefined},
};

using BuiltinParseTest = testing::TestWithParam<Case>;

TEST_P(BuiltinParseTest, Parse) {
    const char* string = GetParam().string;
    Builtin expect = GetParam().value;
    EXPECT_EQ(expect, ParseBuiltin(string));
}

INSTANTIATE_TEST_SUITE_P(ValidCases, BuiltinParseTest, testing::ValuesIn(kValidCases));
INSTANTIATE_TEST_SUITE_P(InvalidCases, BuiltinParseTest, testing::ValuesIn(kInvalidCases));

using BuiltinPrintTest = testing::TestWithParam<Case>;

TEST_P(BuiltinPrintTest, Print) {
    Builtin value = GetParam().value;
    const char* expect = GetParam().string;
    EXPECT_EQ(expect, utils::ToString(value));
}

INSTANTIATE_TEST_SUITE_P(ValidCases, BuiltinPrintTest, testing::ValuesIn(kValidCases));

}  // namespace parse_print_tests

}  // namespace
}  // namespace tint::type
