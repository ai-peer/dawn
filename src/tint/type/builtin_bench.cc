// Copyright 2022 The Tint Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

////////////////////////////////////////////////////////////////////////////////
// File generated by tools/src/cmd/gen
// using the template:
//   src/tint/type/builtin_bench.cc.tmpl
//
// Do not modify this file directly
////////////////////////////////////////////////////////////////////////////////

#include "src/tint/type/builtin.h"

#include <array>

#include "benchmark/benchmark.h"

namespace tint::type {
namespace {

void BuiltinParser(::benchmark::State& state) {
    const char* kStrings[] = {
        "arccy",
        "3a",
        "aVray",
        "array",
        "arra1",
        "qqrJy",
        "arrll7y",
        "ppqooH",
        "c",
        "bGo",
        "bool",
        "bovii",
        "boWWl",
        "Mxxl",
        "fgg",
        "X",
        "316",
        "f16",
        "fE6",
        "fPTT",
        "dxx6",
        "4432",
        "fSVV2",
        "RR2",
        "f32",
        "92",
        "f3",
        "VOR2",
        "y3",
        "l77rrn2",
        "4032",
        "i32",
        "5",
        "u377",
        "kk2",
        "mat2i",
        "maXX2x2",
        "55IIt2nn99",
        "mat2x2",
        "aHHrrt2xSS",
        "kkx2",
        "jagRR",
        "mb2x2",
        "mat2xjf",
        "at2x2f",
        "mat2x2f",
        "q2x2f",
        "matNN2f",
        "at22vv",
        "QQt2x2h",
        "maffxr",
        "mat2xjh",
        "mat2x2h",
        "mNNw2x28",
        "matx2h",
        "mrrt2x2h",
        "mGt2x3",
        "matFFx3",
        "mtx",
        "mat2x3",
        "mrrt2x",
        "ma2x",
        "Da2xJJ",
        "ma83",
        "m11k3",
        "matx3f",
        "mat2x3f",
        "maJx3f",
        "mat2c3f",
        "mat2x3O",
        "KK_atvvtt3h",
        "xx82x3h",
        "__qatF3",
        "mat2x3h",
        "matqx3h",
        "33atOx3h",
        "mtt62x9oQQ",
        "mat66x",
        "66aOzx4",
        "myyt2x4",
        "mat2x4",
        "HHZx4",
        "mWq2444",
        "OOt2x4",
        "oatY4f",
        "matx",
        "ma2xFf",
        "mat2x4f",
        "at2x4w",
        "fGtxKf",
        "matqKx4f",
        "matmmxFh",
        "at2x4h",
        "mt2x4q",
        "mat2x4h",
        "mat2xbb",
        "mi2x4h",
        "maOO2xq",
        "mat3Tvv2",
        "mat3FF2",
        "mtQ00P",
        "mat3x2",
        "maP3x2",
        "mss3x77",
        "maC3RRbb",
        "mXXt3x2f",
        "qaCC3xOOf",
        "ma3s2L",
        "mat3x2f",
        "mXt3x2f",
        "mat32f",
        "qa3O2",
        "mat3x22h",
        "myzz30XX",
        "matVViP",
        "mat3x2h",
        "mannC2h",
        "atx2AHHq",
        "may3x2",
        "mOZ3O3",
        "1VV3",
        "maff__x3",
        "mat3x3",
        "laT3MM3",
        "mgtzzN",
        "bXXt3x3",
        "matx3f",
        "Qt883f",
        "mt9q3f",
        "mat3x3f",
        "m11t3x3f",
        "22at3iif",
        "at3x377",
        "m2t3xNh",
        "mVVt3x3h",
        "FaWW3w11h",
        "mat3x3h",
        "mawwx3h",
        "Dat3x3h",
        "mt3x3K",
        "11at3xPP",
        "mat3x",
        "mat3xYY",
        "mat3x4",
        "atkkxtH",
        "matrrx4",
        "mWWstx4",
        "Yt3x4f",
        "mt3qff",
        "mav223xuf",
        "mat3x4f",
        "t3x4f",
        "YYat3f",
        "may3x4EYY",
        "da3xMoh",
        "matMMx4",
        "mat3x55h",
        "mat3x4h",
        "maN34",
        "ma3Ox33",
        "m3t3x4h",
        "mt4I2",
        "mnnt4xr",
        "mXX",
        "mat4x2",
        "Lat4Ip",
        "t4xf",
        "aYRRUD",
        "mah4x2f",
        "uuIqt4x",
        "maH4x2f",
        "mat4x2f",
        "at4QQvv",
        "at66ef",
        "ma7O2f",
        "m55t4x0DD",
        "maH4x2II",
        "at4x2",
        "mat4x2h",
        "rat4x299",
        "mGtt41W2h",
        "yatx2",
        "mt4x3",
        "maBBI4x3",
        "mat8TTx3",
        "mat4x3",
        "mYnnUUSddx3",
        "xCZ54x3",
        "mqkt4x3",
        "005itpxf",
        "maIInnx3f",
        "Ka4Wcc",
        "mat4x3f",
        "m43KK",
        "mat66x3f",
        "Et4PP3K",
        "xxatx3h",
        "qat4x3h",
        "MMayySrxh",
        "mat4x3h",
        "mat3h",
        "tx3h",
        "ma5F4x3h",
        "rraz44x4",
        "aWWx",
        "ZZJJtCxX",
        "mat4x4",
        "PPat4x",
        "cat4x4",
        "ma6llPP4",
        "mat994yy",
        "mat4JKKf",
        "mat4_f",
        "mat4x4f",
        "ayK4f",
        "mzt4V4k",
        "mat4q4K",
        "at4x4h",
        "aVV4x4h",
        "AAatIxUh",
        "mat4x4h",
        "mbj4h",
        "YY444x",
        "mao4x4",
        "smx11er",
        "smmlccr",
        "aJJpler",
        "sampler",
        "fCCDDpleU",
        "sgmpler",
        "CCler",
        "smpler_comparison",
        "samplIr_com__arison",
        "sampttr_PPmparison",
        "sampler_comparison",
        "sampler_compa3dison",
        "ampler_Komparyyson",
        "sapluur_cmparin",
        "texture0dnn3th_id",
        "tenture_deptuu_CCK",
        "textuXe_dellh_2d",
        "texture_depth_2d",
        "tppxture_depth_2d",
        "txture_deptww_2d",
        "gexturedemmthuu2",
        "texmmre_depthaa2daray",
        "texture_RRepth_Td_ccZray",
        "text88re_depthTOd_array",
        "texture_depth_2d_array",
        "textume_00epth_2d_array",
        "texturm_depth_BBd_array",
        "texppur_depth_M_array",
        "textre_deptOO_cube",
        "texture_deptG_GGbe",
        "tHHx11ure_depth_cube",
        "texture_depth_cube",
        "te6ure_FFeepth_cube",
        "textue_depth_cbe",
        "textiile_depthKcube",
        "texture_dept_cube_array",
        "texture_detII_cub99vvarray",
        "texture_depth_ube_array",
        "texture_depth_cube_array",
        "hexture_depth_cube_array",
        "texturPP_depzzll_cubearray",
        "txtue_depth_ub_array",
        "texture_ffepth_mulqqisamled_2d",
        "tWxturedddpth_multisampledJJ2d",
        "textuXXe_depth_mrzltimpled_2d",
        "texture_depth_multisampled_2d",
        "texture2depth_multisampled2d",
        "texture_deptNyymultisampled_2d",
        "txtuOe_depth_mltisampled_2d",
        "textureErxueZPal",
        "exl22re_eddtereeal",
        "mextureVVter9al",
        "texture_external",
        "teIItu1_external",
        "texturb_external",
        "etire_exter7al",
        "texoure_storagii_1d",
        "exture_ntor5ge1d",
        "exture_storiSe_1d",
        "texture_storage_1d",
        "t22xue_storage_1d",
        "texture_Ct71rageGd",
        "textu8e_storageff1d",
        "textre_strage_2d",
        "tJJxture_SStorage_2d",
        "texture_9trage_d",
        "texture_storage_2d",
        "TbbJJxture_storage_2d",
        "t66ture_storag_2d",
        "textur66_stouage_2",
        "yeture_storage_2d_arrWy",
        "teture_strage_2d_array",
        "texture_torage_2d_array",
        "texture_storage_2d_array",
        "texture_storage_2drarray",
        "texture_storage_2d_2rraB",
        "txture_storage_2d_aBBray",
        "texture_RRtorage_3",
        "VVeture_LLtoage_30",
        "textur_torage_KKOO",
        "texture_storage_3d",
        "texture_storawgg_3",
        "teLhtue_storage_3p",
        "teture_sKoEaiie_3d",
        "32",
        "88U",
        "rrvv2",
        "u32",
        "wm",
        "uj4",
        "X32",
        "vec28",
        "vecvEE",
        "z99ci",
        "vec2f",
        "GGeJJA2f",
        "vess2f",
        "vPcKf",
        "tpc2h",
        "vec",
        "MMec2h",
        "vec2h",
        "vJJc20",
        "8c",
        "vecggKh",
        "vecfi",
        "vec27Q",
        "veY2i",
        "vec2i",
        "keSi",
        "n222",
        "vFFi",
        "GGIec2PP",
        "aeEE2",
        "ddBee2u",
        "vec2u",
        "c55McEu",
        "eKK",
        "vecRu",
        "v93D",
        "vec3",
        "vIaa",
        "vec3f",
        "ve773f",
        "vec3I",
        "vd3f",
        "vc3h",
        "ect",
        "c33XX3h",
        "vec3h",
        "veEh",
        "vcXXh",
        "vexxBh",
        "Ge3",
        "vec66i",
        "vT03",
        "vec3i",
        "c",
        "eppi",
        "v11i",
        "JBEc3u",
        "mqc3Ix",
        "Fc3u",
        "vec3u",
        "vec3",
        "HHDc3h",
        "22u",
        "vc4",
        "ve4f",
        "ec4f",
        "vec4f",
        "vec4dd",
        "Oec4f",
        "becB",
        "v004h",
        "hec4h",
        "ec4gY",
        "vec4h",
        "veO4h",
        "hch",
        "fEpp4h",
        "ecvi",
        "vc4zz",
        "vec4",
        "vec4i",
        "OiiJ4",
        "vGc4i",
        "22ecTTi",
        "dlc4u",
        "vecbu",
        "ec4BB",
        "vec4u",
        "IIScXPP",
        "jjec4u",
        "cc_c4u",
    };
    for (auto _ : state) {
        for (auto* str : kStrings) {
            auto result = ParseBuiltin(str);
            benchmark::DoNotOptimize(result);
        }
    }
}

BENCHMARK(BuiltinParser);

}  // namespace
}  // namespace tint::type
