{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "452537bf_8a58e629",
        "filename": "src/dawn/native/d3d12/ResourceAllocatorManagerD3D12.cpp",
        "patchSetId": 3
      },
      "lineNbr": 192,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2022-09-22T05:01:17Z",
      "side": 1,
      "message": "comment why the tail height could be greater than level1Height.\n\ntook some thinking, but IIUC, it\u0027s because each mip has at least a height of 1.\nSo if you have a 4x4 texture with 5 mips, they have heights 4, 2, 1, 1, 1. 2 \u003c 1+1+1.\n\nIt could also be helpful to have a simple diagram of how the LODs are laid out so the reader doesn\u0027t need to open the PDF.\n\ndo the texture corruption tests test textures with mips like this?",
      "range": {
        "startLine": 192,
        "startChar": 45,
        "endLine": 192,
        "endChar": 83
      },
      "revId": "00358bae953f1cad988c9f5bb16b1f125f811a15",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4fd4ea4d_01d8c919",
        "filename": "src/dawn/native/d3d12/ResourceAllocatorManagerD3D12.cpp",
        "patchSetId": 3
      },
      "lineNbr": 192,
      "author": {
        "id": 1000017
      },
      "writtenOn": "2022-09-29T06:02:50Z",
      "side": 1,
      "message": "Done\n\nA better example could be 16x4 with 5 mip levels. \n\nI have tests at my local side about mip levels, but I didn\u0027t submitted. I will re-org these tests in order to introduce more parameters like mip level, format, sample count, layer count, in addition to texture dimension and WriteType. But I need to split them into a few tests and test a couple of parameters in each one. Packing all these parameters into one giant test will lead to test explosion and spend a lot of time for this single end2end test file.",
      "parentUuid": "452537bf_8a58e629",
      "range": {
        "startLine": 192,
        "startChar": 45,
        "endLine": 192,
        "endChar": 83
      },
      "revId": "00358bae953f1cad988c9f5bb16b1f125f811a15",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5d88cbcb_3909a88c",
        "filename": "src/dawn/native/d3d12/ResourceAllocatorManagerD3D12.cpp",
        "patchSetId": 3
      },
      "lineNbr": 235,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2022-09-22T05:01:17Z",
      "side": 1,
      "message": "could you explain a bit more why it is OK if the main memory size is wrong but the aux memory size is correct?",
      "range": {
        "startLine": 234,
        "startChar": 43,
        "endLine": 235,
        "endChar": 67
      },
      "revId": "00358bae953f1cad988c9f5bb16b1f125f811a15",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "90cb4f63_8d2f68f2",
        "filename": "src/dawn/native/d3d12/ResourceAllocatorManagerD3D12.cpp",
        "patchSetId": 3
      },
      "lineNbr": 235,
      "author": {
        "id": 1000017
      },
      "writtenOn": "2022-09-29T06:02:50Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5d88cbcb_3909a88c",
      "range": {
        "startLine": 234,
        "startChar": 43,
        "endLine": 235,
        "endChar": 67
      },
      "revId": "00358bae953f1cad988c9f5bb16b1f125f811a15",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "deefdbda_9c13c91b",
        "filename": "src/dawn/native/d3d12/ResourceAllocatorManagerD3D12.cpp",
        "patchSetId": 3
      },
      "lineNbr": 241,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2022-09-22T05:01:17Z",
      "side": 1,
      "message": "could you explain this part of the calculation a bit more?",
      "range": {
        "startLine": 240,
        "startChar": 50,
        "endLine": 241,
        "endChar": 38
      },
      "revId": "00358bae953f1cad988c9f5bb16b1f125f811a15",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "00990560_cc85dd6c",
        "filename": "src/dawn/native/d3d12/ResourceAllocatorManagerD3D12.cpp",
        "patchSetId": 3
      },
      "lineNbr": 241,
      "author": {
        "id": 1000017
      },
      "writtenOn": "2022-09-29T06:02:50Z",
      "side": 1,
      "message": "Done\n\nI think ceil() function in \u003ccmath\u003e is easier for understanding.",
      "parentUuid": "deefdbda_9c13c91b",
      "range": {
        "startLine": 240,
        "startChar": 50,
        "endLine": 241,
        "endChar": 38
      },
      "revId": "00358bae953f1cad988c9f5bb16b1f125f811a15",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2dd203a4_36f748bb",
        "filename": "src/dawn/native/d3d12/ResourceAllocatorManagerD3D12.cpp",
        "patchSetId": 3
      },
      "lineNbr": 290,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2022-09-22T05:01:17Z",
      "side": 1,
      "message": "a thought:\n\nit would have been nice to be able to compute this from the `resourceDescriptor`, but that would involve a separate lookup table from DXGI_FORMAT -\u003e blockSize.\n\nSo while it\u0027s a bit unfortunate we have to pipe this argument all the way through to here, it\u0027s probably better than maintaining a separate size table.",
      "range": {
        "startLine": 290,
        "startChar": 49,
        "endLine": 290,
        "endChar": 62
      },
      "revId": "00358bae953f1cad988c9f5bb16b1f125f811a15",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7883a468_a04235cd",
        "filename": "src/dawn/native/d3d12/ResourceAllocatorManagerD3D12.cpp",
        "patchSetId": 3
      },
      "lineNbr": 290,
      "author": {
        "id": 1000017
      },
      "writtenOn": "2022-09-29T06:02:50Z",
      "side": 1,
      "message": "Agreed. \n\nI also thought about introducing a new function to construct a lookup table from DXGI_FORMAT to blockSize, but felt like it could be slightly better to pass a parameter into this function.",
      "parentUuid": "2dd203a4_36f748bb",
      "range": {
        "startLine": 290,
        "startChar": 49,
        "endLine": 290,
        "endChar": 62
      },
      "revId": "00358bae953f1cad988c9f5bb16b1f125f811a15",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "372d3f77_715d63b6",
        "filename": "src/dawn/native/d3d12/ResourceAllocatorManagerD3D12.h",
        "patchSetId": 3
      },
      "lineNbr": 67,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2022-09-22T05:01:17Z",
      "side": 1,
      "message": "do we need this default? it risks someone using it very wrong if they don\u0027t pass bytesPerBlock",
      "range": {
        "startLine": 67,
        "startChar": 30,
        "endLine": 67,
        "endChar": 34
      },
      "revId": "00358bae953f1cad988c9f5bb16b1f125f811a15",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f86b4d49_933726af",
        "filename": "src/dawn/native/d3d12/ResourceAllocatorManagerD3D12.h",
        "patchSetId": 3
      },
      "lineNbr": 67,
      "author": {
        "id": 1000017
      },
      "writtenOn": "2022-09-29T06:02:50Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "372d3f77_715d63b6",
      "range": {
        "startLine": 67,
        "startChar": 30,
        "endLine": 67,
        "endChar": 34
      },
      "revId": "00358bae953f1cad988c9f5bb16b1f125f811a15",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}