{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "7710ec78_49722536",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2023-02-07T02:15:18Z",
      "side": 1,
      "message": "PTAL, thanks!",
      "revId": "09cfa3bf0c521a366506c63615d5d157e4a90ca9",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "823def4a_a6fc0cda",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-02-07T02:18:24Z",
      "side": 1,
      "message": "LGTM\n\ndo we have insight on the intel side about what the issue in the driver is?\nwant to know whether the workaround is sufficient as is, or we need to expand it futher to other usages as well",
      "revId": "09cfa3bf0c521a366506c63615d5d157e4a90ca9",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "393b21dd_de8f4911",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2023-02-07T02:36:43Z",
      "side": 1,
      "message": "Intel drivers may do some special operations on the textures with certain formats or RenderAttachment usage, which may cause some issues when we reuse those pieces of memory for other purposes on old Intel GPUs.\n\nAs textures with STORAGE are OK because no such operations are applied on them, and now we have workarounds on CopyDst and RenderAttachment, I think it\u0027s enough for us right now. What do you think?",
      "parentUuid": "823def4a_a6fc0cda",
      "revId": "09cfa3bf0c521a366506c63615d5d157e4a90ca9",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7a1e577d_0fc4cba9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-02-07T02:41:10Z",
      "side": 1,
      "message": "I don\u0027t know as I don\u0027t have insight into what is going wrong in the driver.\nWhat about CopySrc and Sampled ?",
      "parentUuid": "393b21dd_de8f4911",
      "revId": "09cfa3bf0c521a366506c63615d5d157e4a90ca9",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "94fd9cb5_3af58e9e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2023-02-07T02:43:59Z",
      "side": 1,
      "message": "We always need a way to write into a texture before using the texel data (CopySrc or Sampled). Now WebGPU supports three ways writing into a texture: CopyDst, RenderAttachment, Storage, and now we have covered all of them. What do you think?",
      "parentUuid": "7a1e577d_0fc4cba9",
      "revId": "09cfa3bf0c521a366506c63615d5d157e4a90ca9",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2b0a0410_8eeda2e1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-02-07T02:47:17Z",
      "side": 1,
      "message": "I suppose that\u0027s true. If it\u0027s going to happen for all 2d textures then, should we simply call the toggle D3D12Allocate2DTextureAsCommittedResource?",
      "parentUuid": "94fd9cb5_3af58e9e",
      "revId": "09cfa3bf0c521a366506c63615d5d157e4a90ca9",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "31d4c37b_219c57cb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2023-02-07T03:00:18Z",
      "side": 1,
      "message": "According to our local tests we don\u0027t meet any issue with STORAGE usage, and theoretically textures with STORAGE usage only won\u0027t be created with any special operations, so currently we suggest we can still allocate STORAGE textures with CreatePlacedResource().",
      "parentUuid": "2b0a0410_8eeda2e1",
      "revId": "09cfa3bf0c521a366506c63615d5d157e4a90ca9",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "68238574_46ae15fe",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-02-07T04:44:20Z",
      "side": 1,
      "message": "I see - but internally, Dawn may still use the texture as CopyDst since we may need to lazy clear it. Are we sure that that situation is OK? is it because it is lazy cleared on first use, and something about it being the first copy to the resource means that it does not hit a driver bug?",
      "parentUuid": "31d4c37b_219c57cb",
      "revId": "09cfa3bf0c521a366506c63615d5d157e4a90ca9",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3484e3e8_de64439d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2023-02-07T04:57:50Z",
      "side": 1,
      "message": "\u003e but internally, Dawn may still use the texture as CopyDst since we may need to lazy clear it. Are we sure that that situation is OK?\n\nI think it\u0027s OK because with this patch only storage-only textures and buffers are allocated on the D3D12 heaps, which means the storage-only textures won\u0027t be allocated on a piece of dirty memory where special operations happen, then theoretically we won\u0027t meet such driver bug.",
      "parentUuid": "68238574_46ae15fe",
      "revId": "09cfa3bf0c521a366506c63615d5d157e4a90ca9",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5d076b33_3fe2270a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-02-07T15:08:51Z",
      "side": 1,
      "message": "Ok, I\u0027ll cq this then",
      "parentUuid": "3484e3e8_de64439d",
      "revId": "09cfa3bf0c521a366506c63615d5d157e4a90ca9",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "09cfa3bf0c521a366506c63615d5d157e4a90ca9",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Kokoro",
        "description": {
          "value": "A maximum vote is required for the Kokoro label. A minimum vote is blocking."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Kokoro\u003dMAX AND -label:Kokoro\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "uploader:dawn-autoroll@skia-public.iam.gserviceaccount.com"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Kokoro=MAX AND -label:Kokoro=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Kokoro=MAX"],"failingAtoms":["label:Kokoro=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"uploader:dawn-autoroll@skia-public.iam.gserviceaccount.com"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["uploader:dawn-autoroll@skia-public.iam.gserviceaccount.com"]}
      },
      "patchSetCommitId": "09cfa3bf0c521a366506c63615d5d157e4a90ca9",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "patchSetCommitId": "09cfa3bf0c521a366506c63615d5d157e4a90ca9",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    }
  ]
}