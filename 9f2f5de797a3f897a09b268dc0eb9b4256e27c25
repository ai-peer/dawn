{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "927c736b_923d6524",
        "filename": "generator/templates/api_cpp.h",
        "patchSetId": 4
      },
      "lineNbr": 41,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2023-05-12T01:55:16Z",
      "side": 1,
      "message": "This entirely removes SType from the C++ header, even for all of the standard STypes.",
      "revId": "9f2f5de797a3f897a09b268dc0eb9b4256e27c25",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fe563616_798f396f",
        "filename": "generator/templates/api_cpp.h",
        "patchSetId": 4
      },
      "lineNbr": 41,
      "author": {
        "id": 1002831
      },
      "writtenOn": "2023-05-12T06:38:26Z",
      "side": 1,
      "message": "It\u0027s included via the other header though? Shouldn\u0027t that still be fine?",
      "parentUuid": "927c736b_923d6524",
      "revId": "9f2f5de797a3f897a09b268dc0eb9b4256e27c25",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "07749f8d_b3f08ed3",
        "filename": "generator/templates/api_cpp.h",
        "patchSetId": 4
      },
      "lineNbr": 41,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2023-05-12T19:02:41Z",
      "side": 1,
      "message": "Oh, I see. Doesn\u0027t it still make it impossible to use `webgpu_cpp.h` in Emscripten though because it will hit the `#error`? (We copy these generated files directly into Emscripten as part of its libraries)",
      "parentUuid": "fe563616_798f396f",
      "revId": "9f2f5de797a3f897a09b268dc0eb9b4256e27c25",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b28e01b5_5c8d10c6",
        "filename": "generator/templates/api_cpp.h",
        "patchSetId": 4
      },
      "lineNbr": 41,
      "author": {
        "id": 1002831
      },
      "writtenOn": "2023-05-12T19:11:28Z",
      "side": 1,
      "message": "I\u0027m not sure how the Emscripten side works, but the ifdef was already included in `webgpu_cpp.h`, I just copied it to the `webgpu_cpp_chained_struct.h`. If it was working before, I suspect it should still work?",
      "parentUuid": "07749f8d_b3f08ed3",
      "revId": "9f2f5de797a3f897a09b268dc0eb9b4256e27c25",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "23f28f36_aafa21a1",
        "filename": "generator/templates/api_cpp.h",
        "patchSetId": 4
      },
      "lineNbr": 41,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2023-05-12T20:17:36Z",
      "side": 1,
      "message": "Ahh sorry I totally missed that. That existing code you copied looks wrong. The C header has it correct (condition is uninverted):\nhttps://source.chromium.org/chromium/chromium/src/+/main:third_party/dawn/generator/templates/api.h;l\u003d27;drc\u003dabfa45baa428609e8edd155232571bae005b3f5f\nWe might not have noticed this if we haven\u0027t rolled this into Emscripten since adding this (or we just manually removed it in the roll).",
      "parentUuid": "b28e01b5_5c8d10c6",
      "revId": "9f2f5de797a3f897a09b268dc0eb9b4256e27c25",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2e8cb4c6_9a61ef65",
        "filename": "generator/templates/api_cpp_chained_struct.h",
        "patchSetId": 4
      },
      "lineNbr": 15,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2023-05-12T01:55:16Z",
      "side": 1,
      "message": "In the long term I think we want to get rid of the tags system so that all of the files that are common to multiple projects don\u0027t have multiple flavors. It wouldn\u0027t have to have an `#ifdef __EMSCRIPTEN__` in this file even in the Dawn version, so I\u0027d make it unconditional.\n\nThat said I\u0027m not exactly clear on how this file is meant to be used.",
      "revId": "9f2f5de797a3f897a09b268dc0eb9b4256e27c25",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b9e3136f_e25578d1",
        "filename": "include/dawn/native/DawnNative.h",
        "patchSetId": 4
      },
      "lineNbr": 280,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-05-11T23:28:11Z",
      "side": 1,
      "message": "nit: I think we can have a TODO to remove it after renaming things in Chrome.\n\nI believe it should work if everything uses the struct as dawn::native::DawnInstanceDescriptor",
      "revId": "9f2f5de797a3f897a09b268dc0eb9b4256e27c25",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}