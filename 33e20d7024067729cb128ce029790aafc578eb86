{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "477d751d_597decd6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2022-05-09T15:31:03Z",
      "side": 1,
      "message": "lgtm",
      "revId": "33e20d7024067729cb128ce029790aafc578eb86",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b4941304_f573d51f",
        "filename": "tools/src/cmd/intrinsic-gen/lexer/lexer.go",
        "patchSetId": 4
      },
      "lineNbr": 86,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2022-05-09T15:31:03Z",
      "side": 1,
      "message": "What does peek do if `l` is only 1 char long? (so `1` is out of bounds?)",
      "revId": "33e20d7024067729cb128ce029790aafc578eb86",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e6ba6dc4_d985ea81",
        "filename": "tools/src/cmd/intrinsic-gen/lexer/lexer.go",
        "patchSetId": 4
      },
      "lineNbr": 86,
      "author": {
        "id": 1002421
      },
      "writtenOn": "2022-05-09T16:20:39Z",
      "side": 1,
      "message": "Returns a `0` rune:\n\n```\nfunc (l *lexer) peek(i int) rune {\n\tif i \u003e\u003d len(l.runes) {\n\t\treturn 0\n\t}\n\treturn l.runes[i]\n}\n```",
      "parentUuid": "b4941304_f573d51f",
      "revId": "33e20d7024067729cb128ce029790aafc578eb86",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1"]}
      },
      "patchSetCommitId": "33e20d7024067729cb128ce029790aafc578eb86",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforced_gerrit"]}
      },
      "submittabilityExpressionResult": {},
      "overrideExpressionResult": {},
      "patchSetCommitId": "33e20d7024067729cb128ce029790aafc578eb86",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}