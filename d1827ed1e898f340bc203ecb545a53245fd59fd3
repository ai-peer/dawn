{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "12281528_a741e6c9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000033
      },
      "writtenOn": "2023-12-21T23:23:41Z",
      "side": 1,
      "message": "Haven\u0027t done the end-2-end tests. But this is a start.\n\nNote that this pessimizes some fixed-size loops generated by polyfills. That\u0027s unfortunate.",
      "revId": "d1827ed1e898f340bc203ecb545a53245fd59fd3",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "369c20df_90269f37",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2023-12-22T00:00:21Z",
      "side": 1,
      "message": "Two nits, otherwise LGTM!",
      "revId": "d1827ed1e898f340bc203ecb545a53245fd59fd3",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7ca23ef5_11e8bbdc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1002241
      },
      "writtenOn": "2023-12-22T00:03:04Z",
      "side": 1,
      "message": "It\u0027d be great if we could try to write a Dawn E2E test (and maybe eventually a CTS test) that exercises the issue.\n\nOtherwise it\u0027d be easy to accidentally drop this during a refactor without noticing (e.g. when switching to the new MSL backend).",
      "revId": "d1827ed1e898f340bc203ecb545a53245fd59fd3",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "605b6972_5db180be",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2023-12-22T00:12:16Z",
      "side": 1,
      "message": "End to end tests will also need updating with `./tools/run tests --generate-expected`",
      "revId": "d1827ed1e898f340bc203ecb545a53245fd59fd3",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3ea83254_631f9fe9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000033
      },
      "writtenOn": "2023-12-22T05:24:14Z",
      "side": 1,
      "message": "Yes, that would be nice.\nCorrect execution amounts to hanging the GPU, and normally that would kill the process due to the OS-level watchdog timer.  We can cut a corner by using a watcher thread and a worker thread. The worker signals it\u0027s alive, then queues the infinite workload, and schedules a signal that it\u0027s complete. The watcher launches the worker, yields, spins to observes the alive signal, waits ~100ms before killing the worker thread, and observes it hasn\u0027t seen the completion signal.\nWe can have an initial \"benchmark\" run that avoids the infinite loop, to measure the latency of running the pipeline, and tune the second delay to be similar to that plus a few milliseconds.",
      "parentUuid": "7ca23ef5_11e8bbdc",
      "revId": "d1827ed1e898f340bc203ecb545a53245fd59fd3",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9d455ad8_bceabbe3",
        "filename": "src/tint/lang/msl/writer/ast_printer/ast_printer.cc",
        "patchSetId": 1
      },
      "lineNbr": 112,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2023-12-22T00:00:21Z",
      "side": 1,
      "message": "nit: I\u0027d call this `kPreventDiscardByOptimization`, or something along those lines.\n```suggestion\nconstexpr auto kPreventDiscardByOptimization \u003d R\"(volatile asm(\"\");)\";\n```",
      "range": {
        "startLine": 112,
        "startChar": 15,
        "endLine": 112,
        "endChar": 26
      },
      "revId": "d1827ed1e898f340bc203ecb545a53245fd59fd3",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b7065f33_f3906123",
        "filename": "src/tint/lang/msl/writer/ast_printer/ast_printer.cc",
        "patchSetId": 1
      },
      "lineNbr": 112,
      "author": {
        "id": 1000033
      },
      "writtenOn": "2023-12-22T05:16:44Z",
      "side": 1,
      "message": "Made a function to do this instead; it was a cleaner way to handle the indentation a well.\nEmitLoopPreserver();",
      "parentUuid": "9d455ad8_bceabbe3",
      "range": {
        "startLine": 112,
        "startChar": 15,
        "endLine": 112,
        "endChar": 26
      },
      "revId": "d1827ed1e898f340bc203ecb545a53245fd59fd3",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6b07455e_f38b8867",
        "filename": "src/tint/lang/msl/writer/ast_printer/ast_printer.cc",
        "patchSetId": 1
      },
      "lineNbr": 112,
      "author": {
        "id": 1000033
      },
      "writtenOn": "2023-12-23T04:23:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b7065f33_f3906123",
      "range": {
        "startLine": 112,
        "startChar": 15,
        "endLine": 112,
        "endChar": 26
      },
      "revId": "d1827ed1e898f340bc203ecb545a53245fd59fd3",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5dee3821_acb0cec1",
        "filename": "src/tint/lang/msl/writer/ast_printer/ast_printer.cc",
        "patchSetId": 1
      },
      "lineNbr": 2127,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2023-12-22T00:00:21Z",
      "side": 1,
      "message": "nit: Emit this on a new line (after indentation).",
      "range": {
        "startLine": 2127,
        "startChar": 32,
        "endLine": 2127,
        "endChar": 46
      },
      "revId": "d1827ed1e898f340bc203ecb545a53245fd59fd3",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f060a5c9_2b72ee9b",
        "filename": "src/tint/lang/msl/writer/ast_printer/ast_printer.cc",
        "patchSetId": 1
      },
      "lineNbr": 2127,
      "author": {
        "id": 1000033
      },
      "writtenOn": "2023-12-22T05:16:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5dee3821_acb0cec1",
      "range": {
        "startLine": 2127,
        "startChar": 32,
        "endLine": 2127,
        "endChar": 46
      },
      "revId": "d1827ed1e898f340bc203ecb545a53245fd59fd3",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}