{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "6b249399_601e735f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1003201
      },
      "writtenOn": "2022-06-28T02:26:19Z",
      "side": 1,
      "message": "The build in the CQ try test faled only in win-clang-dbg-x86 and win-clang-rel-x86.\n\n```\ngen/include\\dawn/webgpu_cpp.h(1472,9): error: requested alignment is less than minimum alignment of 8 for type \u0027uint64_t\u0027 (aka \u0027unsigned long long\u0027)\n        alignas(ChainedStruct) uint64_t maxDrawCount \u003d 50000000;\n\ngen/src\\dawn/native/wgpu_structs_autogen.h(441,9): error: requested alignment is less than minimum alignment of 8 for type \u0027uint64_t\u0027 (aka \u0027unsigned long long\u0027)\n        alignas(ChainedStruct) uint64_t maxDrawCount \u003d 50000000;\n```\n\nIt looks an alignment issue. Anyone here knows how to resolve the problem? Is the definition of the new extension structure I added in this CL something wrong?",
      "revId": "9c3ef4464cd2a0086e5b51abc429d63f4cc9722e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "08320cdd_314d3bad",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2022-06-28T04:58:40Z",
      "side": 1,
      "message": "Getting late for me - didn\u0027t take a look at the tests or the compile failure yet. Overall LGTM though",
      "revId": "9c3ef4464cd2a0086e5b51abc429d63f4cc9722e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fe5d3e76_6ae2c8b6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-06-28T05:37:31Z",
      "side": 1,
      "message": "The compile error is due to some warnings in alignas that it pessimizes the alignment of uint64_t. Takahiro, can you try if rebasing on top of a copy of https://dawn-review.googlesource.com/c/dawn/+/94940 fixes it? (you can make a copy of that commit by cherry-picking it and removing the Change-Id commit tag so that Gerrit doesn\u0027t know it is the same commit.)",
      "revId": "9c3ef4464cd2a0086e5b51abc429d63f4cc9722e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a9c95e98_fd1ed8e8",
        "filename": "dawn.json",
        "patchSetId": 1
      },
      "lineNbr": 1885,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2022-06-28T04:58:40Z",
      "side": 1,
      "message": "ditto: tags probably not needed",
      "range": {
        "startLine": 1885,
        "startChar": 0,
        "endLine": 1885,
        "endChar": 35
      },
      "revId": "9c3ef4464cd2a0086e5b51abc429d63f4cc9722e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "063fcae9_51cdb76b",
        "filename": "dawn.json",
        "patchSetId": 1
      },
      "lineNbr": 2492,
      "author": {
        "id": 1003201
      },
      "writtenOn": "2022-06-28T02:30:00Z",
      "side": 1,
      "message": "What should the tags be?",
      "revId": "9c3ef4464cd2a0086e5b51abc429d63f4cc9722e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f51c4727_63a4d313",
        "filename": "dawn.json",
        "patchSetId": 1
      },
      "lineNbr": 2492,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2022-06-28T04:58:40Z",
      "side": 1,
      "message": "I think we can do without any tags. We\u0027ll have to agree on https://github.com/webgpu-native/webgpu-headers to have this extension struct, but I don\u0027t think it will be very contentious. Also, it can have value \"15\" since we plan to put it in the public headers, and not be an internal Dawn thing.",
      "parentUuid": "063fcae9_51cdb76b",
      "revId": "9c3ef4464cd2a0086e5b51abc429d63f4cc9722e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8432a058_3f28df51",
        "filename": "src/dawn/native/RenderPassEncoder.cpp",
        "patchSetId": 1
      },
      "lineNbr": 79,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2022-06-28T04:58:40Z",
      "side": 1,
      "message": "Corentin wanted this as an extension struct. Not sure if the intent of not passing the struct means \"just use the default maxDrawCount\" or \"don\u0027t do any drawCount validation\"",
      "revId": "9c3ef4464cd2a0086e5b51abc429d63f4cc9722e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3c3337a1_464996ee",
        "filename": "src/dawn/native/RenderPassEncoder.cpp",
        "patchSetId": 1
      },
      "lineNbr": 79,
      "author": {
        "id": 1003201
      },
      "writtenOn": "2022-06-28T05:04:38Z",
      "side": 1,
      "message": "My understanding is \"just use the default maxDrawCount\" because WebGPU doesn\u0027t state that maxDrawCount is ignorable.",
      "parentUuid": "8432a058_3f28df51",
      "revId": "9c3ef4464cd2a0086e5b51abc429d63f4cc9722e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b20233c8_b0fb9876",
        "filename": "src/dawn/native/RenderPassEncoder.cpp",
        "patchSetId": 1
      },
      "lineNbr": 151,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2022-06-28T04:58:40Z",
      "side": 1,
      "message": "nit: %s on this will already render as `[RenderPass \"optionalLabel\"]`\n\nSo, we can use \"The drawCount (%u) of %s is greater than the maxDrawCount (%u).\"\nSee error conventions at docs/dawn/errors.md",
      "range": {
        "startLine": 151,
        "startChar": 33,
        "endLine": 151,
        "endChar": 48
      },
      "revId": "9c3ef4464cd2a0086e5b51abc429d63f4cc9722e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}