{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "ba5a3a70_4e9fc84a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1002536
      },
      "writtenOn": "2022-09-30T09:22:39Z",
      "side": 1,
      "message": "Please take a look, thanks",
      "revId": "f8e7390681482ff2380ced919f98afaaa9323c92",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d67c694c_b713bb95",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2022-09-30T12:15:29Z",
      "side": 1,
      "message": "I\u0027m really sorry, but I\u0027m not sure that this is a direction I\u0027d like to take with transform tests.\n\nHeavy parameterization of these tests certainly can reduce the amount of duplicated code, but at the significant cost of readability.\nThe templating in this CL makes it much harder to look at the before and after and assess what the transform actually did, which I consider to be the most critical aspect of these tests. The `matrix.NotStd140Compatible()` logic also adds complexity into the tests, which obfuscates whether the test is actually behaving correctly.\n\nI\u0027d recommend adding any additional, unparameterized `f32` tests to this file, then renaming it to `std140_f32_test.cc`, and making a copy for `std140_f16_test.cc`.\n\nHappy to chat about this if you disagree with this decision.",
      "revId": "f8e7390681482ff2380ced919f98afaaa9323c92",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "05fdd081_b378f38d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2022-09-30T12:18:56Z",
      "side": 1,
      "message": "Alternatively, if you really want to have an exhaustive set of parameterized tests, you could add these parameterized tests to `std140_exhaustive_test.cc`. No objection to even more tests.",
      "parentUuid": "d67c694c_b713bb95",
      "revId": "f8e7390681482ff2380ced919f98afaaa9323c92",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e77dc6c6_bb3a4944",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1002536
      },
      "writtenOn": "2022-09-30T16:31:53Z",
      "side": 1,
      "message": "I understand the important of readability. How about:\n1. In this CL, move the parameterized transform tests to a `std140_exhaustive_test.cc`, and keep the `std140_test.cc` unchanged (or with minor formatting), and\n2. In the CL that implement f16 uniform access, rename the `std140_test.cc` to `std140_f32_test.cc`, add a equivalent `std140_f16_test.cc`, and make `std140_exhaustive_test.cc` test all f15 matrix?",
      "parentUuid": "05fdd081_b378f38d",
      "revId": "f8e7390681482ff2380ced919f98afaaa9323c92",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}