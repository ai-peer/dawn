{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "ab444d3e_5683d85a",
        "filename": "src/dawn/native/BindGroup.cpp",
        "patchSetId": 8
      },
      "lineNbr": 53,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-04-22T09:01:23Z",
      "side": 1,
      "message": "I think changes to this file can be rolled back as well? It\u0027s ok if internal usages are not shown in the error message.",
      "revId": "9668e644122697e807812edca58c8a650d664a3f",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "44503e16_b932cee6",
        "filename": "src/dawn/native/BindGroup.cpp",
        "patchSetId": 8
      },
      "lineNbr": 53,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2022-04-22T09:14:03Z",
      "side": 1,
      "message": "Oh currently the validation can\u0027t be skipped as we are calling APIBindGroup() internally in the transform of dispatch indirect buffer:\nhttps://source.chromium.org/chromium/chromium/src/+/main:third_party/dawn/src/dawn/native/ComputePassEncoder.cpp;l\u003d310\n\nWe can refactor the code there to skip all the validations in the next patch.",
      "parentUuid": "ab444d3e_5683d85a",
      "revId": "9668e644122697e807812edca58c8a650d664a3f",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "92f920b4_64c01624",
        "filename": "src/dawn/native/BindGroup.cpp",
        "patchSetId": 8
      },
      "lineNbr": 53,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-04-22T09:52:56Z",
      "side": 1,
      "message": "I\u0027m not sure I understand. That we switch between GetUsage and GetUsageExternalOnly changes the logic and is new to this CL. It seems unnecessary.\n\nGetUsage() as used previously here works because it contains the external usages.",
      "parentUuid": "44503e16_b932cee6",
      "revId": "9668e644122697e807812edca58c8a650d664a3f",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a2ca6648_0e01b263",
        "filename": "src/dawn/native/BindGroup.cpp",
        "patchSetId": 8
      },
      "lineNbr": 53,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2022-04-24T00:45:26Z",
      "side": 1,
      "message": "\u003e GetUsage() as used previously here works because it contains the external usages.\n\nThat\u0027s right. The problem is when we call APISetBindGroup() internally, we don\u0027t skip the validation here, while this internal call requires the buffer have kInternalStorageBufferBinding usage, and with this CL such internal usage isn\u0027t in GetUsageExternalOnly().",
      "parentUuid": "92f920b4_64c01624",
      "revId": "9668e644122697e807812edca58c8a650d664a3f",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c8c5a4d7_ede014cd",
        "filename": "src/dawn/native/BindGroup.cpp",
        "patchSetId": 8
      },
      "lineNbr": 53,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-04-25T07:22:02Z",
      "side": 1,
      "message": "I don\u0027t get it: can\u0027t we just do\n\n            DAWN_INVALID_IF(!(GetUsage() \u0026 requiredUsage),\n                            \"Binding usage (%s) of %s doesn\u0027t match expected usage (%s).\",\n                            GetUsageExternalOnly(), entry.buffer, requiredUsage);\n                            \n?",
      "parentUuid": "a2ca6648_0e01b263",
      "revId": "9668e644122697e807812edca58c8a650d664a3f",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ed2836f2_032908e9",
        "filename": "src/dawn/native/CommandValidation.cpp",
        "patchSetId": 8
      },
      "lineNbr": 100,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-04-22T09:01:23Z",
      "side": 1,
      "message": "nit: Maybe this can be replaced with return ValidateCanUseAs(buffer, wgpu::BufferUsage::CopyDst)?",
      "revId": "9668e644122697e807812edca58c8a650d664a3f",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7bec3c46_29099211",
        "filename": "src/dawn/native/CommandValidation.cpp",
        "patchSetId": 8
      },
      "lineNbr": 100,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2022-04-22T09:14:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ed2836f2_032908e9",
      "revId": "9668e644122697e807812edca58c8a650d664a3f",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}