{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "9b2d31f2_c6e89333",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 31
      },
      "lineNbr": 0,
      "author": {
        "id": 1003611
      },
      "writtenOn": "2024-02-17T16:32:32Z",
      "side": 1,
      "message": "Added more surface tests",
      "revId": "cd7f43835bf3a67d30612b272105d6f74cd87daa",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "66f52e5e_59dc2226",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 31
      },
      "lineNbr": 0,
      "author": {
        "id": 1003611
      },
      "writtenOn": "2024-02-18T13:58:04Z",
      "side": 1,
      "message": "I\u0027m facing an issue that I don\u0027t know how to solve (at least with the Vulkan backend) when calling Unconfigure then Configure again:\n\n - There cannot exist more than 1 swap chain at a time for a given window (otherwise it raises an obscure \"out of memory\" error)\n - Destroying a Swap Chain is not immediate, it is added to the task queue of the FencedDeleter so that it only gets destroyed after the remaining tasks in the queue (e.g., presenting)\n - Creating a new Swap Chain is however immediate -\u003e we have a conflict here\n\nOption A: Force flushing before the creation of a Swap Chain. I tried digging around a lot in the queue/fenceddeleter mecanism, I\u0027m not sure I got it all but I could not find a way to force flush the queue all the way to have the previous swap chain deletion be in the mCompletedSerial.\n\nOption B: Delay Swap Chain Creation. Make the creation of the new Swap Chain delayed to its correct logical serial position in the device timeline rather than being created immediately upon call to CreateSwapChain. I\u0027m not sure how to do this, and whether it will break other tings, like in particular the possibility to reuse the previous swap chain in the call to CreateSwapchainKHR.\n\nOption C: Hack. When creating a new Swap Chain, inspect the fenced deleter queue to see whether there is a swap chain deletion pending, and use it as \"old swapchain\" in the new call to CreateSwapchainKHR.\n\nAny thoughts?",
      "revId": "cd7f43835bf3a67d30612b272105d6f74cd87daa",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8bcc2128_56d11f0f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 31
      },
      "lineNbr": 0,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2024-02-21T20:08:02Z",
      "side": 1,
      "message": "what if we:\n - on DetachFromSurfaceImpl, save the command serial after which the old swapchain will be deleted.\n - on creation of a new swap chain, flush pending deletions, and check the completed command serial so we know whether or not it is deleted or not. if it\u0027s not deleted yet, then we can pass it as the previous swap chain.",
      "parentUuid": "66f52e5e_59dc2226",
      "revId": "cd7f43835bf3a67d30612b272105d6f74cd87daa",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "37bdfe07_2239f56a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 31
      },
      "lineNbr": 0,
      "author": {
        "id": 1003611
      },
      "writtenOn": "2024-02-21T23:15:34Z",
      "side": 1,
      "message": "Okey the tricky part for this was to figure out where to store the serial and vk swapchain, since the SwapChain object itself got destructed. So I added a \"SwapChainCache\" in the vulkan::Device to take care of this.\n\nNB: There is no condition for reusing a so-called \"recycled\" swap chain for now, maybe it should be enforce to relate to the same Surface.",
      "parentUuid": "8bcc2128_56d11f0f",
      "revId": "cd7f43835bf3a67d30612b272105d6f74cd87daa",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "617adc60_bb89a8ab",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 31
      },
      "lineNbr": 0,
      "author": {
        "id": 1003611
      },
      "writtenOn": "2024-02-21T23:15:34Z",
      "side": 1,
      "message": "Added a SwapChainCache in vulkan backend to recycle SwapChains that are going to be destroyed.",
      "revId": "cd7f43835bf3a67d30612b272105d6f74cd87daa",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "60b054f9_ea72f0be",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 31
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2024-02-22T17:50:08Z",
      "side": 1,
      "message": "Sorry I finally got around to this. Isn\u0027t Vulkan\u0027s oldSwapchain in the VkSwapChainCreateInfoKHR structure supposed to avoid this issue?",
      "parentUuid": "37bdfe07_2239f56a",
      "revId": "cd7f43835bf3a67d30612b272105d6f74cd87daa",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "caa4220f_4c1d68c0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 31
      },
      "lineNbr": 0,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2024-02-22T17:54:06Z",
      "side": 1,
      "message": "IIUC, the problem was for unconfigure, followed by configure. In this case, the old swap chain is already in the deletion queue, and when doing configure, it\u0027s necessary to  make sure it\u0027s not deleted yet before passing it as the old swapchain.",
      "parentUuid": "60b054f9_ea72f0be",
      "revId": "cd7f43835bf3a67d30612b272105d6f74cd87daa",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ee7dd262_097f8a7f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 31
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2024-02-23T16:29:07Z",
      "side": 1,
      "message": "Ah thanks, I should have at least looked at the file before commenting. Right now the logic seems incorrect though because with multiple surfaces getting unconfigured the cache might return a swapchain from another surface. Maybe we can suppress the test in this CL so we can land it without the cache, then figure out the cache thing later.",
      "parentUuid": "caa4220f_4c1d68c0",
      "revId": "cd7f43835bf3a67d30612b272105d6f74cd87daa",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "15cb6672_c7793cc0",
        "filename": "src/dawn/tests/end2end/MultithreadTests.cpp",
        "patchSetId": 31
      },
      "lineNbr": 903,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2024-02-22T17:50:08Z",
      "side": 1,
      "message": "Why was this needed? It seems like another build fix that could be separated.",
      "revId": "cd7f43835bf3a67d30612b272105d6f74cd87daa",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f43bab44_2bcd867a",
        "filename": "src/tint/lang/core/ir/validator.h",
        "patchSetId": 31
      },
      "lineNbr": 64,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2024-02-22T17:50:08Z",
      "side": 1,
      "message": "Can this be separated? It seems to be a build fix (for some obscure MSVC reason?) that\u0027s totally unrelated to swapchains.",
      "revId": "cd7f43835bf3a67d30612b272105d6f74cd87daa",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}