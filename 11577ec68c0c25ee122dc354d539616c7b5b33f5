{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "1a6cc5a1_fca9c282",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1000024
      },
      "writtenOn": "2023-05-26T03:38:54Z",
      "side": 1,
      "message": "LGTM",
      "revId": "11577ec68c0c25ee122dc354d539616c7b5b33f5",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "916d45c9_ab04e34c",
        "filename": "src/dawn/native/RenderPipeline.cpp",
        "patchSetId": 7
      },
      "lineNbr": 500,
      "author": {
        "id": 1000024
      },
      "writtenOn": "2023-05-26T03:38:54Z",
      "side": 1,
      "message": "Nit: \"in fragment stage\" -\u003e \"in the fragment stage\".",
      "revId": "11577ec68c0c25ee122dc354d539616c7b5b33f5",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "78931034_4a534f1f",
        "filename": "src/dawn/tests/unittests/validation/CompatValidationTests.cpp",
        "patchSetId": 7
      },
      "lineNbr": 159,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-05-30T15:46:19Z",
      "side": 1,
      "message": "nit: I think this shouldn\u0027t be commented out\n\nyou\u0027re probably getting an error for a different reason. you can use\n\nASSERT_DEVICE_ERROR(foo, testing::HasSubstr(\"sample_mask\")); to have a reasonable check you\u0027re getting the error you want.\n\nTry to keep the string matcher short so it doesn\u0027t become a change-detecting test if someone changes the message format slightly.",
      "range": {
        "startLine": 151,
        "startChar": 7,
        "endLine": 159,
        "endChar": 10
      },
      "revId": "11577ec68c0c25ee122dc354d539616c7b5b33f5",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "73f27319_56d89eac",
        "filename": "src/dawn/tests/unittests/validation/CompatValidationTests.cpp",
        "patchSetId": 7
      },
      "lineNbr": 159,
      "author": {
        "id": 1003446
      },
      "writtenOn": "2023-05-30T16:07:28Z",
      "side": 1,
      "message": "You\u0027re right. I added the hasSubstr check. I\u0027ve been manually adding a `dawn::InfoLog() \u003c\u003c message \u003c\u003c \"\\n\";` to `ValidationTest::OnDeviceError` to check my error messages. Is there some other way to actually see them?",
      "parentUuid": "78931034_4a534f1f",
      "range": {
        "startLine": 151,
        "startChar": 7,
        "endLine": 159,
        "endChar": 10
      },
      "revId": "11577ec68c0c25ee122dc354d539616c7b5b33f5",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c80e0c59_7d54f09a",
        "filename": "src/dawn/tests/unittests/validation/CompatValidationTests.cpp",
        "patchSetId": 7
      },
      "lineNbr": 159,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-05-30T16:10:23Z",
      "side": 1,
      "message": "no, but maybe we should have a command line flag for the test harness to InfoLog the messages like you\u0027re doing",
      "parentUuid": "73f27319_56d89eac",
      "range": {
        "startLine": 151,
        "startChar": 7,
        "endLine": 159,
        "endChar": 10
      },
      "revId": "11577ec68c0c25ee122dc354d539616c7b5b33f5",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}