{
  "comments": [
    {
      "key": {
        "uuid": "42344c43_c4bb1707",
        "filename": "src/tests/DawnTest.cpp",
        "patchSetId": 2
      },
      "lineNbr": 445,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2019-07-23T07:25:38Z",
      "side": 1,
      "message": "Why is this needed? Is it so the backends see the unmaps? Seems fine to have but the backends should be able to handle destroying buffers that are still mapped.",
      "revId": "3f7dd8657493791b279bbd1ecbe5a5ccfb89c17b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4246fc85_7cba9dcd",
        "filename": "src/tests/DawnTest.cpp",
        "patchSetId": 2
      },
      "lineNbr": 445,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2019-07-23T16:29:35Z",
      "side": 1,
      "message": "Same question. I just tested this on Linux and Windows and the tests pass without the FlushWire",
      "parentUuid": "42344c43_c4bb1707",
      "revId": "3f7dd8657493791b279bbd1ecbe5a5ccfb89c17b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "37822bec_1dc64056",
        "filename": "src/tests/DawnTest.cpp",
        "patchSetId": 2
      },
      "lineNbr": 445,
      "author": {
        "id": 1000268
      },
      "writtenOn": "2019-07-23T17:59:15Z",
      "side": 1,
      "message": "When using the wire, the above code doesn\u0027t do what it suggests. Unmap is never called. Is that the expected behavior?",
      "parentUuid": "42344c43_c4bb1707",
      "revId": "3f7dd8657493791b279bbd1ecbe5a5ccfb89c17b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7e46f837_0abff881",
        "filename": "src/tests/DawnTest.cpp",
        "patchSetId": 2
      },
      "lineNbr": 445,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2019-07-23T18:09:47Z",
      "side": 1,
      "message": "You\u0027re correct that Unmap won\u0027t be called in the backends, but this still performs the Unmap on the client.\n\nSo then after this, the backend will be destroyed and buffers will be destroyed while still mapped (and implicitly Unmap). As Corentin mentioned, the backend should handle this.",
      "parentUuid": "37822bec_1dc64056",
      "revId": "3f7dd8657493791b279bbd1ecbe5a5ccfb89c17b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "854ce3d3_a3a730d8",
        "filename": "src/tests/DawnTest.cpp",
        "patchSetId": 2
      },
      "lineNbr": 445,
      "author": {
        "id": 1000268
      },
      "writtenOn": "2019-07-23T19:13:29Z",
      "side": 1,
      "message": "Is there any issue doing so explicitly in DestoryImpl? This would allow a check that ensures Unmap is always called which i believe is required when re-using the same heap.",
      "parentUuid": "7e46f837_0abff881",
      "revId": "3f7dd8657493791b279bbd1ecbe5a5ccfb89c17b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3cea1fda_0237eee6",
        "filename": "src/tests/DawnTest.cpp",
        "patchSetId": 2
      },
      "lineNbr": 445,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2019-07-23T19:53:42Z",
      "side": 1,
      "message": "Oh, okay I see now. Thanks for pointing that out. So if we must call ID3D12Resource::Unmap to reuse memory, then it seems right to do so inside DestroyImpl.\n\nAnd then we don\u0027t need this FlushWire() in the tests?",
      "parentUuid": "854ce3d3_a3a730d8",
      "revId": "3f7dd8657493791b279bbd1ecbe5a5ccfb89c17b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    }
  ]
}