{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "3fbd56cf_89dc433c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2021-11-15T19:20:31Z",
      "side": 1,
      "message": "PTAL!",
      "revId": "defc05a496c8d5974b329b7d69f7b43755a068e1",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "45d48756_a953fa25",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1002831
      },
      "writtenOn": "2021-11-15T19:36:23Z",
      "side": 1,
      "message": "LGTM",
      "revId": "defc05a496c8d5974b329b7d69f7b43755a068e1",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "64ef959b_369da1c0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1001591
      },
      "writtenOn": "2021-11-15T21:48:07Z",
      "side": 1,
      "message": "One question about where the adapter errors surface, but otherwise LGTM!",
      "revId": "defc05a496c8d5974b329b7d69f7b43755a068e1",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "98133167_71aa7480",
        "filename": "src/dawn_native/Adapter.cpp",
        "patchSetId": 1
      },
      "lineNbr": 40,
      "author": {
        "id": 1001591
      },
      "writtenOn": "2021-11-15T21:48:07Z",
      "side": 1,
      "message": "I don\u0027t believe these errors are something that a page\u0027s Javascript can intercept, but wanted to check and make sure. Don\u0027t want to leak this info in a parsable way to the page without going through the appropriate API calls (especially while the shape of those are in flux.) If these can only surface on the console, or don\u0027t surface to browser usage at all, then it\u0027s great!",
      "revId": "defc05a496c8d5974b329b7d69f7b43755a068e1",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8bd63c89_3500e87e",
        "filename": "src/dawn_native/Adapter.cpp",
        "patchSetId": 1
      },
      "lineNbr": 40,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2021-11-15T21:54:21Z",
      "side": 1,
      "message": "yea, these only go to the command line console, not the Javascript console",
      "parentUuid": "98133167_71aa7480",
      "revId": "defc05a496c8d5974b329b7d69f7b43755a068e1",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3aef699c_6a4c0094",
        "filename": "src/dawn_native/ErrorData.cpp",
        "patchSetId": 1
      },
      "lineNbr": 84,
      "author": {
        "id": 1002831
      },
      "writtenOn": "2021-11-15T19:36:23Z",
      "side": 1,
      "message": "Is this also pending on Brandon\u0027s response about why only validation errors? (We should add a comment about the reason or update accordingly.)",
      "range": {
        "startLine": 84,
        "startChar": 30,
        "endLine": 84,
        "endChar": 71
      },
      "revId": "defc05a496c8d5974b329b7d69f7b43755a068e1",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "02ae44ff_5e2b5318",
        "filename": "src/dawn_native/ErrorData.cpp",
        "patchSetId": 1
      },
      "lineNbr": 84,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2021-11-15T23:49:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3aef699c_6a4c0094",
      "range": {
        "startLine": 84,
        "startChar": 30,
        "endLine": 84,
        "endChar": 71
      },
      "revId": "defc05a496c8d5974b329b7d69f7b43755a068e1",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}