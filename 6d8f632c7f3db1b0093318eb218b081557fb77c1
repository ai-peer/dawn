{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "1ab77a6a_246f94a9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-11-23T16:15:21Z",
      "side": 1,
      "message": "LGTM too",
      "revId": "6d8f632c7f3db1b0093318eb218b081557fb77c1",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "81b0a7e6_08eedb87",
        "filename": "src/dawn_native/d3d12/ShaderModuleD3D12.cpp",
        "patchSetId": 1
      },
      "lineNbr": 387,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-11-23T16:15:21Z",
      "side": 1,
      "message": "unit: const Flag\u0026",
      "range": {
        "startLine": 387,
        "startChar": 17,
        "endLine": 387,
        "endChar": 21
      },
      "revId": "6d8f632c7f3db1b0093318eb218b081557fb77c1",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ad5abed8_9cd17fa2",
        "filename": "src/dawn_native/d3d12/ShaderModuleD3D12.cpp",
        "patchSetId": 1
      },
      "lineNbr": 387,
      "author": {
        "id": 1002361
      },
      "writtenOn": "2021-11-23T16:48:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "81b0a7e6_08eedb87",
      "range": {
        "startLine": 387,
        "startChar": 17,
        "endLine": 387,
        "endChar": 21
      },
      "revId": "6d8f632c7f3db1b0093318eb218b081557fb77c1",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "81998586_b823fdf0",
        "filename": "src/dawn_native/d3d12/ShaderModuleD3D12.cpp",
        "patchSetId": 1
      },
      "lineNbr": 393,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-11-23T16:15:21Z",
      "side": 1,
      "message": "nit: Maybe also explain why do they need to be handled separately. Is it because they are combination flags on multiple bits? Does the order matter?",
      "revId": "6d8f632c7f3db1b0093318eb218b081557fb77c1",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a47ebbcd_7d461912",
        "filename": "src/dawn_native/d3d12/ShaderModuleD3D12.cpp",
        "patchSetId": 1
      },
      "lineNbr": 393,
      "author": {
        "id": 1002361
      },
      "writtenOn": "2021-11-23T16:34:38Z",
      "side": 1,
      "message": "Yes to both. Two bits are used, and they don\u0027t map nicely to 0-3:\n\n#define D3DCOMPILE_OPTIMIZATION_LEVEL0                  (1 \u003c\u003c 14)\n#define D3DCOMPILE_OPTIMIZATION_LEVEL1                  0\n#define D3DCOMPILE_OPTIMIZATION_LEVEL2                  ((1 \u003c\u003c 14) | (1 \u003c\u003c 15))\n#define D3DCOMPILE_OPTIMIZATION_LEVEL3                  (1 \u003c\u003c 15)\n\n\nAt first I thought I could mask the 2 bits like: ((compileFlags \u003e\u003e 14) \u0026 0b11)\n\nBut the values don\u0027t map nicely:\n\nv  -\u003e optimization level\n00 -\u003e 1\n01 -\u003e 0\n10 -\u003e 3\n11 -\u003e 2\n\nI\u0027ll update the comment.",
      "parentUuid": "81998586_b823fdf0",
      "revId": "6d8f632c7f3db1b0093318eb218b081557fb77c1",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ba24aa9c_94d0a3e3",
        "filename": "src/dawn_native/d3d12/ShaderModuleD3D12.cpp",
        "patchSetId": 1
      },
      "lineNbr": 393,
      "author": {
        "id": 1002361
      },
      "writtenOn": "2021-11-23T16:48:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a47ebbcd_7d461912",
      "revId": "6d8f632c7f3db1b0093318eb218b081557fb77c1",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8b7a663c_b6b2510e",
        "filename": "src/dawn_native/d3d12/ShaderModuleD3D12.cpp",
        "patchSetId": 1
      },
      "lineNbr": 528,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2021-11-23T14:35:39Z",
      "side": 1,
      "message": "Ã¼bernit: you could pass this in to reduce the number of string concats",
      "range": {
        "startLine": 528,
        "startChar": 16,
        "endLine": 528,
        "endChar": 34
      },
      "revId": "6d8f632c7f3db1b0093318eb218b081557fb77c1",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cd9425d1_53ee0a95",
        "filename": "src/dawn_native/d3d12/ShaderModuleD3D12.cpp",
        "patchSetId": 1
      },
      "lineNbr": 528,
      "author": {
        "id": 1002361
      },
      "writtenOn": "2021-11-23T14:38:20Z",
      "side": 1,
      "message": "Yeah, I thought of that, but since I\u0027m using it below for DXBC output, I think it\u0027s clearer to have it here. Also, it\u0027s just for the exceptional case of dumping stuff, so I think the extra string concat cost is okay.",
      "parentUuid": "8b7a663c_b6b2510e",
      "range": {
        "startLine": 528,
        "startChar": 16,
        "endLine": 528,
        "endChar": 34
      },
      "revId": "6d8f632c7f3db1b0093318eb218b081557fb77c1",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}