{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "5135629f_af97efe4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000250
      },
      "writtenOn": "2022-06-16T17:18:02Z",
      "side": 1,
      "message": "PTAL, currently SwiftShader rolls are broken by needing a wayland.gni, which I have added here.\n\nYuly, I have added you to this review, since I think handled this for ANGLE and I wanted to confirm this is correct.",
      "revId": "835e84140f3a135a1457b2d9f054b21fa9f4bd65",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "21cd8ced_2a70791d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000277
      },
      "writtenOn": "2022-06-17T12:45:31Z",
      "side": 1,
      "message": "I prefer to land\nhttps://dawn-review.googlesource.com/c/dawn/+/93788\nI think it also addresses Austin\u0027s comments.\nSo maybe you could review and land it instead?",
      "revId": "835e84140f3a135a1457b2d9f054b21fa9f4bd65",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "51bd185e_db34b3c2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000250
      },
      "writtenOn": "2022-06-17T14:29:47Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "21cd8ced_2a70791d",
      "revId": "835e84140f3a135a1457b2d9f054b21fa9f4bd65",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "21ffe561_6672916e",
        "filename": "build_overrides/wayland.gni",
        "patchSetId": 1
      },
      "lineNbr": 5,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2022-06-16T22:41:55Z",
      "side": 1,
      "message": "nit: \"has no third_party/wayland\"",
      "range": {
        "startLine": 5,
        "startChar": 7,
        "endLine": 5,
        "endChar": 14
      },
      "revId": "835e84140f3a135a1457b2d9f054b21fa9f4bd65",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d2ce5363_83693005",
        "filename": "build_overrides/wayland.gni",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2022-06-16T22:41:55Z",
      "side": 1,
      "message": "Given this line:\nhttps://source.chromium.org/chromium/chromium/src/+/main:third_party/swiftshader/src/WSI/BUILD.gn;l\u003d19?q\u003dWSI%2FBUILD.gn\u0026ss\u003dchromium%2Fchromium%2Fsrc\n\nwouldn\u0027t we use ozone_platform_wayland \u003d false? because we don\u0027t have wayland so we shouldn\u0027t `import(\"//third_party/wayland/features.gni\")`\n\nIt looks like the roll is working though - so maybe I am wrong.",
      "revId": "835e84140f3a135a1457b2d9f054b21fa9f4bd65",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Code-Review=MAX,user=non_uploader","label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1"]}
      },
      "patchSetCommitId": "835e84140f3a135a1457b2d9f054b21fa9f4bd65",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforced_gerrit"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "835e84140f3a135a1457b2d9f054b21fa9f4bd65",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}