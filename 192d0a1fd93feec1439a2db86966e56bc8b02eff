{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "51141bea_e70b629c",
        "filename": "src/tint/transform/transform.cc",
        "patchSetId": 2
      },
      "lineNbr": 178,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2023-03-02T16:19:01Z",
      "side": 1,
      "message": "Shouldn\u0027t this just be a copy of `p-\u003eAccess` ? Why does it need to be conditional?",
      "revId": "192d0a1fd93feec1439a2db86966e56bc8b02eff",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c37501c0_bb958a74",
        "filename": "src/tint/transform/transform.cc",
        "patchSetId": 2
      },
      "lineNbr": 178,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2023-03-02T16:21:15Z",
      "side": 1,
      "message": "It\u0027s a validation error if any non-storage pointer also provides an access mode.\n`ty.pointer()` constructs the AST node based on what you give it - i.e. it doesn\u0027t go and throw away an argument due to some cleverness.",
      "parentUuid": "51141bea_e70b629c",
      "revId": "192d0a1fd93feec1439a2db86966e56bc8b02eff",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "53cd8c44_edc86f41",
        "filename": "src/tint/transform/transform.cc",
        "patchSetId": 2
      },
      "lineNbr": 178,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2023-03-02T16:32:54Z",
      "side": 1,
      "message": "Right, but if we got here, and you\u0027re copying the pointer, doesn\u0027t it already have to be valid? Is this just a validity check for the code we\u0027ve generated internally?",
      "parentUuid": "c37501c0_bb958a74",
      "revId": "192d0a1fd93feec1439a2db86966e56bc8b02eff",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "68d7368b_48de20fd",
        "filename": "src/tint/transform/transform.cc",
        "patchSetId": 2
      },
      "lineNbr": 178,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2023-03-02T16:42:28Z",
      "side": 1,
      "message": "The sem always has an inferred access.",
      "parentUuid": "53cd8c44_edc86f41",
      "revId": "192d0a1fd93feec1439a2db86966e56bc8b02eff",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "878fb4cb_3bcd4361",
        "filename": "src/tint/transform/transform.cc",
        "patchSetId": 2
      },
      "lineNbr": 178,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2023-03-02T16:44:14Z",
      "side": 1,
      "message": "Ah. Ok. Maybe comment as such?",
      "parentUuid": "68d7368b_48de20fd",
      "revId": "192d0a1fd93feec1439a2db86966e56bc8b02eff",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e24b6641_5910c442",
        "filename": "src/tint/transform/transform.cc",
        "patchSetId": 2
      },
      "lineNbr": 178,
      "author": {
        "id": 1002421
      },
      "writtenOn": "2023-03-02T17:18:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "878fb4cb_3bcd4361",
      "revId": "192d0a1fd93feec1439a2db86966e56bc8b02eff",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}