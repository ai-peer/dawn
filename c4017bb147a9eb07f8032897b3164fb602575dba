{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "f302f1c1_9f82d47d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2022-12-13T20:29:07Z",
      "side": 1,
      "message": "PTAL.",
      "revId": "c4017bb147a9eb07f8032897b3164fb602575dba",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "55710158_952e4d44",
        "filename": "src/tint/resolver/const_eval.cc",
        "patchSetId": 1
      },
      "lineNbr": 340,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2022-12-13T21:03:08Z",
      "side": 1,
      "message": "Having `Splat` derive from `Composite` is not very memory efficient, and the whole point of `Splat` is to be memory efficient.\n\nWhat are the real gains to doing this?",
      "range": {
        "startLine": 336,
        "startChar": 0,
        "endLine": 340,
        "endChar": 22
      },
      "revId": "c4017bb147a9eb07f8032897b3164fb602575dba",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a1010b73_190f7906",
        "filename": "src/tint/resolver/const_eval.cc",
        "patchSetId": 1
      },
      "lineNbr": 340,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2022-12-13T21:20:16Z",
      "side": 1,
      "message": "I want to move CreateComposite out of here and into ProgramBuilder. CreateComposite returns either a splat or a composite depending on what the contents of the things passed in are.\n\nWithout having this inheritance, when I tried to change CreateComposite things got sad.\n\nIn terms of memory efficiency, why do we create a Composite with a size of 8, our general case would max out of 4 would it not?",
      "parentUuid": "55710158_952e4d44",
      "range": {
        "startLine": 336,
        "startChar": 0,
        "endLine": 340,
        "endChar": 22
      },
      "revId": "c4017bb147a9eb07f8032897b3164fb602575dba",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "21c5188f_9ddcdb88",
        "filename": "src/tint/resolver/const_eval.cc",
        "patchSetId": 1
      },
      "lineNbr": 340,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2022-12-13T21:23:41Z",
      "side": 1,
      "message": "\u003e I want to move CreateComposite out of here and into ProgramBuilder\n\nHumm, `ProgramBuilder` mostly builds AST (another TODO is to move most of that to the AST package). We don\u0027t have convenience builder helpers for `sem::*` / `type::*` / `constant::*` because they\u0027re all built by `Resolver`, rarely by tests, never by transforms (at least currently!)\n\n\u003e In terms of memory efficiency, why do we create a Composite with a size of 8, our general case would max out of 4 would it not?\n\nWe could reduce to 4, but this also covers arrays and structures which can be any arbitrary size. But yes, 4 might be a more sensible default.",
      "parentUuid": "a1010b73_190f7906",
      "range": {
        "startLine": 336,
        "startChar": 0,
        "endLine": 340,
        "endChar": 22
      },
      "revId": "c4017bb147a9eb07f8032897b3164fb602575dba",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "18608b0a_1e99310a",
        "filename": "src/tint/resolver/const_eval.cc",
        "patchSetId": 1
      },
      "lineNbr": 340,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2022-12-13T21:25:37Z",
      "side": 1,
      "message": "ProgramBuilder has a `create` for sem::Node, a `create` for constant::Constant and a `create` for type::Type nodes already.",
      "parentUuid": "21c5188f_9ddcdb88",
      "range": {
        "startLine": 336,
        "startChar": 0,
        "endLine": 340,
        "endChar": 22
      },
      "revId": "c4017bb147a9eb07f8032897b3164fb602575dba",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f34ff6e7_a6b16d53",
        "filename": "src/tint/resolver/const_eval.cc",
        "patchSetId": 1
      },
      "lineNbr": 340,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2022-12-13T21:59:10Z",
      "side": 1,
      "message": "https://dawn-review.googlesource.com/c/dawn/+/114202 is what I\u0027m hoping todo although, it makes the compiler very sad with template errors at the moment.",
      "parentUuid": "18608b0a_1e99310a",
      "range": {
        "startLine": 336,
        "startChar": 0,
        "endLine": 340,
        "endChar": 22
      },
      "revId": "c4017bb147a9eb07f8032897b3164fb602575dba",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "603e6923_e0f44c1a",
        "filename": "src/tint/resolver/const_eval.cc",
        "patchSetId": 1
      },
      "lineNbr": 340,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2022-12-14T10:26:40Z",
      "side": 1,
      "message": "\u003e https://dawn-review.googlesource.com/c/dawn/+/114202 is what I\u0027m hoping todo although, it makes the compiler very sad with template errors at the moment.\n\nI don\u0027t see why this requires `Splat` to inherit from `Composite`. I think you\u0027ve got yourself in a bit of a muddle with the templates in that CL. That method doesn\u0027t need a template at all.\n\nI still believe that changing the inheritance of `Splat` here is unnecessary, and is less efficient than what we already have.",
      "parentUuid": "f34ff6e7_a6b16d53",
      "range": {
        "startLine": 336,
        "startChar": 0,
        "endLine": 340,
        "endChar": 22
      },
      "revId": "c4017bb147a9eb07f8032897b3164fb602575dba",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}