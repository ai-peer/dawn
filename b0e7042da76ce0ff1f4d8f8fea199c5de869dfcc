{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "83f4998b_4fab5ebf",
        "filename": "src/tint/resolver/const_eval_builtin_test.cc",
        "patchSetId": 5
      },
      "lineNbr": 300,
      "author": {
        "id": 1002361
      },
      "writtenOn": "2022-10-26T21:50:57Z",
      "side": 1,
      "message": "Why did you need to switch to calling Negation?\n\nInstead of creation a negation expression and relying on the Resolver, you can instead use the Negate() helper I created (see const_eval_test.h and various usages in this file). This will instead produce an expression with the literal negated value. Same for other usages of `Negation` below. Though I\u0027m still unsure why you needed this, as Negate() was specifically to deal with issues with integrals, not floats.",
      "range": {
        "startLine": 300,
        "startChar": 49,
        "endLine": 300,
        "endChar": 57
      },
      "revId": "b0e7042da76ce0ff1f4d8f8fea199c5de869dfcc",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "28af0e90_89ab7546",
        "filename": "src/tint/resolver/const_eval_builtin_test.cc",
        "patchSetId": 5
      },
      "lineNbr": 300,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2022-10-26T22:42:27Z",
      "side": 1,
      "message": "Seemed like it was a better match for what AST would give us. Numbers can\u0027t be negative anymore, so it will be a negation in the AST.",
      "parentUuid": "83f4998b_4fab5ebf",
      "range": {
        "startLine": 300,
        "startChar": 49,
        "endLine": 300,
        "endChar": 57
      },
      "revId": "b0e7042da76ce0ff1f4d8f8fea199c5de869dfcc",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c8e6afe5_dd47a50e",
        "filename": "src/tint/resolver/const_eval_builtin_test.cc",
        "patchSetId": 5
      },
      "lineNbr": 300,
      "author": {
        "id": 1002361
      },
      "writtenOn": "2022-10-27T14:39:02Z",
      "side": 1,
      "message": "Created this bug so we can address this in a future CL: https://bugs.chromium.org/p/tint/issues/detail?id\u003d1736",
      "parentUuid": "28af0e90_89ab7546",
      "range": {
        "startLine": 300,
        "startChar": 49,
        "endLine": 300,
        "endChar": 57
      },
      "revId": "b0e7042da76ce0ff1f4d8f8fea199c5de869dfcc",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "17bfc2b6_5590571f",
        "filename": "src/tint/resolver/const_eval_builtin_test.cc",
        "patchSetId": 5
      },
      "lineNbr": 327,
      "author": {
        "id": 1002361
      },
      "writtenOn": "2022-10-26T21:50:57Z",
      "side": 1,
      "message": "Split this into two cases, one for +0 and -0, each should return the same value. The `PosOrNeg()` is not required.",
      "range": {
        "startLine": 327,
        "startChar": 8,
        "endLine": 327,
        "endChar": 39
      },
      "revId": "b0e7042da76ce0ff1f4d8f8fea199c5de869dfcc",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ddc6bf66_ad2cb40a",
        "filename": "src/tint/resolver/const_eval_builtin_test.cc",
        "patchSetId": 5
      },
      "lineNbr": 327,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2022-10-27T13:09:23Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "17bfc2b6_5590571f",
      "range": {
        "startLine": 327,
        "startChar": 8,
        "endLine": 327,
        "endChar": 39
      },
      "revId": "b0e7042da76ce0ff1f4d8f8fea199c5de869dfcc",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "357b3ac3_8a25920e",
        "filename": "src/tint/resolver/const_eval_builtin_test.cc",
        "patchSetId": 5
      },
      "lineNbr": 391,
      "author": {
        "id": 1002361
      },
      "writtenOn": "2022-10-26T21:50:57Z",
      "side": 1,
      "message": "Don\u0027t add `FloatComp` if not needed here, nor for -0.",
      "range": {
        "startLine": 391,
        "startChar": 39,
        "endLine": 391,
        "endChar": 50
      },
      "revId": "b0e7042da76ce0ff1f4d8f8fea199c5de869dfcc",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "28bd1bb3_0a1e40ca",
        "filename": "src/tint/resolver/const_eval_builtin_test.cc",
        "patchSetId": 5
      },
      "lineNbr": 391,
      "author": {
        "id": 1002361
      },
      "writtenOn": "2022-10-26T21:50:57Z",
      "side": 1,
      "message": "Remove `PosOrNeg` here and on -0.",
      "range": {
        "startLine": 391,
        "startChar": 28,
        "endLine": 391,
        "endChar": 36
      },
      "revId": "b0e7042da76ce0ff1f4d8f8fea199c5de869dfcc",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cf8a6418_3dbc27f5",
        "filename": "src/tint/resolver/const_eval_builtin_test.cc",
        "patchSetId": 5
      },
      "lineNbr": 391,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2022-10-27T13:09:23Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "28bd1bb3_0a1e40ca",
      "range": {
        "startLine": 391,
        "startChar": 28,
        "endLine": 391,
        "endChar": 36
      },
      "revId": "b0e7042da76ce0ff1f4d8f8fea199c5de869dfcc",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "883199b9_b1b0683e",
        "filename": "src/tint/resolver/const_eval_builtin_test.cc",
        "patchSetId": 5
      },
      "lineNbr": 391,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2022-10-27T13:09:23Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "357b3ac3_8a25920e",
      "range": {
        "startLine": 391,
        "startChar": 39,
        "endLine": 391,
        "endChar": 50
      },
      "revId": "b0e7042da76ce0ff1f4d8f8fea199c5de869dfcc",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b68fdd9c_4281fee8",
        "filename": "src/tint/writer/glsl/generator_impl_import_test.cc",
        "patchSetId": 5
      },
      "lineNbr": 95,
      "author": {
        "id": 1002361
      },
      "writtenOn": "2022-10-26T21:50:57Z",
      "side": 1,
      "message": "Why did you need to make this change?",
      "range": {
        "startLine": 95,
        "startChar": 39,
        "endLine": 95,
        "endChar": 58
      },
      "revId": "b0e7042da76ce0ff1f4d8f8fea199c5de869dfcc",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2d57cf7f_445418c2",
        "filename": "src/tint/writer/glsl/generator_impl_import_test.cc",
        "patchSetId": 5
      },
      "lineNbr": 95,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2022-10-26T22:42:27Z",
      "side": 1,
      "message": "The original values are invalid for `asin`. Changing them to \u003c\u003d 1 makes them valid. I could have probably left `1_f`, but just made the same change for all 3.",
      "parentUuid": "b68fdd9c_4281fee8",
      "range": {
        "startLine": 95,
        "startChar": 39,
        "endLine": 95,
        "endChar": 58
      },
      "revId": "b0e7042da76ce0ff1f4d8f8fea199c5de869dfcc",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3dba4237_ce014961",
        "filename": "src/tint/writer/glsl/generator_impl_import_test.cc",
        "patchSetId": 5
      },
      "lineNbr": 95,
      "author": {
        "id": 1002361
      },
      "writtenOn": "2022-10-27T14:39:02Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "2d57cf7f_445418c2",
      "range": {
        "startLine": 95,
        "startChar": 39,
        "endLine": 95,
        "endChar": 58
      },
      "revId": "b0e7042da76ce0ff1f4d8f8fea199c5de869dfcc",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}