{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "e7ac0dc2_3a8b8e12",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-01-27T15:44:15Z",
      "side": 1,
      "message": "PTAL! - sorry this is a massive workaround CL",
      "revId": "f3a9b3083a6bdbd560082f392002efc63b0a970a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fc13a73b_fc6b7a8a",
        "filename": "src/dawn/native/BlitBufferToDepthStencil.cpp",
        "patchSetId": 2
      },
      "lineNbr": 401,
      "author": {
        "id": 1000685
      },
      "writtenOn": "2023-01-27T21:36:41Z",
      "side": 1,
      "message": "u-nit: dstAttachment",
      "revId": "f3a9b3083a6bdbd560082f392002efc63b0a970a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "173785d2_d1c9201b",
        "filename": "src/dawn/native/BlitBufferToDepthStencil.cpp",
        "patchSetId": 2
      },
      "lineNbr": 401,
      "author": {
        "id": 1002831
      },
      "writtenOn": "2023-01-28T00:02:03Z",
      "side": 1,
      "message": "Hmm I think either way is fine. I assume `ds` was supposed to be referring to depthStencil.",
      "parentUuid": "fc13a73b_fc6b7a8a",
      "revId": "f3a9b3083a6bdbd560082f392002efc63b0a970a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "29212cfc_aa5c478b",
        "filename": "src/dawn/native/BlitBufferToDepthStencil.cpp",
        "patchSetId": 2
      },
      "lineNbr": 430,
      "author": {
        "id": 1000685
      },
      "writtenOn": "2023-01-27T21:36:41Z",
      "side": 1,
      "message": "Feels like some steampunk-style workaround...\nBut seems to work, and time complexity is O(1)... So great?!\n\nQuestion: is copyT2T works properly on Metal intel? I was thinking if so, then is it doable to copy buffer to r8uint first and then copyT2T from r8uint to stencil8? (stencil8 is valid image copy src/dst)",
      "revId": "f3a9b3083a6bdbd560082f392002efc63b0a970a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b2376e84_62170fa9",
        "filename": "src/dawn/native/BlitBufferToDepthStencil.cpp",
        "patchSetId": 2
      },
      "lineNbr": 430,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-01-27T21:45:08Z",
      "side": 1,
      "message": "Metal requires the pixel formats to be the same - so you can\u0027t copy from r8uint to stencil8",
      "parentUuid": "29212cfc_aa5c478b",
      "revId": "f3a9b3083a6bdbd560082f392002efc63b0a970a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0822be40_d68051c1",
        "filename": "src/dawn/native/BlitBufferToDepthStencil.h",
        "patchSetId": 2
      },
      "lineNbr": 25,
      "author": {
        "id": 1000685
      },
      "writtenOn": "2023-01-27T21:36:41Z",
      "side": 1,
      "message": "nit: BlitBufferToDepth, from a buffer to depth",
      "revId": "f3a9b3083a6bdbd560082f392002efc63b0a970a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6200cc31_a405959c",
        "filename": "src/dawn/native/CommandEncoder.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1233,
      "author": {
        "id": 1000685
      },
      "writtenOn": "2023-01-27T21:36:41Z",
      "side": 1,
      "message": "Do we need `return {};` here as well?",
      "revId": "f3a9b3083a6bdbd560082f392002efc63b0a970a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "755a5018_ab8c91e3",
        "filename": "src/dawn/native/CommandEncoder.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1233,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-01-27T21:45:08Z",
      "side": 1,
      "message": "nice catch!",
      "parentUuid": "6200cc31_a405959c",
      "revId": "f3a9b3083a6bdbd560082f392002efc63b0a970a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e1733664_b0df5d58",
        "filename": "src/dawn/native/CommandEncoder.h",
        "patchSetId": 2
      },
      "lineNbr": 101,
      "author": {
        "id": 1002831
      },
      "writtenOn": "2023-01-28T00:02:03Z",
      "side": 1,
      "message": "nit. comment line length",
      "range": {
        "startLine": 99,
        "startChar": 4,
        "endLine": 101,
        "endChar": 32
      },
      "revId": "f3a9b3083a6bdbd560082f392002efc63b0a970a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ec73d31d_62ba3e48",
        "filename": "src/dawn/tests/end2end/RenderPassTests.cpp",
        "patchSetId": 2
      },
      "lineNbr": 340,
      "author": {
        "id": 1002831
      },
      "writtenOn": "2023-01-28T00:02:03Z",
      "side": 1,
      "message": "Hmm.. Would be nice if the subresource params were parameterized instead of looped... But it\u0027t a bit more work so alternatively, we should at least stream some context for each expectation, otherwise I think if it errors, the errors will be a bit difficult to decipher.",
      "range": {
        "startLine": 339,
        "startChar": 24,
        "endLine": 340,
        "endChar": 49
      },
      "revId": "f3a9b3083a6bdbd560082f392002efc63b0a970a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}