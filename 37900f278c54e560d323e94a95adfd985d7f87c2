{
  "comments": [
    {
      "key": {
        "uuid": "23f139ec_9c931054",
        "filename": "src/dawn_native/d3d12/CommandBufferD3D12.cpp",
        "patchSetId": 8
      },
      "lineNbr": 507,
      "author": {
        "id": 1000262
      },
      "writtenOn": "2019-08-08T18:21:16Z",
      "side": 1,
      "message": "Nit: Please amend this comment by clearly describing what the \"other means\" and where in the code it happens.",
      "range": {
        "startLine": 507,
        "startChar": 27,
        "endLine": 507,
        "endChar": 41
      },
      "revId": "37900f278c54e560d323e94a95adfd985d7f87c2",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c394eba4_61a4313c",
        "filename": "src/dawn_native/d3d12/CommandBufferD3D12.cpp",
        "patchSetId": 8
      },
      "lineNbr": 507,
      "author": {
        "id": 1000308
      },
      "writtenOn": "2019-08-08T20:21:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "23f139ec_9c931054",
      "range": {
        "startLine": 507,
        "startChar": 27,
        "endLine": 507,
        "endChar": 41
      },
      "revId": "37900f278c54e560d323e94a95adfd985d7f87c2",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "63943998_b3581e64",
        "filename": "src/dawn_native/d3d12/CommandBufferD3D12.cpp",
        "patchSetId": 8
      },
      "lineNbr": 890,
      "author": {
        "id": 1000262
      },
      "writtenOn": "2019-08-08T18:21:16Z",
      "side": 1,
      "message": "Nit: Based on the comments in Gerrit, I now understand (and agree with) the rationale as to why we\u0027re setting the texture as \"cleared\" instead of clearing it.  Please include a comment that describes the rationale.",
      "range": {
        "startLine": 883,
        "startChar": 0,
        "endLine": 890,
        "endChar": 0
      },
      "revId": "37900f278c54e560d323e94a95adfd985d7f87c2",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d8a9a544_8ee0cc39",
        "filename": "src/dawn_native/d3d12/CommandBufferD3D12.cpp",
        "patchSetId": 8
      },
      "lineNbr": 890,
      "author": {
        "id": 1000308
      },
      "writtenOn": "2019-08-08T20:21:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "63943998_b3581e64",
      "range": {
        "startLine": 883,
        "startChar": 0,
        "endLine": 890,
        "endChar": 0
      },
      "revId": "37900f278c54e560d323e94a95adfd985d7f87c2",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "28e38f2e_83cc43ee",
        "filename": "src/dawn_native/opengl/CommandBufferGL.cpp",
        "patchSetId": 8
      },
      "lineNbr": 366,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2019-08-07T21:45:10Z",
      "side": 1,
      "message": "I\u0027m sure I\u0027m missing something, but why are depth stencil textures always lazy cleared? shouldn\u0027t all non-attachment textures be lazy cleared (like on d3d12/vulkan)?\n\nIf this is wrong, would be ideal to have a test that catches it.",
      "range": {
        "startLine": 365,
        "startChar": 83,
        "endLine": 366,
        "endChar": 27
      },
      "revId": "37900f278c54e560d323e94a95adfd985d7f87c2",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e60fe579_d3e63303",
        "filename": "src/dawn_native/opengl/CommandBufferGL.cpp",
        "patchSetId": 8
      },
      "lineNbr": 366,
      "author": {
        "id": 1000308
      },
      "writtenOn": "2019-08-07T22:00:40Z",
      "side": 1,
      "message": "This was my bad. Depth stencil texture are lazy cleared during renderpass, but in GL we do not have that code path where the depth stencil attachments are initialized and lazy cleared which is why i added the count here.",
      "parentUuid": "28e38f2e_83cc43ee",
      "range": {
        "startLine": 365,
        "startChar": 83,
        "endLine": 366,
        "endChar": 27
      },
      "revId": "37900f278c54e560d323e94a95adfd985d7f87c2",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4757ce65_2f9fb0ee",
        "filename": "src/dawn_native/opengl/CommandBufferGL.cpp",
        "patchSetId": 8
      },
      "lineNbr": 366,
      "author": {
        "id": 1000308
      },
      "writtenOn": "2019-08-08T20:21:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e60fe579_d3e63303",
      "range": {
        "startLine": 365,
        "startChar": 83,
        "endLine": 366,
        "endChar": 27
      },
      "revId": "37900f278c54e560d323e94a95adfd985d7f87c2",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1b3ff873_fa35ab37",
        "filename": "src/tests/end2end/TextureZeroInitTests.cpp",
        "patchSetId": 8
      },
      "lineNbr": 124,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2019-08-07T21:45:10Z",
      "side": 1,
      "message": "So EXPECT_LAZY_CLEAR now counts explicit clears (not loadop clears)? Do we track loadop clears to make sure they\u0027re happening when needed?",
      "revId": "37900f278c54e560d323e94a95adfd985d7f87c2",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f988e3b4_9cd5f4ae",
        "filename": "src/tests/end2end/TextureZeroInitTests.cpp",
        "patchSetId": 8
      },
      "lineNbr": 124,
      "author": {
        "id": 1000308
      },
      "writtenOn": "2019-08-07T22:00:40Z",
      "side": 1,
      "message": "We don\u0027t, but we can if that\u0027s something we want to add?",
      "parentUuid": "1b3ff873_fa35ab37",
      "revId": "37900f278c54e560d323e94a95adfd985d7f87c2",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "27dc68c3_09f46920",
        "filename": "src/tests/end2end/TextureZeroInitTests.cpp",
        "patchSetId": 8
      },
      "lineNbr": 124,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2019-08-07T23:12:13Z",
      "side": 1,
      "message": "Should be after this patch, but maybe we should consider it.",
      "parentUuid": "f988e3b4_9cd5f4ae",
      "revId": "37900f278c54e560d323e94a95adfd985d7f87c2",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c4d18176_b4ffa9aa",
        "filename": "src/tests/end2end/TextureZeroInitTests.cpp",
        "patchSetId": 8
      },
      "lineNbr": 124,
      "author": {
        "id": 1000308
      },
      "writtenOn": "2019-08-08T20:21:47Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "27dc68c3_09f46920",
      "revId": "37900f278c54e560d323e94a95adfd985d7f87c2",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    }
  ]
}