{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "897dee7e_b6a6fb62",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-03-01T17:56:59Z",
      "side": 1,
      "message": "you can do a debug ASAN build with is_debug \u003d true and is_asan \u003d true in GN args.\n\nASAN says:\n```\n[ RUN      ] SubresourceStorageTest.IterateMaybeError\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n\u003d\u003d70382\u003d\u003dERROR: AddressSanitizer: heap-buffer-overflow on address 0x6020000115a0 at pc 0x000103757b14 bp 0x00016cf7e1b0 sp 0x00016cf7e1a8\nWRITE of size 4 at 0x6020000115a0 thread T0\n\n    #0 0x103757b10 in dawn::native::SubresourceStorageTest_IterateMaybeError_Test::TestBody()::$_0::operator()(dawn::native::SubresourceRange const\u0026, unsigned int*) const src/dawn/tests/unittests/SubresourceStorageTests.cpp:227:71\n    #1 0x103740eb8 in void dawn::native::SubresourceStorage\u003cunsigned int\u003e::Update\u003cdawn::native::SubresourceStorageTest_IterateMaybeError_Test::TestBody()::$_0\u003e(dawn::native::SubresourceRange const\u0026, dawn::native::SubresourceStorageTest_IterateMaybeError_Test::TestBody()::$_0\u0026\u0026) src/dawn/native/SubresourceStorage.h:290:17\n    #2 0x10373fe6c in dawn::native::SubresourceStorageTest_IterateMaybeError_Test::TestBody() src/dawn/tests/unittests/SubresourceStorageTests.cpp:226:11\n    #3 0x106bfe930 in void testing::internal::HandleSehExceptionsInMethodIfSupported\u003ctesting::Test, void\u003e(testing::Test*, void (testing::Test::*)(), char const*) third_party/googletest/googletest/src/gtest.cc:2620:10\n    #4 0x106b5e250 in void testing::internal::HandleExceptionsInMethodIfSupported\u003ctesting::Test, void\u003e(testing::Test*, void (testing::Test::*)(), char const*) third_party/googletest/googletest/src/gtest.cc:2675:12\n    #5 0x106b5df3c in testing::Test::Run() third_party/googletest/googletest/src/gtest.cc:2695:5\n    #6 0x106b5ffcc in testing::TestInfo::Run() third_party/googletest/googletest/src/gtest.cc:2844:11\n    #7 0x106b6248c in testing::TestSuite::Run() third_party/googletest/googletest/src/gtest.cc:3003:30\n    #8 0x106b7bfec in testing::internal::UnitTestImpl::RunAllTests() third_party/googletest/googletest/src/gtest.cc:5896:44\n    #9 0x106c00498 in bool testing::internal::HandleSehExceptionsInMethodIfSupported\u003ctesting::internal::UnitTestImpl, bool\u003e(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) third_party/googletest/googletest/src/gtest.cc:2620:10\n    #10 0x106b7b500 in bool testing::internal::HandleExceptionsInMethodIfSupported\u003ctesting::internal::UnitTestImpl, bool\u003e(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) third_party/googletest/googletest/src/gtest.cc:2675:12\n    #11 0x106b7b1b0 in testing::UnitTest::Run() third_party/googletest/googletest/src/gtest.cc:5461:10\n    #12 0x1045b572c in RUN_ALL_TESTS() third_party/googletest/googletest/include/gtest/gtest.h:2314:73\n    #13 0x1045b56a4 in main src/dawn/tests/UnittestsMain.cpp:22:12\n    #14 0x1a5cffe4c  (\u003cunknown module\u003e)\n    #15 0xad3e7ffffffffffc  (\u003cunknown module\u003e)\n\n0x6020000115a0 is located 0 bytes after 16-byte region [0x602000011590,0x6020000115a0)\nallocated by thread T0 here:\n    #0 0x1145a2200 in __sanitizer_finish_switch_fiber (/Users/enga/Code/chromium/src/third_party/dawn/out/Asan/libclang_rt.asan_osx_dynamic.dylib:arm64+0x5e200) (BuildId: 4c4c440c55553144a1f76fa6143b2e9e32000000200000000100000000000b00)\n    #1 0x103761b18 in std::Cr::__unique_if\u003cunsigned int []\u003e::__unique_array_unknown_bound std::Cr::make_unique[abi:v170000]\u003cunsigned int []\u003e(unsigned long) buildtools/third_party/libc++/trunk/include/__memory/unique_ptr.h:693:26\n    #2 0x103757f9c in dawn::native::SubresourceStorage\u003cunsigned int\u003e::DecompressAspect(unsigned int) src/dawn/native/SubresourceStorage.h:473:17\n    #3 0x103740aec in void dawn::native::SubresourceStorage\u003cunsigned int\u003e::Update\u003cdawn::native::SubresourceStorageTest_IterateMaybeError_Test::TestBody()::$_0\u003e(dawn::native::SubresourceRange const\u0026, dawn::native::SubresourceStorageTest_IterateMaybeError_Test::TestBody()::$_0\u0026\u0026) src/dawn/native/SubresourceStorage.h:270:13\n    #4 0x10373fe6c in dawn::native::SubresourceStorageTest_IterateMaybeError_Test::TestBody() src/dawn/tests/unittests/SubresourceStorageTests.cpp:226:11\n    #5 0x106bfe930 in void testing::internal::HandleSehExceptionsInMethodIfSupported\u003ctesting::Test, void\u003e(testing::Test*, void (testing::Test::*)(), char const*) third_party/googletest/googletest/src/gtest.cc:2620:10\n    #6 0x106b5e250 in void testing::internal::HandleExceptionsInMethodIfSupported\u003ctesting::Test, void\u003e(testing::Test*, void (testing::Test::*)(), char const*) third_party/googletest/googletest/src/gtest.cc:2675:12\n    #7 0x106b5df3c in testing::Test::Run() third_party/googletest/googletest/src/gtest.cc:2695:5\n    #8 0x106b5ffcc in testing::TestInfo::Run() third_party/googletest/googletest/src/gtest.cc:2844:11\n    #9 0x106b6248c in testing::TestSuite::Run() third_party/googletest/googletest/src/gtest.cc:3003:30\n    #10 0x106b7bfec in testing::internal::UnitTestImpl::RunAllTests() third_party/googletest/googletest/src/gtest.cc:5896:44\n    #11 0x106c00498 in bool testing::internal::HandleSehExceptionsInMethodIfSupported\u003ctesting::internal::UnitTestImpl, bool\u003e(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) third_party/googletest/googletest/src/gtest.cc:2620:10\n    #12 0x106b7b500 in bool testing::internal::HandleExceptionsInMethodIfSupported\u003ctesting::internal::UnitTestImpl, bool\u003e(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) third_party/googletest/googletest/src/gtest.cc:2675:12\n    #13 0x106b7b1b0 in testing::UnitTest::Run() third_party/googletest/googletest/src/gtest.cc:5461:10\n    #14 0x1045b572c in RUN_ALL_TESTS() third_party/googletest/googletest/include/gtest/gtest.h:2314:73\n    #15 0x1045b56a4 in main src/dawn/tests/UnittestsMain.cpp:22:12\n    #16 0x1a5cffe4c  (\u003cunknown module\u003e)\n    #17 0xad3e7ffffffffffc  (\u003cunknown module\u003e)\n\nSUMMARY: AddressSanitizer: heap-buffer-overflow src/dawn/tests/unittests/SubresourceStorageTests.cpp:227:71 in dawn::native::SubresourceStorageTest_IterateMaybeError_Test::TestBody()::$_0::operator()(dawn::native::SubresourceRange const\u0026, unsigned int*) const\n```",
      "revId": "876090cc4b2353879999541ceb8e55d3306bf307",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "861f25e5_105a0d69",
        "filename": "src/dawn/tests/unittests/SubresourceStorageTests.cpp",
        "patchSetId": 7
      },
      "lineNbr": 226,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-03-01T18:34:33Z",
      "side": 1,
      "message": "figured it out:\n\nthis is supposed to be 0. It\u0027s the index of the first mip level you want.\nKind of amazing the tests pass on so many of the bots\n\nI think we should add some ASSERTS to Update that checks that the range you pass to Update is actually a subset of the whole thing - could be a follow-up",
      "revId": "876090cc4b2353879999541ceb8e55d3306bf307",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4a91b4df_eee7ea7a",
        "filename": "src/dawn/tests/unittests/SubresourceStorageTests.cpp",
        "patchSetId": 7
      },
      "lineNbr": 226,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-03-01T18:35:16Z",
      "side": 1,
      "message": "Sorry, clarification\n\nthe mip level should be zero:\n`MakeSingle(Aspect::Color, layer, 0)`",
      "parentUuid": "861f25e5_105a0d69",
      "revId": "876090cc4b2353879999541ceb8e55d3306bf307",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}