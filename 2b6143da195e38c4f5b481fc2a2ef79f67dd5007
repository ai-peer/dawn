{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "69e30d16_edb1637e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2021-09-07T02:19:58Z",
      "side": 1,
      "message": "PTAL, thanks!",
      "revId": "2b6143da195e38c4f5b481fc2a2ef79f67dd5007",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f218e82e_9c9e026c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-09-07T09:31:29Z",
      "side": 1,
      "message": "LGTM",
      "revId": "2b6143da195e38c4f5b481fc2a2ef79f67dd5007",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "57485506_026a4c8c",
        "filename": "src/dawn_native/Device.h",
        "patchSetId": 3
      },
      "lineNbr": 357,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-09-07T09:31:29Z",
      "side": 1,
      "message": "nit: this isn\u0027t used outside of Device.cpp so it doesn\u0027t need to be in the header (same for the compute pipeline version?)",
      "revId": "2b6143da195e38c4f5b481fc2a2ef79f67dd5007",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "21921e8a_4b8e75b7",
        "filename": "src/dawn_native/RenderPipeline.cpp",
        "patchSetId": 3
      },
      "lineNbr": 394,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-09-07T09:31:29Z",
      "side": 1,
      "message": "Do you think there is an opportunity to use the flat descriptor inside RenderPipeline itself eventually? RenderPipeline needs to do something very similar.",
      "revId": "2b6143da195e38c4f5b481fc2a2ef79f67dd5007",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dbe47e02_21dc9939",
        "filename": "src/dawn_native/RenderPipeline.cpp",
        "patchSetId": 3
      },
      "lineNbr": 401,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-09-07T09:31:29Z",
      "side": 1,
      "message": "nit: this could be done inside [1]",
      "revId": "2b6143da195e38c4f5b481fc2a2ef79f67dd5007",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "69dccfed_53e6f45b",
        "filename": "src/dawn_native/RenderPipeline.cpp",
        "patchSetId": 3
      },
      "lineNbr": 428,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-09-07T09:31:29Z",
      "side": 1,
      "message": "It is is nullptr, does it correctly get set to nullptr in the flat descriptor?",
      "revId": "2b6143da195e38c4f5b481fc2a2ef79f67dd5007",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d79e1437_4e34c1a6",
        "filename": "src/dawn_native/RenderPipeline.cpp",
        "patchSetId": 3
      },
      "lineNbr": 435,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-09-07T09:31:29Z",
      "side": 1,
      "message": "[1]",
      "revId": "2b6143da195e38c4f5b481fc2a2ef79f67dd5007",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f93116a0_bb9beec5",
        "filename": "src/dawn_native/RenderPipeline.h",
        "patchSetId": 3
      },
      "lineNbr": 51,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-09-07T09:31:29Z",
      "side": 1,
      "message": "nit: ColorTargetState and BlendState go with mFragmentState",
      "range": {
        "startLine": 49,
        "startChar": 0,
        "endLine": 51,
        "endChar": 0
      },
      "revId": "2b6143da195e38c4f5b481fc2a2ef79f67dd5007",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5bf20310_17ef4d50",
        "filename": "src/tests/end2end/CreatePipelineAsyncTests.cpp",
        "patchSetId": 3
      },
      "lineNbr": 477,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-09-07T09:31:29Z",
      "side": 1,
      "message": "nit: we can take advantage of defaults and {x, y, z} for extents. Ditto below",
      "revId": "2b6143da195e38c4f5b481fc2a2ef79f67dd5007",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "277d6bfb_749859bc",
        "filename": "src/tests/end2end/CreatePipelineAsyncTests.cpp",
        "patchSetId": 3
      },
      "lineNbr": 514,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-09-07T09:31:29Z",
      "side": 1,
      "message": "u-u-u-nit: extra space but also a single fragment input can be advantageously be put as an argument in the function directly.",
      "range": {
        "startLine": 514,
        "startChar": 8,
        "endLine": 514,
        "endChar": 9
      },
      "revId": "2b6143da195e38c4f5b481fc2a2ef79f67dd5007",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}