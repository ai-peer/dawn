{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "cafa4611_7cd40281",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000024
      },
      "writtenOn": "2022-09-09T17:13:29Z",
      "side": 1,
      "message": "Ben: PTAL. Thanks!\n\nNote that the transform currently adds an internal attribute (\"PaddingAttribute\") to know which constuctor params are padding and need new arguments. This could also be handled by maintaining a datastructure in the transform, such as an unordered_set of params. Happy to do that if you prefer.\n\nAlso missing is a ShouldRun() call.",
      "revId": "eed1adb471c606e083545cb502071b3d3b328f2c",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3226302d_0befaf01",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2022-09-09T17:35:51Z",
      "side": 1,
      "message": "Looks good! Some questions / suggestions.",
      "revId": "eed1adb471c606e083545cb502071b3d3b328f2c",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "535593f2_4f2279a6",
        "filename": "src/tint/transform/pad_structs.cc",
        "patchSetId": 3
      },
      "lineNbr": 51,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2022-09-09T17:35:51Z",
      "side": 1,
      "message": "What\u0027s the purpose of this attribute? Nothing seems to use it?",
      "range": {
        "startLine": 30,
        "startChar": 0,
        "endLine": 51,
        "endChar": 0
      },
      "revId": "eed1adb471c606e083545cb502071b3d3b328f2c",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "37ea6ada_3f3ac14d",
        "filename": "src/tint/transform/pad_structs.cc",
        "patchSetId": 3
      },
      "lineNbr": 51,
      "author": {
        "id": 1000024
      },
      "writtenOn": "2022-09-12T14:53:02Z",
      "side": 1,
      "message": "It\u0027s used internally by the transform to know which members were padded, so the constructor modification can know where to add new params (see my comment #6ish above). Happy to change this to something else (e.g., an unordered_set of ast::StructMembers) if you prefer.",
      "parentUuid": "535593f2_4f2279a6",
      "range": {
        "startLine": 30,
        "startChar": 0,
        "endLine": 51,
        "endChar": 0
      },
      "revId": "eed1adb471c606e083545cb502071b3d3b328f2c",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "650f1136_813eaa16",
        "filename": "src/tint/transform/pad_structs.cc",
        "patchSetId": 3
      },
      "lineNbr": 113,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2022-09-09T17:35:51Z",
      "side": 1,
      "message": "I don\u0027t understand this. Please can you explain?",
      "range": {
        "startLine": 111,
        "startChar": 12,
        "endLine": 113,
        "endChar": 54
      },
      "revId": "eed1adb471c606e083545cb502071b3d3b328f2c",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e99a8658_70191533",
        "filename": "src/tint/transform/pad_structs.cc",
        "patchSetId": 3
      },
      "lineNbr": 113,
      "author": {
        "id": 1000024
      },
      "writtenOn": "2022-09-12T14:53:02Z",
      "side": 1,
      "message": "I actually found a better way to fix this. The issue is that structs nested in structs used as uniform blocks were not being padded out to std140 size (rounded up to 16 bytes). So the code would attempt to add padding in the top-level struct. This is actually fine, but the validator doesn\u0027t like it because it thinks the padding is violating uniform rules.\n\nAnyway the fix was to correctly add the rounded-up padding inside the nested struct.",
      "parentUuid": "650f1136_813eaa16",
      "range": {
        "startLine": 111,
        "startChar": 12,
        "endLine": 113,
        "endChar": 54
      },
      "revId": "eed1adb471c606e083545cb502071b3d3b328f2c",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1f3a5dd2_9cf0da1d",
        "filename": "src/tint/transform/pad_structs.cc",
        "patchSetId": 3
      },
      "lineNbr": 170,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2022-09-09T17:35:51Z",
      "side": 1,
      "message": "`tint::u32(0u)` -\u003e `0_u`\n\nRequires:\n`using namespace tint::number_suffixes;  // NOLINT`\nAt the top of the file.",
      "range": {
        "startLine": 170,
        "startChar": 44,
        "endLine": 170,
        "endChar": 57
      },
      "revId": "eed1adb471c606e083545cb502071b3d3b328f2c",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1a7ac102_7ec5ae11",
        "filename": "src/tint/transform/pad_structs.cc",
        "patchSetId": 3
      },
      "lineNbr": 170,
      "author": {
        "id": 1000024
      },
      "writtenOn": "2022-09-12T14:53:02Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1f3a5dd2_9cf0da1d",
      "range": {
        "startLine": 170,
        "startChar": 44,
        "endLine": 170,
        "endChar": 57
      },
      "revId": "eed1adb471c606e083545cb502071b3d3b328f2c",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7c94aae0_692668f2",
        "filename": "src/tint/transform/pad_structs_test.cc",
        "patchSetId": 3
      },
      "lineNbr": 562,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2022-09-09T17:35:51Z",
      "side": 1,
      "message": "Very minor, but I thought it would be nicer for readability to generate a constructor helper.\n\n```\nfn MakeS(a : f32, b : i32) -\u003e S {\n  return S(a, 0, b, 0);\n}\n```\n\nThen `s \u003d S(1.0f, 2);` just becomes `s \u003d MakeS(1.0f, 2);`\n\nGenerating a helper like this would have reduced complexity if you were to implement this in the writer directly, but a separate transform like this is also fine.",
      "range": {
        "startLine": 562,
        "startChar": 6,
        "endLine": 562,
        "endChar": 25
      },
      "revId": "eed1adb471c606e083545cb502071b3d3b328f2c",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8e324ec4_b79ee024",
        "filename": "src/tint/transform/pad_structs_test.cc",
        "patchSetId": 3
      },
      "lineNbr": 562,
      "author": {
        "id": 1000024
      },
      "writtenOn": "2022-09-12T14:53:02Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "7c94aae0_692668f2",
      "range": {
        "startLine": 562,
        "startChar": 6,
        "endLine": 562,
        "endChar": 25
      },
      "revId": "eed1adb471c606e083545cb502071b3d3b328f2c",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fa28c14c_013d6614",
        "filename": "src/tint/writer/glsl/generator_impl_storage_buffer_test.cc",
        "patchSetId": 3
      },
      "lineNbr": 85,
      "author": {
        "id": 1000024
      },
      "writtenOn": "2022-09-09T17:15:51Z",
      "side": 1,
      "message": "Note that these tests could probably be removed, since the functionality is no longer handled in the writer, and no longer differs between ES and Desktop (and there are transform tests which cover it).",
      "revId": "eed1adb471c606e083545cb502071b3d3b328f2c",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}