{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "ed701359_4d369019",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2024-02-02T20:59:16Z",
      "side": 1,
      "message": "PTAL.",
      "revId": "c4c9ed8e3d4e6865333f14b60e4515a6f42dd24d",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "01ba65fd_f2d1c1b0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2024-02-05T10:24:39Z",
      "side": 1,
      "message": "LGTM!",
      "revId": "c4c9ed8e3d4e6865333f14b60e4515a6f42dd24d",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6daf2fa1_46972d8f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2024-02-05T10:33:20Z",
      "side": 1,
      "message": "As discussed, it would be great if we could keep the full float value printed if its value can be represented as a finite `f32`. We\u0027ve had a bunch of people complain about `X cannot be represented as f32`, and actually printing the true value is useful in showing that the number exceeds the representable range.",
      "revId": "c4c9ed8e3d4e6865333f14b60e4515a6f42dd24d",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5cdba81f_b7f1e481",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2024-02-05T13:44:20Z",
      "side": 1,
      "message": "Thinking about this some more, I don\u0027t know how useful it would be to show the actual number. I\u0027d have no idea what the representable range of a f32 is without going to look it up.\n\nIt seems like the better solution would be to change `X cannot be represented as f32` to a more informative error like `The value X is larger then the maximum value that can be stored in a f32` (or minimum depending on which direction it\u0027s going.",
      "parentUuid": "6daf2fa1_46972d8f",
      "revId": "c4c9ed8e3d4e6865333f14b60e4515a6f42dd24d",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f5d9c6ef_6369e83c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2024-02-05T14:33:37Z",
      "side": 1,
      "message": "\u003e Thinking about this some more, I don\u0027t know how useful it would be to show the actual number. I\u0027d have no idea what the representable range of a f32 is without going to look it up.\n\nSure - but its still useful to know what the computed value is, especially if the value comes from a complex `const` expression.\n\nAdditional information in the error is a good idea, but I don\u0027t consider it a replacement for showing the exact value.",
      "parentUuid": "5cdba81f_b7f1e481",
      "revId": "c4c9ed8e3d4e6865333f14b60e4515a6f42dd24d",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0e0c71c9_51977181",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2024-02-05T15:07:27Z",
      "side": 1,
      "message": "Except you don\u0027t see the computed values, you see the input. It\u0027s \u0027123 + 345` not `468` that you see. So, you don\u0027t necessarily see the overflowing values in many cases.",
      "parentUuid": "f5d9c6ef_6369e83c",
      "revId": "c4c9ed8e3d4e6865333f14b60e4515a6f42dd24d",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Code-Review=MAX,user=non_uploader","label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "c4c9ed8e3d4e6865333f14b60e4515a6f42dd24d",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Kokoro",
        "description": {
          "value": "A maximum vote is required for the Kokoro label. A minimum vote is blocking."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Kokoro\u003dMAX AND -label:Kokoro\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "uploader:dawn-autoroll@skia-public.iam.gserviceaccount.com OR uploader:chrome-automated-expectation@chops-service-accounts.iam.gserviceaccount.com OR uploader:chrome-branch-day@chops-service-accounts.iam.gserviceaccount.com"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Kokoro=MAX AND -label:Kokoro=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":["label:Kokoro=MIN"],"failingAtoms":["label:Kokoro=MAX"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"uploader:dawn-autoroll@skia-public.iam.gserviceaccount.com OR uploader:chrome-automated-expectation@chops-service-accounts.iam.gserviceaccount.com OR uploader:chrome-branch-day@chops-service-accounts.iam.gserviceaccount.com"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["uploader:dawn-autoroll@skia-public.iam.gserviceaccount.com","uploader:chrome-automated-expectation@chops-service-accounts.iam.gserviceaccount.com","uploader:chrome-branch-day@chops-service-accounts.iam.gserviceaccount.com"]}
      },
      "patchSetCommitId": "c4c9ed8e3d4e6865333f14b60e4515a6f42dd24d",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforced_gerrit"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "c4c9ed8e3d4e6865333f14b60e4515a6f42dd24d",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}