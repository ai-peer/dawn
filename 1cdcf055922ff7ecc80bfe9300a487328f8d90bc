{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "6f88b7c2_60d7b77f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-05-15T08:46:15Z",
      "side": 1,
      "message": "BTW Jie you can mark comments that have been handled as \"Done\" to help track which comment threads are still open.",
      "revId": "1cdcf055922ff7ecc80bfe9300a487328f8d90bc",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d7cf3771_f23a8cf8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2023-05-15T11:08:41Z",
      "side": 1,
      "message": "Sorry about that, done!",
      "parentUuid": "6f88b7c2_60d7b77f",
      "revId": "1cdcf055922ff7ecc80bfe9300a487328f8d90bc",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1acb6289_85a4c708",
        "filename": "src/dawn/native/d3d11/BindGroupTrackerD3D11.cpp",
        "patchSetId": 8
      },
      "lineNbr": 341,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-05-15T12:45:10Z",
      "side": 1,
      "message": "Instead of checking in every single branch if we are in a render or compute pass, we could store the `mVisibleStages` in the constructor (FS | VS or CS), then do:\n\n```\nwgpu::ShaderStage bindingVisibility \u003d mVisibleStages \u0026 bindingInfo.visiblity;\n```\n\nThen change all the uses of `bindingInfo.visibility` to `bindingVisibility`. This helps reduce the amount of code and (marginally) the amount of branches in this hot path.",
      "revId": "1cdcf055922ff7ecc80bfe9300a487328f8d90bc",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "115ca1f2_b36431ea",
        "filename": "src/dawn/native/d3d11/BindGroupTrackerD3D11.cpp",
        "patchSetId": 8
      },
      "lineNbr": 341,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2023-05-16T12:29:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1acb6289_85a4c708",
      "revId": "1cdcf055922ff7ecc80bfe9300a487328f8d90bc",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ae608df0_3adb6d17",
        "filename": "src/dawn/native/d3d11/BindGroupTrackerD3D11.h",
        "patchSetId": 8
      },
      "lineNbr": 29,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2023-05-15T11:29:56Z",
      "side": 1,
      "message": "I think it can be true for d3d11 backend, since bindings in device context will be preserved for the next draw or dispatch. However we can do it in a separate CL.",
      "range": {
        "startLine": 29,
        "startChar": 78,
        "endLine": 29,
        "endChar": 83
      },
      "revId": "1cdcf055922ff7ecc80bfe9300a487328f8d90bc",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ee4b590b_e25d98e4",
        "filename": "src/dawn/native/d3d11/BindGroupTrackerD3D11.h",
        "patchSetId": 8
      },
      "lineNbr": 29,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2023-05-15T12:29:30Z",
      "side": 1,
      "message": "Sounds good.",
      "parentUuid": "ae608df0_3adb6d17",
      "range": {
        "startLine": 29,
        "startChar": 78,
        "endLine": 29,
        "endChar": 83
      },
      "revId": "1cdcf055922ff7ecc80bfe9300a487328f8d90bc",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0cbf824d_233e07b0",
        "filename": "src/dawn/native/d3d11/BindGroupTrackerD3D11.h",
        "patchSetId": 8
      },
      "lineNbr": 31,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2023-05-15T11:29:56Z",
      "side": 1,
      "message": "nit: remove it as there are two args.",
      "range": {
        "startLine": 31,
        "startChar": 4,
        "endLine": 31,
        "endChar": 12
      },
      "revId": "1cdcf055922ff7ecc80bfe9300a487328f8d90bc",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a2807cde_ce176952",
        "filename": "src/dawn/native/d3d11/BindGroupTrackerD3D11.h",
        "patchSetId": 8
      },
      "lineNbr": 31,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2023-05-15T12:29:30Z",
      "side": 1,
      "message": "Nice catch.",
      "parentUuid": "0cbf824d_233e07b0",
      "range": {
        "startLine": 31,
        "startChar": 4,
        "endLine": 31,
        "endChar": 12
      },
      "revId": "1cdcf055922ff7ecc80bfe9300a487328f8d90bc",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}