{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "0290fca9_544f31b9",
        "filename": "tools/src/cts/query/query.go",
        "patchSetId": 4
      },
      "lineNbr": 32,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2022-03-31T18:50:30Z",
      "side": 1,
      "message": "in the typescript implementation, all queries must end in wildcards unless they identify a specific test. So these would be invalid:\n\n suite\n suite:file\n suite:file,file\n suite:file,file:test\n\nand these would be valid:\n\n suite:file,file:test,test:case\n suite:file,file:test,test:case;case\n\nThat is, there are 4 types of queries:\n- multi-file: `s:*` `s:f,f,*`\n- multi-test: `s:f,f:*` `s:f:t,t,*`\n- multi-case: `s:f,f:t,t:*` `s:f,f:t,t:c;c;*`\n- single-case: `s:f,f:t,t:` `s:f,f:t,t:c;c`\n\nhttps://github.com/gpuweb/cts/blob/main/src/common/internal/query/query.ts",
      "revId": "da2e438f9b247a780bf8bbf9260f2c33884d4a16",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "547ddc25_e4fb48cc",
        "filename": "tools/src/cts/query/query.go",
        "patchSetId": 4
      },
      "lineNbr": 32,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2022-03-31T19:09:25Z",
      "side": 1,
      "message": "Ack. I use the this structure for constructing a tree to collapse, and I use the nodes you mention as being invalid, as intermediate queries. While I could limit the parser to just your valid list, it seems a bit wonky to have nodes that can\u0027t be textually represented.\n\nI\u0027m expecting that code that emits queries for CTS purposes will append wildcards as appropriate.",
      "parentUuid": "0290fca9_544f31b9",
      "revId": "da2e438f9b247a780bf8bbf9260f2c33884d4a16",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1533a359_0ea6499f",
        "filename": "tools/src/cts/query/query.go",
        "patchSetId": 4
      },
      "lineNbr": 32,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2022-03-31T19:23:00Z",
      "side": 1,
      "message": "got it, that makes sense. The typescript implementation represents nodes in wildcard form, and context dictates whether that means the node itself, or the entire subtree.",
      "parentUuid": "547ddc25_e4fb48cc",
      "revId": "da2e438f9b247a780bf8bbf9260f2c33884d4a16",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "99dd823f_b3bc2b41",
        "filename": "tools/src/cts/query/query.go",
        "patchSetId": 4
      },
      "lineNbr": 171,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2022-03-31T18:50:30Z",
      "side": 1,
      "message": "nit: Pretty sure this should never happen and could panic()",
      "revId": "da2e438f9b247a780bf8bbf9260f2c33884d4a16",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ca6e90c7_fd99377e",
        "filename": "tools/src/cts/query/query.go",
        "patchSetId": 4
      },
      "lineNbr": 171,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2022-03-31T19:09:25Z",
      "side": 1,
      "message": "Ack. I also don\u0027t think it should happen, but this seemed like a better option than either dropping stuff on the floor, or panicing in code that I hope will run as a service.",
      "parentUuid": "99dd823f_b3bc2b41",
      "revId": "da2e438f9b247a780bf8bbf9260f2c33884d4a16",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a5ac1628_2c36021a",
        "filename": "tools/src/cts/query/query.go",
        "patchSetId": 4
      },
      "lineNbr": 171,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2022-03-31T19:23:00Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "ca6e90c7_fd99377e",
      "revId": "da2e438f9b247a780bf8bbf9260f2c33884d4a16",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}