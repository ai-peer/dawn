{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "5bd7385c_2bd18a04",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-06-29T17:52:24Z",
      "side": 1,
      "message": "LGTM though I imagine you may also want more than just validation tests - like that creating and wrapping the image actually can be rendered to/used on the gpu.\n\notherwise we risk breaking actual usage on the GPU",
      "revId": "1eb5d95bdd94d45e30c00db54d361b13057ef157",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "438bc1da_ee100412",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2023-06-29T19:01:38Z",
      "side": 1,
      "message": "Except small part validation code is different, importing NT handle and D3D11Texture share the same code. In theory D3DSharedHandleUsageTests should cover reset of the code. I checked D3DSharedHandleUsageTests, and didn\u0027t find a good way to share those tests for External Image D3D11Texture.",
      "parentUuid": "5bd7385c_2bd18a04",
      "revId": "1eb5d95bdd94d45e30c00db54d361b13057ef157",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b5e5cd90_4763d97a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 1002701
      },
      "writtenOn": "2023-06-29T19:10:49Z",
      "side": 1,
      "message": "Might be unnecessary, but you can parameterize the tests. For example, we used to have both keyed mutex and fence synchronization tests - see the before version here: https://dawn-review.googlesource.com/c/dawn/+/129300/13/src/dawn/tests/end2end/D3D12ResourceWrappingTests.cpp",
      "parentUuid": "438bc1da_ee100412",
      "revId": "1eb5d95bdd94d45e30c00db54d361b13057ef157",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f8ecd333_d5b1100b",
        "filename": "src/dawn/native/d3d11/DeviceD3D11.cpp",
        "patchSetId": 10
      },
      "lineNbr": 420,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-06-29T17:52:24Z",
      "side": 1,
      "message": "nit: you could `switch` on the type, handle each one, and put DAWN_INVALID_IF in the `default:` case",
      "revId": "1eb5d95bdd94d45e30c00db54d361b13057ef157",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c2ade4fe_241fadba",
        "filename": "src/dawn/native/d3d11/DeviceD3D11.cpp",
        "patchSetId": 10
      },
      "lineNbr": 420,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2023-06-29T19:01:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f8ecd333_d5b1100b",
      "revId": "1eb5d95bdd94d45e30c00db54d361b13057ef157",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}