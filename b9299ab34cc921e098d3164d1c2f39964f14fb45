{
  "comments": [
    {
      "key": {
        "uuid": "849dba7c_50bff628",
        "filename": "src/dawn_native/d3d12/TextureD3D12.cpp",
        "patchSetId": 5
      },
      "lineNbr": 271,
      "author": {
        "id": 1000262
      },
      "writtenOn": "2019-07-03T23:48:20Z",
      "side": 1,
      "message": "I\u0027m still not entirely clear what mValidToDecay flag is needed or used for. The comment right above this if statement talks about the serial number but not the flag. Please beef up the comments here in that regard.  \n\nInstead of having a flag, is it possible to compute the same thing by using mLastState?",
      "range": {
        "startLine": 271,
        "startChar": 12,
        "endLine": 271,
        "endChar": 25
      },
      "revId": "b9299ab34cc921e098d3164d1c2f39964f14fb45",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bb282045_ce70424e",
        "filename": "src/dawn_native/d3d12/TextureD3D12.cpp",
        "patchSetId": 5
      },
      "lineNbr": 271,
      "author": {
        "id": 1000248
      },
      "writtenOn": "2019-07-04T00:17:21Z",
      "side": 1,
      "message": "I\u0027ll improve the comments.\n\nStill, mValidToDecay is necessary. Again from MSDN:\n\"The following resources will decay when an ExecuteCommandLists operation is completed on the GPU: ... Any resource implicitly promoted to a read-only state.\"\n\nNow consider two cases:\n1) A texture explicitly transitions from a write state to a read-only state.\n2) A texture is implicitly promoted from COMMON to a read-only state.\n\nIn both cases, mLastState will be a read-only state - but only case #2 strictly meets the requirement for an implicit decay as stated above. We must use the flag to differentiate these scenarios.",
      "parentUuid": "849dba7c_50bff628",
      "range": {
        "startLine": 271,
        "startChar": 12,
        "endLine": 271,
        "endChar": 25
      },
      "revId": "b9299ab34cc921e098d3164d1c2f39964f14fb45",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    }
  ]
}