{
  "comments": [
    {
      "key": {
        "uuid": "d5d608e4_9d31bd42",
        "filename": "src/common/Constants.h",
        "patchSetId": 5
      },
      "lineNbr": 25,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2019-02-21T23:25:57Z",
      "side": 1,
      "message": "Is this really meaningfully different from kMaxVertexInputStride? Will it always match? If you remove it (or rephrase it as kMaxVertexAttributeEnd \u003d 2048u), it allows some cleanup below [1].",
      "range": {
        "startLine": 25,
        "startChar": 26,
        "endLine": 25,
        "endChar": 59
      },
      "revId": "d54c113483741b1ffe20ec5537764dd057c35cd9",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "58d2c65a_5def2926",
        "filename": "src/common/Constants.h",
        "patchSetId": 5
      },
      "lineNbr": 25,
      "author": {
        "id": 1000017
      },
      "writtenOn": "2019-02-22T09:51:12Z",
      "side": 1,
      "message": "True, I think maxVertexAttributeOffset depends on maxVertexInputStride. But Vulkan has separated variables for this. So I\u0027d like to use maxVertexAttributeEnd as you suggested, with a comment to describe the situation.",
      "parentUuid": "d5d608e4_9d31bd42",
      "range": {
        "startLine": 25,
        "startChar": 26,
        "endLine": 25,
        "endChar": 59
      },
      "revId": "d54c113483741b1ffe20ec5537764dd057c35cd9",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "912171af_bd02fdac",
        "filename": "src/dawn_native/InputState.cpp",
        "patchSetId": 5
      },
      "lineNbr": 76,
      "author": {
        "id": 1000017
      },
      "writtenOn": "2019-02-21T15:48:45Z",
      "side": 1,
      "message": "Add one more vertex format for testing. But Shaobo or I will work on the vertex format later, in order to match web idl.",
      "range": {
        "startLine": 76,
        "startChar": 0,
        "endLine": 76,
        "endChar": 45
      },
      "revId": "d54c113483741b1ffe20ec5537764dd057c35cd9",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "497a62f2_309f6ba9",
        "filename": "src/dawn_native/InputState.cpp",
        "patchSetId": 5
      },
      "lineNbr": 76,
      "author": {
        "id": 1000017
      },
      "writtenOn": "2019-02-22T09:51:12Z",
      "side": 1,
      "message": "Removed this one. It is not a must.",
      "parentUuid": "912171af_bd02fdac",
      "range": {
        "startLine": 76,
        "startChar": 0,
        "endLine": 76,
        "endChar": 45
      },
      "revId": "d54c113483741b1ffe20ec5537764dd057c35cd9",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "16a0f034_a1f091c5",
        "filename": "src/dawn_native/InputState.cpp",
        "patchSetId": 5
      },
      "lineNbr": 140,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2019-02-21T23:25:57Z",
      "side": 1,
      "message": "[1] This would become:\n\n  if (attribute-\u003eoffset \u003e\u003d kMaxVertexAttributeEnd) {",
      "range": {
        "startLine": 140,
        "startChar": 32,
        "endLine": 140,
        "endChar": 57
      },
      "revId": "d54c113483741b1ffe20ec5537764dd057c35cd9",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f3c90278_93024d57",
        "filename": "src/dawn_native/InputState.cpp",
        "patchSetId": 5
      },
      "lineNbr": 140,
      "author": {
        "id": 1000017
      },
      "writtenOn": "2019-02-22T09:51:12Z",
      "side": 1,
      "message": "This is not necessary because the following one will cover this",
      "parentUuid": "16a0f034_a1f091c5",
      "range": {
        "startLine": 140,
        "startChar": 32,
        "endLine": 140,
        "endChar": 57
      },
      "revId": "d54c113483741b1ffe20ec5537764dd057c35cd9",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "93589aaa_b7b13b28",
        "filename": "src/dawn_native/InputState.cpp",
        "patchSetId": 5
      },
      "lineNbr": 144,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2019-02-21T17:17:27Z",
      "side": 1,
      "message": "nit: use \u003c\u003d instead?",
      "range": {
        "startLine": 144,
        "startChar": 37,
        "endLine": 144,
        "endChar": 41
      },
      "revId": "d54c113483741b1ffe20ec5537764dd057c35cd9",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6519371a_5f32e369",
        "filename": "src/dawn_native/InputState.cpp",
        "patchSetId": 5
      },
      "lineNbr": 144,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2019-02-21T23:25:57Z",
      "side": 1,
      "message": "I don\u0027t think that would be right; wouldn\u0027t that be off-by-two?\n\n[1] If you replace kMaxVertexAttributeOffset \u003d 2047 with kMaxVertexAttributeEnd \u003d 2048, this cleans up:\n\n  // Addition is okay: offset \u003c ~2048; VertexFormatSize \u003c\u003d ~16\n  if (attribute-\u003eoffset + VertexFormatSize(attribute-\u003eformat) \u003e kMaxVertexAttributeEnd) {",
      "parentUuid": "93589aaa_b7b13b28",
      "range": {
        "startLine": 144,
        "startChar": 37,
        "endLine": 144,
        "endChar": 41
      },
      "revId": "d54c113483741b1ffe20ec5537764dd057c35cd9",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2d9f8e03_6e575495",
        "filename": "src/dawn_native/InputState.cpp",
        "patchSetId": 5
      },
      "lineNbr": 144,
      "author": {
        "id": 1000017
      },
      "writtenOn": "2019-02-22T09:51:12Z",
      "side": 1,
      "message": "Kai, you gave a good suggestions, it is easier to understand.\nCorentin, we need to use \"\u003c\" here, not \"\u003c\u003d\", because \"\u003d\" is a valid situation, we should not generate error for that.",
      "parentUuid": "6519371a_5f32e369",
      "range": {
        "startLine": 144,
        "startChar": 37,
        "endLine": 144,
        "endChar": 41
      },
      "revId": "d54c113483741b1ffe20ec5537764dd057c35cd9",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "838ac765_cfb36023",
        "filename": "src/dawn_native/InputState.cpp",
        "patchSetId": 5
      },
      "lineNbr": 156,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2019-02-21T23:25:57Z",
      "side": 1,
      "message": "Should now just be:\n\n  mAttributeInfos[attribute-\u003eshaderLocation] \u003d *attribute;",
      "range": {
        "startLine": 155,
        "startChar": 8,
        "endLine": 156,
        "endChar": 26
      },
      "revId": "d54c113483741b1ffe20ec5537764dd057c35cd9",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2476f78c_5719a4e2",
        "filename": "src/dawn_native/InputState.cpp",
        "patchSetId": 5
      },
      "lineNbr": 156,
      "author": {
        "id": 1000017
      },
      "writtenOn": "2019-02-22T09:51:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "838ac765_cfb36023",
      "range": {
        "startLine": 155,
        "startChar": 8,
        "endLine": 156,
        "endChar": 26
      },
      "revId": "d54c113483741b1ffe20ec5537764dd057c35cd9",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2bffac34_6ac3bb38",
        "filename": "src/dawn_native/InputState.cpp",
        "patchSetId": 5
      },
      "lineNbr": 175,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2019-02-21T23:25:57Z",
      "side": 1,
      "message": "Same:\n\n  mInputInfos[input-\u003einputSlot] \u003d *input;",
      "revId": "d54c113483741b1ffe20ec5537764dd057c35cd9",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "330d6e42_d84e0829",
        "filename": "src/dawn_native/InputState.cpp",
        "patchSetId": 5
      },
      "lineNbr": 175,
      "author": {
        "id": 1000017
      },
      "writtenOn": "2019-02-22T09:51:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2bffac34_6ac3bb38",
      "revId": "d54c113483741b1ffe20ec5537764dd057c35cd9",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d3203114_83a5ea68",
        "filename": "src/tests/unittests/validation/InputStateValidationTests.cpp",
        "patchSetId": 5
      },
      "lineNbr": 229,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2019-02-21T23:25:57Z",
      "side": 1,
      "message": "This is set twice, first one is redundant.\n\nYou should test with offset \u003d kMaxVertexAttributeOffset (or whatever it\u0027s renamed to), though.",
      "range": {
        "startLine": 228,
        "startChar": 0,
        "endLine": 229,
        "endChar": 25
      },
      "revId": "d54c113483741b1ffe20ec5537764dd057c35cd9",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0cc1e9d3_16cbc1ab",
        "filename": "src/tests/unittests/validation/InputStateValidationTests.cpp",
        "patchSetId": 5
      },
      "lineNbr": 229,
      "author": {
        "id": 1000017
      },
      "writtenOn": "2019-02-22T09:51:12Z",
      "side": 1,
      "message": "My mistake here. I must be sleepy last night and didn\u0027t carefully reviewed the code.\n\nOut-of-bounds situation will be covered by overflow, so I removed this test. \n\nWell, keeping the code snippet in unittest to cover tests for maxVertexAttributeEnd and maxVertexAttributeEnd -1 is not bad. Unfortunately, the vertex format \"R8 and UnormR8\" can be only supported in MACOS 10.13+. But it seems to me that the Mac in bots is lower that 10.13, so I cann\u0027t support this format and lead to bots fail.",
      "parentUuid": "d3203114_83a5ea68",
      "range": {
        "startLine": 228,
        "startChar": 0,
        "endLine": 229,
        "endChar": 25
      },
      "revId": "d54c113483741b1ffe20ec5537764dd057c35cd9",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f2cb919e_f5a288d5",
        "filename": "src/tests/unittests/validation/InputStateValidationTests.cpp",
        "patchSetId": 5
      },
      "lineNbr": 251,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2019-02-21T23:25:57Z",
      "side": 1,
      "message": "Same",
      "range": {
        "startLine": 250,
        "startChar": 0,
        "endLine": 251,
        "endChar": 92
      },
      "revId": "d54c113483741b1ffe20ec5537764dd057c35cd9",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fcbda08b_b815c206",
        "filename": "src/tests/unittests/validation/InputStateValidationTests.cpp",
        "patchSetId": 5
      },
      "lineNbr": 251,
      "author": {
        "id": 1000017
      },
      "writtenOn": "2019-02-22T09:51:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f2cb919e_f5a288d5",
      "range": {
        "startLine": 250,
        "startChar": 0,
        "endLine": 251,
        "endChar": 92
      },
      "revId": "d54c113483741b1ffe20ec5537764dd057c35cd9",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    }
  ]
}