{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "1f2a1200_65989874",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2023-01-30T10:04:32Z",
      "side": 1,
      "message": "Hi Corentin and Austin,\n\nOn linux-dawn-rel bot vkGetPhysicalDeviceImageFormatProperties() will return VK_ERROR_FORMAT_NOT_SUPPORTED when format is VK_FORMAT_B8G8R8A8_UNORM and usage contains VK_IMAGE_USAGE_STORAGE_BIT (UNREACHABLE() is got at [1]) which means we cannot create a vkimage with VK_FORMAT_B8G8R8A8_UNORM and usage VK_IMAGE_USAGE_STORAGE_BIT, so I think in WebGPU SPEC we still have to make \"BGRA8Unorm-storage\" as an optional extension.\n\nSorry that I failed to realize it until I tested this CL.\n\n[1] https://source.chromium.org/chromium/chromium/src/+/main:third_party/dawn/src/dawn/native/vulkan/TextureVk.cpp;l\u003d616",
      "revId": "b0a54bef139c52d29e9a028cb2c143f19a154181",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ad4f4d86_96a94dbb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2023-01-31T00:47:55Z",
      "side": 1,
      "message": "Hi Corentin and Austin,\n\nOn linux-dawn-rel bot vkGetPhysicalDeviceImageFormatProperties() will return VK_ERROR_FORMAT_NOT_SUPPORTED when format is VK_FORMAT_B8G8R8A8_UNORM and usage contains VK_IMAGE_USAGE_STORAGE_BIT (UNREACHABLE() is got at [1]) which means we cannot create a vkimage with VK_FORMAT_B8G8R8A8_UNORM and usage VK_IMAGE_USAGE_STORAGE_BIT. I\u0027ve also reproduced it on another HD630 (device ID 0x591B, Kaby Lake GT2) with Mesa 19.0.2, so it seems old Intel Mesa driver doesn\u0027t support creating a VkImage with BGRA8Unorm format.\n\nI think in WebGPU SPEC we still have to make \"BGRA8Unorm-storage\" as an optional extension, which can only be enabled on the platforms that support creating an BGRA8Unorm texture with STORAGE usage.\n\nI feel really sorry that I failed to realize it until I tested this CL.\n\n[1] https://source.chromium.org/chromium/chromium/src/+/main:third_party/dawn/src/dawn/native/vulkan/TextureVk.cpp;l\u003d616",
      "revId": "b0a54bef139c52d29e9a028cb2c143f19a154181",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3f38cda3_da80d5ff",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-01-31T10:13:44Z",
      "side": 1,
      "message": "LGTM, though I\u0027m not sure where the failure on Linux Intel is coming from.",
      "revId": "b0a54bef139c52d29e9a028cb2c143f19a154181",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a9848d3e_188454eb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2023-02-01T00:46:49Z",
      "side": 1,
      "message": "Hi Corentin,\n\nI see in Vulkan SPEC (https://registry.khronos.org/vulkan/specs/1.3-extensions/html/vkspec.html#capabilities-image):\n\"If format is not a supported image format, or if the combination of format, type, tiling, usage, and flags is not supported for images, then vkGetPhysicalDeviceImageFormatProperties returns VK_ERROR_FORMAT_NOT_SUPPORTED.\"\n\n\nSo it is legal for old Intel Mesa to say BGRA8Unorm with STORAGE usage is not supported. Given that I think we cannot say we can create a BGRA8Unorm texture with STORAGE usage on all WebGPU platforms, then we cannot put the support of STORAGE usage of BGRA8Unorm textures in the core WebGPU SPEC.\n\nWhat do you think?",
      "parentUuid": "3f38cda3_da80d5ff",
      "revId": "b0a54bef139c52d29e9a028cb2c143f19a154181",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "229a07c4_5facd299",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-02-01T03:48:07Z",
      "side": 1,
      "message": "Yes, that sounds right to me. I don\u0027t think Kai ran a query about how many devices we lose by requiring this in core WebGPU, but it seems like it will be many given that our test bots don\u0027t even support it.",
      "parentUuid": "a9848d3e_188454eb",
      "revId": "b0a54bef139c52d29e9a028cb2c143f19a154181",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "029fdbbf_4a34a733",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-02-01T06:38:49Z",
      "side": 1,
      "message": "http://vulkan.gpuinfo.org/listoptimaltilingformats.php shows brga8unorm storage is only 55.8%",
      "parentUuid": "229a07c4_5facd299",
      "revId": "b0a54bef139c52d29e9a028cb2c143f19a154181",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d3cffb89_addc5648",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-02-01T11:23:33Z",
      "side": 1,
      "message": "Damn, so maybe it can\u0027t be in core after all? The other solution I was exploring was to always fake BGRA8Unorm with a swizzled RGBA8Unorm but that won\u0027t work for imported SharedImages so that\u0027s a bummer as well. Can you post these findings on the gpuweb issue tracker?",
      "parentUuid": "029fdbbf_4a34a733",
      "revId": "b0a54bef139c52d29e9a028cb2c143f19a154181",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "908f50bc_a49446b9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2023-02-01T23:54:26Z",
      "side": 1,
      "message": "I think we got a bit confused about the complex series of things needed in Vulkan. I did actually do a query for storage support on BGRA but I didn\u0027t understand what that meant since we ended up concluding that Vulkan didn\u0027t allow storage on BGRA views at all:\nhttps://github.com/gpuweb/gpuweb/pull/3640#issuecomment-1339947738\n\nI thought we had a workaround that didn\u0027t require BGRA storage but I must have totally forgotten about storage _usages_, which the underlying (BGRA) texture would still need regardless of the view being RGBA.",
      "parentUuid": "d3cffb89_addc5648",
      "revId": "b0a54bef139c52d29e9a028cb2c143f19a154181",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7e5195dd_bb96f591",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2023-02-02T01:53:09Z",
      "side": 1,
      "message": "I\u0027ve filed gpuweb issue https://github.com/gpuweb/gpuweb/issues/3799. PTAL, thanks!\n\nI think we will also meet problems on buffer-texture copies when faking BGRA8Unorm with RGBA8Unorm so I don\u0027t like this idea.",
      "parentUuid": "908f50bc_a49446b9",
      "revId": "b0a54bef139c52d29e9a028cb2c143f19a154181",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}