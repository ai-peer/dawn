{
  "comments": [
    {
      "key": {
        "uuid": "d98317b7_2d6b8e35",
        "filename": "src/dawn_native/d3d12/TextureD3D12.cpp",
        "patchSetId": 18
      },
      "lineNbr": 664,
      "author": {
        "id": 1000262
      },
      "writtenOn": "2020-06-03T22:58:17Z",
      "side": 0,
      "message": "I anticipate transitions for all of the subresources at once to be more common than transitioning ones with different states. With your new code, we now submit a barrier for each and every subresource instead of submitting one barrier for all of them at once.\n\nWhat is the performance impact of this change on a site like ForestDemo? If we see a regression, we should keep D3D12_RESOURCE_BARRIER_ALL_SUBRESOURCES as a special case.",
      "range": {
        "startLine": 664,
        "startChar": 42,
        "endLine": 664,
        "endChar": 81
      },
      "revId": "3b7d0858bf3557c03dd172e29f4c7b6654c060e0",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bb514f8f_425f86ce",
        "filename": "src/dawn_native/d3d12/TextureD3D12.cpp",
        "patchSetId": 18
      },
      "lineNbr": 664,
      "author": {
        "id": 1000017
      },
      "writtenOn": "2020-06-04T00:02:48Z",
      "side": 0,
      "message": "This is a correctness problem, we should do (or should have the ability to do) transition barrier per each subresource. You can refer to the updated description of this patch for details.\n\nHowever, what you are saying could be the next step: optimization. We can combine the barriers into a single one if the usages of all src subresources are the same and the usages of all dst subresources are the same too. I will do this soon.",
      "parentUuid": "d98317b7_2d6b8e35",
      "range": {
        "startLine": 664,
        "startChar": 42,
        "endLine": 664,
        "endChar": 81
      },
      "revId": "3b7d0858bf3557c03dd172e29f4c7b6654c060e0",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "02795d95_dc01b8a8",
        "filename": "src/dawn_native/d3d12/TextureD3D12.cpp",
        "patchSetId": 18
      },
      "lineNbr": 664,
      "author": {
        "id": 1000262
      },
      "writtenOn": "2020-06-04T01:54:25Z",
      "side": 0,
      "message": "@Yunchao, your patch introduces a performance regression for existing, working content. \n\nI am currently trying to get resources at Microsoft to help us analyze the performance of Dawn and see if there are any areas for improvement. Having known performance debt makes it difficult to ascertain the true performance of the code. It also makes us look bad when they look at traces and see unnecessary state transitions.\n\nIf you\u0027re unwilling to fix this with this CL, can you at least work with Bryan to measure the performance impact of your change and get a sense for how much you\u0027ve made things worse? That will help me determine whether we should postpone the analysis for move forward.",
      "parentUuid": "bb514f8f_425f86ce",
      "range": {
        "startLine": 664,
        "startChar": 42,
        "endLine": 664,
        "endChar": 81
      },
      "revId": "3b7d0858bf3557c03dd172e29f4c7b6654c060e0",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f5290758_1e299a81",
        "filename": "src/dawn_native/d3d12/TextureD3D12.cpp",
        "patchSetId": 18
      },
      "lineNbr": 664,
      "author": {
        "id": 1000017
      },
      "writtenOn": "2020-06-04T06:27:44Z",
      "side": 0,
      "message": "@Rafael, Sure. I will work with Bryan to measure the performance impact of my optimizations. Because I will do optimization (and I have been doing optimization) to combine transition barriers if they can be combined.   \n\nPersonally, I think this patch attempts to resolve a correctness issue. I don\u0027t think performance advantage of incorrect/incomplete implementation for a feature make any sense. Maybe this is a bias.\n\nHere comes my analysis from the code itself, you can try to understand it if you want to. You know, workloads/benchmarks are not that useful because they can\u0027t cover all situations, or they can\u0027t tell which one is common and which one is corner cases.\n\nPer my understanding the majority of texture access is that either 1) the src and dst textures have only one single subresource or 2) the src and dst texture have multiple subresource, but the src texture and dst texture are different textures and we only access one subresource from them respectively(say sampling from one texture and rendering to another texture). For the former situation, tracking per subresource and tracking per texture are equivalent. For the latter situation, tracking per subresource and tracking per texture are also equivalent because we can skip the subresources which are not used in current pass/copy/etc: this patch skips the subresources if their TextureUsages are None in current pass/copy/etc.\n\nHowever, this patch does impact these situations:\n3) 3.1 The src/dst textures have multiple subresources, and the texture access in current pass/copy is upon multiple but partial subresources of src/dst textures, or 3.2 the src/dst texture is the same texture, and we need to handle one or multiple subresources in one single pass/copy/etc. In these situations, we have no choice but use mulitple transition barriers. The previous implementation is incorrect/incomplete for this situation.\n4) The src/dst texture have multiple subresources, and the texture access in current pass/copy is upon ALL subresources of src and dst textures. This is the only situation in which we can combine multiple transition barriers into a single one with barrier\u0027s subresource parameter set to D3D12_RESOURCE_BARRIER_ALL_SUBRESOURCES. You see, what a corner case it is! \n\nCorentin, Austin and other reviewers, please correct me if my analysis ignored some situations.",
      "parentUuid": "02795d95_dc01b8a8",
      "range": {
        "startLine": 664,
        "startChar": 42,
        "endLine": 664,
        "endChar": 81
      },
      "revId": "3b7d0858bf3557c03dd172e29f4c7b6654c060e0",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f1cf156a_80dd05ff",
        "filename": "src/dawn_native/d3d12/TextureD3D12.cpp",
        "patchSetId": 18
      },
      "lineNbr": 664,
      "author": {
        "id": 1000017
      },
      "writtenOn": "2020-06-05T00:17:14Z",
      "side": 0,
      "message": "I mixed the src/dst (old/new) texture usages (or states in DX12) in a transition barrier with src/dst textures.\n\nBut the situations I listed above are basically correct. I put the comment above with some changes and examples, and extend it with more content in this document: https://docs.google.com/document/d/1cx1Dcos5qSWU_naHcozqSh25d1IQ-zx3M9eLa3H2D90/edit. Comments are welcome. Hope that can clarify what we did and its impact, and guide us to do optimizations for subresource.",
      "parentUuid": "f5290758_1e299a81",
      "range": {
        "startLine": 664,
        "startChar": 42,
        "endLine": 664,
        "endChar": 81
      },
      "revId": "3b7d0858bf3557c03dd172e29f4c7b6654c060e0",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    }
  ]
}