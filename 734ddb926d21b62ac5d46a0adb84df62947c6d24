{
  "comments": [
    {
      "key": {
        "uuid": "7a0e0d64_3ac5d162",
        "filename": "src/dawn_native/d3d12/D3D12Info.cpp",
        "patchSetId": 4
      },
      "lineNbr": 27,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2019-12-18T21:37:49Z",
      "side": 1,
      "message": "This sort of helper is going to be useful for all of the backends eventually. Could we have this helper on AdapterBase so we can just do |adapter.IsIntel()| ?\n\nWe could also update the helpers at https://source.chromium.org/chromium/chromium/src/+/master:third_party/dawn/src/tests/DawnTest.cpp;l\u003d376 to use that instead.",
      "range": {
        "startLine": 25,
        "startChar": 4,
        "endLine": 27,
        "endChar": 5
      },
      "revId": "734ddb926d21b62ac5d46a0adb84df62947c6d24",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6f71c510_0bf32e00",
        "filename": "src/dawn_native/d3d12/D3D12Info.cpp",
        "patchSetId": 4
      },
      "lineNbr": 27,
      "author": {
        "id": 1000248
      },
      "writtenOn": "2019-12-18T22:14:51Z",
      "side": 1,
      "message": "Moved the helper to AdapterBase.\n\nWouldn\u0027t these functions need to be exposed as entry points to be used by DawnTest? That seems undesirable.",
      "parentUuid": "7a0e0d64_3ac5d162",
      "range": {
        "startLine": 25,
        "startChar": 4,
        "endLine": 27,
        "endChar": 5
      },
      "revId": "734ddb926d21b62ac5d46a0adb84df62947c6d24",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bf7d6a7e_9079b048",
        "filename": "src/dawn_native/d3d12/D3D12Info.cpp",
        "patchSetId": 4
      },
      "lineNbr": 27,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2019-12-18T22:16:33Z",
      "side": 1,
      "message": "Right now IsIntel() in DawnTest does mPCIInfo.vendorId \u003d\u003d kIntel. Instead, it could do mBackendAdapter.IsIntel() \nbackend adapter is also a member of DawnTest",
      "parentUuid": "6f71c510_0bf32e00",
      "range": {
        "startLine": 25,
        "startChar": 4,
        "endLine": 27,
        "endChar": 5
      },
      "revId": "734ddb926d21b62ac5d46a0adb84df62947c6d24",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "311239c4_f33591b0",
        "filename": "src/dawn_native/d3d12/D3D12Info.cpp",
        "patchSetId": 4
      },
      "lineNbr": 27,
      "author": {
        "id": 1000248
      },
      "writtenOn": "2019-12-18T22:34:38Z",
      "side": 1,
      "message": "I think I see. This involves creating a new function for each vendor in DawnNative.cpp:\n\nbool Adapter::IsIntel() const {\n    mImpl-\u003eIsIntel();\n}\nI\u0027ll take care of this in a secondary CL.",
      "parentUuid": "bf7d6a7e_9079b048",
      "range": {
        "startLine": 25,
        "startChar": 4,
        "endLine": 27,
        "endChar": 5
      },
      "revId": "734ddb926d21b62ac5d46a0adb84df62947c6d24",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c6abc6f8_c0bd1856",
        "filename": "src/dawn_native/d3d12/D3D12Info.cpp",
        "patchSetId": 4
      },
      "lineNbr": 27,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2019-12-18T22:42:12Z",
      "side": 1,
      "message": "Sorry I was mistaken. I thought we had an AdapterBase* and not a dawn_native::Adapter.\n\nPerhaps the better thing is to have a free function which is | bool IsIntel(const PCIInfo\u0026) | as a helper",
      "parentUuid": "311239c4_f33591b0",
      "range": {
        "startLine": 25,
        "startChar": 4,
        "endLine": 27,
        "endChar": 5
      },
      "revId": "734ddb926d21b62ac5d46a0adb84df62947c6d24",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f64b68ce_13669237",
        "filename": "src/dawn_native/d3d12/D3D12Info.cpp",
        "patchSetId": 4
      },
      "lineNbr": 27,
      "author": {
        "id": 1000248
      },
      "writtenOn": "2019-12-18T23:54:04Z",
      "side": 1,
      "message": "You mean removing what I have in AdapterBase, right?\n\nWe could do as you say and create |bool Is\u003cVendor\u003e(const PCIInfo\u0026)| inside a new file, perhaps in /common/. Not sure what I\u0027d call it - GPUInfo.cpp? GPUInfoUtils.cpp?",
      "parentUuid": "c6abc6f8_c0bd1856",
      "range": {
        "startLine": 25,
        "startChar": 4,
        "endLine": 27,
        "endChar": 5
      },
      "revId": "734ddb926d21b62ac5d46a0adb84df62947c6d24",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "64813f01_572d270a",
        "filename": "src/dawn_native/d3d12/D3D12Info.cpp",
        "patchSetId": 4
      },
      "lineNbr": 27,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2019-12-19T00:15:23Z",
      "side": 1,
      "message": "\u003e You mean removing what I have in AdapterBase, right?\n\nYes, sorry for the churn :-/ \n\nIt can probably be something like dawn_native/GPUInfo.h or dawn_native/DeviceInfo.h",
      "parentUuid": "f64b68ce_13669237",
      "range": {
        "startLine": 25,
        "startChar": 4,
        "endLine": 27,
        "endChar": 5
      },
      "revId": "734ddb926d21b62ac5d46a0adb84df62947c6d24",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9016db4f_94041553",
        "filename": "src/dawn_native/d3d12/D3D12Info.cpp",
        "patchSetId": 4
      },
      "lineNbr": 27,
      "author": {
        "id": 1000248
      },
      "writtenOn": "2019-12-19T20:57:14Z",
      "side": 1,
      "message": "I don\u0027t think we want to put it in /dawn_native/ if we want to use it from the tests. I can (as you can see in patch 6) but I have to put the /dawn_native/ dependency for the tests into the build.gn to compile.\n\n/common/GPUInfo.h seems more appropriate. Do you agree?",
      "parentUuid": "64813f01_572d270a",
      "range": {
        "startLine": 25,
        "startChar": 4,
        "endLine": 27,
        "endChar": 5
      },
      "revId": "734ddb926d21b62ac5d46a0adb84df62947c6d24",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a323bd52_39771bc1",
        "filename": "src/dawn_native/d3d12/D3D12Info.cpp",
        "patchSetId": 4
      },
      "lineNbr": 27,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2019-12-19T21:48:15Z",
      "side": 1,
      "message": "That\u0027s also problematic because common/ shouldn\u0027t include dawn_native/ stuff where PCIInfo is defined.\n\nWe could have a separate static lib which we link into dawn_end2end_tests as well as libdawn_native. I checked and this is essentially what ANGLE does with angle:angle_gpu_info_util\n\nCorentin, WDYT?",
      "parentUuid": "9016db4f_94041553",
      "range": {
        "startLine": 25,
        "startChar": 4,
        "endLine": 27,
        "endChar": 5
      },
      "revId": "734ddb926d21b62ac5d46a0adb84df62947c6d24",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ea434952_e2820d32",
        "filename": "src/dawn_native/d3d12/D3D12Info.cpp",
        "patchSetId": 4
      },
      "lineNbr": 27,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2019-12-20T09:16:57Z",
      "side": 1,
      "message": "PCIInfo is on the way out because it is part of AdapterProperties in webgpu.h. We could just have a header that\u0027s PCIIDs.h or something like that that contains the constants, using PCIDeviceID \u003d uint32_t; and helper function to check the GPU vendor is Intel, NVIDIA, AMD, etc.",
      "parentUuid": "a323bd52_39771bc1",
      "range": {
        "startLine": 25,
        "startChar": 4,
        "endLine": 27,
        "endChar": 5
      },
      "revId": "734ddb926d21b62ac5d46a0adb84df62947c6d24",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "688826f0_5f1bf65c",
        "filename": "src/dawn_native/d3d12/D3D12Info.cpp",
        "patchSetId": 4
      },
      "lineNbr": 27,
      "author": {
        "id": 1000248
      },
      "writtenOn": "2019-12-20T19:35:06Z",
      "side": 1,
      "message": "I\u0027ve moved the checks and constants into /common/GPUInfo.h. Only a few constants so it didn\u0027t seem to justify their own file.\n\nWas uncertain about making the gpu_info namespace, but I needed to differentiate from DawnTestBase::IsIntel() somehow.",
      "parentUuid": "ea434952_e2820d32",
      "range": {
        "startLine": 25,
        "startChar": 4,
        "endLine": 27,
        "endChar": 5
      },
      "revId": "734ddb926d21b62ac5d46a0adb84df62947c6d24",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    }
  ]
}