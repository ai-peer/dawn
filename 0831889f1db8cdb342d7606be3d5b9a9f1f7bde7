{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "4e6df307_7e80a4c1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1001591
      },
      "writtenOn": "2021-01-06T19:25:00Z",
      "side": 1,
      "message": "PTAL! Not sure if there\u0027s a more appropriate place in the E2E tests to put this.\n\nOn my machine it\u0027s giving me the following result:\n[ RUN      ] ComputeStorageBufferBarrierTests.ArrayAccessCrash/D3D12_NVIDIA_GeForce_GTX_1660_SUPER\nunknown file: error: SEH exception with code 0xc0000005 thrown in the test body.",
      "revId": "0831889f1db8cdb342d7606be3d5b9a9f1f7bde7",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2db7c7c7_0fefcf9a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1001591
      },
      "writtenOn": "2021-01-06T19:31:58Z",
      "side": 1,
      "message": "Huh! Based on the dry run, seems like this is a problem on Macs too! Wouldn\u0027t be surprised if it also fails on Linux.",
      "revId": "0831889f1db8cdb342d7606be3d5b9a9f1f7bde7",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2dee9a36_fdd8f28f",
        "filename": "src/tests/end2end/ComputeStorageBufferBarrierTests.cpp",
        "patchSetId": 1
      },
      "lineNbr": 366,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2021-01-06T19:46:12Z",
      "side": 1,
      "message": "I\u0027m not sure if the syntax is valid or if it\u0027s a Tint translation bug. Either way it\u0027s a Tint bug - missing validation or incorrect translation.\n\nstorage_buffer requires an access(read) or access(read_write). I\u0027m not sure if that\u0027s valid on an array or if it must be on a [[block]]\n\nThe following works:\n\n        struct Particle {\n            [[offset(0)]] pos : vec2\u003cf32\u003e;\n            [[offset(8)]] vel : vec2\u003cf32\u003e;\n        };\n        [[block]] struct Buf {\n            [[offset(0)]] particles : [[stride(16)]] array\u003cParticle, 1024\u003e;\n        };\n        [[binding(0), set(0)]] var\u003cstorage_buffer\u003e buf : [[access(read_write)]] Buf;\n        [[builtin(global_invocation_id)]] var\u003cin\u003e globalId : vec3\u003cu32\u003e;\n        [[stage(compute)]] fn main() -\u003e void {\n            buf.particles[globalId.x].pos \u003d buf.particles[globalId.x].pos + buf.particles[globalId.x].vel;\n        }",
      "range": {
        "startLine": 358,
        "startChar": 8,
        "endLine": 366,
        "endChar": 9
      },
      "revId": "0831889f1db8cdb342d7606be3d5b9a9f1f7bde7",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d1556d8d_f5ad8bec",
        "filename": "src/tests/end2end/ComputeStorageBufferBarrierTests.cpp",
        "patchSetId": 1
      },
      "lineNbr": 366,
      "author": {
        "id": 1001591
      },
      "writtenOn": "2021-01-06T20:29:29Z",
      "side": 1,
      "message": "I knew that the version inside a [[block]] worked. I wasn\u0027t sure if the direct array was a use case that was supposed to work or not when I filed https://bugs.chromium.org/p/dawn/issues/detail?id\u003d617. (For the record it would be convenient for developers if it did.) And sorry for missing the access type! Definitely needs validation for that.",
      "parentUuid": "2dee9a36_fdd8f28f",
      "range": {
        "startLine": 358,
        "startChar": 8,
        "endLine": 366,
        "endChar": 9
      },
      "revId": "0831889f1db8cdb342d7606be3d5b9a9f1f7bde7",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}