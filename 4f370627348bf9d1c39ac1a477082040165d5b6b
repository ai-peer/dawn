{
  "comments": [
    {
      "key": {
        "uuid": "d16e5163_f2e34ae1",
        "filename": "src/dawn_native/d3d12/BindGroupD3D12.cpp",
        "patchSetId": 37
      },
      "lineNbr": 34,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-02-05T19:51:14Z",
      "side": 1,
      "message": "What if we switch heaps during the frame? This will return true even when in that case the bindgroup needs to be reallocated.\n\n[4]",
      "revId": "4f370627348bf9d1c39ac1a477082040165d5b6b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7cdb6b9c_1e11e0de",
        "filename": "src/dawn_native/d3d12/BindGroupD3D12.cpp",
        "patchSetId": 37
      },
      "lineNbr": 47,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-02-05T19:51:14Z",
      "side": 1,
      "message": "nit: spell out simple types",
      "range": {
        "startLine": 47,
        "startChar": 14,
        "endLine": 47,
        "endChar": 18
      },
      "revId": "4f370627348bf9d1c39ac1a477082040165d5b6b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "54dd5ee7_a1e21da6",
        "filename": "src/dawn_native/d3d12/BindGroupD3D12.cpp",
        "patchSetId": 37
      },
      "lineNbr": 70,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-02-05T19:51:14Z",
      "side": 1,
      "message": "nit: extra comma",
      "range": {
        "startLine": 70,
        "startChar": 69,
        "endLine": 70,
        "endChar": 70
      },
      "revId": "4f370627348bf9d1c39ac1a477082040165d5b6b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9d797eae_d270b816",
        "filename": "src/dawn_native/d3d12/CommandBufferD3D12.cpp",
        "patchSetId": 37
      },
      "lineNbr": 83,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-02-05T19:51:14Z",
      "side": 1,
      "message": "This comment encodes too much of the history of this CL which makes it more complicated than it could be. A simpler version could be:\n\n  BindGroups are linearly allocated in descriptor heaps but there can be a single descriptor heap of each type bound at any given time. This means that when we switch heaps, all other currently bound descriptors must also be reencoded. Descriptors can fail allocation gracefully which is the signal to change the bound heap.",
      "revId": "4f370627348bf9d1c39ac1a477082040165d5b6b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "247c690d_b902cbfc",
        "filename": "src/dawn_native/d3d12/CommandBufferD3D12.cpp",
        "patchSetId": 37
      },
      "lineNbr": 103,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-02-05T19:51:14Z",
      "side": 1,
      "message": "[4]",
      "revId": "4f370627348bf9d1c39ac1a477082040165d5b6b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "73602533_2a04b16d",
        "filename": "src/dawn_native/d3d12/CommandBufferD3D12.cpp",
        "patchSetId": 37
      },
      "lineNbr": 104,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-02-05T19:51:14Z",
      "side": 1,
      "message": "nit: the name is misleading and should contain some evidence that the heaps are rotated. Right now it looks like it might not allocate heaps if they are already allocated.",
      "range": {
        "startLine": 104,
        "startChar": 67,
        "endLine": 104,
        "endChar": 93
      },
      "revId": "4f370627348bf9d1c39ac1a477082040165d5b6b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1f0ce806_e89a2d08",
        "filename": "src/dawn_native/d3d12/CommandBufferD3D12.cpp",
        "patchSetId": 37
      },
      "lineNbr": 112,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-02-05T19:51:14Z",
      "side": 1,
      "message": "Given the structure of the code, this will always be true because if (!didCreateBindGroups) didReallocation is set to true. Removing it also allows removing didReallocation.",
      "revId": "4f370627348bf9d1c39ac1a477082040165d5b6b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d2d351f1_b7510891",
        "filename": "src/dawn_native/d3d12/CommandBufferD3D12.cpp",
        "patchSetId": 37
      },
      "lineNbr": 125,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-02-05T19:51:14Z",
      "side": 1,
      "message": "The logic of what to do in the case of reallocation is split between here and [4]. Maybe it could all be grouped together so all side effects of reallocation are in the same place for simplicity? Basically TryAllocateIfNeeded could be inlined here and simplifications performed.",
      "revId": "4f370627348bf9d1c39ac1a477082040165d5b6b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "257b7a28_9ca9de0a",
        "filename": "src/dawn_native/d3d12/CommandBufferD3D12.cpp",
        "patchSetId": 37
      },
      "lineNbr": 175,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-02-05T19:51:14Z",
      "side": 1,
      "message": "We don\u0027t need to check because we know this function will either be called at the initialization or when heap changes. This allows removing the mDescriptorHeaps member. Likewise this function doesn\u0027t need to return a bool.",
      "revId": "4f370627348bf9d1c39ac1a477082040165d5b6b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0009c5ef_55f98b91",
        "filename": "src/dawn_native/d3d12/CommandBufferD3D12.cpp",
        "patchSetId": 37
      },
      "lineNbr": 253,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-02-05T19:51:14Z",
      "side": 1,
      "message": "nit: unnecessary line wrapping.",
      "revId": "4f370627348bf9d1c39ac1a477082040165d5b6b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4bcadb0e_cb864766",
        "filename": "src/dawn_native/d3d12/DescriptorAllocatorManagerD3D12.cpp",
        "patchSetId": 37
      },
      "lineNbr": 135,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-02-05T19:51:14Z",
      "side": 1,
      "message": "Like we discussed in the last call I was there, using a RingBuffer will cause correctness issues where a bindgroup will think it is still valid in frame N+1 when it has already been overwritten. I think you meant to fix this by returning false in [4] instead of true.\n\nIf you\u0027re worried about re-allocating descriptor heaps, this can be fixed by recycling whole descriptor heaps via a serial queue, which is a more general solution (and definitely should not be done in this CL, it is complex enough as is).",
      "revId": "4f370627348bf9d1c39ac1a477082040165d5b6b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "339aeac2_62cb5aeb",
        "filename": "src/dawn_native/d3d12/DescriptorAllocatorManagerD3D12.h",
        "patchSetId": 37
      },
      "lineNbr": 62,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-02-05T19:51:14Z",
      "side": 1,
      "message": "nit: comment somewhere that heap serial of 0 will never be returned and this can be used as a tag value to say that bindgroups are not allocated yet.",
      "revId": "4f370627348bf9d1c39ac1a477082040165d5b6b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0cc1c77b_48a78c4d",
        "filename": "src/dawn_native/d3d12/DescriptorAllocatorManagerD3D12.h",
        "patchSetId": 37
      },
      "lineNbr": 65,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-02-05T19:51:14Z",
      "side": 1,
      "message": "Why does this care about all heap types, when it\u0027s only used for cbvUavSrv and sampler? Same comment in all other places in the .cpp file.",
      "revId": "4f370627348bf9d1c39ac1a477082040165d5b6b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e80f110c_88140007",
        "filename": "src/dawn_native/d3d12/DescriptorHeapAllocationD3D12.h",
        "patchSetId": 37
      },
      "lineNbr": 25,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-02-05T19:51:14Z",
      "side": 1,
      "message": "Previous comment about simplifying this hasn\u0027t been addressed yet.",
      "revId": "4f370627348bf9d1c39ac1a477082040165d5b6b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    }
  ]
}