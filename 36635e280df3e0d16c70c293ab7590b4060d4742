{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "9e1f71d5_f5c78c0d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2022-05-04T19:43:31Z",
      "side": 1,
      "message": "The `_i` and `_u` are kinda bleh, but limiting them to tests seems ok. There are a bunch of places where they leak out into code outside tests which didn\u0027t seem to match the CL description (I marked the various places).\n\nCan we constrain the `_i` and `_u` to test files?",
      "revId": "36635e280df3e0d16c70c293ab7590b4060d4742",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "19d929d9_ca2ee171",
        "filename": "src/tint/number.h",
        "patchSetId": 4
      },
      "lineNbr": 75,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2022-05-04T19:43:31Z",
      "side": 1,
      "message": "Why `unsigned long long` instead of `uint64_t` ?\n\nAnd, why `unsigned` for the `i32` value?",
      "revId": "36635e280df3e0d16c70c293ab7590b4060d4742",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "928ffb87_467ee49e",
        "filename": "src/tint/number.h",
        "patchSetId": 4
      },
      "lineNbr": 75,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2022-05-04T20:25:25Z",
      "side": 1,
      "message": "Because, according to this (https://en.cppreference.com/w/cpp/language/user_literal#Literal_operators) it\u0027s the only allowed integer parameter type.",
      "parentUuid": "19d929d9_ca2ee171",
      "revId": "36635e280df3e0d16c70c293ab7590b4060d4742",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8608cd35_565b255b",
        "filename": "src/tint/number.h",
        "patchSetId": 4
      },
      "lineNbr": 75,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2022-05-04T20:31:06Z",
      "side": 1,
      "message": "c++ is weird.",
      "parentUuid": "928ffb87_467ee49e",
      "revId": "36635e280df3e0d16c70c293ab7590b4060d4742",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d12cae97_6cf621c4",
        "filename": "src/tint/program_builder.cc",
        "patchSetId": 4
      },
      "lineNbr": 131,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2022-05-04T19:43:31Z",
      "side": 1,
      "message": "The description to the CL made me think these were just for tests? Can we avoid having these appear in places outside tests?",
      "revId": "36635e280df3e0d16c70c293ab7590b4060d4742",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "de5503e2_7a70b10f",
        "filename": "src/tint/program_builder.cc",
        "patchSetId": 4
      },
      "lineNbr": 131,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2022-05-04T20:25:25Z",
      "side": 1,
      "message": "What do you prefer? `u32(blah)` and `i32(blah)` everywhere outside of tests?\nThe suffixes give you the same thing, but look less like its going to emit a WGSL cast (which it doesn\u0027t).\nI\u0027m happy to change the CL description.",
      "parentUuid": "d12cae97_6cf621c4",
      "revId": "36635e280df3e0d16c70c293ab7590b4060d4742",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "947308d5_1c73687b",
        "filename": "src/tint/program_builder.cc",
        "patchSetId": 4
      },
      "lineNbr": 131,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2022-05-04T20:31:06Z",
      "side": 1,
      "message": "I\u0027d prefer the `u32(blah)` and `i32(blah)` to the `_i` and `_u` and `using` statements.",
      "parentUuid": "de5503e2_7a70b10f",
      "revId": "36635e280df3e0d16c70c293ab7590b4060d4742",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6ee0d8df_36f30da3",
        "filename": "src/tint/program_builder.cc",
        "patchSetId": 4
      },
      "lineNbr": 131,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2022-05-04T20:40:17Z",
      "side": 1,
      "message": "I have reservations about using the looks-like-an-explicit-cast expressions in code that\u0027s already imitating WGSL with the `ProgramBuilder` helpers. We already use vector and matrix constructor helpers (e.g. `vec2\u003cf32\u003e(blah)`) in transforms, and these produce the equivalent type constructor in WGSL. The `_i` and `_u` C++ literal suffixes match the WGSL suffixes (with exception of the additional `_`, which is unfortunately unavoidable).\n\nLet\u0027s chat about this tomorrow.",
      "parentUuid": "947308d5_1c73687b",
      "revId": "36635e280df3e0d16c70c293ab7590b4060d4742",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e3f44408_0bfb71b1",
        "filename": "src/tint/resolver/resolver_constants.cc",
        "patchSetId": 4
      },
      "lineNbr": 68,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2022-05-04T19:43:31Z",
      "side": 1,
      "message": "ditto",
      "revId": "36635e280df3e0d16c70c293ab7590b4060d4742",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9b3a51f1_07c36139",
        "filename": "src/tint/transform/add_empty_entry_point.cc",
        "patchSetId": 4
      },
      "lineNbr": 42,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2022-05-04T19:43:31Z",
      "side": 1,
      "message": "ditto",
      "revId": "36635e280df3e0d16c70c293ab7590b4060d4742",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e98a05d8_1c8f8341",
        "filename": "src/tint/transform/builtin_polyfill.cc",
        "patchSetId": 4
      },
      "lineNbr": 24,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2022-05-04T19:43:31Z",
      "side": 1,
      "message": "Is this just for the _i bit?",
      "revId": "36635e280df3e0d16c70c293ab7590b4060d4742",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d75b0536_d08c8c7a",
        "filename": "src/tint/transform/builtin_polyfill.cc",
        "patchSetId": 4
      },
      "lineNbr": 243,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2022-05-04T19:43:31Z",
      "side": 1,
      "message": "ditto",
      "revId": "36635e280df3e0d16c70c293ab7590b4060d4742",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "11cf5073_6ce152dc",
        "filename": "src/tint/transform/calculate_array_length.cc",
        "patchSetId": 4
      },
      "lineNbr": 173,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2022-05-04T19:43:31Z",
      "side": 1,
      "message": "ditto",
      "revId": "36635e280df3e0d16c70c293ab7590b4060d4742",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8b0dacca_c2969d47",
        "filename": "src/tint/transform/canonicalize_entry_point_io.cc",
        "patchSetId": 4
      },
      "lineNbr": 195,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2022-05-04T19:43:31Z",
      "side": 1,
      "message": "ditto",
      "revId": "36635e280df3e0d16c70c293ab7590b4060d4742",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "100a91f1_1587c0dd",
        "filename": "src/tint/transform/decompose_memory_access.cc",
        "patchSetId": 4
      },
      "lineNbr": 472,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2022-05-04T19:43:31Z",
      "side": 1,
      "message": "ditto",
      "revId": "36635e280df3e0d16c70c293ab7590b4060d4742",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1eb5d937_eec3c109",
        "filename": "src/tint/transform/expand_compound_assignment.cc",
        "patchSetId": 4
      },
      "lineNbr": 177,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2022-05-04T19:43:31Z",
      "side": 1,
      "message": "ditto",
      "revId": "36635e280df3e0d16c70c293ab7590b4060d4742",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "87e10285_10c37a70",
        "filename": "src/tint/transform/multiplanar_external_texture.cc",
        "patchSetId": 4
      },
      "lineNbr": 314,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2022-05-04T19:43:31Z",
      "side": 1,
      "message": "ditto",
      "revId": "36635e280df3e0d16c70c293ab7590b4060d4742",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a3354f80_78368514",
        "filename": "src/tint/transform/robustness.cc",
        "patchSetId": 4
      },
      "lineNbr": 107,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2022-05-04T19:43:31Z",
      "side": 1,
      "message": "ditto",
      "revId": "36635e280df3e0d16c70c293ab7590b4060d4742",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f5327d17_05e5a4f9",
        "filename": "src/tint/transform/vertex_pulling.cc",
        "patchSetId": 4
      },
      "lineNbr": 434,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2022-05-04T19:43:31Z",
      "side": 1,
      "message": "ditto",
      "revId": "36635e280df3e0d16c70c293ab7590b4060d4742",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ffe4e206_e67f875f",
        "filename": "src/tint/writer/append_vector.cc",
        "patchSetId": 4
      },
      "lineNbr": 50,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2022-05-04T19:43:31Z",
      "side": 1,
      "message": "ditto",
      "revId": "36635e280df3e0d16c70c293ab7590b4060d4742",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a124a016_ee4bd64b",
        "filename": "src/tint/writer/hlsl/generator_impl.cc",
        "patchSetId": 4
      },
      "lineNbr": 2334,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2022-05-04T19:43:31Z",
      "side": 1,
      "message": "ditto",
      "revId": "36635e280df3e0d16c70c293ab7590b4060d4742",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}