{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "219d85fa_36fb7496",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2022-10-19T18:45:31Z",
      "side": 1,
      "message": "PTAL.",
      "revId": "3fcaaa46252c9bf4012b55e9facdcb44c5fab058",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "02724358_87bc0990",
        "filename": "src/tint/reader/wgsl/parser_impl.cc",
        "patchSetId": 2
      },
      "lineNbr": 2460,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2022-10-21T14:58:04Z",
      "side": 1,
      "message": "```expect(\"`break if` statement\", Token::Type::kSemicolon)``` ?",
      "range": {
        "startLine": 2460,
        "startChar": 9,
        "endLine": 2460,
        "endChar": 14
      },
      "revId": "3fcaaa46252c9bf4012b55e9facdcb44c5fab058",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3f9d2ede_5c2caf10",
        "filename": "src/tint/resolver/resolver.cc",
        "patchSetId": 2
      },
      "lineNbr": 1234,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2022-10-21T14:58:04Z",
      "side": 1,
      "message": "This should almost certainly be an ICE, which takes the system as the first argument.",
      "range": {
        "startLine": 1234,
        "startChar": 12,
        "endLine": 1234,
        "endChar": 20
      },
      "revId": "3fcaaa46252c9bf4012b55e9facdcb44c5fab058",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "619f491c_49f1aac4",
        "filename": "src/tint/resolver/validation_test.cc",
        "patchSetId": 2
      },
      "lineNbr": 1111,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2022-10-21T14:58:04Z",
      "side": 1,
      "message": "I\u0027d suggest ``` `break if` ```  given that you backtick-quoted ``` `break` ```.",
      "range": {
        "startLine": 1111,
        "startChar": 44,
        "endLine": 1111,
        "endChar": 52
      },
      "revId": "3fcaaa46252c9bf4012b55e9facdcb44c5fab058",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4661f24f_167901fa",
        "filename": "src/tint/resolver/validator.cc",
        "patchSetId": 2
      },
      "lineNbr": 1655,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2022-10-21T14:58:04Z",
      "side": 1,
      "message": "We could override the `Declaration()` method on `sem::LoopContinuingBlockStatement` to return the statement `static_cast`\u0027d to `const ast::BlockStatement*`. We do this for a bunch \nThis is safer and faster than requiring all users to just know the inheritance mapping here.",
      "range": {
        "startLine": 1655,
        "startChar": 19,
        "endLine": 1655,
        "endChar": 32
      },
      "revId": "3fcaaa46252c9bf4012b55e9facdcb44c5fab058",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}