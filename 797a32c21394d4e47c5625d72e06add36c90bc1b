{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "244fe6fb_aa404b75",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-12-18T14:56:58Z",
      "side": 1,
      "message": "LGTM overall",
      "revId": "797a32c21394d4e47c5625d72e06add36c90bc1b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "92ab9850_870e317e",
        "filename": "src/common/Constants.h",
        "patchSetId": 1
      },
      "lineNbr": 74,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-12-18T14:56:58Z",
      "side": 1,
      "message": "kMaxOcclusionQuerySetSize and make the limit apply only for precise and non-precise occlusion queries.",
      "range": {
        "startLine": 74,
        "startChar": 26,
        "endLine": 74,
        "endChar": 40
      },
      "revId": "797a32c21394d4e47c5625d72e06add36c90bc1b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "22c1647e_048426f3",
        "filename": "src/common/Constants.h",
        "patchSetId": 1
      },
      "lineNbr": 74,
      "author": {
        "id": 1000030
      },
      "writtenOn": "2020-12-18T18:41:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "92ab9850_870e317e",
      "range": {
        "startLine": 74,
        "startChar": 26,
        "endLine": 74,
        "endChar": 40
      },
      "revId": "797a32c21394d4e47c5625d72e06add36c90bc1b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bd18ae50_fbe37fd2",
        "filename": "src/common/Constants.h",
        "patchSetId": 1
      },
      "lineNbr": 74,
      "author": {
        "id": 1000030
      },
      "writtenOn": "2020-12-20T15:33:47Z",
      "side": 1,
      "message": "I remembered that another reason for limiting the maximum query count to 8192 for all types of queries is that when resolving sparse queries, we need to traverse the available array of queries to calculate the intervals of queries used on each pass, then resolve them separately. If we use a large number of queries (for example UINT32_MAX/32), it will take some time in the calculation. See the discussion in https://github.com/gpuweb/gpuweb/issues/1072#issuecomment-694760558. \n\nFor the maximum query count of timestamp and pipeline statistics, although there is no clear limit on the query heap/pool sizes in D3D12 and Vulkan specifications, but I create it failed with the query count of UINT32_MAX/16 on Intel Windows.\n\nSo I though when we discussed the maximum count limit in issue#1072, it is used for all types of queries.",
      "parentUuid": "22c1647e_048426f3",
      "range": {
        "startLine": 74,
        "startChar": 26,
        "endLine": 74,
        "endChar": 40
      },
      "revId": "797a32c21394d4e47c5625d72e06add36c90bc1b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cd906198_946c8afe",
        "filename": "src/common/Constants.h",
        "patchSetId": 1
      },
      "lineNbr": 74,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-12-21T19:44:08Z",
      "side": 1,
      "message": "Yes, in that issue it does seem we agreed to enforce this limitation for all queries, so to match the spec, let\u0027s change this back for now and check the size on query set creation for all types of queries. It should be simple to change in the future if we need different limits.",
      "parentUuid": "bd18ae50_fbe37fd2",
      "range": {
        "startLine": 74,
        "startChar": 26,
        "endLine": 74,
        "endChar": 40
      },
      "revId": "797a32c21394d4e47c5625d72e06add36c90bc1b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4304b1d1_bd1f29f4",
        "filename": "src/common/Constants.h",
        "patchSetId": 1
      },
      "lineNbr": 74,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-12-21T19:53:34Z",
      "side": 1,
      "message": "Oh sorry for the back and forth. Using whatever is in the spec now should be good and we can open an issue about whether to have the 8192 limit for all query types and see later (maybe after Origin Trial).",
      "parentUuid": "cd906198_946c8afe",
      "range": {
        "startLine": 74,
        "startChar": 26,
        "endLine": 74,
        "endChar": 40
      },
      "revId": "797a32c21394d4e47c5625d72e06add36c90bc1b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}