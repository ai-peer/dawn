{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "c2efbfaa_dc23d95a",
        "filename": "src/tests/end2end/D3D12ResourceWrappingTests.cpp",
        "patchSetId": 2
      },
      "lineNbr": 93,
      "author": {
        "id": 1000262
      },
      "writtenOn": "2021-02-19T23:58:11Z",
      "side": 1,
      "message": "I prefer the ASSERT_EQ macro because it gives you better log output in test runs. In this case, it will output the actual hr instead or just telling you it is not S_OK.",
      "range": {
        "startLine": 93,
        "startChar": 12,
        "endLine": 93,
        "endChar": 28
      },
      "revId": "66f3cbbddf4ef20c50dc539eba43e6ee3af37272",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "929d3260_823ce5fb",
        "filename": "src/tests/end2end/D3D12ResourceWrappingTests.cpp",
        "patchSetId": 2
      },
      "lineNbr": 93,
      "author": {
        "id": 1000268
      },
      "writtenOn": "2021-02-20T00:09:38Z",
      "side": 1,
      "message": "ASSERT_EQ doesn\u0027t work in a non-void return function outside a GTest \u003d(",
      "parentUuid": "c2efbfaa_dc23d95a",
      "range": {
        "startLine": 93,
        "startChar": 12,
        "endLine": 93,
        "endChar": 28
      },
      "revId": "66f3cbbddf4ef20c50dc539eba43e6ee3af37272",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d0e1ad66_aa3ad42e",
        "filename": "src/tests/end2end/D3D12ResourceWrappingTests.cpp",
        "patchSetId": 2
      },
      "lineNbr": 93,
      "author": {
        "id": 1000262
      },
      "writtenOn": "2021-02-23T03:19:08Z",
      "side": 1,
      "message": "You should be able to solve this by making the return value be an out parameter.\n\nEither way, since ASSERT_X just early returns, you need to do something in the caller so that it also does an early out. ASSERTing in the caller is one option but you can also follow the suggestions in the below article.\n\nhttps://github.com/google/googletest/blob/master/docs/advanced.md#using-assertions-in-sub-routines",
      "parentUuid": "929d3260_823ce5fb",
      "range": {
        "startLine": 93,
        "startChar": 12,
        "endLine": 93,
        "endChar": 28
      },
      "revId": "66f3cbbddf4ef20c50dc539eba43e6ee3af37272",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3eeabef2_71c839ab",
        "filename": "src/tests/end2end/D3D12ResourceWrappingTests.cpp",
        "patchSetId": 2
      },
      "lineNbr": 93,
      "author": {
        "id": 1000268
      },
      "writtenOn": "2021-02-24T18:51:22Z",
      "side": 1,
      "message": "That works too.",
      "parentUuid": "d0e1ad66_aa3ad42e",
      "range": {
        "startLine": 93,
        "startChar": 12,
        "endLine": 93,
        "endChar": 28
      },
      "revId": "66f3cbbddf4ef20c50dc539eba43e6ee3af37272",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f1695355_b5910760",
        "filename": "src/tests/end2end/D3D12ResourceWrappingTests.cpp",
        "patchSetId": 2
      },
      "lineNbr": 93,
      "author": {
        "id": 1000262
      },
      "writtenOn": "2021-02-26T23:06:41Z",
      "side": 1,
      "message": "Where you ended up is not quite right. The ASSERT_EQ will take care of marking the test as failed and returning early from this method. So far, so good.\n\nHowever, the caller will continue to execute. You need to also ASSERT that the out parameter is valid in the caller. Otherwise, it will run with garbage data.",
      "parentUuid": "3eeabef2_71c839ab",
      "range": {
        "startLine": 93,
        "startChar": 12,
        "endLine": 93,
        "endChar": 28
      },
      "revId": "66f3cbbddf4ef20c50dc539eba43e6ee3af37272",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "acf1d621_feb69787",
        "filename": "src/tests/end2end/D3D12ResourceWrappingTests.cpp",
        "patchSetId": 2
      },
      "lineNbr": 93,
      "author": {
        "id": 1000268
      },
      "writtenOn": "2021-02-26T23:23:21Z",
      "side": 1,
      "message": "I don\u0027t think that\u0027s correct. On my machine ASSERT_EQ also returns the caller early, it does not continue to run.",
      "parentUuid": "f1695355_b5910760",
      "range": {
        "startLine": 93,
        "startChar": 12,
        "endLine": 93,
        "endChar": 28
      },
      "revId": "66f3cbbddf4ef20c50dc539eba43e6ee3af37272",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "10d876fa_747e51a7",
        "filename": "src/tests/end2end/D3D12ResourceWrappingTests.cpp",
        "patchSetId": 2
      },
      "lineNbr": 93,
      "author": {
        "id": 1000262
      },
      "writtenOn": "2021-02-27T01:53:36Z",
      "side": 1,
      "message": "Yes, the implementation of the ASSERT_EQ macro has an early return. However, the caller of WrapSharedHandle also needs to assert that the out parameter is valid. \n\nJust now, I tried an experiment where I force an assert in WrapShaderHandle by changing the hr in the debugger to be a failure code. WrapSharedHandle exited right away but control still transferred to the caller where execution resumed. This is in line with the behavior described in the \"Propagating Failures\" section of https://github.com/google/googletest/blob/master/docs/advanced.md#using-assertions-in-sub-routines.",
      "parentUuid": "acf1d621_feb69787",
      "range": {
        "startLine": 93,
        "startChar": 12,
        "endLine": 93,
        "endChar": 28
      },
      "revId": "66f3cbbddf4ef20c50dc539eba43e6ee3af37272",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7db22d82_f32d3842",
        "filename": "src/tests/end2end/D3D12ResourceWrappingTests.cpp",
        "patchSetId": 2
      },
      "lineNbr": 93,
      "author": {
        "id": 1000268
      },
      "writtenOn": "2021-02-27T02:31:16Z",
      "side": 1,
      "message": "Thanks for the doc - I meant callers of WrapSharedHandle already check the texture out parameter so they will return early. However, I just noticed WrapAndClearD3D11Texture callers could use the same treatment.",
      "parentUuid": "10d876fa_747e51a7",
      "range": {
        "startLine": 93,
        "startChar": 12,
        "endLine": 93,
        "endChar": 28
      },
      "revId": "66f3cbbddf4ef20c50dc539eba43e6ee3af37272",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}