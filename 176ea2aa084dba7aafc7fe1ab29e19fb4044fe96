{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "c3524ef2_e8a6d771",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 12
      },
      "lineNbr": 0,
      "author": {
        "id": 1002241
      },
      "writtenOn": "2024-05-06T14:34:20Z",
      "side": 1,
      "message": "Note that this doesn\u0027t handle gl_PerVertex stuff yet which will require extra work.",
      "revId": "176ea2aa084dba7aafc7fe1ab29e19fb4044fe96",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fb53e06d_570d475c",
        "filename": "src/tint/lang/spirv/reader/lower/shader_io.cc",
        "patchSetId": 12
      },
      "lineNbr": 59,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2024-05-06T18:23:04Z",
      "side": 1,
      "message": "nit: some names have a `_` tail and some don\u0027t?\n\n```suggestion\n        function_parameter_map_{};\n```",
      "revId": "176ea2aa084dba7aafc7fe1ab29e19fb4044fe96",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f713cae9_f78f523b",
        "filename": "src/tint/lang/spirv/reader/lower/shader_io.cc",
        "patchSetId": 12
      },
      "lineNbr": 59,
      "author": {
        "id": 1002241
      },
      "writtenOn": "2024-05-06T22:41:49Z",
      "side": 1,
      "message": "Removed trailing underscores as per our convention for these PIMPL classes.",
      "parentUuid": "fb53e06d_570d475c",
      "revId": "176ea2aa084dba7aafc7fe1ab29e19fb4044fe96",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "81d53ee4_ee0ae0aa",
        "filename": "src/tint/lang/spirv/reader/lower/shader_io.cc",
        "patchSetId": 12
      },
      "lineNbr": 83,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2024-05-06T18:23:04Z",
      "side": 1,
      "message": "Out of curiousity, why doesn\u0027t this happen in `ProcessEntryPointOutputs` where we can use the `referenced_output_vars_.TransitiveReferences(ep)` to get the outputs that are used by the entry point?\n\nOh, so we don\u0027t double process any given `var`, yea? Maybe a comment to that effect? `We only want to process a given var once, even if used in multiple entry points, so we collect them up ahead of time` or something?",
      "revId": "176ea2aa084dba7aafc7fe1ab29e19fb4044fe96",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0e77d4a5_3c0a11b6",
        "filename": "src/tint/lang/spirv/reader/lower/shader_io.cc",
        "patchSetId": 12
      },
      "lineNbr": 83,
      "author": {
        "id": 1002241
      },
      "writtenOn": "2024-05-06T22:41:49Z",
      "side": 1,
      "message": "It\u0027s a fair point, I\u0027ve moved this into `ProcessEntryPointOutputs` and added a hash set to prevent them from being processed twice.",
      "parentUuid": "81d53ee4_ee0ae0aa",
      "revId": "176ea2aa084dba7aafc7fe1ab29e19fb4044fe96",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1f740ed0_d6622435",
        "filename": "src/tint/lang/spirv/reader/lower/shader_io.cc",
        "patchSetId": 12
      },
      "lineNbr": 106,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2024-05-06T18:23:04Z",
      "side": 1,
      "message": "Maybe add a note here that this has to be done after `ProcessEntryPointOutputs` because the attributes are copied out during the processing to the entry point variables?",
      "revId": "176ea2aa084dba7aafc7fe1ab29e19fb4044fe96",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a3cac199_f7386ac6",
        "filename": "src/tint/lang/spirv/reader/lower/shader_io.cc",
        "patchSetId": 12
      },
      "lineNbr": 106,
      "author": {
        "id": 1002241
      },
      "writtenOn": "2024-05-06T22:41:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1f740ed0_d6622435",
      "revId": "176ea2aa084dba7aafc7fe1ab29e19fb4044fe96",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fcc60c8b_a2462d3d",
        "filename": "src/tint/lang/spirv/reader/lower/shader_io.cc",
        "patchSetId": 12
      },
      "lineNbr": 154,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2024-05-06T18:23:04Z",
      "side": 1,
      "message": "This seems like it would be simpler as a:\n\n```\nif (auto* a \u003d use.instruction.As\u003ccore::ir::Access\u003e()) {\n  ReplaceOutputPointerAddressSpace(a-\u003eResult(0));\n}\n```\n\nsince that\u0027s the only case used?",
      "revId": "176ea2aa084dba7aafc7fe1ab29e19fb4044fe96",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eb4eecf0_db7dffcb",
        "filename": "src/tint/lang/spirv/reader/lower/shader_io.cc",
        "patchSetId": 12
      },
      "lineNbr": 154,
      "author": {
        "id": 1002241
      },
      "writtenOn": "2024-05-06T22:41:49Z",
      "side": 1,
      "message": "There\u0027s a difference between \"accepted with nothing to do\" and \"not accepted\". But I\u0027ve turned this into a `if/else if/else` to cover the three cases.",
      "parentUuid": "fcc60c8b_a2462d3d",
      "revId": "176ea2aa084dba7aafc7fe1ab29e19fb4044fe96",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "48f55dad_79dd6717",
        "filename": "src/tint/lang/spirv/reader/lower/shader_io.cc",
        "patchSetId": 12
      },
      "lineNbr": 154,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2024-05-07T11:31:33Z",
      "side": 1,
      "message": "I actually found the original easier to read, but this new version would likely be more performant. One unfortunate loss is that the `TINT_ICE_ON_NO_MATCH` would error with the actual type of `use.instruction`, and we lost this. Adding a suggestion to regain this.",
      "parentUuid": "eb4eecf0_db7dffcb",
      "revId": "176ea2aa084dba7aafc7fe1ab29e19fb4044fe96",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "44d293db_2d9fc22b",
        "filename": "src/tint/lang/spirv/reader/lower/shader_io.cc",
        "patchSetId": 12
      },
      "lineNbr": 154,
      "author": {
        "id": 1002241
      },
      "writtenOn": "2024-05-07T15:01:01Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "48f55dad_79dd6717",
      "revId": "176ea2aa084dba7aafc7fe1ab29e19fb4044fe96",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "56892e24_ceda4fcb",
        "filename": "src/tint/lang/spirv/reader/lower/shader_io.cc",
        "patchSetId": 12
      },
      "lineNbr": 236,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2024-05-06T18:23:04Z",
      "side": 1,
      "message": "```suggestion\n                    // If we\u0027re dealing with sample_mask, extract the scalar from the array.\n```",
      "revId": "176ea2aa084dba7aafc7fe1ab29e19fb4044fe96",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f3a9ba3d_a9adcc46",
        "filename": "src/tint/lang/spirv/reader/lower/shader_io.cc",
        "patchSetId": 12
      },
      "lineNbr": 236,
      "author": {
        "id": 1002241
      },
      "writtenOn": "2024-05-06T22:41:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "56892e24_ceda4fcb",
      "revId": "176ea2aa084dba7aafc7fe1ab29e19fb4044fe96",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a317685b_678e1a4c",
        "filename": "src/tint/lang/spirv/reader/lower/shader_io.cc",
        "patchSetId": 12
      },
      "lineNbr": 246,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2024-05-06T18:23:04Z",
      "side": 1,
      "message": "Is it possible for `output_descriptors` to be empty?",
      "revId": "176ea2aa084dba7aafc7fe1ab29e19fb4044fe96",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d1e2c846_f667a469",
        "filename": "src/tint/lang/spirv/reader/lower/shader_io.cc",
        "patchSetId": 12
      },
      "lineNbr": 246,
      "author": {
        "id": 1002241
      },
      "writtenOn": "2024-05-06T22:41:49Z",
      "side": 1,
      "message": "No, we early-exit from this function if there are no referenced output variables (at the top).",
      "parentUuid": "a317685b_678e1a4c",
      "revId": "176ea2aa084dba7aafc7fe1ab29e19fb4044fe96",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d2a7f89c_9e0ab568",
        "filename": "src/tint/lang/spirv/reader/lower/shader_io.cc",
        "patchSetId": 12
      },
      "lineNbr": 363,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2024-05-06T18:23:04Z",
      "side": 1,
      "message": "Just match an `As\u003ccore::ir::UserCall\u003e` as it\u0027s the only one handled?",
      "revId": "176ea2aa084dba7aafc7fe1ab29e19fb4044fe96",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b1c78c4e_44147fd8",
        "filename": "src/tint/lang/spirv/reader/lower/shader_io.cc",
        "patchSetId": 12
      },
      "lineNbr": 363,
      "author": {
        "id": 1002241
      },
      "writtenOn": "2024-05-06T22:41:49Z",
      "side": 1,
      "message": "Well, `Return` is also accepted (we just don\u0027t do anything with it), and then we want to ICE on anything else instead of silently accepting it.\n\nBut maybe the `Switch()` was overkill, so I\u0027ve turned it into an `if/else if/else` for those three cases.",
      "parentUuid": "d2a7f89c_9e0ab568",
      "revId": "176ea2aa084dba7aafc7fe1ab29e19fb4044fe96",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "abba8316_427285fb",
        "filename": "src/tint/lang/spirv/reader/lower/shader_io.cc",
        "patchSetId": 12
      },
      "lineNbr": 363,
      "author": {
        "id": 1002241
      },
      "writtenOn": "2024-05-07T15:01:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b1c78c4e_44147fd8",
      "revId": "176ea2aa084dba7aafc7fe1ab29e19fb4044fe96",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}