{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "62d5fd0e_2c176014",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2023-06-08T12:15:53Z",
      "side": 1,
      "message": "Thank you for your contribution.\n\nPlease can I ask why you want an install target?\n\nWe don\u0027t encourage pre-builts as we\u0027ve made no efforts to provide a stable API.\nWe\u0027ve also made little effort to support shared objects.\n\nThis adds _all_ the dawn, tint and third_party headers to the install directory, and almost none of this is meant to be public API.\n\nI\u0027m concerned that this gives the impression that we support pre-builts when we actively discourage them (right now).",
      "revId": "aa78ee31cbb91fbab737dd193e76a7733e68d46b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7e43db88_7e5dfbf0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1003691
      },
      "writtenOn": "2023-06-08T14:16:36Z",
      "side": 1,
      "message": "At the moment I want to include it into a bigger project that has multiple dependencies. Our build tools build things from source and run cmake install to include everything as all other libraries normally do. Do you have a recommendation on how I should depend on dawn as a library?",
      "parentUuid": "62d5fd0e_2c176014",
      "revId": "aa78ee31cbb91fbab737dd193e76a7733e68d46b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "72bde926_5bd6cdeb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-06-08T15:26:57Z",
      "side": 1,
      "message": "Could you statically link to it? But also if it\u0027s just for deployment of your application and not the rest, then it may be sufficient to only install the few Dawn libraries you use and not all the headers.",
      "parentUuid": "7e43db88_7e5dfbf0",
      "revId": "aa78ee31cbb91fbab737dd193e76a7733e68d46b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dcd6bf71_a8c9d29a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1003691
      },
      "writtenOn": "2023-06-08T16:04:44Z",
      "side": 1,
      "message": "Hum, not sure I understand what you mean ðŸ˜•? It is not for the deployment of the library I\u0027m working with. Dawn is a new dependency to this library that, for making life easier to developers, downloads all dependencies with a known working version/commit, builds them from source and install all dependencies in a target folder. I could make changes to code but, not sure what is the suggested way of consuming Dawm.",
      "parentUuid": "72bde926_5bd6cdeb",
      "revId": "aa78ee31cbb91fbab737dd193e76a7733e68d46b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a3a14970_176de297",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-06-14T13:54:50Z",
      "side": 1,
      "message": "Thank you for the patience, I kind of forgot about this thread :/ We need to write better documentation on how to use Dawn, but you should be able to Fetch Dawn with a single commit then use https://source.chromium.org/chromium/chromium/src/+/main:third_party/dawn/tools/fetch_dawn_dependencies.py to get all you need. Then in CMake add-subdirectory and link against webgpu_dawn https://source.chromium.org/chromium/chromium/src/+/main:third_party/dawn/src/dawn/native/CMakeLists.txt;drc\u003dfb59c57a1e1d26397a46c4da25200f840fc7a660;l\u003d687 We should definitely make this better documented.\n\nThat said I\u0027m not a CMake expert and don\u0027t exactly understand the discussion about shared libraries. Are you not linking Dawn statically? Otherwise I think it should be sufficient to copy over libwebgpu_dawn.so\n\nIn general we\u0027d like to avoid having install targets for everything because we don\u0027t think Dawn is a good fit to use in a package manager, and making CMake install targets useful would incentivize package maintainers to create packages.",
      "parentUuid": "dcd6bf71_a8c9d29a",
      "revId": "aa78ee31cbb91fbab737dd193e76a7733e68d46b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "12a5f9e6_cb47b9eb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2023-06-14T14:00:04Z",
      "side": 1,
      "message": "If you just want the minimal dependencies to build you just need the ones in https://github.com/dj2/Radiant/tree/main/third_party.\n\nTo link, you probably want something like https://github.com/dj2/Radiant/blob/main/src/CMakeLists.txt#L89 or https://github.com/dj2/Dusk/blob/main/src/example_04/CMakeLists.txt#L32 depending on if you\u0027re C or CPP.\n\nThe difference between the two is, if you\u0027re using CPP then Dawn provides the GLFW integration in webgpu_glfw. If you aren\u0027t then you have to integrate with GLFW or your own windowing library yourself.",
      "parentUuid": "a3a14970_176de297",
      "revId": "aa78ee31cbb91fbab737dd193e76a7733e68d46b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "21aba346_faa09515",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1003701
      },
      "writtenOn": "2023-06-14T14:32:56Z",
      "side": 1,
      "message": "I have starred this CL as we use conan internally for every dependency and have made a package for dawn; our developers are well-aware that things change a lot and quickly (we bump the version with every beta chromium release), nobody uses the private APIs. Having a semi-official install target for the dawn headers would make this kind of solution (which I imagine it\u0027s widespread to some degree) slightly less hacky.\n\nI understand the sentiment of not wanting to have public prebuilt Dawn packages. On the other hand, not everyone wants to (or can) include the whole dawn sub-tree in their project. The situation has got a lot better with the recent inclusion of the python script for cloning deps, but it\u0027s still \u003e~1k files that end up compiled along with the project sources.\nI\u0027ve also had issues with compile flags \"leaking\" from dawn and/or its third_party dependencies (setting those in the CMakeList is a common but not recommended pratice, especially for a library).",
      "parentUuid": "dcd6bf71_a8c9d29a",
      "revId": "aa78ee31cbb91fbab737dd193e76a7733e68d46b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9d1bd39d_64442ae4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1003691
      },
      "writtenOn": "2023-06-14T16:29:03Z",
      "side": 1,
      "message": "Ah, great to hear about the python script. I haven\u0027t noticed but, that indeed helps my use case as well!",
      "parentUuid": "21aba346_faa09515",
      "revId": "aa78ee31cbb91fbab737dd193e76a7733e68d46b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "49ebe70e_946a81ad",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-06-21T13:06:33Z",
      "side": 1,
      "message": "Sorry for being dense CMake-wise, I\u0027m still trying to understand how this works and would be used: because of Dawn\u0027s C++ API (webgpu_cpp.h but also DawnNative.h), how convenient would pre-builts generated with CMake install be? It seems like you\u0027d need to use the exact same compiler and flags etc to get the ABI to be compatible? Is that ok for your use cases?\n\nAlso if we need to add install targets, then we should add minimal ones, so just webgpu_dawn and the include/dawn headers?",
      "parentUuid": "9d1bd39d_64442ae4",
      "revId": "aa78ee31cbb91fbab737dd193e76a7733e68d46b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8e3b2c85_e22fe180",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1003701
      },
      "writtenOn": "2023-06-22T11:50:24Z",
      "side": 1,
      "message": "Yes, we have all this stuff behind a package manager, so projects would only consume packages with compatible build flags. Our package manager also generates some CMake glue which sets up paths to headers and compiled libraries.\n\nAs for install targets, at least for our usecase just a minimal target for headers would be enough (so that we know for sure we\u0027re not including private APIs)",
      "parentUuid": "49ebe70e_946a81ad",
      "revId": "aa78ee31cbb91fbab737dd193e76a7733e68d46b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "af81d944_6b6a9f71",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1003691
      },
      "writtenOn": "2023-06-22T22:49:57Z",
      "side": 1,
      "message": "Make sense to be careful not to iclude internal headers. Let me confirm if I can reduce it to the minimum but, I\u0027m almost sure that I\u0027m already setting the minimum for Tint",
      "parentUuid": "8e3b2c85_e22fe180",
      "revId": "aa78ee31cbb91fbab737dd193e76a7733e68d46b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1ca197e0_476ebaa0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2023-06-23T00:54:19Z",
      "side": 1,
      "message": "It looks like you\u0027re adding every tint file to the installed headers? Do you need them all or just the generators, or inspector? (or even just the content of include/tint)?",
      "parentUuid": "af81d944_6b6a9f71",
      "revId": "aa78ee31cbb91fbab737dd193e76a7733e68d46b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a546271e_cbe59913",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1003691
      },
      "writtenOn": "2023-06-23T13:20:42Z",
      "side": 1,
      "message": "If you unroll the current imports from tint.h I think you get most of the headers files. Either way, let me fix it correctly by moving it to the include folder and we could discuss from therer. I thick that would make the problem easier to visualize",
      "parentUuid": "1ca197e0_476ebaa0",
      "revId": "aa78ee31cbb91fbab737dd193e76a7733e68d46b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a5a5a647_a1225d32",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2023-06-23T14:00:35Z",
      "side": 1,
      "message": "Ah, i see, because of what `tint.h` includes. Yea, we don\u0027t want to move everything to the include folder as we don\u0027t want people to think everything is included in the public API, as we haven\u0027t defined the public API really.",
      "parentUuid": "a546271e_cbe59913",
      "revId": "aa78ee31cbb91fbab737dd193e76a7733e68d46b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}