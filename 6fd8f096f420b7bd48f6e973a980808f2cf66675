{
  "comments": [
    {
      "key": {
        "uuid": "d36d2059_97d02842",
        "filename": "src/tests/white_box/VulkanImageWrappingTestsDmaBuf.cpp",
        "patchSetId": 1
      },
      "lineNbr": 15,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-02-10T18:55:16Z",
      "side": 1,
      "message": "nit: put this header along others in the second block. DawnTest goes first because it\u0027s kind of the \"main\" header for this file.",
      "revId": "6fd8f096f420b7bd48f6e973a980808f2cf66675",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5016fca6_a7ec91f6",
        "filename": "src/tests/white_box/VulkanImageWrappingTestsDmaBuf.cpp",
        "patchSetId": 1
      },
      "lineNbr": 15,
      "author": {
        "id": 1000505
      },
      "writtenOn": "2020-02-13T20:35:18Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d36d2059_97d02842",
      "revId": "6fd8f096f420b7bd48f6e973a980808f2cf66675",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "43650b96_14d4b647",
        "filename": "src/tests/white_box/VulkanImageWrappingTestsDmaBuf.cpp",
        "patchSetId": 1
      },
      "lineNbr": 40,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-02-10T18:55:16Z",
      "side": 1,
      "message": "We should probably have a DAWN_SKIP_TEST here so that gtest knows to skip the test and not just run the body of the test with part of the initialization skipped.",
      "revId": "6fd8f096f420b7bd48f6e973a980808f2cf66675",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "306caf85_a49f347e",
        "filename": "src/tests/white_box/VulkanImageWrappingTestsDmaBuf.cpp",
        "patchSetId": 1
      },
      "lineNbr": 40,
      "author": {
        "id": 1000505
      },
      "writtenOn": "2020-02-13T20:35:18Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "43650b96_14d4b647",
      "revId": "6fd8f096f420b7bd48f6e973a980808f2cf66675",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ed7586cc_39b3b6f4",
        "filename": "src/tests/white_box/VulkanImageWrappingTestsDmaBuf.cpp",
        "patchSetId": 1
      },
      "lineNbr": 48,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-02-10T18:55:16Z",
      "side": 1,
      "message": "Can we have a small explanation of what these render nodes are and why 128 and 16?",
      "revId": "6fd8f096f420b7bd48f6e973a980808f2cf66675",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8288392e_d77101b8",
        "filename": "src/tests/white_box/VulkanImageWrappingTestsDmaBuf.cpp",
        "patchSetId": 1
      },
      "lineNbr": 48,
      "author": {
        "id": 1000505
      },
      "writtenOn": "2020-02-13T20:35:18Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ed7586cc_39b3b6f4",
      "revId": "6fd8f096f420b7bd48f6e973a980808f2cf66675",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d1a00c63_aba09afc",
        "filename": "src/tests/white_box/VulkanImageWrappingTestsDmaBuf.cpp",
        "patchSetId": 1
      },
      "lineNbr": 151,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-02-10T18:55:16Z",
      "side": 1,
      "message": "Shouldn\u0027t this be done in VulkanImageWrappingTestBase::TearDown?",
      "revId": "6fd8f096f420b7bd48f6e973a980808f2cf66675",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1ad22199_3e0fc051",
        "filename": "src/tests/white_box/VulkanImageWrappingTestsDmaBuf.cpp",
        "patchSetId": 1
      },
      "lineNbr": 151,
      "author": {
        "id": 1000505
      },
      "writtenOn": "2020-02-13T20:35:18Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d1a00c63_aba09afc",
      "revId": "6fd8f096f420b7bd48f6e973a980808f2cf66675",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bb8b8248_0ee8d315",
        "filename": "src/tests/white_box/VulkanImageWrappingTestsDmaBuf.cpp",
        "patchSetId": 1
      },
      "lineNbr": 163,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-02-10T18:55:16Z",
      "side": 1,
      "message": "If the implementation is able to test width/height and format, we should have a test for that too.",
      "revId": "6fd8f096f420b7bd48f6e973a980808f2cf66675",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fdeb4ec0_c19b3b60",
        "filename": "src/tests/white_box/VulkanImageWrappingTestsDmaBuf.cpp",
        "patchSetId": 1
      },
      "lineNbr": 163,
      "author": {
        "id": 1000505
      },
      "writtenOn": "2020-02-13T20:35:18Z",
      "side": 1,
      "message": "Not sure how to best test this. Creating an image can fail if the format and modifier combination is not supported [1], but those pairings are driver-specific and can change at any time. Furthermore, modifiers themselves are just opaque blobs that sometimes have no vendor-supplied documentation [2].\n\nAs for width/height, I don\u0027t think there are any restrictions on size.\n\n[1] https://cs.chromium.org/chromium/src/third_party/dawn/src/dawn_native/vulkan/external_memory/MemoryServiceDmaBuf.cpp?l\u003d112\u0026rcl\u003d2fd618192985122aafb494ac5e9a39f572ef46fc\n[2] https://cs.chromium.org/chromium/src/third_party/libdrm/src/include/drm/drm_fourcc.h?l\u003d213\u0026rcl\u003d0061b1f244574e615c415479725046ab2951f09a",
      "parentUuid": "bb8b8248_0ee8d315",
      "revId": "6fd8f096f420b7bd48f6e973a980808f2cf66675",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "402736ca_83b4c5a7",
        "filename": "src/tests/white_box/VulkanImageWrappingTestsDmaBuf.cpp",
        "patchSetId": 1
      },
      "lineNbr": 163,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-02-14T19:06:22Z",
      "side": 1,
      "message": "Thanks for the pointers, given the format \u003c-\u003e DRM format combination will be checked by the Vulkan driver it makes sense to not validate it. Same thing given it seems there\u0027s no way to get the size of a DMA buf. The test in this file should be enough to at least test that the valid combinations we care about work.",
      "parentUuid": "fdeb4ec0_c19b3b60",
      "revId": "6fd8f096f420b7bd48f6e973a980808f2cf66675",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cdeaa3c1_b4045150",
        "filename": "src/tests/white_box/VulkanImageWrappingTestsDmaBuf.cpp",
        "patchSetId": 1
      },
      "lineNbr": 163,
      "author": {
        "id": 1000505
      },
      "writtenOn": "2020-02-18T20:29:36Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "402736ca_83b4c5a7",
      "revId": "6fd8f096f420b7bd48f6e973a980808f2cf66675",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cc173ccf_3e3c689e",
        "filename": "src/tests/white_box/VulkanImageWrappingTestsDmaBuf.cpp",
        "patchSetId": 1
      },
      "lineNbr": 328,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-02-10T18:55:16Z",
      "side": 1,
      "message": "unit: to be super explicit this could also set the loadOp to wgpu::LoadOp::Clear",
      "revId": "6fd8f096f420b7bd48f6e973a980808f2cf66675",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aee2efd2_61bd57c6",
        "filename": "src/tests/white_box/VulkanImageWrappingTestsDmaBuf.cpp",
        "patchSetId": 1
      },
      "lineNbr": 328,
      "author": {
        "id": 1000505
      },
      "writtenOn": "2020-02-13T20:35:18Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cc173ccf_3e3c689e",
      "revId": "6fd8f096f420b7bd48f6e973a980808f2cf66675",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5444b6b1_a7f1b6af",
        "filename": "src/tests/white_box/VulkanImageWrappingTestsDmaBuf.cpp",
        "patchSetId": 1
      },
      "lineNbr": 370,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-02-10T18:55:16Z",
      "side": 1,
      "message": "Calling this in VulkanImageWrappingTestBase::SetUp should be enough to make it happen across all tests.",
      "revId": "6fd8f096f420b7bd48f6e973a980808f2cf66675",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2d030327_1e80c442",
        "filename": "src/tests/white_box/VulkanImageWrappingTestsDmaBuf.cpp",
        "patchSetId": 1
      },
      "lineNbr": 370,
      "author": {
        "id": 1000505
      },
      "writtenOn": "2020-02-13T20:35:18Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5444b6b1_a7f1b6af",
      "revId": "6fd8f096f420b7bd48f6e973a980808f2cf66675",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9186296a_c01bc77d",
        "filename": "src/tests/white_box/VulkanImageWrappingTestsDmaBuf.cpp",
        "patchSetId": 1
      },
      "lineNbr": 383,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-02-10T18:55:16Z",
      "side": 1,
      "message": "This FD and defaultFD are never closed. Do they need to or is the semantic that the backend takes ownership of the FD? Also why do we need a new FD instead of using defaultFD?",
      "revId": "6fd8f096f420b7bd48f6e973a980808f2cf66675",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "768f5a30_758941b2",
        "filename": "src/tests/white_box/VulkanImageWrappingTestsDmaBuf.cpp",
        "patchSetId": 1
      },
      "lineNbr": 383,
      "author": {
        "id": 1000505
      },
      "writtenOn": "2020-02-13T20:35:18Z",
      "side": 1,
      "message": "As per the Vulkan spec [1], importing a FD into Vulkan transfers ownership of the FD to the Vulkan implementation. We don\u0027t need to worry about closing them on successful import, but since the implementation is free to close them at will, we need to get new FDs for each additional import.\n\nThat being said, I\u0027ve updated a few tests below that are supposed to error on import to actually close their FDs.\n\n[1] https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/VkImportMemoryFdInfoKHR.html",
      "parentUuid": "9186296a_c01bc77d",
      "revId": "6fd8f096f420b7bd48f6e973a980808f2cf66675",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3cc470df_4de05bdc",
        "filename": "src/tests/white_box/VulkanImageWrappingTestsDmaBuf.cpp",
        "patchSetId": 1
      },
      "lineNbr": 393,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-02-10T18:55:16Z",
      "side": 1,
      "message": "Wow that\u0027s a good test, although I\u0027m not sure how much we want to officially support this usecase, it seems like it could be pretty hard to specify at the Dawn API what happens.",
      "revId": "6fd8f096f420b7bd48f6e973a980808f2cf66675",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "549e8b86_8d47c61b",
        "filename": "src/tests/white_box/VulkanImageWrappingTestsDmaBuf.cpp",
        "patchSetId": 1
      },
      "lineNbr": 393,
      "author": {
        "id": 1000505
      },
      "writtenOn": "2020-02-13T20:35:18Z",
      "side": 1,
      "message": "Most of these tests are just copied from the idanr@\u0027s VulkanImageWrappingTests that I branched in this CL. Looking more closely at this one, I could go either way. Is your main concern that the writes are visible on wrappedTextureAlias without waiting on signalFd?",
      "parentUuid": "3cc470df_4de05bdc",
      "revId": "6fd8f096f420b7bd48f6e973a980808f2cf66675",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5368a897_785fcf3c",
        "filename": "src/tests/white_box/VulkanImageWrappingTestsDmaBuf.cpp",
        "patchSetId": 1
      },
      "lineNbr": 393,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-02-14T19:06:22Z",
      "side": 1,
      "message": "Yes, that prevents DMA-buf importing to be doing a new allocation + a copy for each import. That\u0027s probably ok though. Let\u0027s keep the test and see if it breaks at some point or not.",
      "parentUuid": "549e8b86_8d47c61b",
      "revId": "6fd8f096f420b7bd48f6e973a980808f2cf66675",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9e62b9ec_0515ad2e",
        "filename": "src/tests/white_box/VulkanImageWrappingTestsDmaBuf.cpp",
        "patchSetId": 1
      },
      "lineNbr": 393,
      "author": {
        "id": 1000505
      },
      "writtenOn": "2020-02-18T20:29:36Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "5368a897_785fcf3c",
      "revId": "6fd8f096f420b7bd48f6e973a980808f2cf66675",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f9cf0ab8_05e7cb8f",
        "filename": "src/tests/white_box/VulkanImageWrappingTestsDmaBuf.cpp",
        "patchSetId": 1
      },
      "lineNbr": 400,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-02-10T18:55:16Z",
      "side": 1,
      "message": "nit: missing |",
      "range": {
        "startLine": 400,
        "startChar": 32,
        "endLine": 400,
        "endChar": 38
      },
      "revId": "6fd8f096f420b7bd48f6e973a980808f2cf66675",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "16b6c853_25e71c0a",
        "filename": "src/tests/white_box/VulkanImageWrappingTestsDmaBuf.cpp",
        "patchSetId": 1
      },
      "lineNbr": 400,
      "author": {
        "id": 1000505
      },
      "writtenOn": "2020-02-13T20:35:18Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f9cf0ab8_05e7cb8f",
      "range": {
        "startLine": 400,
        "startChar": 32,
        "endLine": 400,
        "endChar": 38
      },
      "revId": "6fd8f096f420b7bd48f6e973a980808f2cf66675",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3e508d9b_79d7092f",
        "filename": "src/tests/white_box/VulkanImageWrappingTestsDmaBuf.cpp",
        "patchSetId": 1
      },
      "lineNbr": 456,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-02-10T18:55:16Z",
      "side": 1,
      "message": "import ... and clear it.",
      "revId": "6fd8f096f420b7bd48f6e973a980808f2cf66675",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dcc88ce6_18002bc2",
        "filename": "src/tests/white_box/VulkanImageWrappingTestsDmaBuf.cpp",
        "patchSetId": 1
      },
      "lineNbr": 456,
      "author": {
        "id": 1000505
      },
      "writtenOn": "2020-02-13T20:35:18Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3e508d9b_79d7092f",
      "revId": "6fd8f096f420b7bd48f6e973a980808f2cf66675",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a258bf48_0549eb48",
        "filename": "src/tests/white_box/VulkanImageWrappingTestsDmaBuf.cpp",
        "patchSetId": 1
      },
      "lineNbr": 490,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-02-10T18:55:16Z",
      "side": 1,
      "message": "nit: here and below in this comment, copy -\u003e clear.",
      "revId": "6fd8f096f420b7bd48f6e973a980808f2cf66675",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aa5b9ec1_5409bf3b",
        "filename": "src/tests/white_box/VulkanImageWrappingTestsDmaBuf.cpp",
        "patchSetId": 1
      },
      "lineNbr": 490,
      "author": {
        "id": 1000505
      },
      "writtenOn": "2020-02-13T20:35:18Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a258bf48_0549eb48",
      "revId": "6fd8f096f420b7bd48f6e973a980808f2cf66675",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "96905e7f_f47fc472",
        "filename": "src/tests/white_box/VulkanImageWrappingTestsDmaBuf.cpp",
        "patchSetId": 1
      },
      "lineNbr": 538,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-02-10T18:55:16Z",
      "side": 1,
      "message": "nit: and clear it",
      "revId": "6fd8f096f420b7bd48f6e973a980808f2cf66675",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4530cad9_f7635144",
        "filename": "src/tests/white_box/VulkanImageWrappingTestsDmaBuf.cpp",
        "patchSetId": 1
      },
      "lineNbr": 538,
      "author": {
        "id": 1000505
      },
      "writtenOn": "2020-02-13T20:35:18Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "96905e7f_f47fc472",
      "revId": "6fd8f096f420b7bd48f6e973a980808f2cf66675",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e218aa27_3bb2b53e",
        "filename": "src/tests/white_box/VulkanImageWrappingTestsDmaBuf.cpp",
        "patchSetId": 1
      },
      "lineNbr": 593,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-02-10T18:55:16Z",
      "side": 1,
      "message": "ditto",
      "revId": "6fd8f096f420b7bd48f6e973a980808f2cf66675",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "46ac9d36_dfa7c55e",
        "filename": "src/tests/white_box/VulkanImageWrappingTestsDmaBuf.cpp",
        "patchSetId": 1
      },
      "lineNbr": 593,
      "author": {
        "id": 1000505
      },
      "writtenOn": "2020-02-13T20:35:18Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e218aa27_3bb2b53e",
      "revId": "6fd8f096f420b7bd48f6e973a980808f2cf66675",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "21061b15_cec2f162",
        "filename": "src/tests/white_box/VulkanImageWrappingTestsDmaBuf.cpp",
        "patchSetId": 1
      },
      "lineNbr": 659,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-02-10T18:55:16Z",
      "side": 1,
      "message": "nit: and clear it",
      "revId": "6fd8f096f420b7bd48f6e973a980808f2cf66675",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "69a2570c_d62e8dc9",
        "filename": "src/tests/white_box/VulkanImageWrappingTestsDmaBuf.cpp",
        "patchSetId": 1
      },
      "lineNbr": 659,
      "author": {
        "id": 1000505
      },
      "writtenOn": "2020-02-13T20:35:18Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "21061b15_cec2f162",
      "revId": "6fd8f096f420b7bd48f6e973a980808f2cf66675",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    }
  ]
}