{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "f51f3f26_5ff49092",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1003201
      },
      "writtenOn": "2022-11-26T20:34:51Z",
      "side": 1,
      "message": "I\u0027m thinking where I should add a unit test for this change. I wanted to refer to how similar getter methods are tested and ran `find ./src/dawn/tests/ -print0 | xargs -0 grep APIGet 2\u003e/dev/null` but such tests couldn\u0027t be found.\n\nWe don\u0027t test getter methods in dawn unittests but do test readonly properties in CTS or somewhere else?",
      "revId": "f0722521786dc86ab7d05e492fcd084d992d28e1",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a388894b_da7ee29b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1003201
      },
      "writtenOn": "2022-11-26T20:35:20Z",
      "side": 1,
      "message": "Mark as unresolved",
      "parentUuid": "f51f3f26_5ff49092",
      "revId": "f0722521786dc86ab7d05e492fcd084d992d28e1",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e3fe3e25_c4f243bf",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-11-28T10:20:57Z",
      "side": 1,
      "message": "LGTM % tests and wire part.",
      "revId": "f0722521786dc86ab7d05e492fcd084d992d28e1",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "81d18f60_8a41505a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1003201
      },
      "writtenOn": "2022-12-08T06:34:31Z",
      "side": 1,
      "message": "Any advices for getter test?",
      "parentUuid": "a388894b_da7ee29b",
      "revId": "f0722521786dc86ab7d05e492fcd084d992d28e1",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f708da13_d462897b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2022-12-08T18:22:42Z",
      "side": 1,
      "message": "probably in:\nthird_party/dawn/src/dawn/tests/unittests/validation/BufferValidationTests.cpp\nthird_party/dawn/src/dawn/tests/unittests/wire/WireBufferMappingTests.cpp\n\nMost could be in BufferValidationTests which run both with and without the wire (argument --use-wire)\n\nWireBufferMappingTests would be for when you want to control exactly when the mapping callbacks get called with mocks. That way you could for example map, call the map callback immediately, and then check inside the callback that the state is as you expect",
      "parentUuid": "81d18f60_8a41505a",
      "revId": "f0722521786dc86ab7d05e492fcd084d992d28e1",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "348199ee_c04ab516",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1003201
      },
      "writtenOn": "2022-12-08T21:23:32Z",
      "side": 1,
      "message": "Thanks for the advice.\n\nI want to know the getter test pocily in the dawn unittest. As I mentioned above I couldn\u0027t find any test cases to test simple getter APIs, eg `Buffer:APIGetSize()`, in the unittests. I thought we don\u0027t test simple getters because they are too simple like just returning a member value. But we want to test `GetMapState()` because it isn\u0027t just a simple getter but returns a state depending on buffer map state. Is my speculation correct?",
      "parentUuid": "f708da13_d462897b",
      "revId": "f0722521786dc86ab7d05e492fcd084d992d28e1",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8b29f38b_404bf5ed",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2022-12-08T23:41:02Z",
      "side": 1,
      "message": "you probably didn\u0027t find it because it\u0027s called via GetSize() and then autogenerated code will pipe that to APIGetSize.\n\nSee tests for that added in this CL:\nhttps://dawn-review.googlesource.com/c/dawn/+/92440",
      "parentUuid": "348199ee_c04ab516",
      "revId": "f0722521786dc86ab7d05e492fcd084d992d28e1",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "12a8158e_45c04f86",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1003201
      },
      "writtenOn": "2022-12-17T08:38:20Z",
      "side": 1,
      "message": "Thanks. Added tests.",
      "parentUuid": "8b29f38b_404bf5ed",
      "revId": "f0722521786dc86ab7d05e492fcd084d992d28e1",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b1b3fd5b_f5a4cc81",
        "filename": "src/dawn/native/Buffer.cpp",
        "patchSetId": 2
      },
      "lineNbr": 244,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-11-28T10:20:57Z",
      "side": 1,
      "message": "nit: We could use a switch to make sure all cases are handled.",
      "revId": "f0722521786dc86ab7d05e492fcd084d992d28e1",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ab0873fc_de48bf85",
        "filename": "src/dawn/native/Buffer.cpp",
        "patchSetId": 2
      },
      "lineNbr": 244,
      "author": {
        "id": 1003201
      },
      "writtenOn": "2022-12-08T06:34:31Z",
      "side": 1,
      "message": "Sounds good to me. Updated, thanks.",
      "parentUuid": "b1b3fd5b_f5a4cc81",
      "revId": "f0722521786dc86ab7d05e492fcd084d992d28e1",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "49d0ad26_30470207",
        "filename": "src/dawn/wire/client/Buffer.cpp",
        "patchSetId": 2
      },
      "lineNbr": 398,
      "author": {
        "id": 1003201
      },
      "writtenOn": "2022-11-26T20:34:51Z",
      "side": 1,
      "message": "I\u0027m not sure how buffer map state should be handled in wire so it logs error for now. Please see https://bugs.chromium.org/p/chromium/issues/detail?id\u003d1355994#c14\n\nI\u0027m thinking of implementing properly in this CL later or another follow up CL.",
      "revId": "f0722521786dc86ab7d05e492fcd084d992d28e1",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3c81c3d8_bfc15a12",
        "filename": "src/dawn/wire/client/Buffer.cpp",
        "patchSetId": 2
      },
      "lineNbr": 398,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-11-28T10:20:57Z",
      "side": 1,
      "message": "That could work though TBH we might as well wait for the wire part to be implemented first. Also we would use UNIMPLEMENTED here instead of a log.",
      "parentUuid": "49d0ad26_30470207",
      "revId": "f0722521786dc86ab7d05e492fcd084d992d28e1",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "122dd539_74f6c2df",
        "filename": "src/dawn/wire/client/Buffer.cpp",
        "patchSetId": 2
      },
      "lineNbr": 398,
      "author": {
        "id": 1003201
      },
      "writtenOn": "2022-12-08T06:34:31Z",
      "side": 1,
      "message": "\u003e Also we would use UNIMPLEMENTED here instead of a log.\n\nI wanted to use UNIMPLEMENTED but I couldn\u0027t find it under src/dawn/wire although I found UNIMPLEMENTED unser src/dawn/node and DAWN_UNIMPLEMENTED_ERROR under src/dawn/native.\n\nI thought of newly defining UNIMPLEMENTED under src/dawn/wire but it may not be needed because probably the implementation for wire will be coming sooner or later.\n\nWhat do you think?",
      "parentUuid": "3c81c3d8_bfc15a12",
      "revId": "f0722521786dc86ab7d05e492fcd084d992d28e1",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "559b3161_f04371c6",
        "filename": "src/dawn/wire/client/Buffer.cpp",
        "patchSetId": 2
      },
      "lineNbr": 398,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-12-08T12:08:16Z",
      "side": 1,
      "message": "Ah sorry, I meant UNREACHABLE() https://source.chromium.org/chromium/chromium/src/+/main:third_party/dawn/src/dawn/common/Assert.h;drc\u003d7e74c218738e637d4e9fdaff9dd5c38ca92ed1c3;l\u003d72\n\nDo you need someone else to look at the dawn_wire part or are you planning to handle it? We\u0027re gearing towards V1 so I want to make sure that we don\u0027t have things in the critical path that are blocked.",
      "parentUuid": "122dd539_74f6c2df",
      "revId": "f0722521786dc86ab7d05e492fcd084d992d28e1",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8a793e76_d0921773",
        "filename": "src/dawn/wire/client/Buffer.cpp",
        "patchSetId": 2
      },
      "lineNbr": 398,
      "author": {
        "id": 1003201
      },
      "writtenOn": "2022-12-08T21:23:32Z",
      "side": 1,
      "message": "Hm, the name `UNREACHABLE()` sounds like \"this path shouldn\u0027t be executed so no worry\" but this path can be executed by applications if they call `Buffer::GetMapState()`. So might be confusing? (Sorry if my overthinking)\n\n\u003e Do you need someone else to look at the dawn_wire part or are you planning to handle it?\n\nI\u0027m thinking of working on wire. (Sorry if my progress is slow because I only work on WebGPU stuffs in my spare time.) I will start to work on wire soon. Probably I will have bunch of questions because I\u0027m new to wire. I\u0027d be happy if you or someone else would help.",
      "parentUuid": "559b3161_f04371c6",
      "revId": "f0722521786dc86ab7d05e492fcd084d992d28e1",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4ca51df5_d8ec235e",
        "filename": "src/dawn/wire/client/Buffer.cpp",
        "patchSetId": 2
      },
      "lineNbr": 398,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2022-12-08T23:41:02Z",
      "side": 1,
      "message": "that\u0027s ok; please feel free to take a look at implementing it there",
      "parentUuid": "8a793e76_d0921773",
      "revId": "f0722521786dc86ab7d05e492fcd084d992d28e1",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "51f0fee5_57790bd1",
        "filename": "src/dawn/wire/client/Buffer.cpp",
        "patchSetId": 2
      },
      "lineNbr": 398,
      "author": {
        "id": 1003201
      },
      "writtenOn": "2022-12-11T04:25:57Z",
      "side": 1,
      "message": "Made a CL for early mapAsync rejection in wire.\n\nhttps://dawn-review.googlesource.com/c/dawn/+/113607\n\nI hope we can first merge it and then update this CL to properly implement GetMapState() in wire.",
      "parentUuid": "4ca51df5_d8ec235e",
      "revId": "f0722521786dc86ab7d05e492fcd084d992d28e1",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "66bb4125_4998ca80",
        "filename": "src/dawn/wire/client/Buffer.cpp",
        "patchSetId": 2
      },
      "lineNbr": 398,
      "author": {
        "id": 1003201
      },
      "writtenOn": "2022-12-17T05:36:02Z",
      "side": 1,
      "message": "The CL has been merged and I also implemented GetMapState() in wire.",
      "parentUuid": "51f0fee5_57790bd1",
      "revId": "f0722521786dc86ab7d05e492fcd084d992d28e1",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d3f7ce3b_dbb62b50",
        "filename": "src/dawn/wire/client/Buffer.cpp",
        "patchSetId": 2
      },
      "lineNbr": 398,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-12-18T11:46:08Z",
      "side": 1,
      "message": "Nice!",
      "parentUuid": "66bb4125_4998ca80",
      "revId": "f0722521786dc86ab7d05e492fcd084d992d28e1",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}