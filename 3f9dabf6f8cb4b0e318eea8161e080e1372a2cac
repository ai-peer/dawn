{
  "comments": [
    {
      "key": {
        "uuid": "ffd37c21_09203407",
        "filename": "src/dawn_native/Buffer.cpp",
        "patchSetId": 7
      },
      "lineNbr": 202,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-01-23T18:11:30Z",
      "side": 1,
      "message": "Maybe we could have DeviceBase::IsLost so these calls become GetDevice()-\u003eIsLost()",
      "revId": "3f9dabf6f8cb4b0e318eea8161e080e1372a2cac",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b9a9cac6_58724a89",
        "filename": "src/dawn_native/Buffer.cpp",
        "patchSetId": 7
      },
      "lineNbr": 287,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-01-23T18:11:30Z",
      "side": 1,
      "message": "Maybe this could be a ValidateMap(usage, *callbackStatusOut). It could make the logic a bit simpler. ditto for read.",
      "revId": "3f9dabf6f8cb4b0e318eea8161e080e1372a2cac",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "57a80502_3b6665c2",
        "filename": "src/dawn_native/Device.cpp",
        "patchSetId": 7
      },
      "lineNbr": 483,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-01-23T18:11:30Z",
      "side": 1,
      "message": "This is already done in CreateBufferMapped\u0027s call to CreateBufferInternal.",
      "revId": "3f9dabf6f8cb4b0e318eea8161e080e1372a2cac",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "701ab6b3_b93308a0",
        "filename": "src/tests/end2end/DeviceLostTests.cpp",
        "patchSetId": 7
      },
      "lineNbr": 56,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-01-23T18:11:30Z",
      "side": 1,
      "message": "nit: CheckMapWriteFail?, same for Read",
      "range": {
        "startLine": 56,
        "startChar": 16,
        "endLine": 56,
        "endChar": 36
      },
      "revId": "3f9dabf6f8cb4b0e318eea8161e080e1372a2cac",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a2822b61_5f568a0d",
        "filename": "src/tests/end2end/DeviceLostTests.cpp",
        "patchSetId": 7
      },
      "lineNbr": 261,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-01-23T18:11:30Z",
      "side": 1,
      "message": "Nice test coverage!",
      "range": {
        "startLine": 241,
        "startChar": 0,
        "endLine": 261,
        "endChar": 1
      },
      "revId": "3f9dabf6f8cb4b0e318eea8161e080e1372a2cac",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cc92238b_048d5049",
        "filename": "src/tests/end2end/DeviceLostTests.cpp",
        "patchSetId": 7
      },
      "lineNbr": 304,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-01-23T18:11:30Z",
      "side": 1,
      "message": "we should also check these values are nullptr and 0",
      "range": {
        "startLine": 303,
        "startChar": 1,
        "endLine": 304,
        "endChar": 62
      },
      "revId": "3f9dabf6f8cb4b0e318eea8161e080e1372a2cac",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b93b174f_b1b40ea2",
        "filename": "src/tests/end2end/DeviceLostTests.cpp",
        "patchSetId": 7
      },
      "lineNbr": 326,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-01-23T18:11:30Z",
      "side": 1,
      "message": "Why is this needed? ditto in the other test below.",
      "range": {
        "startLine": 323,
        "startChar": 0,
        "endLine": 326,
        "endChar": 0
      },
      "revId": "3f9dabf6f8cb4b0e318eea8161e080e1372a2cac",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e8431f45_36129a9f",
        "filename": "src/tests/end2end/DeviceLostTests.cpp",
        "patchSetId": 7
      },
      "lineNbr": 345,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-01-23T18:11:30Z",
      "side": 1,
      "message": "Can we also have a test for SetSubData?",
      "revId": "3f9dabf6f8cb4b0e318eea8161e080e1372a2cac",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    }
  ]
}