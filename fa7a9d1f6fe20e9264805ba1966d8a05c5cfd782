{
  "comments": [
    {
      "key": {
        "uuid": "d21c2c5b_adb6389c",
        "filename": "src/dawn_native/BuddyAllocator.h",
        "patchSetId": 4
      },
      "lineNbr": 38,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2019-09-06T13:02:49Z",
      "side": 1,
      "message": "In which case do we need this?",
      "revId": "fa7a9d1f6fe20e9264805ba1966d8a05c5cfd782",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5a0ead6e_4f1bbc9d",
        "filename": "src/dawn_native/BuddyAllocator.h",
        "patchSetId": 4
      },
      "lineNbr": 38,
      "author": {
        "id": 1000268
      },
      "writtenOn": "2019-09-09T18:49:27Z",
      "side": 1,
      "message": "It\u0027s a class member that gets automatically instantiated in BuddyResourceHeapAllocator.",
      "parentUuid": "d21c2c5b_adb6389c",
      "revId": "fa7a9d1f6fe20e9264805ba1966d8a05c5cfd782",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "04acc10e_cdf0ed57",
        "filename": "src/dawn_native/BuddyAllocator.h",
        "patchSetId": 4
      },
      "lineNbr": 38,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2019-09-10T12:12:35Z",
      "side": 1,
      "message": "I think it will be unused if you remove the default constructor for BuddyResourceHeapAllocator.",
      "parentUuid": "5a0ead6e_4f1bbc9d",
      "revId": "fa7a9d1f6fe20e9264805ba1966d8a05c5cfd782",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "48c41eaa_e1dfb995",
        "filename": "src/dawn_native/BuddyAllocator.h",
        "patchSetId": 4
      },
      "lineNbr": 38,
      "author": {
        "id": 1000268
      },
      "writtenOn": "2019-09-11T22:25:23Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "04acc10e_cdf0ed57",
      "revId": "fa7a9d1f6fe20e9264805ba1966d8a05c5cfd782",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "67a95656_99d5f116",
        "filename": "src/dawn_native/BuddyResourceHeapAllocator.cpp",
        "patchSetId": 4
      },
      "lineNbr": 35,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2019-09-06T13:02:49Z",
      "side": 1,
      "message": "I must be missing something.\n\nRight now ResourceMemoryAllocation is too many things: it represents both an ID3D12Heap and an ID3D12Resource with metadata like how it was allocated and where it was allocated in the ID3D12Heap.\n\nLikewise ResourceHeapBase is used both to return ID3D12Heaps from the ResourceMemoryAllocator, and hold ID3D12Resources for ResourceMemoryAllocations in d3d12::Buffer for example.\n\nI suggest having ResourceHeapBase represent an ID3D12Heap and its size and that\u0027s it, while ResourceMemoryAllocation represents an ID3D12Resource, how it was allocated and it\u0027s offset in the ID3D12Heap.",
      "revId": "fa7a9d1f6fe20e9264805ba1966d8a05c5cfd782",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fe40d575_a031c7cd",
        "filename": "src/dawn_native/BuddyResourceHeapAllocator.cpp",
        "patchSetId": 4
      },
      "lineNbr": 35,
      "author": {
        "id": 1000268
      },
      "writtenOn": "2019-09-09T18:49:27Z",
      "side": 1,
      "message": "If ResourceHeapBase only represents a ID3D12Heap, shouldn\u0027t it be called as such (ie. HeapBase)? There is no resource.\n\nWe could have separate types with your suggestions, ResourceBase and HeapBase, for ID3D12Resource and ID3D12Heap respectively. ResourceMemoryAllocation would contain a ResourceBase.\n\nWDYT?",
      "parentUuid": "67a95656_99d5f116",
      "revId": "fa7a9d1f6fe20e9264805ba1966d8a05c5cfd782",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c5c1c21b_12126573",
        "filename": "src/dawn_native/BuddyResourceHeapAllocator.cpp",
        "patchSetId": 4
      },
      "lineNbr": 35,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2019-09-10T12:12:35Z",
      "side": 1,
      "message": "That sounds good. An alternative is to not have ResourceBase at all, and instead have backends pass around a type that contains both a ResourceMemoryAllocation (with no ResourceBase) and the ID3D12Resource. Either would work.",
      "parentUuid": "fe40d575_a031c7cd",
      "revId": "fa7a9d1f6fe20e9264805ba1966d8a05c5cfd782",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "54d311f2_746b1c82",
        "filename": "src/dawn_native/BuddyResourceHeapAllocator.cpp",
        "patchSetId": 4
      },
      "lineNbr": 35,
      "author": {
        "id": 1000268
      },
      "writtenOn": "2019-09-11T22:25:23Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c5c1c21b_12126573",
      "revId": "fa7a9d1f6fe20e9264805ba1966d8a05c5cfd782",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "50529d14_8c94a469",
        "filename": "src/dawn_native/BuddyResourceHeapAllocator.cpp",
        "patchSetId": 4
      },
      "lineNbr": 43,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2019-09-06T13:02:49Z",
      "side": 1,
      "message": "I think return {}; should work.",
      "revId": "fa7a9d1f6fe20e9264805ba1966d8a05c5cfd782",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bbc62481_3e35f66c",
        "filename": "src/dawn_native/BuddyResourceHeapAllocator.cpp",
        "patchSetId": 4
      },
      "lineNbr": 43,
      "author": {
        "id": 1000268
      },
      "writtenOn": "2019-09-09T18:49:27Z",
      "side": 1,
      "message": "It does not. Compiler cannot infer the appropriate default constructor without a source type.",
      "parentUuid": "50529d14_8c94a469",
      "revId": "fa7a9d1f6fe20e9264805ba1966d8a05c5cfd782",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b76319d1_1407e76a",
        "filename": "src/dawn_native/BuddyResourceHeapAllocator.cpp",
        "patchSetId": 4
      },
      "lineNbr": 43,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2019-09-10T12:12:35Z",
      "side": 1,
      "message": "Ack :(",
      "parentUuid": "bbc62481_3e35f66c",
      "revId": "fa7a9d1f6fe20e9264805ba1966d8a05c5cfd782",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b25f5294_bed76556",
        "filename": "src/dawn_native/BuddyResourceHeapAllocator.cpp",
        "patchSetId": 4
      },
      "lineNbr": 43,
      "author": {
        "id": 1000268
      },
      "writtenOn": "2019-09-11T22:25:23Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b76319d1_1407e76a",
      "revId": "fa7a9d1f6fe20e9264805ba1966d8a05c5cfd782",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d5c1000d_562db566",
        "filename": "src/dawn_native/BuddyResourceHeapAllocator.cpp",
        "patchSetId": 4
      },
      "lineNbr": 54,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2019-09-06T13:02:49Z",
      "side": 1,
      "message": "Since we know the maximum number of heaps at creation, could we size the vector correctly at that time? This way only the \"mTrackedSubAllocations[heapIndex].refcount \u003d\u003d 0\" condition needs to be checked.",
      "revId": "fa7a9d1f6fe20e9264805ba1966d8a05c5cfd782",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4168b456_5e9fe7c4",
        "filename": "src/dawn_native/BuddyResourceHeapAllocator.cpp",
        "patchSetId": 4
      },
      "lineNbr": 54,
      "author": {
        "id": 1000268
      },
      "writtenOn": "2019-09-09T18:49:27Z",
      "side": 1,
      "message": "The following code block sizes the vector AND creates the minimum number of heaps required to satisfy the request. Following the buddy system, lower address will be used first and only those heaps need to be created. \n\nWe can size the vector during the creation of the allocator, though. However, this could waste space if the allocator is never used.",
      "parentUuid": "d5c1000d_562db566",
      "revId": "fa7a9d1f6fe20e9264805ba1966d8a05c5cfd782",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8409122f_ba9b2392",
        "filename": "src/dawn_native/BuddyResourceHeapAllocator.cpp",
        "patchSetId": 4
      },
      "lineNbr": 54,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2019-09-10T12:12:35Z",
      "side": 1,
      "message": "I wouldn\u0027t worry about the CPU space wasted yet, it\u0027s difficult to simplify code in the future but optimizing it is easy.",
      "parentUuid": "4168b456_5e9fe7c4",
      "revId": "fa7a9d1f6fe20e9264805ba1966d8a05c5cfd782",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "36b75fc4_269b9aed",
        "filename": "src/dawn_native/BuddyResourceHeapAllocator.cpp",
        "patchSetId": 4
      },
      "lineNbr": 54,
      "author": {
        "id": 1000268
      },
      "writtenOn": "2019-09-11T22:25:23Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8409122f_ba9b2392",
      "revId": "fa7a9d1f6fe20e9264805ba1966d8a05c5cfd782",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f3e537d7_e6cc373f",
        "filename": "src/dawn_native/BuddyResourceHeapAllocator.cpp",
        "patchSetId": 4
      },
      "lineNbr": 74,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2019-09-06T13:02:49Z",
      "side": 1,
      "message": "Isn\u0027t this the offset in the heap? Right now it the offset since the start of the vector of heaps and will cause issues when we use CreatePlacedResource.",
      "range": {
        "startLine": 74,
        "startChar": 12,
        "endLine": 74,
        "endChar": 18
      },
      "revId": "fa7a9d1f6fe20e9264805ba1966d8a05c5cfd782",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "662cf485_83bf9a91",
        "filename": "src/dawn_native/BuddyResourceHeapAllocator.cpp",
        "patchSetId": 4
      },
      "lineNbr": 74,
      "author": {
        "id": 1000268
      },
      "writtenOn": "2019-09-09T18:49:27Z",
      "side": 1,
      "message": "This was the block (not heap) offset. But thinking some more, overloading the meaning was a poor choice. To remove this confusion, I\u0027ve created AllocationInfo struct to contain these details.",
      "parentUuid": "f3e537d7_e6cc373f",
      "range": {
        "startLine": 74,
        "startChar": 12,
        "endLine": 74,
        "endChar": 18
      },
      "revId": "fa7a9d1f6fe20e9264805ba1966d8a05c5cfd782",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "902e2735_bad9fae4",
        "filename": "src/dawn_native/BuddyResourceHeapAllocator.cpp",
        "patchSetId": 4
      },
      "lineNbr": 74,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2019-09-10T12:12:35Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "662cf485_83bf9a91",
      "range": {
        "startLine": 74,
        "startChar": 12,
        "endLine": 74,
        "endChar": 18
      },
      "revId": "fa7a9d1f6fe20e9264805ba1966d8a05c5cfd782",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f743b6de_91718bb5",
        "filename": "src/dawn_native/BuddyResourceHeapAllocator.cpp",
        "patchSetId": 4
      },
      "lineNbr": 74,
      "author": {
        "id": 1000268
      },
      "writtenOn": "2019-09-11T22:25:23Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "902e2735_bad9fae4",
      "range": {
        "startLine": 74,
        "startChar": 12,
        "endLine": 74,
        "endChar": 18
      },
      "revId": "fa7a9d1f6fe20e9264805ba1966d8a05c5cfd782",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fcc244d7_e6f13cea",
        "filename": "src/dawn_native/BuddyResourceHeapAllocator.h",
        "patchSetId": 4
      },
      "lineNbr": 39,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2019-09-06T13:02:49Z",
      "side": 1,
      "message": "ditto",
      "revId": "fa7a9d1f6fe20e9264805ba1966d8a05c5cfd782",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2938cc89_ab7a79f4",
        "filename": "src/dawn_native/BuddyResourceHeapAllocator.h",
        "patchSetId": 4
      },
      "lineNbr": 39,
      "author": {
        "id": 1000268
      },
      "writtenOn": "2019-09-09T18:49:27Z",
      "side": 1,
      "message": "Removed.",
      "parentUuid": "fcc244d7_e6f13cea",
      "revId": "fa7a9d1f6fe20e9264805ba1966d8a05c5cfd782",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b55d5c0a_737d7f80",
        "filename": "src/dawn_native/BuddyResourceHeapAllocator.h",
        "patchSetId": 4
      },
      "lineNbr": 39,
      "author": {
        "id": 1000268
      },
      "writtenOn": "2019-09-11T22:25:23Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2938cc89_ab7a79f4",
      "revId": "fa7a9d1f6fe20e9264805ba1966d8a05c5cfd782",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c3521ecc_a29c1dbf",
        "filename": "src/tests/unittests/BuddyResourceAllocatorTests.cpp",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2019-09-06T13:02:49Z",
      "side": 1,
      "message": "I didn\u0027t look at this yet.",
      "revId": "fa7a9d1f6fe20e9264805ba1966d8a05c5cfd782",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2036d56b_426c143d",
        "filename": "src/tests/unittests/BuddyResourceAllocatorTests.cpp",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000268
      },
      "writtenOn": "2019-09-23T18:28:52Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "c3521ecc_a29c1dbf",
      "revId": "fa7a9d1f6fe20e9264805ba1966d8a05c5cfd782",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    }
  ]
}