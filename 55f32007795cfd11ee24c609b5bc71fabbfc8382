{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "3c272c6c_fc0c2203",
        "filename": "dawn.json",
        "patchSetId": 19
      },
      "lineNbr": 60,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2023-06-15T23:14:55Z",
      "side": 1,
      "message": "Maybe this can be core? webgpu.h already has an enum of all of the backend types.",
      "revId": "55f32007795cfd11ee24c609b5bc71fabbfc8382",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9dbae865_5aa21f83",
        "filename": "dawn.json",
        "patchSetId": 19
      },
      "lineNbr": 60,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-06-16T20:20:10Z",
      "side": 1,
      "message": "core meaning inside the main \"request adapter options\" ? if so, we need a BackendType::Undefined meaning you don\u0027t care.\n\nor core meaning just in upstream webgpu.h header? probably yes - and Emscripten can implement it by giving you no adapters unless you ask for \"WebGPU\" ? a little wonky but probably fine\n\nregardless, would be nice to get this refactor in first and then see about upstreaming",
      "parentUuid": "3c272c6c_fc0c2203",
      "revId": "55f32007795cfd11ee24c609b5bc71fabbfc8382",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "875c7590_7576abdf",
        "filename": "dawn.json",
        "patchSetId": 19
      },
      "lineNbr": 60,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-06-16T20:22:02Z",
      "side": 1,
      "message": "second thought - I do think it should be an extension struct, otherwise to avoid porting hazards, we have to make backendType best effort when applications probably want it to be a hard requirement if they\u0027re using it.",
      "parentUuid": "9dbae865_5aa21f83",
      "revId": "55f32007795cfd11ee24c609b5bc71fabbfc8382",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5c89f46f_f7905629",
        "filename": "dawn.json",
        "patchSetId": 19
      },
      "lineNbr": 60,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2023-06-16T20:50:05Z",
      "side": 1,
      "message": "Core meaning both, and yes to all of the things you said about it.\n\nI don\u0027t think it\u0027s that much of a porting hazard to make it a hard requirement. If you\u0027re trying to write portable code and you ask for d3d12, you\u0027ll immediately know you\u0027ve done something non-portable.",
      "parentUuid": "875c7590_7576abdf",
      "revId": "55f32007795cfd11ee24c609b5bc71fabbfc8382",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c4a733d9_650cbc62",
        "filename": "dawn.json",
        "patchSetId": 19
      },
      "lineNbr": 60,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-06-16T21:04:35Z",
      "side": 1,
      "message": "\"both\" \n\ninside the main \"request adapter options\" with undefined as the default?",
      "parentUuid": "5c89f46f_f7905629",
      "revId": "55f32007795cfd11ee24c609b5bc71fabbfc8382",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ed520727_aa2423b0",
        "filename": "dawn.json",
        "patchSetId": 19
      },
      "lineNbr": 60,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2023-06-16T21:44:41Z",
      "side": 1,
      "message": "Yes, and in the upstream header.",
      "parentUuid": "c4a733d9_650cbc62",
      "revId": "55f32007795cfd11ee24c609b5bc71fabbfc8382",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "97ea1c21_938014fc",
        "filename": "docs/dawn/features/adapter_options.md",
        "patchSetId": 19
      },
      "lineNbr": 17,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2023-06-15T22:08:29Z",
      "side": 1,
      "message": "typo",
      "range": {
        "startLine": 17,
        "startChar": 103,
        "endLine": 17,
        "endChar": 105
      },
      "revId": "55f32007795cfd11ee24c609b5bc71fabbfc8382",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "424cc8f8_01514cc7",
        "filename": "docs/dawn/features/adapter_options.md",
        "patchSetId": 19
      },
      "lineNbr": 17,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-06-15T23:04:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "97ea1c21_938014fc",
      "range": {
        "startLine": 17,
        "startChar": 103,
        "endLine": 17,
        "endChar": 105
      },
      "revId": "55f32007795cfd11ee24c609b5bc71fabbfc8382",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b7e4db3f_8b6a7b6b",
        "filename": "generator/templates/dawn/native/ChainUtils.h",
        "patchSetId": 19
      },
      "lineNbr": 32,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2023-06-15T22:08:29Z",
      "side": 1,
      "message": "Should this be `{{namespace}}`?",
      "range": {
        "startLine": 32,
        "startChar": 11,
        "endLine": 32,
        "endChar": 15
      },
      "revId": "55f32007795cfd11ee24c609b5bc71fabbfc8382",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7b877366_8fb7b0f1",
        "filename": "generator/templates/dawn/native/ChainUtils.h",
        "patchSetId": 19
      },
      "lineNbr": 32,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-06-15T23:04:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b7e4db3f_8b6a7b6b",
      "range": {
        "startLine": 32,
        "startChar": 11,
        "endLine": 32,
        "endChar": 15
      },
      "revId": "55f32007795cfd11ee24c609b5bc71fabbfc8382",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "951a1c42_5c7232c6",
        "filename": "include/dawn/native/OpenGLBackend.h",
        "patchSetId": 19
      },
      "lineNbr": 29,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2023-06-15T23:14:55Z",
      "side": 1,
      "message": "In principle I think this could be an array (of multiple GL implementations)",
      "revId": "55f32007795cfd11ee24c609b5bc71fabbfc8382",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "759fa39a_505831f8",
        "filename": "include/dawn/native/OpenGLBackend.h",
        "patchSetId": 19
      },
      "lineNbr": 29,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-06-16T10:42:56Z",
      "side": 1,
      "message": "Can\u0027t we discover a single GL driver at the moment though?",
      "parentUuid": "951a1c42_5c7232c6",
      "revId": "55f32007795cfd11ee24c609b5bc71fabbfc8382",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5945150d_e96f94a2",
        "filename": "include/dawn/native/OpenGLBackend.h",
        "patchSetId": 19
      },
      "lineNbr": 29,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2023-06-16T17:11:33Z",
      "side": 1,
      "message": "Yeah, I saw a comment about that. But if we did already know about multiple GL drivers then we could pass multiple in here.\n\nThat said it\u0027s probably never going to come up (since swiftshader is vulkan), and if it does I think it\u0027s OK if we break this interface or make a new one.",
      "parentUuid": "759fa39a_505831f8",
      "revId": "55f32007795cfd11ee24c609b5bc71fabbfc8382",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2b92bf19_f7cc56ec",
        "filename": "include/dawn/native/OpenGLBackend.h",
        "patchSetId": 19
      },
      "lineNbr": 29,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-06-16T17:13:15Z",
      "side": 1,
      "message": "also, the app could call it multiple times with different getProc if they really want multiple impls\n\nsame for the DXGI adapter one. I thought about making it multiple, but it seems equivalent and simpler to push that burden on the caller since it doesn\u0027t seem particularly common",
      "parentUuid": "759fa39a_505831f8",
      "revId": "55f32007795cfd11ee24c609b5bc71fabbfc8382",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a00b0a8d_2f4756ee",
        "filename": "include/dawn/native/OpenGLBackend.h",
        "patchSetId": 19
      },
      "lineNbr": 29,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2023-06-16T17:20:29Z",
      "side": 1,
      "message": "SGTM",
      "parentUuid": "2b92bf19_f7cc56ec",
      "revId": "55f32007795cfd11ee24c609b5bc71fabbfc8382",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "20e5a097_2df21f73",
        "filename": "src/dawn/native/Instance.cpp",
        "patchSetId": 19
      },
      "lineNbr": 354,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2023-06-15T23:14:55Z",
      "side": 1,
      "message": "I\u0027m not sure this behavior is good, for a few reasons:\n- You can\u0027t do this except by passing options\u003dnull, which means it\u0027s not possible to pass any other options while also requesting all adapters\n- (minor) an application which assumes it won\u0027t get any compat adapters will break when it starts getting compat adapters, e.g. if it switches from wgpu-native to dawn",
      "revId": "55f32007795cfd11ee24c609b5bc71fabbfc8382",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1ff5cb7e_e308b222",
        "filename": "src/dawn/native/Instance.cpp",
        "patchSetId": 19
      },
      "lineNbr": 354,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-06-16T20:20:10Z",
      "side": 1,
      "message": "good points. I made this return only core adapters then",
      "parentUuid": "20e5a097_2df21f73",
      "revId": "55f32007795cfd11ee24c609b5bc71fabbfc8382",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b242c82b_53d25d78",
        "filename": "src/dawn/native/opengl/BackendGL.cpp",
        "patchSetId": 19
      },
      "lineNbr": 98,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2023-06-15T23:14:55Z",
      "side": 1,
      "message": "This seems unreachable?",
      "revId": "55f32007795cfd11ee24c609b5bc71fabbfc8382",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "27218786_501a0dda",
        "filename": "src/dawn/native/opengl/BackendGL.cpp",
        "patchSetId": 19
      },
      "lineNbr": 98,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-06-16T20:20:10Z",
      "side": 1,
      "message": "changed to ASSERT",
      "parentUuid": "b242c82b_53d25d78",
      "revId": "55f32007795cfd11ee24c609b5bc71fabbfc8382",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}