{
  "comments": [
    {
      "key": {
        "uuid": "e962dd18_d0c8fae5",
        "filename": "src/tests/unittests/validation/RenderPassDescriptorValidationTests.cpp",
        "patchSetId": 11
      },
      "lineNbr": 773,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-10-01T17:54:09Z",
      "side": 1,
      "message": "Erhm, this needs a reinterpret_cast with uint64_t instead of static casts that convert numbers between representation. What we\u0027re trying to do is manipulate the bit representation of the double value.",
      "revId": "e2629d805ecdfd5290b66c1c4171d7bed595473d",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "46afe29b_1f650da6",
        "filename": "src/tests/unittests/validation/RenderPassDescriptorValidationTests.cpp",
        "patchSetId": 11
      },
      "lineNbr": 773,
      "author": {
        "id": 1000248
      },
      "writtenOn": "2020-10-01T18:30:44Z",
      "side": 1,
      "message": "Sure - I\u0027m just not really sure how to do that as you\u0027re suggesting. reinterpret_cast\u003cuint64_t\u003e(k2toThe24) will not compile. reinterpret_cast is only for pointers. \n\nTo get the true next possible value, it seems like I\u0027m going to have to come up with some bit ops to do this.",
      "parentUuid": "e962dd18_d0c8fae5",
      "revId": "e2629d805ecdfd5290b66c1c4171d7bed595473d",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e5046265_c3f244d3",
        "filename": "src/tests/unittests/validation/RenderPassDescriptorValidationTests.cpp",
        "patchSetId": 11
      },
      "lineNbr": 773,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-10-01T18:34:20Z",
      "side": 1,
      "message": "maybe can\u0027t be constexpr, but should be able to take the address first.\n\nSomething like this https://godbolt.org/z/77fKWq",
      "parentUuid": "46afe29b_1f650da6",
      "revId": "e2629d805ecdfd5290b66c1c4171d7bed595473d",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c1c7b8bd_39841767",
        "filename": "src/tests/unittests/validation/RenderPassDescriptorValidationTests.cpp",
        "patchSetId": 11
      },
      "lineNbr": 773,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2020-10-01T18:50:14Z",
      "side": 1,
      "message": "I\u0027m a bit surprised this isn\u0027t possible in constexpr, but indeed it seems not to be.\n\nI just found out these exist: https://en.cppreference.com/w/cpp/numeric/math/nextafter\nso maybe we should use them. (Still not constexpr though.)\nhttps://stackoverflow.com/q/45568999",
      "parentUuid": "e5046265_c3f244d3",
      "revId": "e2629d805ecdfd5290b66c1c4171d7bed595473d",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    }
  ]
}