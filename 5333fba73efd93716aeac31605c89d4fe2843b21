{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "d7bf2cc1_0f567f11",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2022-11-15T07:23:10Z",
      "side": 1,
      "message": "PTAL, thanks!",
      "revId": "5333fba73efd93716aeac31605c89d4fe2843b21",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0568260f_54dda37f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2022-11-16T16:45:19Z",
      "side": 1,
      "message": "what are the performance and power implications of using MaxPerformance instead of Dynamic (the default)?\n\nI thought it would be the case that if the workload is high enough, the GPU will automatically switch to a higher performance?",
      "revId": "5333fba73efd93716aeac31605c89d4fe2843b21",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7107926a_14c040c1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2022-11-17T01:17:25Z",
      "side": 1,
      "message": "\u003e I thought it would be the case that if the workload is high enough, the GPU will automatically switch to a higher performance?\n\nYes that\u0027s true. However when there is no heavy work on Intel GPU for some time, then the GPU frequency will decrease. For example, we observe that on Intel GPUs when we get data from GPU, do some CPU operation and submit new commands to GPU again, the GPU frequency will sometimes start at a very low frequency, which will hurt the performance. \n\nWith this extension we can provide a hint to Intel GPU that we want all the commands submitted on this queue to be executed with maximum performance (highest frequency) instead of the default behavior (the GPU frequency starts at a low value and is increased after some time).",
      "parentUuid": "0568260f_54dda37f",
      "revId": "5333fba73efd93716aeac31605c89d4fe2843b21",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c98580a1_609f51cd",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2022-11-17T02:11:26Z",
      "side": 1,
      "message": "are there important motivating apps where we\u0027ve seen the GPU frequency doesn\u0027t ramp back up quickly enough over time? I\u0027m worried that\n  1. this will completely pin the GPU at a high frequency and hurt power usage. It\u0027s easy for developers to say \"I want max performance! and not consider the downside\". If someone is on a laptop that\u0027s not plugged in, that\u0027s not so great for battery\n  2. It\u0027s a lot of code and dependencies on internal APIs. So if Dynamic is sufficient in the real world, that would be preferable.",
      "parentUuid": "7107926a_14c040c1",
      "revId": "5333fba73efd93716aeac31605c89d4fe2843b21",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "078b8f4f_f905e7f5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2022-11-17T02:45:49Z",
      "side": 1,
      "message": "Hi Austin,\n\n\u003e this will completely pin the GPU at a high frequency and hurt power usage. It\u0027s easy for developers to say \"I want max performance! and not consider the downside\". If someone is on a laptop that\u0027s not plugged in, that\u0027s not so great for battery\n\nThe throttle policy is not global - it only works on the command queue created with MAX_PERFORMANCE. It won\u0027t affect other commands that are not submitted to this queue. We have tested the GPU frequency will drop in quite a small time (in milliseconds) when no commands are submitted to the queue with MAX_PERFORMANCE throttle policy.\n\nYes it will hurt power, but the performance gain is also quite significant, especially when we try to do work on CPU without using GPU, and then feed the commands to GPU. For example, when the Image Element is used as an input of TFJS, as the process of Image Element is all on CPU, we have noticed with Throttle Extension the performance will improve quite a lot (~2x).\n\nIn Chromium we can always choose the \"low-power\" Intel adapter when the system is using the battery.",
      "parentUuid": "c98580a1_609f51cd",
      "revId": "5333fba73efd93716aeac31605c89d4fe2843b21",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a38ae306_8a9fa786",
        "filename": "src/dawn/native/d3d12/IntelExtensionD3D12.cpp",
        "patchSetId": 5
      },
      "lineNbr": 311,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2022-11-15T13:08:29Z",
      "side": 1,
      "message": "I did a quick search to see if these APIs were publicaly documented anywhere, but couldn\u0027t find anything.\nAside from the `third_party` header, is there any public documentation on these APIs?",
      "range": {
        "startLine": 298,
        "startChar": 0,
        "endLine": 311,
        "endChar": 5
      },
      "revId": "5333fba73efd93716aeac31605c89d4fe2843b21",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8ebdf40c_8b8606d4",
        "filename": "src/dawn/native/d3d12/IntelExtensionD3D12.cpp",
        "patchSetId": 5
      },
      "lineNbr": 311,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2022-11-16T02:36:44Z",
      "side": 1,
      "message": "Hi Ben,\n\nThere is an [open-sourced demo](https://github.com/GameTechDev/UAVOverlapSample) that introduces how to use the Intel Extension Framework . Intel Extension framework has also been integrated into [Unreal Engine](https://github.com/EpicGames/UnrealEngine/tree/release/Engine/Source/ThirdParty/Intel/ExtensionsFramework).\n\nBoth of these two projects are statically linking a close-sourced .lib file igdext64.lib to get the function entry points of Intel Extension framework, while we cannot add such close-sourced binary file in Chromium.\n\nAfter internal review we got permission to use this piece of code to dynamically load and get the interfaces of Intel Extension Framework in Chromium/Dawn, and now we think it ready for the external reviewer\u0027s review.",
      "parentUuid": "a38ae306_8a9fa786",
      "range": {
        "startLine": 298,
        "startChar": 0,
        "endLine": 311,
        "endChar": 5
      },
      "revId": "5333fba73efd93716aeac31605c89d4fe2843b21",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "285abf12_df0e4398",
        "filename": "src/dawn/native/d3d12/IntelExtensionD3D12.cpp",
        "patchSetId": 5
      },
      "lineNbr": 311,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2022-11-16T21:25:52Z",
      "side": 1,
      "message": "We have some questions with this:\n• What are the guarantees around availability of this functionality?\n• Are there guarantees around API / ABI compatibility with future drivers?\n• Where do we file bugs?\n• How might our security teams assess the risk of these calls?\n\nGenerally, loading DLLs from the GPU process sounds like something we should not be doing. I think the security team might have strong opinions about this - even behind toggles - and so this may require a security review.",
      "parentUuid": "8ebdf40c_8b8606d4",
      "range": {
        "startLine": 298,
        "startChar": 0,
        "endLine": 311,
        "endChar": 5
      },
      "revId": "5333fba73efd93716aeac31605c89d4fe2843b21",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7bf37ce9_6bb4c9e3",
        "filename": "src/dawn/native/d3d12/IntelExtensionD3D12.cpp",
        "patchSetId": 5
      },
      "lineNbr": 311,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2022-11-17T02:45:49Z",
      "side": 1,
      "message": "Hi Ben,\n\nThanks for your questions. Our replies are inline.\n\n• What are the guarantees around availability of this functionality?\nA: We are supporting this feature as part of the Intel driver and we have validation tests that are tracked in Intel driver CI.\n\n• Are there guarantees around API / ABI compatibility with future drivers?\nA: This API is backwards compatible and we ensure previously developed extensions work on new hardware\n\n• Where do we file bugs?\nA: Our team will help file the bug internally.\n\n• How might our security teams assess the risk of these calls?\nA: This relies on the Chromium security team. As far as I know:\n- We treat igdext64.dll as part of driver.\n- igdext64.dll is released and installed in same installer of Intel D3D12 driver.\n- I have tested loading igdext64.dll won’t be blocked by current Chromium sandbox.\n\n\n• Generally, loading DLLs from the GPU process sounds like something we should not be doing.\nA: Actually in Dawn we are dynamically loading several DLLs on D3D12 backend:\nhttps://source.chromium.org/chromium/chromium/src/+/main:third_party/dawn/src/dawn/native/d3d12/PlatformFunctions.cpp;l\u003d104\n\n• I think the security team might have strong opinions about this - even behind toggles - and so this may require a security review.\nA: It is necessary. Please help contact Chromium security team after your other concerns are addressed.",
      "parentUuid": "285abf12_df0e4398",
      "range": {
        "startLine": 298,
        "startChar": 0,
        "endLine": 311,
        "endChar": 5
      },
      "revId": "5333fba73efd93716aeac31605c89d4fe2843b21",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}