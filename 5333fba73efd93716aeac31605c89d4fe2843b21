{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "d7bf2cc1_0f567f11",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2022-11-15T07:23:10Z",
      "side": 1,
      "message": "PTAL, thanks!",
      "revId": "5333fba73efd93716aeac31605c89d4fe2843b21",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0568260f_54dda37f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2022-11-16T16:45:19Z",
      "side": 1,
      "message": "what are the performance and power implications of using MaxPerformance instead of Dynamic (the default)?\n\nI thought it would be the case that if the workload is high enough, the GPU will automatically switch to a higher performance?",
      "revId": "5333fba73efd93716aeac31605c89d4fe2843b21",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7107926a_14c040c1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2022-11-17T01:17:25Z",
      "side": 1,
      "message": "\u003e I thought it would be the case that if the workload is high enough, the GPU will automatically switch to a higher performance?\n\nYes that\u0027s true. However when there is no heavy work on Intel GPU for some time, then the GPU frequency will decrease. For example, we observe that on Intel GPUs when we get data from GPU, do some CPU operation and submit new commands to GPU again, the GPU frequency will sometimes start at a very low frequency, which will hurt the performance. \n\nWith this extension we can provide a hint to Intel GPU that we want all the commands submitted on this queue to be executed with maximum performance (highest frequency) instead of the default behavior (the GPU frequency starts at a low value and is increased after some time).",
      "parentUuid": "0568260f_54dda37f",
      "revId": "5333fba73efd93716aeac31605c89d4fe2843b21",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a38ae306_8a9fa786",
        "filename": "src/dawn/native/d3d12/IntelExtensionD3D12.cpp",
        "patchSetId": 5
      },
      "lineNbr": 311,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2022-11-15T13:08:29Z",
      "side": 1,
      "message": "I did a quick search to see if these APIs were publicaly documented anywhere, but couldn\u0027t find anything.\nAside from the `third_party` header, is there any public documentation on these APIs?",
      "range": {
        "startLine": 298,
        "startChar": 0,
        "endLine": 311,
        "endChar": 5
      },
      "revId": "5333fba73efd93716aeac31605c89d4fe2843b21",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8ebdf40c_8b8606d4",
        "filename": "src/dawn/native/d3d12/IntelExtensionD3D12.cpp",
        "patchSetId": 5
      },
      "lineNbr": 311,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2022-11-16T02:36:44Z",
      "side": 1,
      "message": "Hi Ben,\n\nThere is an [open-sourced demo](https://github.com/GameTechDev/UAVOverlapSample) that introduces how to use the Intel Extension Framework . Intel Extension framework has also been integrated into [Unreal Engine](https://github.com/EpicGames/UnrealEngine/tree/release/Engine/Source/ThirdParty/Intel/ExtensionsFramework).\n\nBoth of these two projects are statically linking a close-sourced .lib file igdext64.lib to get the function entry points of Intel Extension framework, while we cannot add such close-sourced binary file in Chromium.\n\nAfter internal review we got permission to use this piece of code to dynamically load and get the interfaces of Intel Extension Framework in Chromium/Dawn, and now we think it ready for the external reviewer\u0027s review.",
      "parentUuid": "a38ae306_8a9fa786",
      "range": {
        "startLine": 298,
        "startChar": 0,
        "endLine": 311,
        "endChar": 5
      },
      "revId": "5333fba73efd93716aeac31605c89d4fe2843b21",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "285abf12_df0e4398",
        "filename": "src/dawn/native/d3d12/IntelExtensionD3D12.cpp",
        "patchSetId": 5
      },
      "lineNbr": 311,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2022-11-16T21:25:52Z",
      "side": 1,
      "message": "We have some questions with this:\n• What are the guarantees around availability of this functionality?\n• Are there guarantees around API / ABI compatibility with future drivers?\n• Where do we file bugs?\n• How might our security teams assess the risk of these calls?\n\nGenerally, loading DLLs from the GPU process sounds like something we should not be doing. I think the security team might have strong opinions about this - even behind toggles - and so this may require a security review.",
      "parentUuid": "8ebdf40c_8b8606d4",
      "range": {
        "startLine": 298,
        "startChar": 0,
        "endLine": 311,
        "endChar": 5
      },
      "revId": "5333fba73efd93716aeac31605c89d4fe2843b21",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}