{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "69ba4c1d_8bf6956f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 12
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-02-08T14:52:37Z",
      "side": 1,
      "message": "LGTM",
      "revId": "0f1201e46c39af1404a7a00f26c136cd33bec1ab",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5a81dd0b_f592133b",
        "filename": "src/dawn_native/opengl/CommandBufferGL.cpp",
        "patchSetId": 12
      },
      "lineNbr": 756,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-02-08T14:52:37Z",
      "side": 1,
      "message": "Can we remove this TODO and say that these copies are not supported by GLES3.1 so not implemented? (which should raise a validation error). We could add that info to the GL-specific format table.",
      "revId": "0f1201e46c39af1404a7a00f26c136cd33bec1ab",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "48c5d8a8_721c12c2",
        "filename": "src/dawn_native/opengl/CommandBufferGL.cpp",
        "patchSetId": 12
      },
      "lineNbr": 756,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-02-09T10:40:01Z",
      "side": 1,
      "message": "This hasn\u0027t really been addressed.",
      "parentUuid": "5a81dd0b_f592133b",
      "revId": "0f1201e46c39af1404a7a00f26c136cd33bec1ab",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d66f9b2c_8e15f312",
        "filename": "src/dawn_native/opengl/CommandBufferGL.cpp",
        "patchSetId": 12
      },
      "lineNbr": 756,
      "author": {
        "id": 1000024
      },
      "writtenOn": "2021-02-09T16:20:42Z",
      "side": 1,
      "message": "I\u0027ve added a bug ID and comment.",
      "parentUuid": "48c5d8a8_721c12c2",
      "revId": "0f1201e46c39af1404a7a00f26c136cd33bec1ab",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0649826c_26c90a71",
        "filename": "src/tests/end2end/StorageTextureTests.cpp",
        "patchSetId": 12
      },
      "lineNbr": 846,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-02-08T14:52:37Z",
      "side": 1,
      "message": "Can we move this logic in a helper shared between tests and update the comment now that we know why it fails? ditto in the rest of the file.",
      "revId": "0f1201e46c39af1404a7a00f26c136cd33bec1ab",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6ca51258_b1ff1ebd",
        "filename": "src/tests/end2end/StorageTextureTests.cpp",
        "patchSetId": 12
      },
      "lineNbr": 846,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-02-09T10:40:01Z",
      "side": 1,
      "message": "ditto",
      "parentUuid": "0649826c_26c90a71",
      "revId": "0f1201e46c39af1404a7a00f26c136cd33bec1ab",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3fe3be50_4edc9af3",
        "filename": "src/tests/end2end/StorageTextureTests.cpp",
        "patchSetId": 12
      },
      "lineNbr": 846,
      "author": {
        "id": 1000024
      },
      "writtenOn": "2021-02-09T16:20:42Z",
      "side": 1,
      "message": "I\u0027m happy to refactor, but I was actually wrong about this. It\u0027s really a bug in the Intel drivers, since SNORM is supposed to be readable in OpenGL 4.5 (which Intel\u0027s driver supports), and their GLES driver claims to support EXT_render_snorm. I\u0027ve separated out the Intel workaround from the renderability issue.",
      "parentUuid": "6ca51258_b1ff1ebd",
      "revId": "0f1201e46c39af1404a7a00f26c136cd33bec1ab",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}