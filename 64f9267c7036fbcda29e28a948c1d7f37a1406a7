{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "897db454_c57bcf75",
        "filename": "/COMMIT_MSG",
        "patchSetId": 13
      },
      "lineNbr": 16,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2021-02-26T09:00:39Z",
      "side": 1,
      "message": "typo: comparison",
      "range": {
        "startLine": 16,
        "startChar": 0,
        "endLine": 16,
        "endChar": 12
      },
      "revId": "64f9267c7036fbcda29e28a948c1d7f37a1406a7",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fb91d2ea_bf497b52",
        "filename": "/COMMIT_MSG",
        "patchSetId": 13
      },
      "lineNbr": 16,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2021-03-01T01:51:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "897db454_c57bcf75",
      "range": {
        "startLine": 16,
        "startChar": 0,
        "endLine": 16,
        "endChar": 12
      },
      "revId": "64f9267c7036fbcda29e28a948c1d7f37a1406a7",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c9cad8f2_f072eacf",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 13
      },
      "lineNbr": 0,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2021-02-26T08:28:10Z",
      "side": 1,
      "message": "Jiawei@, Thanks for the comments(Especially the commit message and comments). Address most of them and left one here for discussion.",
      "revId": "64f9267c7036fbcda29e28a948c1d7f37a1406a7",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "655360bb_72df6a1a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 13
      },
      "lineNbr": 0,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2021-02-26T08:31:05Z",
      "side": 1,
      "message": "Austin@,\nWould you mind take another look at the updated CL? Thanks!",
      "revId": "64f9267c7036fbcda29e28a948c1d7f37a1406a7",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "caa318b3_5683b362",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 13
      },
      "lineNbr": 0,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2021-02-26T09:00:39Z",
      "side": 1,
      "message": "LGTM",
      "revId": "64f9267c7036fbcda29e28a948c1d7f37a1406a7",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "13621707_9ff1c14d",
        "filename": "src/tests/end2end/CopyTextureForBrowserTests.cpp",
        "patchSetId": 13
      },
      "lineNbr": 101,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2021-02-26T09:00:39Z",
      "side": 1,
      "message": "is the bitcast necessary? Is it because the colors may be NaN and would fail the comparison? If so, we should comment about it.",
      "revId": "64f9267c7036fbcda29e28a948c1d7f37a1406a7",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a964e349_c505cbcc",
        "filename": "src/tests/end2end/CopyTextureForBrowserTests.cpp",
        "patchSetId": 13
      },
      "lineNbr": 101,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2021-03-01T01:51:10Z",
      "side": 1,
      "message": "Actually, I did this bitcast not for NaN, but for float compare. In my experience of vertexFormat test cases, Dawn choose to compare the float value bit by bit.\nAnd if NaN only occurs on OOB access, I don\u0027t think this end2end test will have this input. WDYT?",
      "parentUuid": "13621707_9ff1c14d",
      "revId": "64f9267c7036fbcda29e28a948c1d7f37a1406a7",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5dcc4b14_85df5e9f",
        "filename": "src/tests/end2end/CopyTextureForBrowserTests.cpp",
        "patchSetId": 13
      },
      "lineNbr": 101,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2021-03-01T20:30:28Z",
      "side": 1,
      "message": "I\u0027m not sure I understand - why can\u0027t we just compare the floats? Does the graphics driver treat this differently than an integer comparison?",
      "parentUuid": "a964e349_c505cbcc",
      "revId": "64f9267c7036fbcda29e28a948c1d7f37a1406a7",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "94ce001c_b8d330e4",
        "filename": "src/tests/end2end/CopyTextureForBrowserTests.cpp",
        "patchSetId": 13
      },
      "lineNbr": 101,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2021-03-02T00:24:05Z",
      "side": 1,
      "message": "Hi, Austin,\nThanks for the comments.\n(Pls correct me if I\u0027m wrong).\nWhen compare float, usually what we did is doing a - b \u003c threshold(Am I right). And in vertexFormatTest (https://source.chromium.org/chromium/chromium/src/+/master:third_party/dawn/src/tests/end2end/VertexFormatTests.cpp;l\u003d330) we choose to compare the floats bit-by-bit. So I think maybe in this test we should do the same.\nAnd the dst format has something like RGBA32Float in future, which CPU will calculate the expected value different in GPU (https://source.chromium.org/chromium/chromium/src/+/master:third_party/dawn/src/tests/end2end/VertexFormatTests.cpp;l\u003d242), so I think we should compare the value in shader.\n\nBut if my concern is not correct, I\u0027m happy to compare the float value (in a - b \u003c threshold way). WDYT?",
      "parentUuid": "5dcc4b14_85df5e9f",
      "revId": "64f9267c7036fbcda29e28a948c1d7f37a1406a7",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0421a2e0_9a72e156",
        "filename": "src/tests/end2end/CopyTextureForBrowserTests.cpp",
        "patchSetId": 13
      },
      "lineNbr": 101,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2021-03-02T01:12:54Z",
      "side": 1,
      "message": "well I\u0027m asking if it\u0027s possible to just do `all(srcColor \u003d\u003d dstColor)` without the explicit bitcast",
      "parentUuid": "94ce001c_b8d330e4",
      "revId": "64f9267c7036fbcda29e28a948c1d7f37a1406a7",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8f134dcb_a7ec579f",
        "filename": "src/tests/end2end/CopyTextureForBrowserTests.cpp",
        "patchSetId": 13
      },
      "lineNbr": 101,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2021-03-02T02:20:08Z",
      "side": 1,
      "message": "Sry for misunderstanding. all(srcColor \u003d\u003d dstColor) works fine. Done.",
      "parentUuid": "0421a2e0_9a72e156",
      "revId": "64f9267c7036fbcda29e28a948c1d7f37a1406a7",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}