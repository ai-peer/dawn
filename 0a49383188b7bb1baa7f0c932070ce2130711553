{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "f872f8e5_15a2eee0",
        "filename": "src/dawn/native/BindGroupLayoutInternal.cpp",
        "patchSetId": 4
      },
      "lineNbr": 373,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2024-01-31T11:41:04Z",
      "side": 0,
      "message": "If this case is never supposed to be hit, then we should probably handle it in the MatchVariant and DAWN_UNREACHABLE().",
      "revId": "0a49383188b7bb1baa7f0c932070ce2130711553",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "42726d8e_05d43914",
        "filename": "src/dawn/native/BindGroupLayoutInternal.cpp",
        "patchSetId": 4
      },
      "lineNbr": 373,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2024-02-01T01:07:50Z",
      "side": 0,
      "message": "The problem is the definition of `bindingLayout` doesn\u0027t include the information about external textures, and actually it is difficult and we don\u0027t need to handle external textures after the creation of the bind group layout because each external texture will be replaced by one uniform buffer and two sampled textures in the creation of bind groups in ExtractAndExpandBglEntries().\n\nhttps://source.chromium.org/chromium/chromium/src/+/main:third_party/dawn/src/dawn/native/BindGroupLayoutInternal.cpp;l\u003d536",
      "parentUuid": "f872f8e5_15a2eee0",
      "revId": "0a49383188b7bb1baa7f0c932070ce2130711553",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "70bae113_29a3dab6",
        "filename": "src/dawn/native/BindGroupLayoutInternal.cpp",
        "patchSetId": 4
      },
      "lineNbr": 373,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2024-02-01T15:06:07Z",
      "side": 0,
      "message": "After the discussion today I agree we can skip this. The only thing is I\u0027m not sure if we\u0027ll get an ASSERT in the future if the MatchVariant has an unhandled case. It would help when adding new binding types as the asserts will tell us if we miss any spot.",
      "parentUuid": "42726d8e_05d43914",
      "revId": "0a49383188b7bb1baa7f0c932070ce2130711553",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "708e7c27_9790780b",
        "filename": "src/dawn/native/BindGroupLayoutInternal.cpp",
        "patchSetId": 4
      },
      "lineNbr": 373,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2024-02-01T19:01:33Z",
      "side": 0,
      "message": "It\u0027ll fail to compile, but the error is not very helpful\nhttps://godbolt.org/z/xMjd1c3bz\n\nit fails because the structs can\u0027t be converted to each other.\nIf conversion is possible, like int-\u003efloat, then std::visit will do conversion which is probably not what we would like to happen",
      "parentUuid": "70bae113_29a3dab6",
      "revId": "0a49383188b7bb1baa7f0c932070ce2130711553",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4e6914db_bea16ca4",
        "filename": "src/dawn/native/PassResourceUsageTracker.cpp",
        "patchSetId": 4
      },
      "lineNbr": 167,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2024-01-31T11:41:04Z",
      "side": 0,
      "message": "ditto",
      "revId": "0a49383188b7bb1baa7f0c932070ce2130711553",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ba1a6283_62aa1f92",
        "filename": "src/dawn/native/PassResourceUsageTracker.cpp",
        "patchSetId": 4
      },
      "lineNbr": 238,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2024-01-31T11:41:04Z",
      "side": 0,
      "message": "ditto",
      "revId": "0a49383188b7bb1baa7f0c932070ce2130711553",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "940e8184_1e2ec7b1",
        "filename": "src/dawn/native/d3d11/PipelineLayoutD3D11.cpp",
        "patchSetId": 4
      },
      "lineNbr": 88,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2024-01-31T11:41:04Z",
      "side": 0,
      "message": "The external texture case disappeared even if it should be unreachable.",
      "revId": "0a49383188b7bb1baa7f0c932070ce2130711553",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c7595fcc_1c30158d",
        "filename": "src/dawn/native/d3d12/BindGroupD3D12.cpp",
        "patchSetId": 4
      },
      "lineNbr": 203,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2024-01-31T11:41:04Z",
      "side": 0,
      "message": "ditto",
      "revId": "0a49383188b7bb1baa7f0c932070ce2130711553",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "08959dfc_d093d853",
        "filename": "src/dawn/native/d3d12/BindGroupLayoutD3D12.cpp",
        "patchSetId": 4
      },
      "lineNbr": 58,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2024-01-31T11:41:04Z",
      "side": 0,
      "message": "ditto",
      "revId": "0a49383188b7bb1baa7f0c932070ce2130711553",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "46bdd022_443538f7",
        "filename": "src/dawn/native/metal/CommandBufferMTL.mm",
        "patchSetId": 4
      },
      "lineNbr": 645,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2024-01-31T11:41:04Z",
      "side": 0,
      "message": "ditto",
      "revId": "0a49383188b7bb1baa7f0c932070ce2130711553",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f9546f90_00aa5971",
        "filename": "src/dawn/native/metal/PipelineLayoutMTL.mm",
        "patchSetId": 4
      },
      "lineNbr": 76,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2024-01-31T11:41:04Z",
      "side": 0,
      "message": "ditto, ExternalTexture should be UNREACHABLE(). Or is it that std::visit will ASSERT if the case is unhandled?",
      "revId": "0a49383188b7bb1baa7f0c932070ce2130711553",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ea17a0b5_55948555",
        "filename": "src/dawn/native/opengl/CommandBufferGL.cpp",
        "patchSetId": 4
      },
      "lineNbr": 411,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2024-01-31T11:41:04Z",
      "side": 0,
      "message": "ditto",
      "revId": "0a49383188b7bb1baa7f0c932070ce2130711553",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b4780a53_19ff2373",
        "filename": "src/dawn/native/opengl/PipelineLayoutGL.cpp",
        "patchSetId": 4
      },
      "lineNbr": 75,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2024-01-31T11:41:04Z",
      "side": 0,
      "message": "ditto",
      "revId": "0a49383188b7bb1baa7f0c932070ce2130711553",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "94055156_4f996fad",
        "filename": "src/dawn/native/vulkan/BindGroupVk.cpp",
        "patchSetId": 4
      },
      "lineNbr": 148,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2024-01-31T11:41:04Z",
      "side": 0,
      "message": "ditto",
      "revId": "0a49383188b7bb1baa7f0c932070ce2130711553",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}