{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "07423b98_c0b74981",
        "filename": "src/tint/lang/wgsl/resolver/assignment_validation_test.cc",
        "patchSetId": 2
      },
      "lineNbr": 236,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2024-02-02T21:50:08Z",
      "side": 1,
      "message": "I\u0027m wondering if the fundamental issue with these diagnostics is that we\u0027re emphasising the variable names in the error.\n\nHere, the error isn\u0027t that you can\u0027t assign to something called `\u0027a\u0027`, The error is that overrides are immutable. The real error is that `error: cannot assign to an override`. Including the name \u0027a\u0027 is useful if you don\u0027t have the squiggles, but I *think* we\u0027re always reporting them, even in the API. Perhaps we should just drop the variable names.\n\n\nAlternatively, we could pseudo-print the variable declaration:\n\n`cannot assign to \u0027override a\u0027`\n\nBut that is also skimming over the issue. It\u0027s not that you can\u0027t assign to that particular variable. You can\u0027t assign to _any_ override.",
      "range": {
        "startLine": 236,
        "startChar": 44,
        "endLine": 236,
        "endChar": 80
      },
      "revId": "327e8bcd8e1e942efe4a3f920e993b69f8ca1ea6",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a88ef38a_6eb8c8b6",
        "filename": "src/tint/lang/wgsl/resolver/assignment_validation_test.cc",
        "patchSetId": 2
      },
      "lineNbr": 236,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2024-02-02T22:24:51Z",
      "side": 1,
      "message": "I probably shouldn\u0027t point out the painting of yoda and baby yoda along with the yoda hut lego I can see from my chair .....\n\nBut, that could work:\n\n```\nerror: cannot assign to an override\nnote: override variables are immutable\nnote: \u0027a\u0027 declared here\n```\n\nkinda thing",
      "parentUuid": "07423b98_c0b74981",
      "range": {
        "startLine": 236,
        "startChar": 44,
        "endLine": 236,
        "endChar": 80
      },
      "revId": "327e8bcd8e1e942efe4a3f920e993b69f8ca1ea6",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9b8d190d_392adcd5",
        "filename": "src/tint/lang/wgsl/resolver/sem_helper.cc",
        "patchSetId": 2
      },
      "lineNbr": 217,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2024-02-02T21:50:08Z",
      "side": 1,
      "message": "Could be simplified, but I feel you\u0027re throwing away mildly interesting info.",
      "range": {
        "startLine": 192,
        "startChar": 0,
        "endLine": 217,
        "endChar": 11
      },
      "revId": "327e8bcd8e1e942efe4a3f920e993b69f8ca1ea6",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "06cf2523_b4b0f45d",
        "filename": "src/tint/lang/wgsl/resolver/sem_helper.cc",
        "patchSetId": 2
      },
      "lineNbr": 217,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2024-02-02T22:24:51Z",
      "side": 1,
      "message": "It ends up being redundant in every case I saw. The note is always following an error that says the thing i\u0027m removing. And, I don\u0027t care what it is when I\u0027m looking at the declaration as the declaration tells me.",
      "parentUuid": "9b8d190d_392adcd5",
      "range": {
        "startLine": 192,
        "startChar": 0,
        "endLine": 217,
        "endChar": 11
      },
      "revId": "327e8bcd8e1e942efe4a3f920e993b69f8ca1ea6",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Code-Review=MAX,user=non_uploader","label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "327e8bcd8e1e942efe4a3f920e993b69f8ca1ea6",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Kokoro",
        "description": {
          "value": "A maximum vote is required for the Kokoro label. A minimum vote is blocking."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Kokoro\u003dMAX AND -label:Kokoro\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "uploader:dawn-autoroll@skia-public.iam.gserviceaccount.com OR uploader:chrome-automated-expectation@chops-service-accounts.iam.gserviceaccount.com OR uploader:chrome-branch-day@chops-service-accounts.iam.gserviceaccount.com"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Kokoro=MAX AND -label:Kokoro=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Kokoro=MAX"],"failingAtoms":["label:Kokoro=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"uploader:dawn-autoroll@skia-public.iam.gserviceaccount.com OR uploader:chrome-automated-expectation@chops-service-accounts.iam.gserviceaccount.com OR uploader:chrome-branch-day@chops-service-accounts.iam.gserviceaccount.com"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["uploader:dawn-autoroll@skia-public.iam.gserviceaccount.com","uploader:chrome-automated-expectation@chops-service-accounts.iam.gserviceaccount.com","uploader:chrome-branch-day@chops-service-accounts.iam.gserviceaccount.com"]}
      },
      "patchSetCommitId": "327e8bcd8e1e942efe4a3f920e993b69f8ca1ea6",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforced_gerrit"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "327e8bcd8e1e942efe4a3f920e993b69f8ca1ea6",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}