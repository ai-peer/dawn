{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "8c42b798_45f54209",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-08-24T00:52:25Z",
      "side": 1,
      "message": "LGTM",
      "revId": "224fb7581f0cf0db8a5f3732a3169f252b43d7a4",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9767e50d_e1f9e8db",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 1001591
      },
      "writtenOn": "2023-08-24T02:03:01Z",
      "side": 1,
      "message": "LGTM, though I agree with Austin\u0027s suggestion.",
      "revId": "224fb7581f0cf0db8a5f3732a3169f252b43d7a4",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "83edc4ca_f71e189c",
        "filename": "src/dawn/native/Instance.cpp",
        "patchSetId": 11
      },
      "lineNbr": 114,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-08-24T00:52:25Z",
      "side": 1,
      "message": "we should change InstanceBase::Create to return ResultOrError instead; and handle the error logging at the caller",
      "range": {
        "startLine": 114,
        "startChar": 0,
        "endLine": 114,
        "endChar": 88
      },
      "revId": "224fb7581f0cf0db8a5f3732a3169f252b43d7a4",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "21944fe0_1fbaa654",
        "filename": "src/dawn/native/Instance.cpp",
        "patchSetId": 11
      },
      "lineNbr": 114,
      "author": {
        "id": 1001591
      },
      "writtenOn": "2023-08-24T02:03:01Z",
      "side": 1,
      "message": "+1",
      "parentUuid": "83edc4ca_f71e189c",
      "range": {
        "startLine": 114,
        "startChar": 0,
        "endLine": 114,
        "endChar": 88
      },
      "revId": "224fb7581f0cf0db8a5f3732a3169f252b43d7a4",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "10f83b07_733f356b",
        "filename": "src/dawn/native/Instance.cpp",
        "patchSetId": 11
      },
      "lineNbr": 114,
      "author": {
        "id": 1002831
      },
      "writtenOn": "2023-08-30T01:44:20Z",
      "side": 1,
      "message": "Hmm sorry it took a while to get back to this, but I\u0027m not sure how easy/practical it would be to do that. Most of the places that call this `Create` function are constructors, with the API call being the only other call site.\n\nI\u0027m not sure how we would properly handle an `Error` in those cases. Regardless of how we want to fix it though, I will also defer it to a follow up CL since I don\u0027t think it will be trivial.",
      "parentUuid": "21944fe0_1fbaa654",
      "range": {
        "startLine": 114,
        "startChar": 0,
        "endLine": 114,
        "endChar": 88
      },
      "revId": "224fb7581f0cf0db8a5f3732a3169f252b43d7a4",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b87cc551_5ded2505",
        "filename": "src/dawn/native/Instance.cpp",
        "patchSetId": 11
      },
      "lineNbr": 150,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-08-24T00:52:25Z",
      "side": 1,
      "message": "this is actually really nice. In the future when we add extensions to places, we don\u0027t need to update every callsite to pipe it through now.",
      "range": {
        "startLine": 150,
        "startChar": 30,
        "endLine": 150,
        "endChar": 78
      },
      "revId": "224fb7581f0cf0db8a5f3732a3169f252b43d7a4",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}