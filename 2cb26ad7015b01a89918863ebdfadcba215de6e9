{
  "comments": [
    {
      "key": {
        "uuid": "832fcc65_c1671a13",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 15,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2019-07-30T07:03:42Z",
      "side": 1,
      "message": "unit: keeping",
      "range": {
        "startLine": 15,
        "startChar": 54,
        "endLine": 15,
        "endChar": 58
      },
      "revId": "2cb26ad7015b01a89918863ebdfadcba215de6e9",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "466805e0_8e6daffb",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 15,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2019-07-30T12:15:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "832fcc65_c1671a13",
      "range": {
        "startLine": 15,
        "startChar": 54,
        "endLine": 15,
        "endChar": 58
      },
      "revId": "2cb26ad7015b01a89918863ebdfadcba215de6e9",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cf6b3687_a8e325e8",
        "filename": "src/dawn_native/metal/CommandBufferMTL.mm",
        "patchSetId": 7
      },
      "lineNbr": 196,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2019-07-30T07:03:42Z",
      "side": 1,
      "message": "nit: Just looking at this tracker, it\u0027s not immediately obvious why we need the \"buffer length buffer\". It would also be plausible to believe that buffer lengths might be prepended and stored as the first few bytes of a buffer (or something else). As you did in the commit message, describe the SPIRV-Cross requirement for OpArrayLength to explain the format of how lengths need to be stored.",
      "range": {
        "startLine": 196,
        "startChar": 15,
        "endLine": 196,
        "endChar": 41
      },
      "revId": "2cb26ad7015b01a89918863ebdfadcba215de6e9",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bedcf08a_643a5934",
        "filename": "src/dawn_native/metal/CommandBufferMTL.mm",
        "patchSetId": 7
      },
      "lineNbr": 196,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2019-07-30T12:15:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cf6b3687_a8e325e8",
      "range": {
        "startLine": 196,
        "startChar": 15,
        "endLine": 196,
        "endChar": 41
      },
      "revId": "2cb26ad7015b01a89918863ebdfadcba215de6e9",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ab618187_e09ae9d2",
        "filename": "src/dawn_native/metal/CommandBufferMTL.mm",
        "patchSetId": 7
      },
      "lineNbr": 198,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2019-08-02T04:12:56Z",
      "side": 1,
      "message": "Why only uint32_t for buffer sizes?",
      "range": {
        "startLine": 198,
        "startChar": 32,
        "endLine": 198,
        "endChar": 40
      },
      "revId": "2cb26ad7015b01a89918863ebdfadcba215de6e9",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d4218832_169e34d7",
        "filename": "src/dawn_native/metal/CommandBufferMTL.mm",
        "patchSetId": 7
      },
      "lineNbr": 198,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2019-08-02T08:22:05Z",
      "side": 1,
      "message": "That\u0027s because it is the width that SPIRV-Cross uses in the generated code, and 64bit math can be expensive on the GPU (it is still rare in hardware AFAIK). Added a comment explaining this.",
      "parentUuid": "ab618187_e09ae9d2",
      "range": {
        "startLine": 198,
        "startChar": 32,
        "endLine": 198,
        "endChar": 40
      },
      "revId": "2cb26ad7015b01a89918863ebdfadcba215de6e9",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8c777215_5acf3caf",
        "filename": "src/dawn_native/metal/CommandBufferMTL.mm",
        "patchSetId": 7
      },
      "lineNbr": 232,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2019-08-02T04:12:56Z",
      "side": 1,
      "message": "optional nit: maybe split this just for slightly better readability?\n\n  if (!computeDirty) { return; }\n  if (!pipeline-\u003eRequiresStorageBufferLength()) { return; }\n\nCould also move the latter above `bool computeDirty` if you want, since it doesn\u0027t use it.",
      "revId": "2cb26ad7015b01a89918863ebdfadcba215de6e9",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1c691d9b_f648db28",
        "filename": "src/dawn_native/metal/CommandBufferMTL.mm",
        "patchSetId": 7
      },
      "lineNbr": 232,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2019-08-02T08:22:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8c777215_5acf3caf",
      "revId": "2cb26ad7015b01a89918863ebdfadcba215de6e9",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f0201b0b_7e6de72b",
        "filename": "src/dawn_native/metal/CommandBufferMTL.mm",
        "patchSetId": 7
      },
      "lineNbr": 672,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2019-08-02T04:12:56Z",
      "side": 1,
      "message": "uNit: \u0027storageBufferLengths\u0027?",
      "range": {
        "startLine": 672,
        "startChar": 35,
        "endLine": 672,
        "endChar": 54
      },
      "revId": "2cb26ad7015b01a89918863ebdfadcba215de6e9",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2f8984b4_90869155",
        "filename": "src/dawn_native/metal/CommandBufferMTL.mm",
        "patchSetId": 7
      },
      "lineNbr": 672,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2019-08-02T08:22:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f0201b0b_7e6de72b",
      "range": {
        "startLine": 672,
        "startChar": 35,
        "endLine": 672,
        "endChar": 54
      },
      "revId": "2cb26ad7015b01a89918863ebdfadcba215de6e9",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    }
  ]
}