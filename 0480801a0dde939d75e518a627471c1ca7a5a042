{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "21f95d10_26b946a3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 34
      },
      "lineNbr": 0,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-08-18T01:52:27Z",
      "side": 1,
      "message": "thank you all for the patience on this massive cl!",
      "revId": "0480801a0dde939d75e518a627471c1ca7a5a042",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "20064c7c_c92c8944",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 34
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-08-18T08:24:53Z",
      "side": 1,
      "message": "LGTM, thanks a TON for the iterations!",
      "revId": "0480801a0dde939d75e518a627471c1ca7a5a042",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2c2dd8fe_91de11fb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 34
      },
      "lineNbr": 0,
      "author": {
        "id": 1002831
      },
      "writtenOn": "2023-08-18T23:11:59Z",
      "side": 1,
      "message": "Thanks for the patience and the revisions! Last nit, otherwise it LGTM!",
      "revId": "0480801a0dde939d75e518a627471c1ca7a5a042",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b82b8ea9_892a2465",
        "filename": "src/dawn/tests/end2end/SharedTextureMemoryTests.cpp",
        "patchSetId": 34
      },
      "lineNbr": 1035,
      "author": {
        "id": 1002831
      },
      "writtenOn": "2023-08-18T23:11:59Z",
      "side": 1,
      "message": "In the following device destroy/loss tests, we don\u0027t bother testing all the different memories, do we actually need it for this test either? If not, I was thinking that you could roll this one into the one below also. (Just add a texture argument to the lambda.)",
      "range": {
        "startLine": 1033,
        "startChar": 4,
        "endLine": 1035,
        "endChar": 97
      },
      "revId": "0480801a0dde939d75e518a627471c1ca7a5a042",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "884430e7_20dd92a8",
        "filename": "src/dawn/tests/end2end/SharedTextureMemoryTests.cpp",
        "patchSetId": 34
      },
      "lineNbr": 1035,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-08-19T00:18:18Z",
      "side": 1,
      "message": "hmmm in that one we can\u0027t do it easily because well, the device is lost. Ideally I\u0027d like to test all of them there as well but may need to change the harness in the future to support it.\n\nI think it\u0027s worth testing all the memories because there could be interesting interactions that happen; like extra allocations created for different types - and it\u0027s good to make sure those all work",
      "parentUuid": "b82b8ea9_892a2465",
      "range": {
        "startLine": 1033,
        "startChar": 4,
        "endLine": 1035,
        "endChar": 97
      },
      "revId": "0480801a0dde939d75e518a627471c1ca7a5a042",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "0480801a0dde939d75e518a627471c1ca7a5a042",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Kokoro",
        "description": {
          "value": "A maximum vote is required for the Kokoro label. A minimum vote is blocking."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Kokoro\u003dMAX AND -label:Kokoro\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "uploader:dawn-autoroll@skia-public.iam.gserviceaccount.com OR uploader:chrome-automated-expectation@chops-service-accounts.iam.gserviceaccount.com OR uploader:chrome-branch-day@chops-service-accounts.iam.gserviceaccount.com"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Kokoro=MAX AND -label:Kokoro=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Kokoro=MAX"],"failingAtoms":["label:Kokoro=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"uploader:dawn-autoroll@skia-public.iam.gserviceaccount.com OR uploader:chrome-automated-expectation@chops-service-accounts.iam.gserviceaccount.com OR uploader:chrome-branch-day@chops-service-accounts.iam.gserviceaccount.com"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["uploader:dawn-autoroll@skia-public.iam.gserviceaccount.com","uploader:chrome-automated-expectation@chops-service-accounts.iam.gserviceaccount.com","uploader:chrome-branch-day@chops-service-accounts.iam.gserviceaccount.com"]}
      },
      "patchSetCommitId": "0480801a0dde939d75e518a627471c1ca7a5a042",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "patchSetCommitId": "0480801a0dde939d75e518a627471c1ca7a5a042",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    }
  ]
}