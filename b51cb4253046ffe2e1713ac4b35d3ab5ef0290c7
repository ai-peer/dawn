{
  "comments": [
    {
      "key": {
        "uuid": "bb8724db_d6f176a3",
        "filename": "src/tests/DawnTest.cpp",
        "patchSetId": 10
      },
      "lineNbr": 185,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-05-14T12:46:57Z",
      "side": 1,
      "message": "nit: this is a 300 line function, maybe we could split the parsing of arguments in its own function? Likewise for the device selection. So the function would be:\n\n  ParseArgs(...);\n\n  CreateInstanceAndAdapters();\n  ASSERT(mInstance);\n\n  mSelectedAdapters \u003d FilterAdapters(mAdapters);\n\n  PrintGlobalAndAdapterInfo(mSelectedAdapters);",
      "revId": "b51cb4253046ffe2e1713ac4b35d3ab5ef0290c7",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aa6efc45_0718c60d",
        "filename": "src/tests/DawnTest.cpp",
        "patchSetId": 10
      },
      "lineNbr": 185,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-05-15T00:26:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bb8724db_d6f176a3",
      "revId": "b51cb4253046ffe2e1713ac4b35d3ab5ef0290c7",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "20ad562c_e35eb35b",
        "filename": "src/tests/DawnTest.cpp",
        "patchSetId": 10
      },
      "lineNbr": 342,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-05-14T12:46:57Z",
      "side": 1,
      "message": "nit: For each backend, tests will run ...",
      "range": {
        "startLine": 342,
        "startChar": 26,
        "endLine": 342,
        "endChar": 41
      },
      "revId": "b51cb4253046ffe2e1713ac4b35d3ab5ef0290c7",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "250e6803_67e569a9",
        "filename": "src/tests/DawnTest.cpp",
        "patchSetId": 10
      },
      "lineNbr": 342,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-05-15T00:26:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "20ad562c_e35eb35b",
      "range": {
        "startLine": 342,
        "startChar": 26,
        "endLine": 342,
        "endChar": 41
      },
      "revId": "b51cb4253046ffe2e1713ac4b35d3ab5ef0290c7",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b93ed81d_576964c6",
        "filename": "src/tests/DawnTest.cpp",
        "patchSetId": 10
      },
      "lineNbr": 351,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-05-14T12:46:57Z",
      "side": 1,
      "message": "[1]",
      "revId": "b51cb4253046ffe2e1713ac4b35d3ab5ef0290c7",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6c5d4fa0_2eec4f89",
        "filename": "src/tests/DawnTest.cpp",
        "patchSetId": 10
      },
      "lineNbr": 351,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-05-15T00:26:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b93ed81d_576964c6",
      "revId": "b51cb4253046ffe2e1713ac4b35d3ab5ef0290c7",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2425ced5_57e91eef",
        "filename": "src/tests/DawnTest.cpp",
        "patchSetId": 10
      },
      "lineNbr": 371,
      "author": {
        "id": 1000024
      },
      "writtenOn": "2020-05-14T13:53:10Z",
      "side": 1,
      "message": "uNit: I prefer !mDevicePreferences.empty()",
      "revId": "b51cb4253046ffe2e1713ac4b35d3ab5ef0290c7",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c43889ea_17d33d64",
        "filename": "src/tests/DawnTest.cpp",
        "patchSetId": 10
      },
      "lineNbr": 371,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-05-15T00:26:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2425ced5_57e91eef",
      "revId": "b51cb4253046ffe2e1713ac4b35d3ab5ef0290c7",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1af889f0_950b0ebb",
        "filename": "src/tests/DawnTest.cpp",
        "patchSetId": 10
      },
      "lineNbr": 377,
      "author": {
        "id": 1000024
      },
      "writtenOn": "2020-05-14T13:53:10Z",
      "side": 1,
      "message": "uNit: same here.",
      "revId": "b51cb4253046ffe2e1713ac4b35d3ab5ef0290c7",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "adb1b4d9_19394cc1",
        "filename": "src/tests/DawnTest.cpp",
        "patchSetId": 10
      },
      "lineNbr": 377,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-05-15T00:26:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1af889f0_950b0ebb",
      "revId": "b51cb4253046ffe2e1713ac4b35d3ab5ef0290c7",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a73a146_bbb4e521",
        "filename": "src/tests/DawnTest.cpp",
        "patchSetId": 10
      },
      "lineNbr": 380,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-05-14T12:46:57Z",
      "side": 1,
      "message": "For clarity it\u0027s probably ok to fold this and [1] together and have a quadratic algorithm (because we expect mDevicePreferences to always be less than 3)",
      "revId": "b51cb4253046ffe2e1713ac4b35d3ab5ef0290c7",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0d6f900b_e6752052",
        "filename": "src/tests/DawnTest.cpp",
        "patchSetId": 10
      },
      "lineNbr": 380,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-05-15T00:26:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5a73a146_bbb4e521",
      "revId": "b51cb4253046ffe2e1713ac4b35d3ab5ef0290c7",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d9c1d356_b7f39be7",
        "filename": "src/tests/DawnTest.cpp",
        "patchSetId": 10
      },
      "lineNbr": 414,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-05-14T12:46:57Z",
      "side": 1,
      "message": "nit: for",
      "range": {
        "startLine": 414,
        "startChar": 28,
        "endLine": 414,
        "endChar": 34
      },
      "revId": "b51cb4253046ffe2e1713ac4b35d3ab5ef0290c7",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7a5746c7_2a0444da",
        "filename": "src/tests/DawnTest.cpp",
        "patchSetId": 10
      },
      "lineNbr": 414,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-05-15T00:26:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d9c1d356_b7f39be7",
      "range": {
        "startLine": 414,
        "startChar": 28,
        "endLine": 414,
        "endChar": 34
      },
      "revId": "b51cb4253046ffe2e1713ac4b35d3ab5ef0290c7",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f5d6769a_dc6b87e7",
        "filename": "src/tests/DawnTest.cpp",
        "patchSetId": 10
      },
      "lineNbr": 434,
      "author": {
        "id": 1000024
      },
      "writtenOn": "2020-05-14T13:53:10Z",
      "side": 1,
      "message": "Nit: just wanted to check that \"few and fast tests\" was intended. (It makes sense, just took me a second to parse.) Maybe \"There are few tests on this backend, and they run quickly\"?\n\nIs it important that they\u0027re fast, or maybe just focus on the sparse testing?",
      "revId": "b51cb4253046ffe2e1713ac4b35d3ab5ef0290c7",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4ff58186_85895ea7",
        "filename": "src/tests/DawnTest.cpp",
        "patchSetId": 10
      },
      "lineNbr": 434,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-05-15T00:26:28Z",
      "side": 1,
      "message": "I guess both. Done",
      "parentUuid": "f5d6769a_dc6b87e7",
      "revId": "b51cb4253046ffe2e1713ac4b35d3ab5ef0290c7",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f0b6275d_5aaf0f44",
        "filename": "src/tests/DawnTest.cpp",
        "patchSetId": 10
      },
      "lineNbr": 455,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-05-14T12:46:57Z",
      "side": 1,
      "message": "multiple",
      "range": {
        "startLine": 455,
        "startChar": 90,
        "endLine": 455,
        "endChar": 97
      },
      "revId": "b51cb4253046ffe2e1713ac4b35d3ab5ef0290c7",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0d307b32_6d8184d4",
        "filename": "src/tests/DawnTest.cpp",
        "patchSetId": 10
      },
      "lineNbr": 455,
      "author": {
        "id": 1000024
      },
      "writtenOn": "2020-05-14T13:53:10Z",
      "side": 1,
      "message": "Might be worth checking how other test harnesses handle this (SwiftShader\u0027s regres? Not sure if it enables validation layers.)",
      "parentUuid": "f0b6275d_5aaf0f44",
      "range": {
        "startLine": 455,
        "startChar": 90,
        "endLine": 455,
        "endChar": 97
      },
      "revId": "b51cb4253046ffe2e1713ac4b35d3ab5ef0290c7",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bc098342_f912fb9e",
        "filename": "src/tests/DawnTest.cpp",
        "patchSetId": 10
      },
      "lineNbr": 455,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-05-15T00:26:28Z",
      "side": 1,
      "message": "Their launcher is in go and doesn\u0027t look like it\u0027s forking processes. So they probably don\u0027t have the same problem. Likewise not sure if they enable validation layers.",
      "parentUuid": "0d307b32_6d8184d4",
      "range": {
        "startLine": 455,
        "startChar": 90,
        "endLine": 455,
        "endChar": 97
      },
      "revId": "b51cb4253046ffe2e1713ac4b35d3ab5ef0290c7",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c694098c_fe34c17f",
        "filename": "src/tests/DawnTest.cpp",
        "patchSetId": 10
      },
      "lineNbr": 729,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-05-14T12:46:57Z",
      "side": 1,
      "message": "Instead of doing the matching against known adapters, what do you think of asking the test environment to filter the list every time, and assume we will always get the same one?",
      "revId": "b51cb4253046ffe2e1713ac4b35d3ab5ef0290c7",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3f0dbff1_56d2e5a8",
        "filename": "src/tests/DawnTest.cpp",
        "patchSetId": 10
      },
      "lineNbr": 729,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-05-15T00:26:28Z",
      "side": 1,
      "message": "Don\u0027t feel great about that. Since we destroy and recreate the instance, we rely on the driver returning things in the same order which I don\u0027t want to trust.",
      "parentUuid": "c694098c_fe34c17f",
      "revId": "b51cb4253046ffe2e1713ac4b35d3ab5ef0290c7",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    }
  ]
}