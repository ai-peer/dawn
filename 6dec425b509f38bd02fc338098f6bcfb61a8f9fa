{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "81f9cf93_af97f779",
        "filename": "src/tint/ast/storage_class.cc",
        "patchSetId": 4
      },
      "lineNbr": 22,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2022-07-26T14:53:33Z",
      "side": 1,
      "message": "Now that this lives outside the parser, we should create a test file for it specifically.",
      "revId": "6dec425b509f38bd02fc338098f6bcfb61a8f9fa",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4d86754c_b3527b3a",
        "filename": "src/tint/ast/storage_class.h",
        "patchSetId": 4
      },
      "lineNbr": 41,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2022-07-26T14:53:33Z",
      "side": 1,
      "message": "This actually only parses _some_ storage classes. Specifically, in, out, handle are intentionally not parsed.",
      "revId": "6dec425b509f38bd02fc338098f6bcfb61a8f9fa",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "31b1f9e0_585de2f5",
        "filename": "src/tint/ast/storage_class.h",
        "patchSetId": 4
      },
      "lineNbr": 44,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2022-07-26T14:53:33Z",
      "side": 1,
      "message": "What about moving these into a namespace or the enum so this would be:\n\n```\nnamespace storage_class {\n\nStorageClass Parse(std::string_view str);\n\n}\n```\n\nNot sure if that\u0027s better or not ...",
      "revId": "6dec425b509f38bd02fc338098f6bcfb61a8f9fa",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eb73e56b_a5bd1f36",
        "filename": "src/tint/ast/storage_class.h",
        "patchSetId": 4
      },
      "lineNbr": 44,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2022-07-26T14:57:56Z",
      "side": 1,
      "message": "Would you be happy if the `enum class` became an `enum` in that namespace?\n\n```\nnamespace StorageClass {\n\nenum Enum {\n    kInvalid,\n    kNone,\n    kFunction,\n    kPrivate,\n    kWorkgroup,\n    kUniform,\n    kStorage,\n    kHandle,\n    kIn,\n    kOut,\n};\n\nStorageClass Parse(std::string_view str);\n\n}\n```\n\nThen the likes of `StorageClass::kFunction` would remain the same, but the use of the enum would become `StorageClass::Enum`, which is a bit gross.",
      "parentUuid": "31b1f9e0_585de2f5",
      "revId": "6dec425b509f38bd02fc338098f6bcfb61a8f9fa",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "de342486_c55a051a",
        "filename": "src/tint/ast/storage_class.h",
        "patchSetId": 4
      },
      "lineNbr": 44,
      "author": {
        "id": 1003216
      },
      "writtenOn": "2022-07-26T15:00:09Z",
      "side": 1,
      "message": "Oh, I wasn\u0027t actually thinking of moving the enum, just the methods we attach to the enum (like Parse).",
      "parentUuid": "eb73e56b_a5bd1f36",
      "revId": "6dec425b509f38bd02fc338098f6bcfb61a8f9fa",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ee2e77fc_ee013a24",
        "filename": "src/tint/ast/storage_class.h",
        "patchSetId": 4
      },
      "lineNbr": 44,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2022-07-26T17:49:13Z",
      "side": 1,
      "message": "Unfortunately you cannot add methods to an `enum class`. I wish you could.\nYou can create a namespace or structure with the enum\u0027s name, but you end up with the same thing as I\u0027ve described above.",
      "parentUuid": "de342486_c55a051a",
      "revId": "6dec425b509f38bd02fc338098f6bcfb61a8f9fa",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}