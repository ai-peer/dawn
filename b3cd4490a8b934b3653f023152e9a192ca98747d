{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "771542b6_7a3b314f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1002241
      },
      "writtenOn": "2024-03-15T14:42:54Z",
      "side": 1,
      "message": "Kokoro failure is a MSL validation flake.",
      "revId": "b3cd4490a8b934b3653f023152e9a192ca98747d",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "829edf85_eeded64b",
        "filename": "src/tint/lang/spirv/writer/raise/merge_return_test.cc",
        "patchSetId": 1
      },
      "lineNbr": 545,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2024-03-18T14:11:57Z",
      "side": 1,
      "message": "Why is this unreachable, there is no false block, so doesn\u0027t it get here if %2 is false?",
      "revId": "b3cd4490a8b934b3653f023152e9a192ca98747d",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5996704d_6a957d64",
        "filename": "src/tint/lang/spirv/writer/raise/merge_return_test.cc",
        "patchSetId": 1
      },
      "lineNbr": 545,
      "author": {
        "id": 1002241
      },
      "writtenOn": "2024-03-18T14:43:07Z",
      "side": 1,
      "message": "Good spot, added a false block that also returns.",
      "parentUuid": "829edf85_eeded64b",
      "revId": "b3cd4490a8b934b3653f023152e9a192ca98747d",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6bc12a12_cfdcd0df",
        "filename": "src/tint/lang/spirv/writer/raise/merge_return_test.cc",
        "patchSetId": 1
      },
      "lineNbr": 545,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2024-03-18T17:33:40Z",
      "side": 1,
      "message": "But wasn\u0027t it a valid test before? Shouldn\u0027t we fix it otherwise it\u0027s an invalid unreachable entry?",
      "parentUuid": "5996704d_6a957d64",
      "revId": "b3cd4490a8b934b3653f023152e9a192ca98747d",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ab1f88ad_0da1f227",
        "filename": "src/tint/lang/spirv/writer/raise/merge_return_test.cc",
        "patchSetId": 1
      },
      "lineNbr": 545,
      "author": {
        "id": 1002241
      },
      "writtenOn": "2024-03-18T17:55:56Z",
      "side": 1,
      "message": "Fix what? Do we consider an `unreachable` that is actually statically reachable valid in Tint IR? Not sure we\u0027ve discussed this case (we clearly didn\u0027t add validation to reject it, but that doesn\u0027t mean that it should be valid).",
      "parentUuid": "6bc12a12_cfdcd0df",
      "revId": "b3cd4490a8b934b3653f023152e9a192ca98747d",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1128d71d_8fd5f69e",
        "filename": "src/tint/lang/spirv/writer/raise/merge_return_test.cc",
        "patchSetId": 1
      },
      "lineNbr": 545,
      "author": {
        "id": 1003216
      },
      "writtenOn": "2024-03-18T18:00:07Z",
      "side": 1,
      "message": "I don\u0027t think an `unreachable` this is reachable should be in the IR. (Sorry, by fix, it seemed like the test that was there previously before the `false` block was added was generating invalid code, and we should keep that code and fix the generation to `exit_if` instead of `unreachable`-ing?",
      "parentUuid": "ab1f88ad_0da1f227",
      "revId": "b3cd4490a8b934b3653f023152e9a192ca98747d",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0ea6bd14_d6239952",
        "filename": "src/tint/lang/spirv/writer/raise/merge_return_test.cc",
        "patchSetId": 1
      },
      "lineNbr": 545,
      "author": {
        "id": 1002241
      },
      "writtenOn": "2024-03-18T18:23:21Z",
      "side": 1,
      "message": "The `unreachable` is there because I explicitly put it there with `b.Unreachable()` in the test setup. It\u0027s not being automatically generated by anything.\n\nI can open an IR validator bug about rejecting statically reachable unreachables if that\u0027s what we want to do, although that would essentially require reimplementing the behavior analysis that we have in the resolver.",
      "parentUuid": "1128d71d_8fd5f69e",
      "revId": "b3cd4490a8b934b3653f023152e9a192ca98747d",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0f57e0ff_b5813493",
        "filename": "src/tint/lang/spirv/writer/raise/merge_return_test.cc",
        "patchSetId": 1
      },
      "lineNbr": 545,
      "author": {
        "id": 1003216
      },
      "writtenOn": "2024-03-18T18:24:50Z",
      "side": 1,
      "message": "Ah, I thought it was being generated. We may want to add that analysis at some point, so a bug is probably a good idea.",
      "parentUuid": "0ea6bd14_d6239952",
      "revId": "b3cd4490a8b934b3653f023152e9a192ca98747d",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}