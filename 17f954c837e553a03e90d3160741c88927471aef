{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "f7107035_b85409df",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-03-28T01:51:31Z",
      "side": 1,
      "message": "Corentin, if you look at this soon. for context, we\u0027re delaying moving a bunch of code for a ~week in case we need to do some cherry-picks and don\u0027t want too many merge conflicts. so I told Peng I\u0027d take a look at the whole thing so he\u0027s not blocked entirely.\n\nso far, I did an initial skim with mostly questions so I can understand the current approach. Didn\u0027t look at tests yet.",
      "revId": "17f954c837e553a03e90d3160741c88927471aef",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6b6d9240_91326012",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-03-28T11:32:24Z",
      "side": 1,
      "message": "Thanks, I started doing a review and stopped after a while because there are some architectural things to change like you commented.\n\n - Multiple bindgroups\n - Staging buffers vs. actual buffers for d3d11::Buffer\n - Handling of uniform buffers.",
      "parentUuid": "f7107035_b85409df",
      "revId": "17f954c837e553a03e90d3160741c88927471aef",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2ceb0e01_3c6d6c0a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-03-28T11:32:24Z",
      "side": 1,
      "message": "Overall looks like great progress and a LOT of tests work! That said given some of the architectural comments it would be good to split things into multiple CLs that add only the necessary things one step at a time.\n\nWhat I have found works great to start making backends in the past is:\n\n - Add just buffer mapping and enable a few BufferTests (we need to see what to do for staging vs. not).\n - Add WriteBuffer and CopyB2B, enable more tests.\n - Add textures and CopyB2T/T2B, WriteTexture.\n - Add copyT2T\n - Add render pipelines without bindings\n - Add support for vertex buffers / bindings / other stuff\n - Add the rest.",
      "revId": "17f954c837e553a03e90d3160741c88927471aef",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dc7ba0e6_50105076",
        "filename": "include/dawn/dawn_wsi.h",
        "patchSetId": 11
      },
      "lineNbr": 65,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-03-28T01:51:31Z",
      "side": 1,
      "message": "this is the old swap chain which will be deleted. If we don\u0027t need this now, we could just not add it.",
      "range": {
        "startLine": 61,
        "startChar": 0,
        "endLine": 65,
        "endChar": 6
      },
      "revId": "17f954c837e553a03e90d3160741c88927471aef",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2e731334_4fe257a7",
        "filename": "include/dawn/dawn_wsi.h",
        "patchSetId": 11
      },
      "lineNbr": 65,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2023-03-28T19:15:59Z",
      "side": 1,
      "message": "It is used in",
      "parentUuid": "dc7ba0e6_50105076",
      "range": {
        "startLine": 61,
        "startChar": 0,
        "endLine": 65,
        "endChar": 6
      },
      "revId": "17f954c837e553a03e90d3160741c88927471aef",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "15399e59_dbbd9935",
        "filename": "include/dawn/native/D3D11Backend.h",
        "patchSetId": 11
      },
      "lineNbr": 1,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-03-28T01:51:31Z",
      "side": 1,
      "message": "2023",
      "range": {
        "startLine": 1,
        "startChar": 13,
        "endLine": 1,
        "endChar": 17
      },
      "revId": "17f954c837e553a03e90d3160741c88927471aef",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "261ab6a3_92315dc9",
        "filename": "include/dawn/native/D3D11Backend.h",
        "patchSetId": 11
      },
      "lineNbr": 1,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2023-03-28T19:15:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "15399e59_dbbd9935",
      "range": {
        "startLine": 1,
        "startChar": 13,
        "endLine": 1,
        "endChar": 17
      },
      "revId": "17f954c837e553a03e90d3160741c88927471aef",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "36b191a9_4fbe598b",
        "filename": "src/dawn/native/BUILD.gn",
        "patchSetId": 11
      },
      "lineNbr": 471,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-03-28T11:32:24Z",
      "side": 1,
      "message": "nit: unnecessary?",
      "revId": "17f954c837e553a03e90d3160741c88927471aef",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c8837c0f_4c67ebdc",
        "filename": "src/dawn/native/BUILD.gn",
        "patchSetId": 11
      },
      "lineNbr": 471,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2023-03-28T19:15:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "36b191a9_4fbe598b",
      "revId": "17f954c837e553a03e90d3160741c88927471aef",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "957afd05_516ad2f1",
        "filename": "src/dawn/native/d3d11/AdapterD3D11.cpp",
        "patchSetId": 11
      },
      "lineNbr": 47,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-03-28T11:32:24Z",
      "side": 1,
      "message": "ToBackend might work.",
      "range": {
        "startLine": 47,
        "startChar": 11,
        "endLine": 47,
        "endChar": 32
      },
      "revId": "17f954c837e553a03e90d3160741c88927471aef",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "56bdb766_b646361c",
        "filename": "src/dawn/native/d3d11/AdapterD3D11.cpp",
        "patchSetId": 11
      },
      "lineNbr": 47,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2023-03-28T19:15:59Z",
      "side": 1,
      "message": "I tried. It doesn\u0027t work with Backend class.",
      "parentUuid": "957afd05_516ad2f1",
      "range": {
        "startLine": 47,
        "startChar": 11,
        "endLine": 47,
        "endChar": 32
      },
      "revId": "17f954c837e553a03e90d3160741c88927471aef",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "382cb991_b701eb6a",
        "filename": "src/dawn/native/d3d11/AdapterD3D11.cpp",
        "patchSetId": 11
      },
      "lineNbr": 72,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-03-28T11:32:24Z",
      "side": 1,
      "message": "All of this seems like it could be shared with D3D12.",
      "revId": "17f954c837e553a03e90d3160741c88927471aef",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e7319830_96b2ebaf",
        "filename": "src/dawn/native/d3d11/AdapterD3D11.cpp",
        "patchSetId": 11
      },
      "lineNbr": 72,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2023-03-28T19:15:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "382cb991_b701eb6a",
      "revId": "17f954c837e553a03e90d3160741c88927471aef",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d303dfde_ee4f5883",
        "filename": "src/dawn/native/d3d11/AdapterD3D11.cpp",
        "patchSetId": 11
      },
      "lineNbr": 161,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-03-28T01:51:31Z",
      "side": 1,
      "message": "can it not be supported now with the binding remapping to a flat register space?",
      "range": {
        "startLine": 160,
        "startChar": 3,
        "endLine": 161,
        "endChar": 33
      },
      "revId": "17f954c837e553a03e90d3160741c88927471aef",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f77047ca_68a46281",
        "filename": "src/dawn/native/d3d11/AdapterD3D11.cpp",
        "patchSetId": 11
      },
      "lineNbr": 161,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2023-03-28T19:15:59Z",
      "side": 1,
      "message": "It will be implemented in a follow up CL.",
      "parentUuid": "d303dfde_ee4f5883",
      "range": {
        "startLine": 160,
        "startChar": 3,
        "endLine": 161,
        "endChar": 33
      },
      "revId": "17f954c837e553a03e90d3160741c88927471aef",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cc2972e2_6199d065",
        "filename": "src/dawn/native/d3d11/AdapterD3D11.cpp",
        "patchSetId": 11
      },
      "lineNbr": 175,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-03-28T01:51:31Z",
      "side": 1,
      "message": "link to doc?",
      "range": {
        "startLine": 175,
        "startChar": 48,
        "endLine": 175,
        "endChar": 53
      },
      "revId": "17f954c837e553a03e90d3160741c88927471aef",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2e804337_55dc9bf5",
        "filename": "src/dawn/native/d3d11/AdapterD3D11.cpp",
        "patchSetId": 11
      },
      "lineNbr": 175,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2023-03-28T19:15:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cc2972e2_6199d065",
      "range": {
        "startLine": 175,
        "startChar": 48,
        "endLine": 175,
        "endChar": 53
      },
      "revId": "17f954c837e553a03e90d3160741c88927471aef",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "17bb59b5_5bad4951",
        "filename": "src/dawn/native/d3d11/BindGroupD3D11.h",
        "patchSetId": 11
      },
      "lineNbr": 25,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-03-28T01:51:31Z",
      "side": 1,
      "message": "why \"GL\" ? is this used?",
      "range": {
        "startLine": 25,
        "startChar": 19,
        "endLine": 25,
        "endChar": 21
      },
      "revId": "17f954c837e553a03e90d3160741c88927471aef",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cd826bed_9aeabfb0",
        "filename": "src/dawn/native/d3d11/BindGroupD3D11.h",
        "patchSetId": 11
      },
      "lineNbr": 25,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2023-03-28T19:15:59Z",
      "side": 1,
      "message": "Removed it.",
      "parentUuid": "17bb59b5_5bad4951",
      "range": {
        "startLine": 25,
        "startChar": 19,
        "endLine": 25,
        "endChar": 21
      },
      "revId": "17f954c837e553a03e90d3160741c88927471aef",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b0e20d8f_e4e43a9a",
        "filename": "src/dawn/native/d3d11/BindGroupLayoutD3D11.cpp",
        "patchSetId": 11
      },
      "lineNbr": 26,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-03-28T01:51:31Z",
      "side": 1,
      "message": "nit: return directly",
      "range": {
        "startLine": 25,
        "startChar": 4,
        "endLine": 26,
        "endChar": 19
      },
      "revId": "17f954c837e553a03e90d3160741c88927471aef",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bf62be2f_61904ef8",
        "filename": "src/dawn/native/d3d11/BindGroupLayoutD3D11.cpp",
        "patchSetId": 11
      },
      "lineNbr": 26,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2023-03-28T19:15:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b0e20d8f_e4e43a9a",
      "range": {
        "startLine": 25,
        "startChar": 4,
        "endLine": 26,
        "endChar": 19
      },
      "revId": "17f954c837e553a03e90d3160741c88927471aef",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "45a78b83_e5bc6cc2",
        "filename": "src/dawn/native/d3d11/BufferD3D11.cpp",
        "patchSetId": 11
      },
      "lineNbr": 68,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-03-28T01:51:31Z",
      "side": 1,
      "message": "should this look at map usages?",
      "range": {
        "startLine": 68,
        "startChar": 0,
        "endLine": 68,
        "endChar": 28
      },
      "revId": "17f954c837e553a03e90d3160741c88927471aef",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e7fb3ef8_e5930ea5",
        "filename": "src/dawn/native/d3d11/BufferD3D11.cpp",
        "patchSetId": 11
      },
      "lineNbr": 68,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2023-03-28T19:15:59Z",
      "side": 1,
      "message": "Yes. But D3D11 doesn\u0027t allow copy data between Buffer and Texture. So we cannot use mappable D3D11Buffer as staging buffer for textures.",
      "parentUuid": "45a78b83_e5bc6cc2",
      "range": {
        "startLine": 68,
        "startChar": 0,
        "endLine": 68,
        "endChar": 28
      },
      "revId": "17f954c837e553a03e90d3160741c88927471aef",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e7e4c470_b1cd132c",
        "filename": "src/dawn/native/d3d11/BufferD3D11.cpp",
        "patchSetId": 11
      },
      "lineNbr": 76,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-03-28T01:51:31Z",
      "side": 1,
      "message": "do we need D3D11_RESOURCE_MISC_BUFFER_ALLOW_RAW_VIEWS for HLSL\u0027s RWByteAddressBuffer ?\n\ndo we need D3D11_RESOURCE_MISC_DRAWINDIRECT_ARGS for indirect usage buffers?",
      "revId": "17f954c837e553a03e90d3160741c88927471aef",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6dfa860c_ddc0d9cd",
        "filename": "src/dawn/native/d3d11/BufferD3D11.cpp",
        "patchSetId": 11
      },
      "lineNbr": 76,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-03-28T01:51:31Z",
      "side": 1,
      "message": "do we use StructuredBuffer ? I thought it was always ByteAddressBuffer but I\u0027m not 100% sure.",
      "range": {
        "startLine": 76,
        "startChar": 47,
        "endLine": 76,
        "endChar": 84
      },
      "revId": "17f954c837e553a03e90d3160741c88927471aef",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2ef6c1be_b62a74f2",
        "filename": "src/dawn/native/d3d11/BufferD3D11.cpp",
        "patchSetId": 11
      },
      "lineNbr": 76,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2023-03-28T19:15:59Z",
      "side": 1,
      "message": "storage buffer supporting is not implemented yet. I just put possible flags here. It probably need to be changed in follow up CLs.\n\nAdded a todo here.",
      "parentUuid": "6dfa860c_ddc0d9cd",
      "range": {
        "startLine": 76,
        "startChar": 47,
        "endLine": 76,
        "endChar": 84
      },
      "revId": "17f954c837e553a03e90d3160741c88927471aef",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e7c9538e_23e1c8e0",
        "filename": "src/dawn/native/d3d11/BufferD3D11.cpp",
        "patchSetId": 11
      },
      "lineNbr": 76,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2023-03-28T19:15:59Z",
      "side": 1,
      "message": "same here.",
      "parentUuid": "e7e4c470_b1cd132c",
      "revId": "17f954c837e553a03e90d3160741c88927471aef",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "22018a2c_0ae30a8d",
        "filename": "src/dawn/native/d3d11/BufferD3D11.cpp",
        "patchSetId": 11
      },
      "lineNbr": 84,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-03-28T01:51:31Z",
      "side": 1,
      "message": "comment why this is always uint32_t",
      "range": {
        "startLine": 84,
        "startChar": 0,
        "endLine": 84,
        "endChar": 32
      },
      "revId": "17f954c837e553a03e90d3160741c88927471aef",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2237666d_5f829ed8",
        "filename": "src/dawn/native/d3d11/BufferD3D11.cpp",
        "patchSetId": 11
      },
      "lineNbr": 84,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2023-03-28T19:15:59Z",
      "side": 1,
      "message": "Add a TODO for figuring out how to setup it.",
      "parentUuid": "22018a2c_0ae30a8d",
      "range": {
        "startLine": 84,
        "startChar": 0,
        "endLine": 84,
        "endChar": 32
      },
      "revId": "17f954c837e553a03e90d3160741c88927471aef",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "38b4f97c_72a743e5",
        "filename": "src/dawn/native/d3d11/BufferD3D11.cpp",
        "patchSetId": 11
      },
      "lineNbr": 95,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-03-28T01:51:31Z",
      "side": 1,
      "message": "comment why",
      "range": {
        "startLine": 90,
        "startChar": 3,
        "endLine": 95,
        "endChar": 5
      },
      "revId": "17f954c837e553a03e90d3160741c88927471aef",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2a202bcf_76029817",
        "filename": "src/dawn/native/d3d11/BufferD3D11.cpp",
        "patchSetId": 11
      },
      "lineNbr": 95,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2023-03-28T19:15:59Z",
      "side": 1,
      "message": "I cannot find any document about it. But I got those number by trying the API with debug enabled.",
      "parentUuid": "38b4f97c_72a743e5",
      "range": {
        "startLine": 90,
        "startChar": 3,
        "endLine": 95,
        "endChar": 5
      },
      "revId": "17f954c837e553a03e90d3160741c88927471aef",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6fb67107_064b27af",
        "filename": "src/dawn/native/d3d11/BufferD3D11.cpp",
        "patchSetId": 11
      },
      "lineNbr": 99,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-03-28T01:51:31Z",
      "side": 1,
      "message": "it\u0027s not obvious how these usages relate to staging. I expected it to check for Map/Copy usages",
      "range": {
        "startLine": 99,
        "startChar": 5,
        "endLine": 99,
        "endChar": 19
      },
      "revId": "17f954c837e553a03e90d3160741c88927471aef",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e701670d_22768d9c",
        "filename": "src/dawn/native/d3d11/BufferD3D11.cpp",
        "patchSetId": 11
      },
      "lineNbr": 99,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2023-03-28T19:15:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6fb67107_064b27af",
      "range": {
        "startLine": 99,
        "startChar": 5,
        "endLine": 99,
        "endChar": 19
      },
      "revId": "17f954c837e553a03e90d3160741c88927471aef",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3e39aa1e_e69b3aed",
        "filename": "src/dawn/native/d3d11/BufferD3D11.cpp",
        "patchSetId": 11
      },
      "lineNbr": 130,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-03-28T01:51:31Z",
      "side": 1,
      "message": "so IIUC, this happens branch if the buffer is usable on the GPU in a shader. Copy usage is not considered in `IsStagingUsage`.\n\nSo it doesn\u0027t happen for buffers that are only map and/or copy. Those buffers are purely CPU buffers.\n\nWhat about COPY_DST|COPY_SRC buffers for GPU-\u003eGPU copies though. Why should these be staging buffers?\nIf they had a real d3d11 buffer backing them, then we would need the synchronous map that occurs in the B2B copies in CommandBufferD3D11.",
      "range": {
        "startLine": 130,
        "startChar": 0,
        "endLine": 130,
        "endChar": 30
      },
      "revId": "17f954c837e553a03e90d3160741c88927471aef",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0c1068f4_48d95caa",
        "filename": "src/dawn/native/d3d11/BufferD3D11.cpp",
        "patchSetId": 11
      },
      "lineNbr": 130,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2023-03-28T19:15:59Z",
      "side": 1,
      "message": "D3D11 doesn\u0027t allow copy data between D3DTexture and D3DBuffer. So we can not create those kind of GPU buffer for uploading textures. So we have to use system memory to simulate it. In this method, we don\u0027t know how the buffer will be used. So it is better to just use system memory for all staging buffers.",
      "parentUuid": "3e39aa1e_e69b3aed",
      "range": {
        "startLine": 130,
        "startChar": 0,
        "endLine": 130,
        "endChar": 30
      },
      "revId": "17f954c837e553a03e90d3160741c88927471aef",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dd1f6a29_01f0089b",
        "filename": "src/dawn/native/d3d11/BufferD3D11.cpp",
        "patchSetId": 11
      },
      "lineNbr": 144,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-03-28T01:51:31Z",
      "side": 1,
      "message": "nit: should explain why for mappedAtCreation. That the creation is deferred to unmap when we can provide the initial data.",
      "revId": "17f954c837e553a03e90d3160741c88927471aef",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "86006449_5ed95acb",
        "filename": "src/dawn/native/d3d11/BufferD3D11.cpp",
        "patchSetId": 11
      },
      "lineNbr": 144,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2023-03-28T19:15:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "dd1f6a29_01f0089b",
      "revId": "17f954c837e553a03e90d3160741c88927471aef",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f3871722_7d2c17ae",
        "filename": "src/dawn/native/d3d11/BufferD3D11.cpp",
        "patchSetId": 11
      },
      "lineNbr": 167,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-03-28T01:51:31Z",
      "side": 1,
      "message": "the data is always a CPU shadow copy. Why don\u0027t we actually map the buffer and use D3D11_MAPPED_SUBRESOURCE when possible?",
      "range": {
        "startLine": 167,
        "startChar": 0,
        "endLine": 167,
        "endChar": 39
      },
      "revId": "17f954c837e553a03e90d3160741c88927471aef",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "badb2533_d50871cc",
        "filename": "src/dawn/native/d3d11/BufferD3D11.cpp",
        "patchSetId": 11
      },
      "lineNbr": 167,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2023-03-28T19:15:59Z",
      "side": 1,
      "message": "D3D11 doesn\u0027t allow copy between Buffer and Texture.",
      "parentUuid": "f3871722_7d2c17ae",
      "range": {
        "startLine": 167,
        "startChar": 0,
        "endLine": 167,
        "endChar": 39
      },
      "revId": "17f954c837e553a03e90d3160741c88927471aef",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "df211a6c_c31d9b27",
        "filename": "src/dawn/native/d3d11/CommandBufferD3D11.cpp",
        "patchSetId": 11
      },
      "lineNbr": 91,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-03-28T01:51:31Z",
      "side": 1,
      "message": "where do these constants come from?",
      "range": {
        "startLine": 88,
        "startChar": 20,
        "endLine": 91,
        "endChar": 0
      },
      "revId": "17f954c837e553a03e90d3160741c88927471aef",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5beb5af1_831be5d4",
        "filename": "src/dawn/native/d3d11/CommandBufferD3D11.cpp",
        "patchSetId": 11
      },
      "lineNbr": 91,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2023-03-28T19:15:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "df211a6c_c31d9b27",
      "range": {
        "startLine": 88,
        "startChar": 20,
        "endLine": 91,
        "endChar": 0
      },
      "revId": "17f954c837e553a03e90d3160741c88927471aef",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3cca30a1_5609691a",
        "filename": "src/dawn/native/d3d11/CommandBufferD3D11.cpp",
        "patchSetId": 11
      },
      "lineNbr": 103,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-03-28T01:51:31Z",
      "side": 1,
      "message": "what about CSSetConstantBuffers? ditto for other binding types",
      "revId": "17f954c837e553a03e90d3160741c88927471aef",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "27c90745_32de212b",
        "filename": "src/dawn/native/d3d11/CommandBufferD3D11.cpp",
        "patchSetId": 11
      },
      "lineNbr": 103,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2023-03-28T19:15:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3cca30a1_5609691a",
      "revId": "17f954c837e553a03e90d3160741c88927471aef",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1710a332_1312d296",
        "filename": "src/dawn/native/d3d11/CommandBufferD3D11.cpp",
        "patchSetId": 11
      },
      "lineNbr": 119,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-03-28T01:51:31Z",
      "side": 1,
      "message": "what about VSSetSamplers and CSSetSamplers? ditto for other binding types",
      "revId": "17f954c837e553a03e90d3160741c88927471aef",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c3ac61f2_a516229b",
        "filename": "src/dawn/native/d3d11/CommandBufferD3D11.cpp",
        "patchSetId": 11
      },
      "lineNbr": 119,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2023-03-28T19:15:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1710a332_1312d296",
      "revId": "17f954c837e553a03e90d3160741c88927471aef",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fdca761a_26756ecf",
        "filename": "src/dawn/native/d3d11/CommandBufferD3D11.cpp",
        "patchSetId": 11
      },
      "lineNbr": 165,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-03-28T01:51:31Z",
      "side": 1,
      "message": "is this because the clearing is currently unimplemented?",
      "revId": "17f954c837e553a03e90d3160741c88927471aef",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3efed308_3fd5f597",
        "filename": "src/dawn/native/d3d11/CommandBufferD3D11.cpp",
        "patchSetId": 11
      },
      "lineNbr": 165,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2023-03-28T19:15:59Z",
      "side": 1,
      "message": "Yeah. Add a TODO here.",
      "parentUuid": "fdca761a_26756ecf",
      "revId": "17f954c837e553a03e90d3160741c88927471aef",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1d5573b0_3c8683c8",
        "filename": "src/dawn/native/d3d11/CommandBufferD3D11.cpp",
        "patchSetId": 11
      },
      "lineNbr": 217,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-03-28T01:51:31Z",
      "side": 1,
      "message": "we can probably use `CopyResource` when possible. D3D12 backend does something similar when the entire resource is copied",
      "revId": "17f954c837e553a03e90d3160741c88927471aef",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7973319c_fc831da9",
        "filename": "src/dawn/native/d3d11/CommandBufferD3D11.cpp",
        "patchSetId": 11
      },
      "lineNbr": 217,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2023-03-28T19:15:59Z",
      "side": 1,
      "message": "Probably it is not necessary. Since we never allocating D3D11Buffer for staging buffer. I feel we will never run into the code path for copying between two D3DBuffers.",
      "parentUuid": "1d5573b0_3c8683c8",
      "revId": "17f954c837e553a03e90d3160741c88927471aef",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d12afa1a_ed7a4be4",
        "filename": "src/dawn/native/d3d11/CommandBufferD3D11.cpp",
        "patchSetId": 11
      },
      "lineNbr": 279,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-03-28T01:51:31Z",
      "side": 1,
      "message": "interesting - how does ANGLE handle this?",
      "range": {
        "startLine": 279,
        "startChar": 0,
        "endLine": 279,
        "endChar": 81
      },
      "revId": "17f954c837e553a03e90d3160741c88927471aef",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9a103e58_ccc4e277",
        "filename": "src/dawn/native/d3d11/CommandBufferD3D11.cpp",
        "patchSetId": 11
      },
      "lineNbr": 279,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-03-28T02:12:43Z",
      "side": 1,
      "message": "for large buffers, they keep a CPU shadow copy around forever, and make a new revision of the buffer. for small buffers, they read it back, then change the cpu temporary copy, and re-upload a new revision of the buffer.\n\nThat\u0027s all pretty unfortunate but probably have to do something similar.\n\nwhat do you think about the following approach to start:\n - never actually create the buffer with D3D11_BIND_CONSTANT_BUFFER\n - increment a serial every time a uniform buffer is used in a draw/dispatch/copy-cmd with writable usage\n - BufferD3D11 stores mConstantBuffer and mConstantBufferSerial\n - BufferD3D11 has a getter GetConstantBufferCopy(Serial serial); which either returns the mConstantBuffer directly if the serial matches, or it replaces mConstantBuffer with a new one, and performs the copy to it from the real buffer contents.\n   We do GetConstantBufferCopy(GetLastMutationSerial()) when we SetBindGroup, before VS/PS/CSSetConstantBuffer\n\n?",
      "parentUuid": "d12afa1a_ed7a4be4",
      "range": {
        "startLine": 279,
        "startChar": 0,
        "endLine": 279,
        "endChar": 81
      },
      "revId": "17f954c837e553a03e90d3160741c88927471aef",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "41dbe636_5e8076e1",
        "filename": "src/dawn/native/d3d11/CommandBufferD3D11.cpp",
        "patchSetId": 11
      },
      "lineNbr": 279,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2023-03-28T19:15:59Z",
      "side": 1,
      "message": "Ideally, we should tell clients about this situation, so the client can choose the most efficient way to do it.\n\nAs fallback, I don\u0027t think it is necessary to use this serial stuff. This restriction is only with constant buffers which cannot be modified by shaders. And D3D11 doesn\u0027t allow create constant buffers with other usages (for example, index, vertex, storage, etc). So we just need to shadow the data in system memory.\n\nAdd a TODO here for now.",
      "parentUuid": "9a103e58_ccc4e277",
      "range": {
        "startLine": 279,
        "startChar": 0,
        "endLine": 279,
        "endChar": 81
      },
      "revId": "17f954c837e553a03e90d3160741c88927471aef",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6e1dd0c5_9743a781",
        "filename": "src/dawn/native/d3d11/CommandBufferD3D11.cpp",
        "patchSetId": 11
      },
      "lineNbr": 326,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-03-28T01:51:31Z",
      "side": 1,
      "message": "I think that buffers should be real d3d11 buffers, and B2T and T2B can be the special-cased operations that do CPU readbacks and uploads - until we optimize it later to use a compute shader when possible.\n\nAlso, consider factoring out these out to helper functions. See \"RecordCopyBufferToTexture\", \"RecordCopyTextureWithTemporaryBuffer\", etc..",
      "revId": "17f954c837e553a03e90d3160741c88927471aef",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "710c59ba_6c4bd61a",
        "filename": "src/dawn/native/d3d11/CommandBufferD3D11.cpp",
        "patchSetId": 11
      },
      "lineNbr": 326,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2023-03-28T19:15:59Z",
      "side": 1,
      "message": "Ideally, we should let clients know this situation, so client can provide a extra usage for creating buffers. So we know the buffer is for texture upload or readback in advance, so we can create a staging(mappable) D3DTexture instead of staging(mappable) D3DBuffer. It is the most efficient solution.",
      "parentUuid": "6e1dd0c5_9743a781",
      "revId": "17f954c837e553a03e90d3160741c88927471aef",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4dd0b100_ea2a0fdd",
        "filename": "src/dawn/native/d3d11/CommandBufferD3D11.cpp",
        "patchSetId": 11
      },
      "lineNbr": 450,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-03-28T01:51:31Z",
      "side": 1,
      "message": "it\u0027s odd that EnsureDataInitialized could return false, but not error. I think the code to handle the different kinds of buffer backings should be encapsulated within BufferD3D11",
      "range": {
        "startLine": 447,
        "startChar": 15,
        "endLine": 450,
        "endChar": 86
      },
      "revId": "17f954c837e553a03e90d3160741c88927471aef",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "52b058c2_5afb7536",
        "filename": "src/dawn/native/d3d11/CommandBufferD3D11.cpp",
        "patchSetId": 11
      },
      "lineNbr": 450,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2023-03-28T19:15:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4dd0b100_ea2a0fdd",
      "range": {
        "startLine": 447,
        "startChar": 15,
        "endLine": 450,
        "endChar": 86
      },
      "revId": "17f954c837e553a03e90d3160741c88927471aef",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1247d837_d7040902",
        "filename": "src/dawn/native/d3d11/CommandBufferD3D11.cpp",
        "patchSetId": 11
      },
      "lineNbr": 612,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-03-28T01:51:31Z",
      "side": 1,
      "message": "?",
      "range": {
        "startLine": 612,
        "startChar": 59,
        "endLine": 612,
        "endChar": 78
      },
      "revId": "17f954c837e553a03e90d3160741c88927471aef",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1e856c02_e3d11c29",
        "filename": "src/dawn/native/d3d11/CommandBufferD3D11.cpp",
        "patchSetId": 11
      },
      "lineNbr": 612,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2023-03-28T19:15:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1247d837_d7040902",
      "range": {
        "startLine": 612,
        "startChar": 59,
        "endLine": 612,
        "endChar": 78
      },
      "revId": "17f954c837e553a03e90d3160741c88927471aef",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "176fca4f_1b211a24",
        "filename": "src/dawn/native/d3d11/CommandBufferD3D11.cpp",
        "patchSetId": 11
      },
      "lineNbr": 888,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-03-28T01:51:31Z",
      "side": 1,
      "message": "this will need to be extracted from the render pipeline - so lazily applied based on what the pipeline is",
      "range": {
        "startLine": 888,
        "startChar": 0,
        "endLine": 888,
        "endChar": 47
      },
      "revId": "17f954c837e553a03e90d3160741c88927471aef",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "487a5e60_e14b48df",
        "filename": "src/dawn/native/d3d11/CommandBufferD3D11.cpp",
        "patchSetId": 11
      },
      "lineNbr": 888,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2023-03-28T19:15:59Z",
      "side": 1,
      "message": "Ack. I have a followup CL for it.",
      "parentUuid": "176fca4f_1b211a24",
      "range": {
        "startLine": 888,
        "startChar": 0,
        "endLine": 888,
        "endChar": 47
      },
      "revId": "17f954c837e553a03e90d3160741c88927471aef",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a68d944a_0cd858da",
        "filename": "src/dawn/native/d3d11/DeviceD3D11.cpp",
        "patchSetId": 11
      },
      "lineNbr": 65,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-03-28T01:51:31Z",
      "side": 1,
      "message": "maybe this should be part of the CommandRecordingContextD3D11?",
      "range": {
        "startLine": 65,
        "startChar": 0,
        "endLine": 65,
        "endChar": 72
      },
      "revId": "17f954c837e553a03e90d3160741c88927471aef",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e7dc68df_9583bc39",
        "filename": "src/dawn/native/d3d11/DeviceD3D11.cpp",
        "patchSetId": 11
      },
      "lineNbr": 65,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2023-03-28T19:15:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a68d944a_0cd858da",
      "range": {
        "startLine": 65,
        "startChar": 0,
        "endLine": 65,
        "endChar": 72
      },
      "revId": "17f954c837e553a03e90d3160741c88927471aef",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "be0f827f_48d3e1b9",
        "filename": "src/dawn/native/d3d11/PipelineLayoutD3D11.cpp",
        "patchSetId": 11
      },
      "lineNbr": 101,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-03-28T01:51:31Z",
      "side": 1,
      "message": "unused, I think",
      "range": {
        "startLine": 98,
        "startChar": 0,
        "endLine": 101,
        "endChar": 0
      },
      "revId": "17f954c837e553a03e90d3160741c88927471aef",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "90dc93d5_ffe799c6",
        "filename": "src/dawn/native/d3d11/PipelineLayoutD3D11.cpp",
        "patchSetId": 11
      },
      "lineNbr": 101,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2023-03-28T19:15:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "be0f827f_48d3e1b9",
      "range": {
        "startLine": 98,
        "startChar": 0,
        "endLine": 101,
        "endChar": 0
      },
      "revId": "17f954c837e553a03e90d3160741c88927471aef",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eac1e7b6_c38d15ec",
        "filename": "src/dawn/native/d3d11/PipelineLayoutD3D11.cpp",
        "patchSetId": 11
      },
      "lineNbr": 117,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-03-28T01:51:31Z",
      "side": 1,
      "message": "unused, I think",
      "range": {
        "startLine": 114,
        "startChar": 0,
        "endLine": 117,
        "endChar": 0
      },
      "revId": "17f954c837e553a03e90d3160741c88927471aef",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b86f7776_a33d67ac",
        "filename": "src/dawn/native/d3d11/PipelineLayoutD3D11.cpp",
        "patchSetId": 11
      },
      "lineNbr": 117,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2023-03-28T19:15:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "eac1e7b6_c38d15ec",
      "range": {
        "startLine": 114,
        "startChar": 0,
        "endLine": 117,
        "endChar": 0
      },
      "revId": "17f954c837e553a03e90d3160741c88927471aef",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8a29f0d5_7cdb563e",
        "filename": "src/dawn/native/d3d11/PipelineLayoutD3D11.cpp",
        "patchSetId": 11
      },
      "lineNbr": 125,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-03-28T01:51:31Z",
      "side": 1,
      "message": "unused, I think",
      "range": {
        "startLine": 121,
        "startChar": 0,
        "endLine": 125,
        "endChar": 0
      },
      "revId": "17f954c837e553a03e90d3160741c88927471aef",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2e7f7ea6_dffb7404",
        "filename": "src/dawn/native/d3d11/PipelineLayoutD3D11.cpp",
        "patchSetId": 11
      },
      "lineNbr": 125,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2023-03-28T19:15:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8a29f0d5_7cdb563e",
      "range": {
        "startLine": 121,
        "startChar": 0,
        "endLine": 125,
        "endChar": 0
      },
      "revId": "17f954c837e553a03e90d3160741c88927471aef",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "38620db7_8f86dece",
        "filename": "src/dawn/native/d3d11/PlatformFunctionsD3D11.cpp",
        "patchSetId": 11
      },
      "lineNbr": 36,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-03-28T11:32:24Z",
      "side": 1,
      "message": "nit: isn\u0027t this lowercase usually?",
      "range": {
        "startLine": 36,
        "startChar": 25,
        "endLine": 36,
        "endChar": 30
      },
      "revId": "17f954c837e553a03e90d3160741c88927471aef",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9ab1eedb_65d85e9d",
        "filename": "src/dawn/native/d3d11/PlatformFunctionsD3D11.cpp",
        "patchSetId": 11
      },
      "lineNbr": 36,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2023-03-28T19:15:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "38620db7_8f86dece",
      "range": {
        "startLine": 36,
        "startChar": 25,
        "endLine": 36,
        "endChar": 30
      },
      "revId": "17f954c837e553a03e90d3160741c88927471aef",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "80e2b3ab_1f1c6272",
        "filename": "src/dawn/native/d3d11/PlatformFunctionsD3D11.h",
        "patchSetId": 11
      },
      "lineNbr": 24,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-03-28T11:32:24Z",
      "side": 1,
      "message": "nit: comment needs to be updated.",
      "revId": "17f954c837e553a03e90d3160741c88927471aef",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "698102a9_1cdeb1a9",
        "filename": "src/dawn/native/d3d11/PlatformFunctionsD3D11.h",
        "patchSetId": 11
      },
      "lineNbr": 24,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2023-03-28T19:15:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "80e2b3ab_1f1c6272",
      "revId": "17f954c837e553a03e90d3160741c88927471aef",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "56b34d58_13b6de40",
        "filename": "src/dawn/native/d3d11/PlatformFunctionsD3D11.h",
        "patchSetId": 11
      },
      "lineNbr": 37,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-03-28T11:32:24Z",
      "side": 1,
      "message": "nit: unused?",
      "revId": "17f954c837e553a03e90d3160741c88927471aef",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bdb4cdb9_e672b0b8",
        "filename": "src/dawn/native/d3d11/PlatformFunctionsD3D11.h",
        "patchSetId": 11
      },
      "lineNbr": 37,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2023-03-28T19:15:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "56b34d58_13b6de40",
      "revId": "17f954c837e553a03e90d3160741c88927471aef",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7748ee75_0718cd2e",
        "filename": "src/dawn/native/d3d11/SamplerD3D11.cpp",
        "patchSetId": 11
      },
      "lineNbr": 53,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-03-28T01:51:31Z",
      "side": 1,
      "message": "nit: return directly",
      "range": {
        "startLine": 51,
        "startChar": 3,
        "endLine": 53,
        "endChar": 19
      },
      "revId": "17f954c837e553a03e90d3160741c88927471aef",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ddd11b43_803e6d08",
        "filename": "src/dawn/native/d3d11/SamplerD3D11.cpp",
        "patchSetId": 11
      },
      "lineNbr": 53,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2023-03-28T19:15:59Z",
      "side": 1,
      "message": "We call sampler-\u003eInitialize() here.",
      "parentUuid": "7748ee75_0718cd2e",
      "range": {
        "startLine": 51,
        "startChar": 3,
        "endLine": 53,
        "endChar": 19
      },
      "revId": "17f954c837e553a03e90d3160741c88927471aef",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5a8b0613_2994a9ab",
        "filename": "src/dawn/native/d3d11/TextureD3D11.cpp",
        "patchSetId": 11
      },
      "lineNbr": 37,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-03-28T01:51:31Z",
      "side": 1,
      "message": "nit: may as well hard-code it",
      "range": {
        "startLine": 35,
        "startChar": 0,
        "endLine": 37,
        "endChar": 1
      },
      "revId": "17f954c837e553a03e90d3160741c88927471aef",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6e451a5f_cb429a91",
        "filename": "src/dawn/native/d3d11/TextureD3D11.cpp",
        "patchSetId": 11
      },
      "lineNbr": 37,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2023-03-28T19:15:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5a8b0613_2994a9ab",
      "range": {
        "startLine": 35,
        "startChar": 0,
        "endLine": 37,
        "endChar": 1
      },
      "revId": "17f954c837e553a03e90d3160741c88927471aef",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4d6550a5_9f5dd630",
        "filename": "src/dawn/native/d3d11/TextureD3D11.cpp",
        "patchSetId": 11
      },
      "lineNbr": 39,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-03-28T01:51:31Z",
      "side": 1,
      "message": "this should be put in a common helper somewhere",
      "range": {
        "startLine": 39,
        "startChar": 5,
        "endLine": 39,
        "endChar": 25
      },
      "revId": "17f954c837e553a03e90d3160741c88927471aef",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cf64a1f8_c6c107e9",
        "filename": "src/dawn/native/d3d11/TextureD3D11.cpp",
        "patchSetId": 11
      },
      "lineNbr": 39,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2023-03-28T19:15:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4d6550a5_9f5dd630",
      "range": {
        "startLine": 39,
        "startChar": 5,
        "endLine": 39,
        "endChar": 25
      },
      "revId": "17f954c837e553a03e90d3160741c88927471aef",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9ae9e37b_01c31373",
        "filename": "src/dawn/native/d3d11/TextureD3D11.cpp",
        "patchSetId": 11
      },
      "lineNbr": 39,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2023-03-28T19:58:07Z",
      "side": 1,
      "message": "I don\u0027t see it is used elsewhere.",
      "parentUuid": "cf64a1f8_c6c107e9",
      "range": {
        "startLine": 39,
        "startChar": 5,
        "endLine": 39,
        "endChar": 25
      },
      "revId": "17f954c837e553a03e90d3160741c88927471aef",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2bb4863c_a2ccc4a8",
        "filename": "src/dawn/native/d3d11/TextureD3D11.cpp",
        "patchSetId": 11
      },
      "lineNbr": 74,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-03-28T01:51:31Z",
      "side": 1,
      "message": "nit: may as well hardcode it",
      "range": {
        "startLine": 67,
        "startChar": 0,
        "endLine": 74,
        "endChar": 1
      },
      "revId": "17f954c837e553a03e90d3160741c88927471aef",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0abee64f_a680096a",
        "filename": "src/dawn/native/d3d11/TextureD3D11.cpp",
        "patchSetId": 11
      },
      "lineNbr": 74,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2023-03-28T19:15:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2bb4863c_a2ccc4a8",
      "range": {
        "startLine": 67,
        "startChar": 0,
        "endLine": 74,
        "endChar": 1
      },
      "revId": "17f954c837e553a03e90d3160741c88927471aef",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ccbafe5d_c09a81ef",
        "filename": "src/dawn/native/d3d11/TextureD3D11.cpp",
        "patchSetId": 11
      },
      "lineNbr": 103,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-03-28T01:51:31Z",
      "side": 1,
      "message": "nit: it\u0027s d3d12. but also, prefer to not include these workaround toggles until we prove it\u0027s needed",
      "range": {
        "startLine": 103,
        "startChar": 40,
        "endLine": 103,
        "endChar": 92
      },
      "revId": "17f954c837e553a03e90d3160741c88927471aef",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "df5bd72b_73f5027d",
        "filename": "src/dawn/native/d3d11/TextureD3D11.cpp",
        "patchSetId": 11
      },
      "lineNbr": 103,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2023-03-28T19:15:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ccbafe5d_c09a81ef",
      "range": {
        "startLine": 103,
        "startChar": 40,
        "endLine": 103,
        "endChar": 92
      },
      "revId": "17f954c837e553a03e90d3160741c88927471aef",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aac47975_8344db33",
        "filename": "src/dawn/native/d3d11/TextureD3D11.cpp",
        "patchSetId": 11
      },
      "lineNbr": 360,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-03-28T01:51:31Z",
      "side": 1,
      "message": "this logic can probably be moved to d3d:: code so it stays in sync with the other format-\u003eDXGI format mappings",
      "revId": "17f954c837e553a03e90d3160741c88927471aef",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dcb096c2_6eacc342",
        "filename": "src/dawn/native/d3d11/TextureD3D11.cpp",
        "patchSetId": 11
      },
      "lineNbr": 360,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2023-03-28T19:15:59Z",
      "side": 1,
      "message": "Added a TODO for followup CL.",
      "parentUuid": "aac47975_8344db33",
      "revId": "17f954c837e553a03e90d3160741c88927471aef",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b76a734e_33eb4836",
        "filename": "src/dawn/native/d3d11/UtilsD3D11.cpp",
        "patchSetId": 11
      },
      "lineNbr": 42,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-03-28T01:51:31Z",
      "side": 1,
      "message": "nit: prefer to list out the other cases so we get compile errors if enums are added",
      "range": {
        "startLine": 41,
        "startChar": 8,
        "endLine": 42,
        "endChar": 26
      },
      "revId": "17f954c837e553a03e90d3160741c88927471aef",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ce9ddce4_0b7b70da",
        "filename": "src/dawn/native/d3d11/UtilsD3D11.cpp",
        "patchSetId": 11
      },
      "lineNbr": 42,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2023-03-28T19:15:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b76a734e_33eb4836",
      "range": {
        "startLine": 41,
        "startChar": 8,
        "endLine": 42,
        "endChar": 26
      },
      "revId": "17f954c837e553a03e90d3160741c88927471aef",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4bdd0b99_6088cfac",
        "filename": "src/dawn/native/stream/Stream.h",
        "patchSetId": 11
      },
      "lineNbr": 187,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-03-28T11:32:24Z",
      "side": 1,
      "message": "Why was this change necessary?",
      "revId": "17f954c837e553a03e90d3160741c88927471aef",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "eee088a6_b7a9aa08",
        "filename": "src/dawn/native/stream/Stream.h",
        "patchSetId": 11
      },
      "lineNbr": 187,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2023-03-28T19:15:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4bdd0b99_6088cfac",
      "revId": "17f954c837e553a03e90d3160741c88927471aef",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "16b6175a_3df7ca3a",
        "filename": "src/dawn/samples/SampleUtils.cpp",
        "patchSetId": 11
      },
      "lineNbr": 147,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-03-28T11:32:24Z",
      "side": 1,
      "message": "Couldn\u0027t this be done with --enable-toggles and --disable-toggles instead? I think we have utilities somewhere to handle these arguments.",
      "revId": "17f954c837e553a03e90d3160741c88927471aef",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "eca9d6e7_b1869fa4",
        "filename": "src/dawn/samples/SampleUtils.cpp",
        "patchSetId": 11
      },
      "lineNbr": 147,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2023-03-28T19:15:59Z",
      "side": 1,
      "message": "I saw it in some tests, will use it in followup CL. Remove it for now.",
      "parentUuid": "16b6175a_3df7ca3a",
      "revId": "17f954c837e553a03e90d3160741c88927471aef",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8bcab474_d80634c1",
        "filename": "src/dawn/tests/DawnTest.cpp",
        "patchSetId": 11
      },
      "lineNbr": 704,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-03-28T11:32:24Z",
      "side": 1,
      "message": "nit: comment needs an update.",
      "revId": "17f954c837e553a03e90d3160741c88927471aef",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ad6d6a87_1c5f8f36",
        "filename": "src/dawn/tests/DawnTest.cpp",
        "patchSetId": 11
      },
      "lineNbr": 704,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2023-03-28T19:15:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8bcab474_d80634c1",
      "revId": "17f954c837e553a03e90d3160741c88927471aef",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d67ca3e3_d42d25bf",
        "filename": "src/dawn/tests/end2end/BindGroupTests.cpp",
        "patchSetId": 11
      },
      "lineNbr": 556,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-03-28T11:32:24Z",
      "side": 1,
      "message": "As Austin noted, this should be possible to support by linearizing the pipeline layout, the same way that it is done in the Metal backend for example.",
      "revId": "17f954c837e553a03e90d3160741c88927471aef",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2a655e64_b2f7306c",
        "filename": "src/dawn/tests/end2end/BindGroupTests.cpp",
        "patchSetId": 11
      },
      "lineNbr": 556,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2023-03-28T19:15:59Z",
      "side": 1,
      "message": "I have a follow up cl for it.",
      "parentUuid": "d67ca3e3_d42d25bf",
      "revId": "17f954c837e553a03e90d3160741c88927471aef",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "85606e9a_35e99dce",
        "filename": "src/dawn/tests/end2end/BufferTests.cpp",
        "patchSetId": 11
      },
      "lineNbr": 645,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-03-28T11:32:24Z",
      "side": 1,
      "message": "This is quite unfortunate because it makes the API less consistent depending on the backends. Would it be possible to keep the same behavior even if it is a bit less optimal?",
      "revId": "17f954c837e553a03e90d3160741c88927471aef",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "793fe721_d50b4ca9",
        "filename": "src/dawn/tests/end2end/BufferTests.cpp",
        "patchSetId": 11
      },
      "lineNbr": 645,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2023-03-28T19:15:59Z",
      "side": 1,
      "message": "It is doable, but I think it will hurt performance, I don\u0027 think we want it for graphite.",
      "parentUuid": "85606e9a_35e99dce",
      "revId": "17f954c837e553a03e90d3160741c88927471aef",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2ce67d1a_b6fc68bf",
        "filename": "src/dawn/tests/end2end/TextureViewTests.cpp",
        "patchSetId": 11
      },
      "lineNbr": 443,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-03-28T11:32:24Z",
      "side": 1,
      "message": "I think it should be possible to support it: there is a D3D11_SRV_DESC::Format https://learn.microsoft.com/en-us/windows/win32/api/d3d11/ns-d3d11-d3d11_shader_resource_view_desc#remarks",
      "revId": "17f954c837e553a03e90d3160741c88927471aef",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a0fc05d3_60993d64",
        "filename": "src/dawn/tests/end2end/TextureViewTests.cpp",
        "patchSetId": 11
      },
      "lineNbr": 443,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2023-03-28T19:15:59Z",
      "side": 1,
      "message": "I think probably the texture should be created with typeless format. Remove this DAWN_TEST_UNSUPPORTED_IF() here, we can revisit it with followup cls.",
      "parentUuid": "2ce67d1a_b6fc68bf",
      "revId": "17f954c837e553a03e90d3160741c88927471aef",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}