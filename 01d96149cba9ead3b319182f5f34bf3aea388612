{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "69950d2f_ee3677e7",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 10,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-08-18T23:09:22Z",
      "side": 1,
      "message": "typo: compatibility",
      "range": {
        "startLine": 10,
        "startChar": 7,
        "endLine": 10,
        "endChar": 20
      },
      "revId": "01d96149cba9ead3b319182f5f34bf3aea388612",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d038584f_f801711c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-08-18T16:21:08Z",
      "side": 1,
      "message": "PTAL! The tests are definitely not complete, but this is to try to get some comments early to make progress asynchronously. (either with follow-up commits, or new patchsets on this change)",
      "revId": "01d96149cba9ead3b319182f5f34bf3aea388612",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "326fdee0_eede4d2f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-08-18T23:09:22Z",
      "side": 1,
      "message": "LGTM",
      "revId": "01d96149cba9ead3b319182f5f34bf3aea388612",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ce1a70a1_8ce7d3c8",
        "filename": "docs/dawn/features/pixel_local_storage.md",
        "patchSetId": 5
      },
      "lineNbr": 11,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-08-18T23:09:22Z",
      "side": 1,
      "message": "nah",
      "range": {
        "startLine": 11,
        "startChar": 0,
        "endLine": 11,
        "endChar": 38
      },
      "revId": "01d96149cba9ead3b319182f5f34bf3aea388612",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4ba35cd9_ea4877cd",
        "filename": "src/dawn/native/CommandEncoder.cpp",
        "patchSetId": 5
      },
      "lineNbr": 617,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-08-18T23:09:22Z",
      "side": 1,
      "message": "could we factor this with the other load/store/clearValue validation?\n\nyou don\u0027t have tests for this bit",
      "range": {
        "startLine": 603,
        "startChar": 0,
        "endLine": 617,
        "endChar": 13
      },
      "revId": "01d96149cba9ead3b319182f5f34bf3aea388612",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "46bdf447_cd2dd83f",
        "filename": "src/dawn/native/CommandEncoder.cpp",
        "patchSetId": 5
      },
      "lineNbr": 623,
      "author": {
        "id": 1003501
      },
      "writtenOn": "2023-08-21T05:40:12Z",
      "side": 1,
      "message": "I think this part could be in a dedicated function `ValidateRenderPassPLS`?",
      "range": {
        "startLine": 589,
        "startChar": 8,
        "endLine": 623,
        "endChar": 78
      },
      "revId": "01d96149cba9ead3b319182f5f34bf3aea388612",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6d45e9ac_430ea6a0",
        "filename": "src/dawn/native/CommandEncoder.cpp",
        "patchSetId": 5
      },
      "lineNbr": 624,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-08-18T23:09:22Z",
      "side": 1,
      "message": "wondering - why isn\u0027t the total size implicit?",
      "range": {
        "startLine": 622,
        "startChar": 0,
        "endLine": 624,
        "endChar": 0
      },
      "revId": "01d96149cba9ead3b319182f5f34bf3aea388612",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a58961df_b47388ab",
        "filename": "src/dawn/native/CommandEncoder.cpp",
        "patchSetId": 5
      },
      "lineNbr": 639,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-08-18T23:09:22Z",
      "side": 1,
      "message": "tests for this",
      "range": {
        "startLine": 639,
        "startChar": 0,
        "endLine": 639,
        "endChar": 89
      },
      "revId": "01d96149cba9ead3b319182f5f34bf3aea388612",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "de1188ab_dde4e9db",
        "filename": "src/dawn/native/CommandEncoder.cpp",
        "patchSetId": 5
      },
      "lineNbr": 639,
      "author": {
        "id": 1003501
      },
      "writtenOn": "2023-08-21T05:40:12Z",
      "side": 1,
      "message": "Also maybe we need to have a TODO here. Since Graphite might use MSAA render to single sampled and PLS extensively together.",
      "parentUuid": "a58961df_b47388ab",
      "range": {
        "startLine": 639,
        "startChar": 0,
        "endLine": 639,
        "endChar": 89
      },
      "revId": "01d96149cba9ead3b319182f5f34bf3aea388612",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7dda3827_d61277c1",
        "filename": "src/dawn/native/Format.cpp",
        "patchSetId": 5
      },
      "lineNbr": 434,
      "author": {
        "id": 1003501
      },
      "writtenOn": "2023-08-21T05:40:12Z",
      "side": 1,
      "message": "Wondering why we don\u0027t support PLS on RGBA for now?",
      "range": {
        "startLine": 434,
        "startChar": 44,
        "endLine": 434,
        "endChar": 54
      },
      "revId": "01d96149cba9ead3b319182f5f34bf3aea388612",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "40ba60c9_87c99087",
        "filename": "src/dawn/native/PipelineLayout.cpp",
        "patchSetId": 5
      },
      "lineNbr": 106,
      "author": {
        "id": 1003501
      },
      "writtenOn": "2023-08-21T05:40:12Z",
      "side": 1,
      "message": "nit: This and the respective code in AttachmentState look identical. Perhaps we could move it to an utility function?",
      "range": {
        "startLine": 96,
        "startChar": 7,
        "endLine": 106,
        "endChar": 5
      },
      "revId": "01d96149cba9ead3b319182f5f34bf3aea388612",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bed04be9_c8b75a60",
        "filename": "src/dawn/native/PipelineLayout.h",
        "patchSetId": 5
      },
      "lineNbr": 98,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-08-18T23:09:22Z",
      "side": 1,
      "message": "will it work if it is a StackVector kMaxPLSSlots ?",
      "range": {
        "startLine": 98,
        "startChar": 0,
        "endLine": 98,
        "endChar": 61
      },
      "revId": "01d96149cba9ead3b319182f5f34bf3aea388612",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8e96a3fc_82fb5185",
        "filename": "src/dawn/native/Texture.cpp",
        "patchSetId": 5
      },
      "lineNbr": 176,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-08-18T23:09:22Z",
      "side": 1,
      "message": "nit and existing nit:\n\n```suggestion\n        DAWN_INVALID_IF(usage \u0026 wgpu::TextureUsage::StorageBinding,\n                        \"The sample count (%u) of a storage texture is not 1.\",\n                        descriptor-\u003esampleCount);\n        DAWN_INVALID_IF(usage \u0026 wgpu::TextureUsage::StorageAttachment,\n                        \"The sample count (%u) of a storage attachment texture is not 1.\",\n                        descriptor-\u003esampleCount);\n```",
      "range": {
        "startLine": 171,
        "startChar": 0,
        "endLine": 176,
        "endChar": 49
      },
      "revId": "01d96149cba9ead3b319182f5f34bf3aea388612",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1d14be6d_3c0bcc41",
        "filename": "src/dawn/native/webgpu_absl_format.cpp",
        "patchSetId": 5
      },
      "lineNbr": 236,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-08-18T23:09:22Z",
      "side": 1,
      "message": "avoid a copy\n\n```suggestion\n    const std::vector\u003cwgpu::TextureFormat\u003e\u0026 plsSlots \u003d value-\u003eGetStorageAttachmentSlots();\n```",
      "range": {
        "startLine": 236,
        "startChar": 0,
        "endLine": 236,
        "endChar": 89
      },
      "revId": "01d96149cba9ead3b319182f5f34bf3aea388612",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a34b414c_7d731b37",
        "filename": "src/dawn/tests/unittests/validation/PixelLocalStorageTests.cpp",
        "patchSetId": 5
      },
      "lineNbr": 126,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-08-18T23:09:22Z",
      "side": 1,
      "message": "it\u0027s probably sufficient to check that you can\u0027t do the things with the other extension - but the validation that happens after feature support check is probably doesn\u0027t need testing twice",
      "range": {
        "startLine": 126,
        "startChar": 0,
        "endLine": 126,
        "endChar": 63
      },
      "revId": "01d96149cba9ead3b319182f5f34bf3aea388612",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c0b8eff9_a276d7b6",
        "filename": "src/dawn/tests/unittests/validation/PixelLocalStorageTests.cpp",
        "patchSetId": 5
      },
      "lineNbr": 150,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-08-18T23:09:22Z",
      "side": 1,
      "message": "```suggestion\n        // Add at least one color attachment to make the render pass valid if there\u0027s no storage\n```",
      "range": {
        "startLine": 150,
        "startChar": 24,
        "endLine": 150,
        "endChar": 26
      },
      "revId": "01d96149cba9ead3b319182f5f34bf3aea388612",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1e2fc9e0_41e150f5",
        "filename": "src/dawn/tests/unittests/validation/PixelLocalStorageTests.cpp",
        "patchSetId": 5
      },
      "lineNbr": 265,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-08-18T23:09:22Z",
      "side": 1,
      "message": "```suggestion\n        // Note that BeginRenderPass is not tested here as a different test checks that the\n```",
      "range": {
        "startLine": 265,
        "startChar": 11,
        "endLine": 265,
        "endChar": 14
      },
      "revId": "01d96149cba9ead3b319182f5f34bf3aea388612",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "99bc0bb4_d1b6ee0e",
        "filename": "src/dawn/tests/unittests/validation/PixelLocalStorageTests.cpp",
        "patchSetId": 5
      },
      "lineNbr": 295,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-08-18T23:09:22Z",
      "side": 1,
      "message": "```suggestion\n    // Control case: total size is 16.\n```",
      "range": {
        "startLine": 295,
        "startChar": 32,
        "endLine": 295,
        "endChar": 51
      },
      "revId": "01d96149cba9ead3b319182f5f34bf3aea388612",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7a59fc8e_af4c7c8c",
        "filename": "src/dawn/tests/unittests/validation/PixelLocalStorageTests.cpp",
        "patchSetId": 5
      },
      "lineNbr": 302,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-08-18T23:09:22Z",
      "side": 1,
      "message": "```suggestion\n    // Error case: total size is greater than 16.\n```",
      "range": {
        "startLine": 302,
        "startChar": 0,
        "endLine": 302,
        "endChar": 54
      },
      "revId": "01d96149cba9ead3b319182f5f34bf3aea388612",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "91951af0_f90b3a53",
        "filename": "src/dawn/tests/unittests/validation/PixelLocalStorageTests.cpp",
        "patchSetId": 5
      },
      "lineNbr": 375,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-08-18T23:09:22Z",
      "side": 1,
      "message": "```suggestion\n    // Error case: collisions, boo!\n```",
      "range": {
        "startLine": 375,
        "startChar": 0,
        "endLine": 375,
        "endChar": 40
      },
      "revId": "01d96149cba9ead3b319182f5f34bf3aea388612",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}