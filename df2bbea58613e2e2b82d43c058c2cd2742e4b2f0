{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "206eaeda_05940db2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2023-11-20T10:06:25Z",
      "side": 1,
      "message": "PTAL, thanks!",
      "revId": "df2bbea58613e2e2b82d43c058c2cd2742e4b2f0",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "45f756a5_876b5936",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-11-20T16:18:49Z",
      "side": 1,
      "message": "Nice work getting this working on D3D11! I think there could be a bunch of simplifications though.",
      "revId": "df2bbea58613e2e2b82d43c058c2cd2742e4b2f0",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a13c3496_6aafd14e",
        "filename": "src/dawn/native/d3d/D3DCompilationRequest.h",
        "patchSetId": 2
      },
      "lineNbr": 84,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-11-20T16:18:49Z",
      "side": 1,
      "message": "nit: tintOptions is now passed directly in the compilation request so we can edit it there! https://dawn-review.googlesource.com/c/dawn/+/160920",
      "revId": "df2bbea58613e2e2b82d43c058c2cd2742e4b2f0",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ef49539f_3b42b372",
        "filename": "src/dawn/native/d3d/D3DCompilationRequest.h",
        "patchSetId": 2
      },
      "lineNbr": 84,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2023-11-21T08:46:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a13c3496_6aafd14e",
      "revId": "df2bbea58613e2e2b82d43c058c2cd2742e4b2f0",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fd9cd34a_15677240",
        "filename": "src/dawn/native/d3d11/BindGroupTrackerD3D11.cpp",
        "patchSetId": 2
      },
      "lineNbr": 135,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-11-20T16:18:49Z",
      "side": 1,
      "message": "Why can\u0027t this always be 0?",
      "revId": "df2bbea58613e2e2b82d43c058c2cd2742e4b2f0",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2b988fce_3ebaecf9",
        "filename": "src/dawn/native/d3d11/BindGroupTrackerD3D11.cpp",
        "patchSetId": 2
      },
      "lineNbr": 135,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2023-11-21T08:46:37Z",
      "side": 1,
      "message": "It is because UAVs must be arranged after RTVs in `OMSetRenderTargetsAndUnorderedAccessViews()` so we should know the first register index (the one just after the last RTV register) to arrange the pixel local storage UAVs.\n\nFor example, when there is one RTV, the pixel local storage UAVs (assuming there are 4) should consume u1 to u4.",
      "parentUuid": "fd9cd34a_15677240",
      "revId": "df2bbea58613e2e2b82d43c058c2cd2742e4b2f0",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "79ccd7b3_7dde4217",
        "filename": "src/dawn/native/d3d11/BindGroupTrackerD3D11.cpp",
        "patchSetId": 2
      },
      "lineNbr": 135,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-11-21T09:47:40Z",
      "side": 1,
      "message": "Thanks, I had skipped over that part of the D3D11 doc \n\nhttps://learn.microsoft.com/en-us/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-omsetrendertargetsandunorderedaccessviews#:~:text\u003dFor%20pixel%20shaders%2C%20the%20render%20targets%20and%20unordered%2Daccess%20views%20share%20the%20same%20resource%20slots%20when%20being%20written%20out.%20This%20means%20that%20UAVs%20must%20be%20given%20an%20offset%20so%20that%20they%20are%20placed%20in%20the%20slots%20after%20the%20render%20target%20views%20that%20are%20being%20bound.",
      "parentUuid": "2b988fce_3ebaecf9",
      "revId": "df2bbea58613e2e2b82d43c058c2cd2742e4b2f0",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3286e6d9_6e805f89",
        "filename": "src/dawn/native/d3d11/BindGroupTrackerD3D11.cpp",
        "patchSetId": 2
      },
      "lineNbr": 136,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2023-11-20T16:19:56Z",
      "side": 1,
      "message": "nit: remove `\u0026`, so we can use rvalue in call site.",
      "range": {
        "startLine": 136,
        "startChar": 80,
        "endLine": 136,
        "endChar": 81
      },
      "revId": "df2bbea58613e2e2b82d43c058c2cd2742e4b2f0",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ee85a0f7_9b5c0f91",
        "filename": "src/dawn/native/d3d11/BindGroupTrackerD3D11.cpp",
        "patchSetId": 2
      },
      "lineNbr": 136,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2023-11-21T08:46:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3286e6d9_6e805f89",
      "range": {
        "startLine": 136,
        "startChar": 80,
        "endLine": 136,
        "endChar": 81
      },
      "revId": "df2bbea58613e2e2b82d43c058c2cd2742e4b2f0",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ac5ed738_674000e5",
        "filename": "src/dawn/native/d3d11/BindGroupTrackerD3D11.cpp",
        "patchSetId": 2
      },
      "lineNbr": 242,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2023-11-20T16:19:56Z",
      "side": 1,
      "message": "nit: `views(uavsInBindGroup.size());`?",
      "range": {
        "startLine": 242,
        "startChar": 56,
        "endLine": 242,
        "endChar": 61
      },
      "revId": "df2bbea58613e2e2b82d43c058c2cd2742e4b2f0",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1b557c4d_bd2613ed",
        "filename": "src/dawn/native/d3d11/BindGroupTrackerD3D11.cpp",
        "patchSetId": 2
      },
      "lineNbr": 242,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2023-11-21T08:46:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ac5ed738_674000e5",
      "range": {
        "startLine": 242,
        "startChar": 56,
        "endLine": 242,
        "endChar": 61
      },
      "revId": "df2bbea58613e2e2b82d43c058c2cd2742e4b2f0",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9625cac7_db91c85b",
        "filename": "src/dawn/native/d3d11/BindGroupTrackerD3D11.cpp",
        "patchSetId": 2
      },
      "lineNbr": 259,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2023-11-20T16:19:56Z",
      "side": 1,
      "message": "Will it overwrite mFixedUAVs in views? could you please explain it?",
      "range": {
        "startLine": 259,
        "startChar": 20,
        "endLine": 259,
        "endChar": 25
      },
      "revId": "df2bbea58613e2e2b82d43c058c2cd2742e4b2f0",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2e514434_48c67d8e",
        "filename": "src/dawn/native/d3d11/BindGroupTrackerD3D11.cpp",
        "patchSetId": 2
      },
      "lineNbr": 259,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2023-11-21T08:46:37Z",
      "side": 1,
      "message": "I think we should ensure all the RTVs, pixel local UAVs and bind group UAVs never overlap at the front end of Dawn. I\u0027ve added an ASSERT here.",
      "parentUuid": "9625cac7_db91c85b",
      "range": {
        "startLine": 259,
        "startChar": 20,
        "endLine": 259,
        "endChar": 25
      },
      "revId": "df2bbea58613e2e2b82d43c058c2cd2742e4b2f0",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "40f73090_71340636",
        "filename": "src/dawn/native/d3d11/BindGroupTrackerD3D11.cpp",
        "patchSetId": 2
      },
      "lineNbr": 261,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-11-20T16:18:49Z",
      "side": 1,
      "message": "Can\u0027t we apply the fixed UAVs once at the state tracker creation (or in a method called early in the render pass) to simplify the code? It would also get rid of the need for [1] I think it would work if we also update GetUAVSlotCount to take into storage attachments (which conveniently are in PipelineLayoutBase).\n\nWe should maybe comment that OMSetRenderTargetsAndUnorderedAccessViews will keep all the bound UAVs prior to `uavSlotCount - d3d11UAVs.size()` so we only need to rebind UAVs for bindgroups that are not inherited. BindGroupTrackerBase makes sure that non-inherited bindgroups are marked as dirty so we\u0027re good.\n\nCan we have a test for PLS + UAV (buffer?) to check this logic is at least semi-correct?",
      "revId": "df2bbea58613e2e2b82d43c058c2cd2742e4b2f0",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8741867d_bb0a86fe",
        "filename": "src/dawn/native/d3d11/BindGroupTrackerD3D11.cpp",
        "patchSetId": 2
      },
      "lineNbr": 261,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2023-11-21T08:46:37Z",
      "side": 1,
      "message": "\u003e Can\u0027t we apply the fixed UAVs once at the state tracker creation (or in a method called early in the render pass) to simplify the code?\n\nNo because OMSetRenderTargetsAndUnorderedAccessViews() will unbind all the other UAVs as long as the `NumUAVs` is not `D3D11_KEEP_UNORDERED_ACCESS_VIEWS`, se we have to always set the pixel local storage UAVs together with all the other UAVs in bind groups.\n\nhttps://microsoft.github.io/DirectX-Specs/d3d/archive/D3D11_3_FunctionalSpec.htm, \"5.3.9.3 Binding an Unordered Access View at the DDI\":\n```\nUINT, // number of UAVs being set (all others unbound)\n```\n\n\u003e Can we have a test for PLS + UAV (buffer?) to check this logic is at least semi-correct?\n\nIn fact the `PLS + UAV` pass is being tested when the check method is `CheckMethod::StorageBuffer` in PixelLocalStorageTests.cpp.",
      "parentUuid": "40f73090_71340636",
      "revId": "df2bbea58613e2e2b82d43c058c2cd2742e4b2f0",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5251b515_3d46ad75",
        "filename": "src/dawn/native/d3d11/BindGroupTrackerD3D11.cpp",
        "patchSetId": 2
      },
      "lineNbr": 261,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-11-21T09:47:40Z",
      "side": 1,
      "message": "\u003e No because OMSetRenderTargetsAndUnorderedAccessViews() will unbind all the other UAVs as long as the NumUAVs is not D3D11_KEEP_UNORDERED_ACCESS_VIEWS, se we have to always set the pixel local storage UAVs together with all the other UAVs in bind groups.\n\nThat contradicts the D3D11 documentation for the D3D11_KEEP_RENDER_TARGETS_AND_DEPTH_STENCIL case:\n\nhttps://learn.microsoft.com/en-us/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-omsetrendertargetsandunorderedaccessviews#:~:text\u003dOMSetRenderTargetsAndUnorderedAccessViews%20unbinds%20the,in%20slots%20%3E%3D%20UAVStartSlot\n\nI think the D3D11 frontend should be handling the conversion from the semantic of D3D11 to the semantics of the DDI so I believe the suggestion could still work?\n\nHaha I should have remembered I made a storage test ^^ sounds good!",
      "parentUuid": "8741867d_bb0a86fe",
      "revId": "df2bbea58613e2e2b82d43c058c2cd2742e4b2f0",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "32aef172_1f622b09",
        "filename": "src/dawn/native/d3d11/BindGroupTrackerD3D11.cpp",
        "patchSetId": 2
      },
      "lineNbr": 261,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2023-11-22T06:10:22Z",
      "side": 1,
      "message": "\u003e I think the D3D11 frontend should be handling the conversion from the semantic of D3D11 to the semantics of the DDI so I believe the suggestion could still work?\n\nNo it cannot work. For example when we skip setting UAV slots for PLS in BindGroupTrackerD3D11, all the tests with storage buffer will fail on both Intel and Nvidia GPUs:\n- PixelLocalStorageTests.ImplicitSlot\n- PixelLocalStorageTests.MultipleImplicitSlot\n- PixelLocalStorageTests.MixedImplicitExplicit",
      "parentUuid": "5251b515_3d46ad75",
      "revId": "df2bbea58613e2e2b82d43c058c2cd2742e4b2f0",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "787ae077_56898709",
        "filename": "src/dawn/native/d3d11/BindGroupTrackerD3D11.h",
        "patchSetId": 2
      },
      "lineNbr": 42,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2023-11-20T16:19:56Z",
      "side": 1,
      "message": "nit: how do we arrange UAVs and RTVs in a pipeline? could you please add a comment here or at BindGroupTrackerD3D11.cpp:238? thanks",
      "range": {
        "startLine": 42,
        "startChar": 6,
        "endLine": 42,
        "endChar": 22
      },
      "revId": "df2bbea58613e2e2b82d43c058c2cd2742e4b2f0",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3e98957d_d01132f0",
        "filename": "src/dawn/native/d3d11/BindGroupTrackerD3D11.h",
        "patchSetId": 2
      },
      "lineNbr": 42,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2023-11-21T08:46:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "787ae077_56898709",
      "range": {
        "startLine": 42,
        "startChar": 6,
        "endLine": 42,
        "endChar": 22
      },
      "revId": "df2bbea58613e2e2b82d43c058c2cd2742e4b2f0",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3d93bf55_9e114dcf",
        "filename": "src/dawn/native/d3d11/BindGroupTrackerD3D11.h",
        "patchSetId": 2
      },
      "lineNbr": 46,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-11-20T16:18:49Z",
      "side": 1,
      "message": "nit: Maybe document what these fixedUAV parameters do?",
      "revId": "df2bbea58613e2e2b82d43c058c2cd2742e4b2f0",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c1ac5f39_5e113a58",
        "filename": "src/dawn/native/d3d11/BindGroupTrackerD3D11.h",
        "patchSetId": 2
      },
      "lineNbr": 46,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2023-11-21T08:46:37Z",
      "side": 1,
      "message": "Done\n\nI\u0027ve renamed it as `pixelLocalStorageUAVBaseRegisterIndex` to make it more understandable. I\u0027ve also added comments above the class BindGroupTracker.",
      "parentUuid": "3d93bf55_9e114dcf",
      "revId": "df2bbea58613e2e2b82d43c058c2cd2742e4b2f0",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9bb8462e_5fc6ae31",
        "filename": "src/dawn/native/d3d11/BindGroupTrackerD3D11.h",
        "patchSetId": 2
      },
      "lineNbr": 47,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2023-11-20T16:19:56Z",
      "side": 1,
      "message": "nit: the meaning of those two params are not clear. Could you please add comments in code?",
      "range": {
        "startLine": 46,
        "startChar": 0,
        "endLine": 47,
        "endChar": 82
      },
      "revId": "df2bbea58613e2e2b82d43c058c2cd2742e4b2f0",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ea710f85_07039ada",
        "filename": "src/dawn/native/d3d11/BindGroupTrackerD3D11.h",
        "patchSetId": 2
      },
      "lineNbr": 47,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2023-11-21T08:46:37Z",
      "side": 1,
      "message": "Done\n\nI\u0027ve renamed it as `pixelLocalStorageUAVs` to make it more understandable. I\u0027ve also added comments above the class BindGroupTracker.",
      "parentUuid": "9bb8462e_5fc6ae31",
      "range": {
        "startLine": 46,
        "startChar": 0,
        "endLine": 47,
        "endChar": 82
      },
      "revId": "df2bbea58613e2e2b82d43c058c2cd2742e4b2f0",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7e2e2b2d_ed83e2df",
        "filename": "src/dawn/native/d3d11/BindGroupTrackerD3D11.h",
        "patchSetId": 2
      },
      "lineNbr": 59,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2023-11-20T16:19:56Z",
      "side": 1,
      "message": "nit: add comment here too.",
      "range": {
        "startLine": 58,
        "startChar": 0,
        "endLine": 59,
        "endChar": 61
      },
      "revId": "df2bbea58613e2e2b82d43c058c2cd2742e4b2f0",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b8e9c007_235898b5",
        "filename": "src/dawn/native/d3d11/BindGroupTrackerD3D11.h",
        "patchSetId": 2
      },
      "lineNbr": 59,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2023-11-21T08:46:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7e2e2b2d_ed83e2df",
      "range": {
        "startLine": 58,
        "startChar": 0,
        "endLine": 59,
        "endChar": 61
      },
      "revId": "df2bbea58613e2e2b82d43c058c2cd2742e4b2f0",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b14a76be_9cef3e45",
        "filename": "src/dawn/native/d3d11/CommandBufferD3D11.cpp",
        "patchSetId": 2
      },
      "lineNbr": 538,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-11-20T16:18:49Z",
      "side": 1,
      "message": "nit: Some block comments and empty lines would help separate the code a bit better :) Also maybe mention that we create temporary textures for the implicit PLS and TODO could later optimize it by creating a single 2D array texture, and reusing it across different render passes potentially.",
      "revId": "df2bbea58613e2e2b82d43c058c2cd2742e4b2f0",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6da85be1_580886f4",
        "filename": "src/dawn/native/d3d11/CommandBufferD3D11.cpp",
        "patchSetId": 2
      },
      "lineNbr": 538,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2023-11-21T08:46:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b14a76be_9cef3e45",
      "revId": "df2bbea58613e2e2b82d43c058c2cd2742e4b2f0",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a9f66de6_a698d8ac",
        "filename": "src/dawn/native/d3d11/CommandBufferD3D11.cpp",
        "patchSetId": 2
      },
      "lineNbr": 541,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-11-20T16:18:49Z",
      "side": 1,
      "message": "nit: unused",
      "revId": "df2bbea58613e2e2b82d43c058c2cd2742e4b2f0",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9bd46088_fcdd01f1",
        "filename": "src/dawn/native/d3d11/CommandBufferD3D11.cpp",
        "patchSetId": 2
      },
      "lineNbr": 541,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2023-11-21T08:46:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a9f66de6_a698d8ac",
      "revId": "df2bbea58613e2e2b82d43c058c2cd2742e4b2f0",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5d1f3a8c_f712a900",
        "filename": "src/dawn/native/d3d11/CommandBufferD3D11.cpp",
        "patchSetId": 2
      },
      "lineNbr": 562,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-11-20T16:18:49Z",
      "side": 1,
      "message": "nit: AddTemporaryTextureView so we don\u0027t need to expose the whole vector mutably?",
      "range": {
        "startLine": 562,
        "startChar": 32,
        "endLine": 562,
        "endChar": 54
      },
      "revId": "df2bbea58613e2e2b82d43c058c2cd2742e4b2f0",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "756a2a46_9a287335",
        "filename": "src/dawn/native/d3d11/CommandBufferD3D11.cpp",
        "patchSetId": 2
      },
      "lineNbr": 562,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2023-11-21T08:46:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5d1f3a8c_f712a900",
      "range": {
        "startLine": 562,
        "startChar": 32,
        "endLine": 562,
        "endChar": 54
      },
      "revId": "df2bbea58613e2e2b82d43c058c2cd2742e4b2f0",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "83365a07_74111dbc",
        "filename": "src/dawn/native/d3d11/CommandBufferD3D11.cpp",
        "patchSetId": 2
      },
      "lineNbr": 563,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2023-11-20T16:19:56Z",
      "side": 1,
      "message": "nit: `commandContext-\u003eAddTempTextureView(implicitPixelLocalStorageTextureView);`?",
      "range": {
        "startLine": 562,
        "startChar": 16,
        "endLine": 563,
        "endChar": 58
      },
      "revId": "df2bbea58613e2e2b82d43c058c2cd2742e4b2f0",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "007779e9_3cea7fc9",
        "filename": "src/dawn/native/d3d11/CommandBufferD3D11.cpp",
        "patchSetId": 2
      },
      "lineNbr": 563,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2023-11-21T08:46:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "83365a07_74111dbc",
      "range": {
        "startLine": 562,
        "startChar": 16,
        "endLine": 563,
        "endChar": 58
      },
      "revId": "df2bbea58613e2e2b82d43c058c2cd2742e4b2f0",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "445eb88a_a76b1405",
        "filename": "src/dawn/native/d3d11/CommandBufferD3D11.cpp",
        "patchSetId": 2
      },
      "lineNbr": 620,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-11-20T16:18:49Z",
      "side": 1,
      "message": "[1]",
      "revId": "df2bbea58613e2e2b82d43c058c2cd2742e4b2f0",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "935d6282_d544f4e1",
        "filename": "src/dawn/native/d3d11/CommandBufferD3D11.cpp",
        "patchSetId": 2
      },
      "lineNbr": 652,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2023-11-20T16:19:56Z",
      "side": 1,
      "message": "nit: change tracker ctor signature and use `std::move(pixelLocalStorageROVPtrs)` to avoid unnecessary heap allocation.\n\nAnd I think it is better to pass `pixelLocalStorageROVs` instead of `pixelLocalStorageROVPtrs`? I guess d3d11device context will keep views in `pixelLocalStorageROVPtrs` alive, but it depends on d3d11 implementation detail.",
      "range": {
        "startLine": 652,
        "startChar": 74,
        "endLine": 652,
        "endChar": 98
      },
      "revId": "df2bbea58613e2e2b82d43c058c2cd2742e4b2f0",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a78b281d_73e5a680",
        "filename": "src/dawn/native/d3d11/CommandBufferD3D11.cpp",
        "patchSetId": 2
      },
      "lineNbr": 652,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2023-11-21T08:46:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "935d6282_d544f4e1",
      "range": {
        "startLine": 652,
        "startChar": 74,
        "endLine": 652,
        "endChar": 98
      },
      "revId": "df2bbea58613e2e2b82d43c058c2cd2742e4b2f0",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cb6c82a9_cee49b8d",
        "filename": "src/dawn/native/d3d11/CommandRecordingContextD3D11.cpp",
        "patchSetId": 2
      },
      "lineNbr": 32,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-11-20T16:18:49Z",
      "side": 1,
      "message": "ditto",
      "revId": "df2bbea58613e2e2b82d43c058c2cd2742e4b2f0",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9ffe8903_138775a7",
        "filename": "src/dawn/native/d3d11/CommandRecordingContextD3D11.cpp",
        "patchSetId": 2
      },
      "lineNbr": 32,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2023-11-21T08:46:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cb6c82a9_cee49b8d",
      "revId": "df2bbea58613e2e2b82d43c058c2cd2742e4b2f0",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "402b9db0_085ae463",
        "filename": "src/dawn/native/d3d11/CommandRecordingContextD3D11.cpp",
        "patchSetId": 2
      },
      "lineNbr": 40,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-11-20T16:18:49Z",
      "side": 1,
      "message": "nit: unused",
      "revId": "df2bbea58613e2e2b82d43c058c2cd2742e4b2f0",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f0c713e5_bd0b86ac",
        "filename": "src/dawn/native/d3d11/CommandRecordingContextD3D11.cpp",
        "patchSetId": 2
      },
      "lineNbr": 40,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2023-11-21T08:46:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "402b9db0_085ae463",
      "revId": "df2bbea58613e2e2b82d43c058c2cd2742e4b2f0",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e7486d65_bb6816ab",
        "filename": "src/dawn/native/d3d11/CommandRecordingContextD3D11.h",
        "patchSetId": 2
      },
      "lineNbr": 77,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2023-11-20T16:19:56Z",
      "side": 1,
      "message": "nit: What is it for? Please add comment about it.",
      "range": {
        "startLine": 77,
        "startChar": 38,
        "endLine": 77,
        "endChar": 55
      },
      "revId": "df2bbea58613e2e2b82d43c058c2cd2742e4b2f0",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6f746409_91ecdd36",
        "filename": "src/dawn/native/d3d11/CommandRecordingContextD3D11.h",
        "patchSetId": 2
      },
      "lineNbr": 77,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2023-11-21T08:46:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e7486d65_bb6816ab",
      "range": {
        "startLine": 77,
        "startChar": 38,
        "endLine": 77,
        "endChar": 55
      },
      "revId": "df2bbea58613e2e2b82d43c058c2cd2742e4b2f0",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f7f55493_9399833d",
        "filename": "src/dawn/native/d3d11/CommandRecordingContextD3D11.h",
        "patchSetId": 2
      },
      "lineNbr": 141,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2023-11-20T16:19:56Z",
      "side": 1,
      "message": "Do we allow caller modify the vector? If not, please use `const std::vector\u003cRef\u003cTextureViewBase\u003e\u003e\u0026`.",
      "range": {
        "startLine": 141,
        "startChar": 4,
        "endLine": 141,
        "endChar": 38
      },
      "revId": "df2bbea58613e2e2b82d43c058c2cd2742e4b2f0",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8e767995_e7b6a905",
        "filename": "src/dawn/native/d3d11/CommandRecordingContextD3D11.h",
        "patchSetId": 2
      },
      "lineNbr": 141,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2023-11-21T08:46:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f7f55493_9399833d",
      "range": {
        "startLine": 141,
        "startChar": 4,
        "endLine": 141,
        "endChar": 38
      },
      "revId": "df2bbea58613e2e2b82d43c058c2cd2742e4b2f0",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3b9648ba_7c82f174",
        "filename": "src/dawn/native/d3d11/RenderPipelineD3D11.cpp",
        "patchSetId": 2
      },
      "lineNbr": 472,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-11-20T16:18:49Z",
      "side": 1,
      "message": "TODO pack in color attachments?",
      "revId": "df2bbea58613e2e2b82d43c058c2cd2742e4b2f0",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b1c7649e_dabc8e1a",
        "filename": "src/dawn/native/d3d11/RenderPipelineD3D11.cpp",
        "patchSetId": 2
      },
      "lineNbr": 472,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-11-21T08:41:29Z",
      "side": 1,
      "message": "Whoops leftover TODO from my WIP review. Please ignore.",
      "parentUuid": "3b9648ba_7c82f174",
      "revId": "df2bbea58613e2e2b82d43c058c2cd2742e4b2f0",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "43cf1f00_7fba0064",
        "filename": "src/dawn/native/d3d11/RenderPipelineD3D11.cpp",
        "patchSetId": 2
      },
      "lineNbr": 479,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-11-20T16:18:49Z",
      "side": 1,
      "message": "u-nit: this could be a helper function that static_asserts RenderPipelineBase::kImplicitPLSSlotFormat is R32Uint.",
      "revId": "df2bbea58613e2e2b82d43c058c2cd2742e4b2f0",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6a950cc0_e702986d",
        "filename": "src/dawn/native/d3d11/RenderPipelineD3D11.cpp",
        "patchSetId": 2
      },
      "lineNbr": 479,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2023-11-21T08:46:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "43cf1f00_7fba0064",
      "revId": "df2bbea58613e2e2b82d43c058c2cd2742e4b2f0",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7c89d3ec_163d2d7c",
        "filename": "src/dawn/native/d3d11/ShaderModuleD3D11.cpp",
        "patchSetId": 2
      },
      "lineNbr": 204,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-11-20T16:18:49Z",
      "side": 1,
      "message": "TODO maybe nicer?",
      "revId": "df2bbea58613e2e2b82d43c058c2cd2742e4b2f0",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "642f587a_a8a6d555",
        "filename": "src/dawn/native/d3d11/ShaderModuleD3D11.cpp",
        "patchSetId": 2
      },
      "lineNbr": 204,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-11-21T08:41:29Z",
      "side": 1,
      "message": "Whoops leftover TODO from my WIP review. Please ignore.",
      "parentUuid": "7c89d3ec_163d2d7c",
      "revId": "df2bbea58613e2e2b82d43c058c2cd2742e4b2f0",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}