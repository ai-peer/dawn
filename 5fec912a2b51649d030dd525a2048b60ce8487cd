{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "8a331c8f_8ab05d01",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-09-28T16:41:52Z",
      "side": 1,
      "message": "PTAL!",
      "revId": "5fec912a2b51649d030dd525a2048b60ce8487cd",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b51cc9a0_0ab3b6b2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1002831
      },
      "writtenOn": "2022-09-29T23:43:37Z",
      "side": 1,
      "message": "LGTM for basic code changes. I am still reading through some of the spec to double check/understand some of the Vulkan specific stuff.",
      "revId": "5fec912a2b51649d030dd525a2048b60ce8487cd",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8175462a_2243032f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-09-30T11:48:22Z",
      "side": 1,
      "message": "Also FYI Brandon, we should probably have ImageWrappingTests for AHBs as well.",
      "revId": "5fec912a2b51649d030dd525a2048b60ce8487cd",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b41b8d0b_1d310dba",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-09-30T11:48:48Z",
      "side": 1,
      "message": "Also FYI Brandon, we should probably have ImageWrappingTests for AHBs as well.\n\nJie, can you check this doesn\u0027t break ChromeOS?",
      "revId": "5fec912a2b51649d030dd525a2048b60ce8487cd",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fb8a7da0_69b96470",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2022-09-30T12:03:58Z",
      "side": 1,
      "message": "Sure.\nRan into the error below:\n```\n../../third_party/dawn/src/dawn/native/vulkan/external_memory/MemoryServiceDmaBuf.cpp:258:62: error: use of undeclared identifier \u0027opaqueFDDescriptor\u0027; did you mean \u0027dmaBufDescriptor\u0027?\n    params.dedicatedAllocation \u003d RequiresDedicatedAllocation(opaqueFDDescriptor, image);\n                                                             ^~~~~~~~~~~~~~~~~~\n                                                             dmaBufDescriptor\n../../third_party/dawn/src/dawn/native/vulkan/external_memory/MemoryServiceDmaBuf.cpp:233:42: note: \u0027dmaBufDescriptor\u0027 declared here\n    const ExternalImageDescriptorDmaBuf* dmaBufDescriptor \u003d\n```",
      "parentUuid": "b41b8d0b_1d310dba",
      "revId": "5fec912a2b51649d030dd525a2048b60ce8487cd",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "47a4d15e_b75fd43d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2022-09-30T12:09:01Z",
      "side": 1,
      "message": "2 more:\n```\n../../third_party/dawn/src/dawn/tests/white_box/VulkanImageWrappingTests_DmaBuf.cpp:97:50: error: use of undeclared identifier \u0027DeviceExt\u0027\n               mDeviceVk-\u003eGetDeviceInfo().HasExt(DeviceExt::DedicatedAllocation);\n                                                 ^\n../../third_party/dawn/src/dawn/tests/white_box/VulkanImageWrappingTests_DmaBuf.cpp:97:16: error: use of undeclared identifier \u0027mDeviceVk\u0027\n               mDeviceVk-\u003eGetDeviceInfo().HasExt(DeviceExt::DedicatedAllocation);\n\n```",
      "parentUuid": "fb8a7da0_69b96470",
      "revId": "5fec912a2b51649d030dd525a2048b60ce8487cd",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ec41cb0d_ef277722",
        "filename": "src/dawn/tests/white_box/VulkanImageWrappingTests.cpp",
        "patchSetId": 8
      },
      "lineNbr": 42,
      "author": {
        "id": 1002831
      },
      "writtenOn": "2022-09-29T23:43:37Z",
      "side": 1,
      "message": "nit. Can\u0027t these be collapsed into a `NeedsDedicatedAllocation`? Or is there a need to specifically test cases where we may have an override or something?",
      "range": {
        "startLine": 41,
        "startChar": 0,
        "endLine": 42,
        "endChar": 39
      },
      "revId": "5fec912a2b51649d030dd525a2048b60ce8487cd",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0e5961d0_e47d37f4",
        "filename": "src/dawn/tests/white_box/VulkanImageWrappingTests.cpp",
        "patchSetId": 8
      },
      "lineNbr": 897,
      "author": {
        "id": 1002831
      },
      "writtenOn": "2022-09-29T23:43:37Z",
      "side": 1,
      "message": "nit. Would be helpful to add a /**/ comment to indicate which var is being set with each of these true/false pairs.",
      "range": {
        "startLine": 897,
        "startChar": 24,
        "endLine": 897,
        "endChar": 37
      },
      "revId": "5fec912a2b51649d030dd525a2048b60ce8487cd",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}