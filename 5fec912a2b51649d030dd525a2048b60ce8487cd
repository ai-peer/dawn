{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "8a331c8f_8ab05d01",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-09-28T16:41:52Z",
      "side": 1,
      "message": "PTAL!",
      "revId": "5fec912a2b51649d030dd525a2048b60ce8487cd",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b51cc9a0_0ab3b6b2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1002831
      },
      "writtenOn": "2022-09-29T23:43:37Z",
      "side": 1,
      "message": "LGTM for basic code changes. I am still reading through some of the spec to double check/understand some of the Vulkan specific stuff.",
      "revId": "5fec912a2b51649d030dd525a2048b60ce8487cd",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8175462a_2243032f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-09-30T11:48:22Z",
      "side": 1,
      "message": "Also FYI Brandon, we should probably have ImageWrappingTests for AHBs as well.",
      "revId": "5fec912a2b51649d030dd525a2048b60ce8487cd",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b41b8d0b_1d310dba",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-09-30T11:48:48Z",
      "side": 1,
      "message": "Also FYI Brandon, we should probably have ImageWrappingTests for AHBs as well.\n\nJie, can you check this doesn\u0027t break ChromeOS?",
      "revId": "5fec912a2b51649d030dd525a2048b60ce8487cd",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fb8a7da0_69b96470",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2022-09-30T12:03:58Z",
      "side": 1,
      "message": "Sure.\nRan into the error below:\n```\n../../third_party/dawn/src/dawn/native/vulkan/external_memory/MemoryServiceDmaBuf.cpp:258:62: error: use of undeclared identifier \u0027opaqueFDDescriptor\u0027; did you mean \u0027dmaBufDescriptor\u0027?\n    params.dedicatedAllocation \u003d RequiresDedicatedAllocation(opaqueFDDescriptor, image);\n                                                             ^~~~~~~~~~~~~~~~~~\n                                                             dmaBufDescriptor\n../../third_party/dawn/src/dawn/native/vulkan/external_memory/MemoryServiceDmaBuf.cpp:233:42: note: \u0027dmaBufDescriptor\u0027 declared here\n    const ExternalImageDescriptorDmaBuf* dmaBufDescriptor \u003d\n```",
      "parentUuid": "b41b8d0b_1d310dba",
      "revId": "5fec912a2b51649d030dd525a2048b60ce8487cd",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "47a4d15e_b75fd43d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2022-09-30T12:09:01Z",
      "side": 1,
      "message": "2 more:\n```\n../../third_party/dawn/src/dawn/tests/white_box/VulkanImageWrappingTests_DmaBuf.cpp:97:50: error: use of undeclared identifier \u0027DeviceExt\u0027\n               mDeviceVk-\u003eGetDeviceInfo().HasExt(DeviceExt::DedicatedAllocation);\n                                                 ^\n../../third_party/dawn/src/dawn/tests/white_box/VulkanImageWrappingTests_DmaBuf.cpp:97:16: error: use of undeclared identifier \u0027mDeviceVk\u0027\n               mDeviceVk-\u003eGetDeviceInfo().HasExt(DeviceExt::DedicatedAllocation);\n\n```",
      "parentUuid": "fb8a7da0_69b96470",
      "revId": "5fec912a2b51649d030dd525a2048b60ce8487cd",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7581f49d_5e3efffe",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-09-30T12:18:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "47a4d15e_b75fd43d",
      "revId": "5fec912a2b51649d030dd525a2048b60ce8487cd",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "312fae51_a3766103",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2022-09-30T12:38:41Z",
      "side": 1,
      "message": "It all passed on \"Vulkan_Intel\", but still saw this error on Vulkan_SwiftShader:\n\n```\nMESA-INTEL: warning: Performance support disabled, consider sysctl dev.i915.perf_stream_paranoid\u003d0\n[----------] 80 tests from VulkanImageWrappingValidationTests\n[ RUN      ] VulkanImageWrappingValidationTests.SuccessfulImport/Vulkan_Intel_R_Xe_Graphics_TGL_GT2_UseDedicatedAllocation_1_DetectDedicatedAllocation_1\n[       OK ] VulkanImageWrappingValidationTests.SuccessfulImport/Vulkan_Intel_R_Xe_Graphics_TGL_GT2_UseDedicatedAllocation_1_DetectDedicatedAllocation_1 (7 ms)\n[ RUN      ] VulkanImageWrappingValidationTests.SuccessfulImport/Vulkan_Intel_R_Xe_Graphics_TGL_GT2_UseDedicatedAllocation_1_DetectDedicatedAllocation_0\n[       OK ] VulkanImageWrappingValidationTests.SuccessfulImport/Vulkan_Intel_R_Xe_Graphics_TGL_GT2_UseDedicatedAllocation_1_DetectDedicatedAllocation_0 (2 ms)\n[ RUN      ] VulkanImageWrappingValidationTests.SuccessfulImport/Vulkan_Intel_R_Xe_Graphics_TGL_GT2_UseDedicatedAllocation_0_DetectDedicatedAllocation_1\n[       OK ] VulkanImageWrappingValidationTests.SuccessfulImport/Vulkan_Intel_R_Xe_Graphics_TGL_GT2_UseDedicatedAllocation_0_DetectDedicatedAllocation_1 (7 ms)\n[ RUN      ] VulkanImageWrappingValidationTests.SuccessfulImport/Vulkan_Intel_R_Xe_Graphics_TGL_GT2_UseDedicatedAllocation_0_DetectDedicatedAllocation_0\n[       OK ] VulkanImageWrappingValidationTests.SuccessfulImport/Vulkan_Intel_R_Xe_Graphics_TGL_GT2_UseDedicatedAllocation_0_DetectDedicatedAllocation_0 (6 ms)\n[ RUN      ] VulkanImageWrappingValidationTests.SuccessfulImport/Vulkan_SwiftShader_Device_Subzero_UseDedicatedAllocation_1_DetectDedicatedAllocation_1\nunknown file: Failure\nUninteresting mock function call - returning directly.\n    Function call: Call(1, 0x176800ebba40 pointing to \"Creating an image from external memory is not supported.\\n    at InitializeFromExternal (../../third_party/dawn/src/dawn/native/vulkan/TextureVk.cpp:752)\\n    at CreateFromExternal (../../third_party/dawn/src/dawn/native/vulkan/TextureVk.cpp:644)\\n\", 0x176800ab8000)\nStack trace:\n#0 0x5615bd40c13c testing::internal::GoogleTestFailureReporter::ReportFailure()\n#1 0x5615bd40d445 testing::internal::ReportUninterestingCall()\n#2 0x5615bd40dc3a testing::internal::UntypedFunctionMockerBase::UntypedInvokeWith()\n#3 0x5615bd2709f7 testing::internal::MockFunction\u003c\u003e::Call()\n#4 0x5615bd465eba dawn::native::DeviceBase::HandleError()\n#5 0x5615bd465f4b dawn::native::DeviceBase::ConsumeError()\n#6 0x5615bd4c977f dawn::native::DeviceBase::ConsumedError\u003c\u003e()\n#7 0x5615bd4c93b4 dawn::native::vulkan::Device::CreateTextureWrappingVulkanImage()\n#8 0x5615bd3e4f25 dawn::native::vulkan::VulkanImageWrappingTestBackendDmaBuf::WrapImage()\n#9 0x5615bd3d4681 dawn::native::vulkan::(anonymous namespace)::VulkanImageWrappingTestBase::WrapVulkanImage()\n#10 0x5615bd3d07e9 dawn::native::vulkan::(anonymous namespace)::VulkanImageWrappingTestBase::WrapVulkanImage()\n#11 0x5615bd3d05c1 dawn::native::vulkan::VulkanImageWrappingValidationTests_SuccessfulImport_Test::TestBody()\n\n../../third_party/dawn/src/dawn/tests/white_box/VulkanImageWrappingTests.cpp:123: Failure\nExpected: (texture) !\u003d (nullptr), actual: 8-byte object \u003c00-00 00-00 00-00 00-00\u003e vs (nullptr)\nFailed to wrap image, are external memory / semaphore extensions supported?\nStack trace:\n#0 0x5615bd3d47c4 dawn::native::vulkan::(anonymous namespace)::VulkanImageWrappingTestBase::WrapVulkanImage()\n#1 0x5615bd3d07e9 dawn::native::vulkan::(anonymous namespace)::VulkanImageWrappingTestBase::WrapVulkanImage()\n#2 0x5615bd3d05c1 dawn::native::vulkan::VulkanImageWrappingValidationTests_SuccessfulImport_Test::TestBody()\n\n../../third_party/dawn/src/dawn/tests/white_box/VulkanImageWrappingTests.cpp:156: Failure\nExpected: (texture.Get()) !\u003d (nullptr), actual: NULL vs (nullptr)\nStack trace:\n#0 0x5615bd3d06aa dawn::native::vulkan::VulkanImageWrappingValidationTests_SuccessfulImport_Test::TestBody()\n\nError: Assertion failure at ../../third_party/dawn/src/dawn/tests/white_box/VulkanImageWrappingTests.cpp:138 (IgnoreSignalSemaphore): result\nERROR dawn_end2end_tests[1310:1310]: [test_launcher.cc(1243)] no test result for VulkanImageWrappingValidationTests.SuccessfulImport/Vulkan_SwiftShader_Device_Subzero_UseDedicatedAllocation_1_DetectDedicatedAllocation_0\n\n```",
      "parentUuid": "7581f49d_5e3efffe",
      "revId": "5fec912a2b51649d030dd525a2048b60ce8487cd",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "69c97216_0c819901",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-09-30T12:39:50Z",
      "side": 1,
      "message": "Thanks for checking, I\u0027m glad it passes with Intel. Doesn\u0027t this error happen without this CL as well?",
      "parentUuid": "312fae51_a3766103",
      "revId": "5fec912a2b51649d030dd525a2048b60ce8487cd",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "144fd74e_783d1231",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2022-09-30T12:50:13Z",
      "side": 1,
      "message": "Yes, it happens without the CL as well.\n\nCongratulations, and have a good day! You were lucky catching me just before my long holiday. 😊",
      "parentUuid": "69c97216_0c819901",
      "revId": "5fec912a2b51649d030dd525a2048b60ce8487cd",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ffd55eeb_25188c63",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-09-30T12:52:23Z",
      "side": 1,
      "message": "Oh wow, thanks for taking the time to check things then :) Have a great holiday!",
      "parentUuid": "144fd74e_783d1231",
      "revId": "5fec912a2b51649d030dd525a2048b60ce8487cd",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ec41cb0d_ef277722",
        "filename": "src/dawn/tests/white_box/VulkanImageWrappingTests.cpp",
        "patchSetId": 8
      },
      "lineNbr": 42,
      "author": {
        "id": 1002831
      },
      "writtenOn": "2022-09-29T23:43:37Z",
      "side": 1,
      "message": "nit. Can\u0027t these be collapsed into a `NeedsDedicatedAllocation`? Or is there a need to specifically test cases where we may have an override or something?",
      "range": {
        "startLine": 41,
        "startChar": 0,
        "endLine": 42,
        "endChar": 39
      },
      "revId": "5fec912a2b51649d030dd525a2048b60ce8487cd",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b33df465_9a9ea9a9",
        "filename": "src/dawn/tests/white_box/VulkanImageWrappingTests.cpp",
        "patchSetId": 8
      },
      "lineNbr": 42,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-10-03T13:47:21Z",
      "side": 1,
      "message": "NeedsDedicatedAllocation::Detect would regroup both cases where DetectDedicatedAllocation is true, and would prevent testing the detection of dedicated vs. not dedicated cases. Tentatively keeping as is.",
      "parentUuid": "ec41cb0d_ef277722",
      "range": {
        "startLine": 41,
        "startChar": 0,
        "endLine": 42,
        "endChar": 39
      },
      "revId": "5fec912a2b51649d030dd525a2048b60ce8487cd",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0e5961d0_e47d37f4",
        "filename": "src/dawn/tests/white_box/VulkanImageWrappingTests.cpp",
        "patchSetId": 8
      },
      "lineNbr": 897,
      "author": {
        "id": 1002831
      },
      "writtenOn": "2022-09-29T23:43:37Z",
      "side": 1,
      "message": "nit. Would be helpful to add a /**/ comment to indicate which var is being set with each of these true/false pairs.",
      "range": {
        "startLine": 897,
        "startChar": 24,
        "endLine": 897,
        "endChar": 37
      },
      "revId": "5fec912a2b51649d030dd525a2048b60ce8487cd",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0bdc4aa6_519bf7f3",
        "filename": "src/dawn/tests/white_box/VulkanImageWrappingTests.cpp",
        "patchSetId": 8
      },
      "lineNbr": 897,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-10-03T13:47:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0e5961d0_e47d37f4",
      "range": {
        "startLine": 897,
        "startChar": 24,
        "endLine": 897,
        "endChar": 37
      },
      "revId": "5fec912a2b51649d030dd525a2048b60ce8487cd",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}