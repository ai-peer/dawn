{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "875bc5f4_658f41bb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 9
      },
      "lineNbr": 0,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2021-10-27T04:39:38Z",
      "side": 1,
      "message": "LGTM",
      "revId": "072f255e68601641a4d8ebc13fd8aafa0dd72216",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a0518ab2_351d6445",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 9
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-10-27T07:43:47Z",
      "side": 1,
      "message": "LGTM too",
      "revId": "072f255e68601641a4d8ebc13fd8aafa0dd72216",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "77fedf88_9687b386",
        "filename": "src/dawn_native/Pipeline.cpp",
        "patchSetId": 9
      },
      "lineNbr": 67,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-10-27T07:43:47Z",
      "side": 1,
      "message": "This isn\u0027t exactly what this code does: it doesn\u0027t do the validation (that\u0027s numUninintializedConstants), it produces a nice error message.",
      "revId": "072f255e68601641a4d8ebc13fd8aafa0dd72216",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2f3625e1_65591def",
        "filename": "src/dawn_native/Pipeline.cpp",
        "patchSetId": 9
      },
      "lineNbr": 67,
      "author": {
        "id": 1000685
      },
      "writtenOn": "2021-10-27T22:36:47Z",
      "side": 1,
      "message": "? I don\u0027t quite get this. This code both does a validation and produces an error message if the validation fails (return DAWN_FORMAT_VALIDATION_ERROR)",
      "parentUuid": "77fedf88_9687b386",
      "revId": "072f255e68601641a4d8ebc13fd8aafa0dd72216",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ca2341a1_241194bc",
        "filename": "src/dawn_native/Pipeline.cpp",
        "patchSetId": 9
      },
      "lineNbr": 67,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-10-28T10:01:05Z",
      "side": 1,
      "message": "This was just a nitpick that the comment wasn\u0027t 100% accurate because the validation is already done in numUninitializedConstants so the code here is more about producing the correct error message. But it was a nitpick.",
      "parentUuid": "2f3625e1_65591def",
      "revId": "072f255e68601641a4d8ebc13fd8aafa0dd72216",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9dd01838_b5c837d9",
        "filename": "src/dawn_native/Pipeline.cpp",
        "patchSetId": 9
      },
      "lineNbr": 77,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-10-27T07:43:47Z",
      "side": 1,
      "message": "nit: maybe use ostringstream? Here it is O(n^2) because of the string reallocations. Also slight preference to separate then with commas because newlines will break the formatting of the error message I think.",
      "revId": "072f255e68601641a4d8ebc13fd8aafa0dd72216",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9c2f294d_45ae534f",
        "filename": "src/dawn_native/Pipeline.cpp",
        "patchSetId": 9
      },
      "lineNbr": 77,
      "author": {
        "id": 1000685
      },
      "writtenOn": "2021-10-27T22:36:47Z",
      "side": 1,
      "message": "I actually found something on stackoverflow: https://stackoverflow.com/questions/19844858/c-stdostringstream-vs-stdstringappend\nsaying that \"constructing a stream object is a significantly more complex operation than constructing a string object\" And for the small use case the string.append is faster in the experiment.\nBut this is error path so I think it doesn\u0027t matter that much.\n\nformat in [id0, id1, id2] +1",
      "parentUuid": "9dd01838_b5c837d9",
      "revId": "072f255e68601641a4d8ebc13fd8aafa0dd72216",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d67215ce_48845661",
        "filename": "src/dawn_native/Pipeline.cpp",
        "patchSetId": 9
      },
      "lineNbr": 86,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2021-10-27T04:39:38Z",
      "side": 1,
      "message": "nit: might be wrong, but I think with absl, we don\u0027t need the .c_str()",
      "range": {
        "startLine": 86,
        "startChar": 51,
        "endLine": 86,
        "endChar": 59
      },
      "revId": "072f255e68601641a4d8ebc13fd8aafa0dd72216",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cf58e9fd_138ef9c3",
        "filename": "src/dawn_native/Pipeline.cpp",
        "patchSetId": 9
      },
      "lineNbr": 86,
      "author": {
        "id": 1000685
      },
      "writtenOn": "2021-10-27T22:36:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d67215ce_48845661",
      "range": {
        "startLine": 86,
        "startChar": 51,
        "endLine": 86,
        "endChar": 59
      },
      "revId": "072f255e68601641a4d8ebc13fd8aafa0dd72216",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5d60390a_484941a7",
        "filename": "src/dawn_native/ShaderModule.cpp",
        "patchSetId": 9
      },
      "lineNbr": 650,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2021-10-27T04:39:38Z",
      "side": 1,
      "message": "nit: assert the insertion took place?\n\nI think: auto it \u003d foo.insert(bar);\nASSERT(it-\u003esecond);",
      "range": {
        "startLine": 650,
        "startChar": 0,
        "endLine": 650,
        "endChar": 91
      },
      "revId": "072f255e68601641a4d8ebc13fd8aafa0dd72216",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7f1fad10_3503e8a6",
        "filename": "src/dawn_native/ShaderModule.cpp",
        "patchSetId": 9
      },
      "lineNbr": 650,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2021-10-27T08:56:27Z",
      "side": 1,
      "message": "Ã¼bernit: use emplace(std::move(identifier))",
      "revId": "072f255e68601641a4d8ebc13fd8aafa0dd72216",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "620d5b67_f388ec5e",
        "filename": "src/dawn_native/ShaderModule.cpp",
        "patchSetId": 9
      },
      "lineNbr": 650,
      "author": {
        "id": 1000685
      },
      "writtenOn": "2021-10-27T22:36:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5d60390a_484941a7",
      "range": {
        "startLine": 650,
        "startChar": 0,
        "endLine": 650,
        "endChar": 91
      },
      "revId": "072f255e68601641a4d8ebc13fd8aafa0dd72216",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "05c2c193_8e886cba",
        "filename": "src/tests/unittests/validation/OverridableConstantsValidationTests.cpp",
        "patchSetId": 9
      },
      "lineNbr": 150,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2021-10-27T04:39:38Z",
      "side": 1,
      "message": "nit: also test if just one of them is missing",
      "revId": "072f255e68601641a4d8ebc13fd8aafa0dd72216",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cf4dc402_a5c33415",
        "filename": "src/tests/unittests/validation/OverridableConstantsValidationTests.cpp",
        "patchSetId": 9
      },
      "lineNbr": 150,
      "author": {
        "id": 1000685
      },
      "writtenOn": "2021-10-27T22:36:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "05c2c193_8e886cba",
      "revId": "072f255e68601641a4d8ebc13fd8aafa0dd72216",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}