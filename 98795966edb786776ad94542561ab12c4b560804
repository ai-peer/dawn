{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "eeb6f7c4_e0ca24aa",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 7,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-11-21T13:01:11Z",
      "side": 1,
      "message": "nit: this is a bit generic. Maybe it could be \"Also reject mapAsync if the buffer is being mapped\"?",
      "range": {
        "startLine": 7,
        "startChar": 38,
        "endLine": 7,
        "endChar": 50
      },
      "revId": "98795966edb786776ad94542561ab12c4b560804",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7b4f7c90_f01d890e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 7,
      "author": {
        "id": 1003201
      },
      "writtenOn": "2022-11-22T07:21:13Z",
      "side": 1,
      "message": "Thanks, updated.",
      "parentUuid": "eeb6f7c4_e0ca24aa",
      "range": {
        "startLine": 7,
        "startChar": 38,
        "endLine": 7,
        "endChar": 50
      },
      "revId": "98795966edb786776ad94542561ab12c4b560804",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "28069a80_a888d1e6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-11-21T13:01:11Z",
      "side": 1,
      "message": "Can you check that the CL wouldn\u0027t trigger ASSERTs with https://dawn-review.googlesource.com/c/dawn/+/100702 I believe there might be a problem somewhere but can\u0027t remember for sure.",
      "revId": "98795966edb786776ad94542561ab12c4b560804",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d913f792_e1ff7bd5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-11-21T13:01:21Z",
      "side": 1,
      "message": "LGTM overall",
      "revId": "98795966edb786776ad94542561ab12c4b560804",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bf48ead3_bb13d3b2",
        "filename": "src/dawn/native/Buffer.cpp",
        "patchSetId": 4
      },
      "lineNbr": 433,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2022-11-22T00:05:05Z",
      "side": 1,
      "message": "nit: this comment isn\u0027t really needed anymore because the following line no longer attempts to CallMapCallback after the map (or map-at-creation) is completed",
      "range": {
        "startLine": 430,
        "startChar": 0,
        "endLine": 433,
        "endChar": 35
      },
      "revId": "98795966edb786776ad94542561ab12c4b560804",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "911e5c0d_70bb0bf0",
        "filename": "src/dawn/native/Buffer.cpp",
        "patchSetId": 4
      },
      "lineNbr": 433,
      "author": {
        "id": 1003201
      },
      "writtenOn": "2022-11-22T07:21:13Z",
      "side": 1,
      "message": "Removed the comment, thanks.",
      "parentUuid": "bf48ead3_bb13d3b2",
      "range": {
        "startLine": 430,
        "startChar": 0,
        "endLine": 433,
        "endChar": 35
      },
      "revId": "98795966edb786776ad94542561ab12c4b560804",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7dbab5e7_4cd56486",
        "filename": "src/dawn/native/Buffer.cpp",
        "patchSetId": 4
      },
      "lineNbr": 438,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-11-21T13:01:11Z",
      "side": 1,
      "message": "nit: maybe it would make sense to move this to CallMapCallback so that we ensure in a single function that the map callback is called only once.",
      "range": {
        "startLine": 437,
        "startChar": 0,
        "endLine": 438,
        "endChar": 25
      },
      "revId": "98795966edb786776ad94542561ab12c4b560804",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1b64b4ec_91c69aef",
        "filename": "src/dawn/native/Buffer.cpp",
        "patchSetId": 4
      },
      "lineNbr": 438,
      "author": {
        "id": 1003201
      },
      "writtenOn": "2022-11-22T07:21:13Z",
      "side": 1,
      "message": "I noticed that clear the callback in CallMapCallback so clearing it again here is duplicated. Updated, thanks.",
      "parentUuid": "7dbab5e7_4cd56486",
      "range": {
        "startLine": 437,
        "startChar": 0,
        "endLine": 438,
        "endChar": 25
      },
      "revId": "98795966edb786776ad94542561ab12c4b560804",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eb8c52b4_236e92bd",
        "filename": "src/dawn/native/Buffer.cpp",
        "patchSetId": 4
      },
      "lineNbr": 553,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-11-21T13:01:11Z",
      "side": 1,
      "message": "nit: Can this be called when the state isn\u0027t PendingMap? Can we change this if into an ASSERT in this case?",
      "range": {
        "startLine": 551,
        "startChar": 0,
        "endLine": 553,
        "endChar": 0
      },
      "revId": "98795966edb786776ad94542561ab12c4b560804",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cf5a3b27_745915ff",
        "filename": "src/dawn/native/Buffer.cpp",
        "patchSetId": 4
      },
      "lineNbr": 553,
      "author": {
        "id": 1003201
      },
      "writtenOn": "2022-11-22T07:27:50Z",
      "side": 1,
      "message": "\u003e Can this be called when the state isn\u0027t PendingMap?\n\nI don\u0027t think it is called when the state isn\u0027t PendingMap if it is guaranteed that only one of Finish(), HandleDeviceLoss(), or HandleShutDown() in MapRequestTask is called only (up to) once. Is it guaranteed? If so, I think ASSERT sounds better for me.",
      "parentUuid": "eb8c52b4_236e92bd",
      "range": {
        "startLine": 551,
        "startChar": 0,
        "endLine": 553,
        "endChar": 0
      },
      "revId": "98795966edb786776ad94542561ab12c4b560804",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c33e1814_850a6153",
        "filename": "src/dawn/native/Buffer.cpp",
        "patchSetId": 4
      },
      "lineNbr": 553,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-11-22T09:25:54Z",
      "side": 1,
      "message": "Yes it should be guaranteed that exactly one of these three functions is called (and exactly once).",
      "parentUuid": "cf5a3b27_745915ff",
      "range": {
        "startLine": 551,
        "startChar": 0,
        "endLine": 553,
        "endChar": 0
      },
      "revId": "98795966edb786776ad94542561ab12c4b560804",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b08fb359_d8cf7ab4",
        "filename": "src/dawn/native/Buffer.cpp",
        "patchSetId": 4
      },
      "lineNbr": 553,
      "author": {
        "id": 1003201
      },
      "writtenOn": "2022-11-23T08:32:22Z",
      "side": 1,
      "message": "Ah, sorry I think I was wrong.\n\nBuffer can be unmapped or destroyed before the callback is fired. So buffer state can be non-PendingMap here.",
      "parentUuid": "c33e1814_850a6153",
      "range": {
        "startLine": 551,
        "startChar": 0,
        "endLine": 553,
        "endChar": 0
      },
      "revId": "98795966edb786776ad94542561ab12c4b560804",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "59e36763_273cb8f8",
        "filename": "src/dawn/native/Buffer.cpp",
        "patchSetId": 4
      },
      "lineNbr": 553,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-11-23T13:57:22Z",
      "side": 1,
      "message": "Ok, then the two conditions can be merged in one as A \u0026\u0026 B but sgtm otherwise.",
      "parentUuid": "b08fb359_d8cf7ab4",
      "range": {
        "startLine": 551,
        "startChar": 0,
        "endLine": 553,
        "endChar": 0
      },
      "revId": "98795966edb786776ad94542561ab12c4b560804",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "30d9474b_043e2ec6",
        "filename": "src/dawn/native/Buffer.cpp",
        "patchSetId": 4
      },
      "lineNbr": 553,
      "author": {
        "id": 1003201
      },
      "writtenOn": "2022-11-23T16:22:24Z",
      "side": 1,
      "message": "Updated, thanks.",
      "parentUuid": "59e36763_273cb8f8",
      "range": {
        "startLine": 551,
        "startChar": 0,
        "endLine": 553,
        "endChar": 0
      },
      "revId": "98795966edb786776ad94542561ab12c4b560804",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}