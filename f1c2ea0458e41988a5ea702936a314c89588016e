{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "00b26d94_a02743de",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2023-06-05T14:07:53Z",
      "side": 1,
      "message": "This seems like it\u0027s potentially pass `nullptr` to places which didn\u0027t expect it before. Have we validated that all the called functions are setup to handle the nulls correctly?",
      "revId": "f1c2ea0458e41988a5ea702936a314c89588016e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cf97b651_970a63d9",
        "filename": "src/tint/ir/to_program.cc",
        "patchSetId": 2
      },
      "lineNbr": 294,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2023-06-05T14:07:53Z",
      "side": 1,
      "message": "This will cause ASAN issues if `ptr` is a `nullptr`.",
      "revId": "f1c2ea0458e41988a5ea702936a314c89588016e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d9a25b46_77d48daf",
        "filename": "src/tint/ir/to_program.cc",
        "patchSetId": 2
      },
      "lineNbr": 294,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2023-06-05T14:08:47Z",
      "side": 1,
      "message": "Why would it be nullptr? Validation should catch this.",
      "parentUuid": "cf97b651_970a63d9",
      "revId": "f1c2ea0458e41988a5ea702936a314c89588016e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6cac51f6_9a8369af",
        "filename": "src/tint/ir/to_program.cc",
        "patchSetId": 2
      },
      "lineNbr": 294,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2023-06-05T14:16:19Z",
      "side": 1,
      "message": "So the assumption is that the `As\u003ctype::Pointer\u003e` will never fail? K.",
      "parentUuid": "d9a25b46_77d48daf",
      "revId": "f1c2ea0458e41988a5ea702936a314c89588016e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "429eedb4_3644a210",
        "filename": "src/tint/ir/to_program.cc",
        "patchSetId": 2
      },
      "lineNbr": 294,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2023-06-05T14:19:13Z",
      "side": 1,
      "message": "If you feel that this doesn\u0027t belong in the IR validator, then I can guard here, but the more we can put into the validator, the less validation we have to duplicate across the various backends.",
      "parentUuid": "6cac51f6_9a8369af",
      "revId": "f1c2ea0458e41988a5ea702936a314c89588016e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a04b6a24_8d6dce3f",
        "filename": "src/tint/ir/to_program.cc",
        "patchSetId": 2
      },
      "lineNbr": 294,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2023-06-05T15:42:00Z",
      "side": 1,
      "message": "Validating in the validator is fine, can you file a bug for adding this validation so we don\u0027t lose track?",
      "parentUuid": "429eedb4_3644a210",
      "revId": "f1c2ea0458e41988a5ea702936a314c89588016e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "92637ab2_6ff5dffd",
        "filename": "src/tint/ir/to_program.cc",
        "patchSetId": 2
      },
      "lineNbr": 294,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2023-06-05T17:36:19Z",
      "side": 1,
      "message": "Done: crbug.com/tint/1953",
      "parentUuid": "a04b6a24_8d6dce3f",
      "revId": "f1c2ea0458e41988a5ea702936a314c89588016e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ae0ff918_157c1ea2",
        "filename": "src/tint/ir/to_program.cc",
        "patchSetId": 2
      },
      "lineNbr": 294,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2023-06-05T18:45:40Z",
      "side": 1,
      "message": "From the bug, the var can be a texture, sampler or pointer. Do we need another check somewhere such that we never get in here with texture or sampler vars? Or some other check in the validator that what calls into this can never have those types?",
      "parentUuid": "92637ab2_6ff5dffd",
      "revId": "f1c2ea0458e41988a5ea702936a314c89588016e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "f1c2ea0458e41988a5ea702936a314c89588016e",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Kokoro",
        "description": {
          "value": "A maximum vote is required for the Kokoro label. A minimum vote is blocking."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Kokoro\u003dMAX AND -label:Kokoro\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "uploader:dawn-autoroll@skia-public.iam.gserviceaccount.com"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Kokoro=MAX AND -label:Kokoro=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Kokoro=MAX"],"failingAtoms":["label:Kokoro=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"uploader:dawn-autoroll@skia-public.iam.gserviceaccount.com"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["uploader:dawn-autoroll@skia-public.iam.gserviceaccount.com"]}
      },
      "patchSetCommitId": "f1c2ea0458e41988a5ea702936a314c89588016e",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "patchSetCommitId": "f1c2ea0458e41988a5ea702936a314c89588016e",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    }
  ]
}