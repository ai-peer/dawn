{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "4be5e81a_47fdb970",
        "filename": "src/tint/writer/hlsl/generator_impl.cc",
        "patchSetId": 8
      },
      "lineNbr": 2844,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2022-09-21T13:13:17Z",
      "side": 1,
      "message": "This has been useful as an ICE. It caught the fuzzers passing override down here which would have errored out without us seeing.",
      "revId": "cc29aee22872d68824423fe231434bc1bdca3e8f",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "93628325_c7433e4a",
        "filename": "src/tint/writer/hlsl/generator_impl.cc",
        "patchSetId": 8
      },
      "lineNbr": 2844,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2022-09-21T13:42:55Z",
      "side": 1,
      "message": "I thought in past discussions about ICE vs error, we had decided to use errors for backend validation, like when you\u0027re not running transforms.",
      "parentUuid": "4be5e81a_47fdb970",
      "revId": "cc29aee22872d68824423fe231434bc1bdca3e8f",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f6c9e1ae_2636e208",
        "filename": "src/tint/writer/hlsl/generator_impl.cc",
        "patchSetId": 8
      },
      "lineNbr": 2844,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2022-09-21T14:39:56Z",
      "side": 1,
      "message": "Don\u0027t recall the discussion, but fine with changing this for consistency. Just flagging it wouldn\u0027t have been caught by the fuzzers this way would it?",
      "parentUuid": "93628325_c7433e4a",
      "revId": "cc29aee22872d68824423fe231434bc1bdca3e8f",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b97c5a82_6685b91f",
        "filename": "src/tint/writer/hlsl/generator_impl.cc",
        "patchSetId": 8
      },
      "lineNbr": 2844,
      "author": {
        "id": 1002421
      },
      "writtenOn": "2022-09-21T16:43:26Z",
      "side": 1,
      "message": "No, it wouldn\u0027t, but in part that was the reason for the change - the fuzzers like to try emitting code that depends on some user-transform, and then explodes with the security people having to triage. I don\u0027t really know what\u0027s preferable here.",
      "parentUuid": "f6c9e1ae_2636e208",
      "revId": "cc29aee22872d68824423fe231434bc1bdca3e8f",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "41f24f87_54ae2970",
        "filename": "src/tint/writer/hlsl/generator_impl.cc",
        "patchSetId": 8
      },
      "lineNbr": 2846,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2022-09-21T13:13:17Z",
      "side": 1,
      "message": "Wasnt\u0027 sure how to name this `substitute_override` is what you provide on the command line `SubstituteOverride` is the class name. Using the former seemed better as if you\u0027re calling tint you just add the transform entry on the command line?",
      "revId": "cc29aee22872d68824423fe231434bc1bdca3e8f",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dbde5a14_90eb2840",
        "filename": "src/tint/writer/hlsl/generator_impl.cc",
        "patchSetId": 8
      },
      "lineNbr": 2846,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2022-09-21T13:42:55Z",
      "side": 1,
      "message": "Interesting. I haven\u0027t considered the tint executable as our primary use for diagnostics. It seems just as likely that someone would use the API to the executable? If we really care about this, I guess we could detect how it was run and adjust the messages accordingly.",
      "parentUuid": "41f24f87_54ae2970",
      "revId": "cc29aee22872d68824423fe231434bc1bdca3e8f",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4ff5c11d_ecb383a2",
        "filename": "src/tint/writer/hlsl/generator_impl.cc",
        "patchSetId": 8
      },
      "lineNbr": 2846,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2022-09-21T14:39:56Z",
      "side": 1,
      "message": "You, both answers are valid, we just need to pick one and make sure we\u0027re consistent.",
      "parentUuid": "dbde5a14_90eb2840",
      "revId": "cc29aee22872d68824423fe231434bc1bdca3e8f",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1"]}
      },
      "patchSetCommitId": "cc29aee22872d68824423fe231434bc1bdca3e8f",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "patchSetCommitId": "cc29aee22872d68824423fe231434bc1bdca3e8f",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    }
  ]
}