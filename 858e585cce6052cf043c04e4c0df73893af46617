{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "8981f760_9679d471",
        "filename": "src/dawn_native/BindGroupTracker.h",
        "patchSetId": 1
      },
      "lineNbr": 41,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2021-08-03T21:26:51Z",
      "side": 0,
      "message": "[2]",
      "range": {
        "startLine": 41,
        "startChar": 0,
        "endLine": 41,
        "endChar": 47
      },
      "revId": "858e585cce6052cf043c04e4c0df73893af46617",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1c1915c4_dc53004e",
        "filename": "src/dawn_native/BindGroupTracker.h",
        "patchSetId": 1
      },
      "lineNbr": 41,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2021-08-04T15:31:14Z",
      "side": 0,
      "message": "Ack",
      "parentUuid": "8981f760_9679d471",
      "range": {
        "startLine": 41,
        "startChar": 0,
        "endLine": 41,
        "endChar": 47
      },
      "revId": "858e585cce6052cf043c04e4c0df73893af46617",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ad127e14_ba0fae99",
        "filename": "src/dawn_native/BindGroupTracker.h",
        "patchSetId": 1
      },
      "lineNbr": 66,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2021-08-03T21:26:51Z",
      "side": 0,
      "message": "[1]",
      "range": {
        "startLine": 63,
        "startChar": 12,
        "endLine": 66,
        "endChar": 0
      },
      "revId": "858e585cce6052cf043c04e4c0df73893af46617",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ff712d9f_1cb873fc",
        "filename": "src/dawn_native/BindGroupTracker.h",
        "patchSetId": 1
      },
      "lineNbr": 66,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2021-08-04T15:31:14Z",
      "side": 0,
      "message": "Ack",
      "parentUuid": "ad127e14_ba0fae99",
      "range": {
        "startLine": 63,
        "startChar": 12,
        "endLine": 66,
        "endChar": 0
      },
      "revId": "858e585cce6052cf043c04e4c0df73893af46617",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4a387866_ddb076e2",
        "filename": "src/dawn_native/BindGroupTracker.h",
        "patchSetId": 1
      },
      "lineNbr": 70,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2021-08-03T21:26:51Z",
      "side": 0,
      "message": "hmm.. I think a simpler solution than splitting Apply into Before+After might be to move this line above the early return at [1]. That way we always have the correct mask for the check at [2].\n\nIf I\u0027m understanding the problem correctly, setting the pipeline without drawing (A then B w/out draw then A) can make the current code wrong such that mPipelineLayout is for A, but mBindGroupLayoutsMask is for B. Thus, the check at [2] fails and bind groups aren\u0027t actually set.\n\nWhat do you think?",
      "range": {
        "startLine": 66,
        "startChar": 0,
        "endLine": 70,
        "endChar": 79
      },
      "revId": "858e585cce6052cf043c04e4c0df73893af46617",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2ca2fedd_94f8831d",
        "filename": "src/dawn_native/BindGroupTracker.h",
        "patchSetId": 1
      },
      "lineNbr": 70,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2021-08-04T01:57:14Z",
      "side": 0,
      "message": "+1",
      "parentUuid": "4a387866_ddb076e2",
      "range": {
        "startLine": 66,
        "startChar": 0,
        "endLine": 70,
        "endChar": 79
      },
      "revId": "858e585cce6052cf043c04e4c0df73893af46617",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1aadd68e_3d3a6bb6",
        "filename": "src/dawn_native/BindGroupTracker.h",
        "patchSetId": 1
      },
      "lineNbr": 70,
      "author": {
        "id": 1001616
      },
      "writtenOn": "2021-08-04T15:19:19Z",
      "side": 0,
      "message": "This simplified fix does work with the original test case, but if I change it so the sequence is \"set pipeline B, set bind group n-1, set pipeline A\", it doesn\u0027t work. This is because the bind group isn\u0027t in mBindGroupLayoutsMask so it\u0027s not set as dirty in OnSetBindGroup(), and mLastAppliedPipelineLayout \u003d\u003d mPipelineLayout is true so setting pipeline A doesn\u0027t dirty the bind groups either.\n\nI\u0027ve updated the test case as described, since it also fails without the simplified fix, so it\u0027s better than the original.\n\nAlso with the original test case, the simplified fix still does excessive dirtying of the bind groups when setting pipeline B. Although I would consider this a minor issue, since the test case could be considered as not \"best practice\". Even if it should be functional, maybe it doesn\u0027t need to perform the best.",
      "parentUuid": "2ca2fedd_94f8831d",
      "range": {
        "startLine": 66,
        "startChar": 0,
        "endLine": 70,
        "endChar": 79
      },
      "revId": "858e585cce6052cf043c04e4c0df73893af46617",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3b5b190c_880e1dd6",
        "filename": "src/dawn_native/BindGroupTracker.h",
        "patchSetId": 1
      },
      "lineNbr": 70,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2021-08-04T15:31:14Z",
      "side": 0,
      "message": "ah, I see. thank you for the explanation! LGTM then",
      "parentUuid": "1aadd68e_3d3a6bb6",
      "range": {
        "startLine": 66,
        "startChar": 0,
        "endLine": 70,
        "endChar": 79
      },
      "revId": "858e585cce6052cf043c04e4c0df73893af46617",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "86a2f0b4_91a416d5",
        "filename": "src/dawn_native/BindGroupTracker.h",
        "patchSetId": 1
      },
      "lineNbr": 70,
      "author": {
        "id": 1001616
      },
      "writtenOn": "2021-08-04T15:41:38Z",
      "side": 0,
      "message": "This was sent back to me (I think), do I have something else to do?",
      "parentUuid": "3b5b190c_880e1dd6",
      "range": {
        "startLine": 66,
        "startChar": 0,
        "endLine": 70,
        "endChar": 79
      },
      "revId": "858e585cce6052cf043c04e4c0df73893af46617",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a7c2bdc3_127f8c12",
        "filename": "src/dawn_native/BindGroupTracker.h",
        "patchSetId": 1
      },
      "lineNbr": 70,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2021-08-04T15:43:16Z",
      "side": 0,
      "message": "ah, I forgot you don\u0027t have privileges to submit. I\u0027ll do it for you.",
      "parentUuid": "86a2f0b4_91a416d5",
      "range": {
        "startLine": 66,
        "startChar": 0,
        "endLine": 70,
        "endChar": 79
      },
      "revId": "858e585cce6052cf043c04e4c0df73893af46617",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2f7a5716_459b7536",
        "filename": "src/dawn_native/BindGroupTracker.h",
        "patchSetId": 1
      },
      "lineNbr": 70,
      "author": {
        "id": 1001616
      },
      "writtenOn": "2021-08-04T17:58:23Z",
      "side": 0,
      "message": "The test case failed in DeviceBase::CheckPassedSerials() on ASSERT(completedSerial \u003c\u003d mLastSubmittedSerial), but only for Windows with an Intel GPU and D3D12. I\u0027m not sure how to debug this, because I don\u0027t have access to an Intel GPU. Any idea on what could be causing this?",
      "parentUuid": "a7c2bdc3_127f8c12",
      "range": {
        "startLine": 66,
        "startChar": 0,
        "endLine": 70,
        "endChar": 79
      },
      "revId": "858e585cce6052cf043c04e4c0df73893af46617",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f2804ab8_6b884f17",
        "filename": "src/dawn_native/BindGroupTracker.h",
        "patchSetId": 1
      },
      "lineNbr": 70,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2021-08-04T19:36:59Z",
      "side": 0,
      "message": "I think it\u0027s a device lost error and we don\u0027t have good device lost reporting. https://docs.microsoft.com/en-us/windows/win32/api/d3d12/nf-d3d12-id3d12fence-getcompletedvalue\n\n\"Returns the current value of the fence. If the device has been removed, the return value will be UINT64_MAX.\"\n\n+cc some Intel/Microsoft folks to help out here",
      "parentUuid": "2f7a5716_459b7536",
      "range": {
        "startLine": 66,
        "startChar": 0,
        "endLine": 70,
        "endChar": 79
      },
      "revId": "858e585cce6052cf043c04e4c0df73893af46617",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "563457d5_452f3655",
        "filename": "src/dawn_native/BindGroupTracker.h",
        "patchSetId": 1
      },
      "lineNbr": 70,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2021-08-04T19:58:27Z",
      "side": 0,
      "message": "fyi I\u0027m adding the device lost check in  https://dawn-review.googlesource.com/c/dawn/+/60961",
      "parentUuid": "f2804ab8_6b884f17",
      "range": {
        "startLine": 66,
        "startChar": 0,
        "endLine": 70,
        "endChar": 79
      },
      "revId": "858e585cce6052cf043c04e4c0df73893af46617",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "29bb2ea9_1d4fe0b3",
        "filename": "src/dawn_native/BindGroupTracker.h",
        "patchSetId": 1
      },
      "lineNbr": 70,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2021-08-05T05:00:17Z",
      "side": 0,
      "message": "Thanks for your explanation!\n\nThe test \"DrawThenChangePipelineTwiceAndBindGroup\" fails on all Intel GPUs with the latest driver.\n- On Skylake (HD530), the rendering result is incorrect\n- On Kabylake (HD630) and Tiger Lake (Iris Xe Graphics), the device lost happens as Austin said. With Austin\u0027s CL we can see the error code is 0x887A0006 (DXGI_ERROR_DEVICE_HUNG).\n\nSo it is probably exposing an Intel driver issue. Maybe we can temporarily skip this test on Intel/D3D12 in this CL ? (DAWN_SUPPRESS_TEST_IF(IsD3D12() \u0026\u0026 IsIntel()))",
      "parentUuid": "563457d5_452f3655",
      "range": {
        "startLine": 66,
        "startChar": 0,
        "endLine": 70,
        "endChar": 79
      },
      "revId": "858e585cce6052cf043c04e4c0df73893af46617",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e75e2e74_a4ca56dc",
        "filename": "src/dawn_native/BindGroupTracker.h",
        "patchSetId": 1
      },
      "lineNbr": 70,
      "author": {
        "id": 1001616
      },
      "writtenOn": "2021-08-05T13:14:22Z",
      "side": 0,
      "message": "I updated the test to skip on Windows and Intel and D3D12, and opened an issue to investigate separately. Can someone please queue the tests for me again? Thanks.",
      "parentUuid": "29bb2ea9_1d4fe0b3",
      "range": {
        "startLine": 66,
        "startChar": 0,
        "endLine": 70,
        "endChar": 79
      },
      "revId": "858e585cce6052cf043c04e4c0df73893af46617",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "34b47ec8_8ed206be",
        "filename": "src/dawn_native/BindGroupTracker.h",
        "patchSetId": 1
      },
      "lineNbr": 70,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2021-08-05T13:15:17Z",
      "side": 0,
      "message": "awesome, thanks!",
      "parentUuid": "e75e2e74_a4ca56dc",
      "range": {
        "startLine": 66,
        "startChar": 0,
        "endLine": 70,
        "endChar": 79
      },
      "revId": "858e585cce6052cf043c04e4c0df73893af46617",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}