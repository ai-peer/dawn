{
  "comments": [
    {
      "key": {
        "uuid": "5cc41c4a_5b75f715",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 12,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2019-07-02T02:23:55Z",
      "side": 1,
      "message": "BUG\u003d?",
      "revId": "367012070d1b901982e67c016a6cc051671f39df",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8d9a8910_e0633c75",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 12,
      "author": {
        "id": 1000030
      },
      "writtenOn": "2019-07-02T07:10:41Z",
      "side": 1,
      "message": "dawn:181",
      "parentUuid": "5cc41c4a_5b75f715",
      "revId": "367012070d1b901982e67c016a6cc051671f39df",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b071424a_1cfbbc57",
        "filename": "src/tests/DawnTest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 117,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2019-07-02T02:21:24Z",
      "side": 1,
      "message": "Why you use strstr instead of strcmp here?",
      "range": {
        "startLine": 117,
        "startChar": 12,
        "endLine": 117,
        "endChar": 18
      },
      "revId": "367012070d1b901982e67c016a6cc051671f39df",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c4cd61ee_795401a9",
        "filename": "src/tests/DawnTest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 117,
      "author": {
        "id": 1000030
      },
      "writtenOn": "2019-07-02T07:10:41Z",
      "side": 1,
      "message": "\u0027--adapter-vendor-id\u0027 will be a substring of argument value such as \u0027--adapter-vendor-id\u003d8086\u0027.",
      "parentUuid": "b071424a_1cfbbc57",
      "range": {
        "startLine": 117,
        "startChar": 12,
        "endLine": 117,
        "endChar": 18
      },
      "revId": "367012070d1b901982e67c016a6cc051671f39df",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "68d05544_d568c31a",
        "filename": "src/tests/DawnTest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 117,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2019-07-02T07:21:41Z",
      "side": 1,
      "message": "I suggest you use the style in Dawn samples.\nhttps://cs.chromium.org/chromium/src/third_party/dawn/examples/SampleUtils.cpp?l\u003d175\n\ne.g. ./CppHelloTriangle --backend vulkan\n\nHere \"--backend\" is argv[1] and \"vulkan\" is argv[2]",
      "parentUuid": "c4cd61ee_795401a9",
      "range": {
        "startLine": 117,
        "startChar": 12,
        "endLine": 117,
        "endChar": 18
      },
      "revId": "367012070d1b901982e67c016a6cc051671f39df",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "482d70c6_9374c031",
        "filename": "src/tests/DawnTest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 117,
      "author": {
        "id": 1000030
      },
      "writtenOn": "2019-07-02T07:29:14Z",
      "side": 1,
      "message": "I want to keep the same style with gtest_filter, otherwise there will be two styles for passing value to args: --adapter-vendor-id 8086 --gtest_filter\u003d\"*\"",
      "parentUuid": "68d05544_d568c31a",
      "range": {
        "startLine": 117,
        "startChar": 12,
        "endLine": 117,
        "endChar": 18
      },
      "revId": "367012070d1b901982e67c016a6cc051671f39df",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ce0c8a0e_9d34bfaa",
        "filename": "src/tests/DawnTest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 120,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2019-07-02T02:21:24Z",
      "side": 1,
      "message": "nullptr",
      "range": {
        "startLine": 120,
        "startChar": 53,
        "endLine": 120,
        "endChar": 57
      },
      "revId": "367012070d1b901982e67c016a6cc051671f39df",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "db12cbbb_36339606",
        "filename": "src/tests/DawnTest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 120,
      "author": {
        "id": 1000030
      },
      "writtenOn": "2019-07-02T07:10:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ce0c8a0e_9d34bfaa",
      "range": {
        "startLine": 120,
        "startChar": 53,
        "endLine": 120,
        "endChar": 57
      },
      "revId": "367012070d1b901982e67c016a6cc051671f39df",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e60a256c_72b75f95",
        "filename": "src/tests/DawnTest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 339,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2019-07-02T02:21:24Z",
      "side": 1,
      "message": "Maybe we can get vendor id from the vendor name returned by OpenGL and Metal APIs instead.",
      "range": {
        "startLine": 339,
        "startChar": 54,
        "endLine": 339,
        "endChar": 60
      },
      "revId": "367012070d1b901982e67c016a6cc051671f39df",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1d43a0b1_6cbc1f31",
        "filename": "src/tests/DawnTest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 339,
      "author": {
        "id": 1000030
      },
      "writtenOn": "2019-07-02T07:10:41Z",
      "side": 1,
      "message": "glGetString(GL_VENDOR) will get strings such as \"Intel Open Source Technology Center\", \"NVIDIA Corporation\", \"ATI Technologies Inc.\", I have not tried on Android, but found a link with GL_VENDOR string for each vendor: https://feedback.wildfiregames.com/report/opengl/feature/GL_VENDOR. I\u0027m not sure if we need to match all vendors in https://cs.chromium.org/chromium/src/third_party/dawn/src/common/Constants.h?g\u003d0\u0026l\u003d47",
      "parentUuid": "e60a256c_72b75f95",
      "range": {
        "startLine": 339,
        "startChar": 54,
        "endLine": 339,
        "endChar": 60
      },
      "revId": "367012070d1b901982e67c016a6cc051671f39df",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2b5eee71_68dcee0d",
        "filename": "src/tests/DawnTest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 341,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2019-07-02T02:21:24Z",
      "side": 1,
      "message": "Could you define a constant as the flag to allow all vendor ids instead of using \"0\" here?\nThe name of the constant could be \"kAllVendors\"?",
      "range": {
        "startLine": 341,
        "startChar": 43,
        "endLine": 341,
        "endChar": 44
      },
      "revId": "367012070d1b901982e67c016a6cc051671f39df",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7442edf0_2f7f8136",
        "filename": "src/tests/DawnTest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 341,
      "author": {
        "id": 1000030
      },
      "writtenOn": "2019-07-02T07:10:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2b5eee71_68dcee0d",
      "range": {
        "startLine": 341,
        "startChar": 43,
        "endLine": 341,
        "endChar": 44
      },
      "revId": "367012070d1b901982e67c016a6cc051671f39df",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    }
  ]
}