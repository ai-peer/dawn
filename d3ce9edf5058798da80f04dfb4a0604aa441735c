{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "e9a9a5fd_2199ce8c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 14
      },
      "lineNbr": 0,
      "author": {
        "id": 1003581
      },
      "writtenOn": "2024-04-17T21:59:32Z",
      "side": 1,
      "message": "Addressed feedback, PTAL.",
      "revId": "d3ce9edf5058798da80f04dfb4a0604aa441735c",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bd054578_dd009b05",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 14
      },
      "lineNbr": 0,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2024-04-18T01:14:29Z",
      "side": 1,
      "message": "LGTM",
      "revId": "d3ce9edf5058798da80f04dfb4a0604aa441735c",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4d8f2125_959d00aa",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 14
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2024-04-18T10:05:08Z",
      "side": 1,
      "message": "LGTM too, some nits",
      "revId": "d3ce9edf5058798da80f04dfb4a0604aa441735c",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "98e00384_93afb3c3",
        "filename": "src/dawn/native/vulkan/SamplerVk.cpp",
        "patchSetId": 14
      },
      "lineNbr": 126,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2024-04-18T10:05:08Z",
      "side": 1,
      "message": "nit: No need to check for the feature, that was already validated. So this can be:\n\n```\nif (auto* ulkanYCbCrDescriptor \u003d Unpack(descriptor).Get\u003cvulkan::SamplerYCbCrVulkanDescriptor\u003e()) {\n do stuff\n}\n```",
      "range": {
        "startLine": 126,
        "startChar": 8,
        "endLine": 126,
        "endChar": 59
      },
      "revId": "d3ce9edf5058798da80f04dfb4a0604aa441735c",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5ca3495b_695187b1",
        "filename": "src/dawn/native/vulkan/SamplerVk.cpp",
        "patchSetId": 14
      },
      "lineNbr": 126,
      "author": {
        "id": 1003581
      },
      "writtenOn": "2024-04-18T14:18:05Z",
      "side": 1,
      "message": "Sounds good, done.",
      "parentUuid": "98e00384_93afb3c3",
      "range": {
        "startLine": 126,
        "startChar": 8,
        "endLine": 126,
        "endChar": 59
      },
      "revId": "d3ce9edf5058798da80f04dfb4a0604aa441735c",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a2544678_a4b1c442",
        "filename": "src/dawn/native/vulkan/SamplerVk.cpp",
        "patchSetId": 14
      },
      "lineNbr": 127,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2024-04-18T10:05:08Z",
      "side": 1,
      "message": "nit: This does a copy of the struct, maybe it could be const\u0026?",
      "revId": "d3ce9edf5058798da80f04dfb4a0604aa441735c",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dc3a2b29_c2786fb3",
        "filename": "src/dawn/native/vulkan/SamplerVk.cpp",
        "patchSetId": 14
      },
      "lineNbr": 127,
      "author": {
        "id": 1003581
      },
      "writtenOn": "2024-04-18T14:18:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a2544678_a4b1c442",
      "revId": "d3ce9edf5058798da80f04dfb4a0604aa441735c",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4937d41d_f411ea95",
        "filename": "src/dawn/native/vulkan/SamplerVk.cpp",
        "patchSetId": 14
      },
      "lineNbr": 135,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2024-04-18T01:14:29Z",
      "side": 1,
      "message": "this might be slightly too strict. There can technically be other chains too. like \"VkSamplerYcbcrConversionYcbcrDegammaCreateInfoQCOM\"\n\nI think it would be sufficient to iterate the pnext chain, and if you see VkExternalFormatANDROID, validate that both the externalFormat and the vulkanYCbCrInfo.format are not 0/undefined.\n\nSecondly, I don\u0027t think the check needs to be behind the #ifdef. It should be fine on all OSes",
      "range": {
        "startLine": 133,
        "startChar": 12,
        "endLine": 135,
        "endChar": 53
      },
      "revId": "d3ce9edf5058798da80f04dfb4a0604aa441735c",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "70551843_7435fbef",
        "filename": "src/dawn/native/vulkan/SamplerVk.cpp",
        "patchSetId": 14
      },
      "lineNbr": 135,
      "author": {
        "id": 1003581
      },
      "writtenOn": "2024-04-18T14:18:05Z",
      "side": 1,
      "message": "That makes sense, made the changes.\n\nRegarding #ifdef, that was needed for VkExternalFormatANDROID which fails compilation",
      "parentUuid": "4937d41d_f411ea95",
      "range": {
        "startLine": 133,
        "startChar": 12,
        "endLine": 135,
        "endChar": 53
      },
      "revId": "d3ce9edf5058798da80f04dfb4a0604aa441735c",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}