{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "80459abe_751feff5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000248
      },
      "writtenOn": "2023-07-21T20:28:33Z",
      "side": 1,
      "message": "Oops, looks like this didn\u0027t rebase as intended. Going back to WIP.",
      "revId": "07a9a492819c6407bd2878b14f5a431b96493ffd",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4ecd50c2_cc99d1d9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2023-07-21T20:32:12Z",
      "side": 1,
      "message": "We\u0027re making large-scale refactorings to the codebase as part of a larger shift away from AST transforms / writers to an IR based model. Sorry for all the moving pieces.",
      "parentUuid": "80459abe_751feff5",
      "revId": "07a9a492819c6407bd2878b14f5a431b96493ffd",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0c390410_815d0eec",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000248
      },
      "writtenOn": "2023-07-21T20:32:20Z",
      "side": 1,
      "message": "Never mind, it\u0027s good now. PTAL when you\u0027ve got the time. Thanks!",
      "revId": "07a9a492819c6407bd2878b14f5a431b96493ffd",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1554fe16_e285aea3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2023-07-21T21:31:10Z",
      "side": 1,
      "message": "Approving as I don\u0027t want you to have to rebase again, and I\u0027m only curious about the binding collision.",
      "revId": "07a9a492819c6407bd2878b14f5a431b96493ffd",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d535ca4e_6f24abf7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000248
      },
      "writtenOn": "2023-07-21T21:38:55Z",
      "side": 1,
      "message": "Thanks. I\u0027m going to merge and will address this collision issue in a later CL.",
      "parentUuid": "1554fe16_e285aea3",
      "revId": "07a9a492819c6407bd2878b14f5a431b96493ffd",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3c74fd69_76dba5d3",
        "filename": "test/tint/shader_io/fragment_output_index.wgsl.expected.dxc.hlsl",
        "patchSetId": 2
      },
      "lineNbr": 7,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2023-07-21T21:23:31Z",
      "side": 1,
      "message": "So what happens if you have:\n\n```\nstruct FragOutput {\n  @location(0) @index(0) color : vec4\u003cf32\u003e,\n  @location(0) @index(1) blend : vec4\u003cf32\u003e,\n  @location(1)           blah  : vec4\u003cf32\u003e,\n};\n```\n\nIs that legal? If so, is it remapped somehow to avoid collision?",
      "range": {
        "startLine": 6,
        "startChar": 0,
        "endLine": 7,
        "endChar": 28
      },
      "revId": "07a9a492819c6407bd2878b14f5a431b96493ffd",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c834e24a_06a23642",
        "filename": "test/tint/shader_io/fragment_output_index.wgsl.expected.dxc.hlsl",
        "patchSetId": 2
      },
      "lineNbr": 7,
      "author": {
        "id": 1000248
      },
      "writtenOn": "2023-07-21T21:38:55Z",
      "side": 1,
      "message": "That\u0027s a good point - I\u0027m not sure. Disallowing this in validation would be a quick fix, but remapping the @location(1) binding seems like the right way to address this. I\u0027ll start looking into how best to do this.",
      "parentUuid": "3c74fd69_76dba5d3",
      "range": {
        "startLine": 6,
        "startChar": 0,
        "endLine": 7,
        "endChar": 28
      },
      "revId": "07a9a492819c6407bd2878b14f5a431b96493ffd",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "07a9a492819c6407bd2878b14f5a431b96493ffd",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Kokoro",
        "description": {
          "value": "A maximum vote is required for the Kokoro label. A minimum vote is blocking."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Kokoro\u003dMAX AND -label:Kokoro\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "uploader:dawn-autoroll@skia-public.iam.gserviceaccount.com OR uploader:chrome-automated-expectation@chops-service-accounts.iam.gserviceaccount.com"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Kokoro=MAX AND -label:Kokoro=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Kokoro=MAX"],"failingAtoms":["label:Kokoro=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"uploader:dawn-autoroll@skia-public.iam.gserviceaccount.com OR uploader:chrome-automated-expectation@chops-service-accounts.iam.gserviceaccount.com"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["uploader:dawn-autoroll@skia-public.iam.gserviceaccount.com","uploader:chrome-automated-expectation@chops-service-accounts.iam.gserviceaccount.com"]}
      },
      "patchSetCommitId": "07a9a492819c6407bd2878b14f5a431b96493ffd",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "patchSetCommitId": "07a9a492819c6407bd2878b14f5a431b96493ffd",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    }
  ]
}