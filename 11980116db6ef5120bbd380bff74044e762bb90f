{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "eeeda2d8_d4ed499d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2023-05-31T13:31:09Z",
      "side": 1,
      "message": "PTAL",
      "revId": "11980116db6ef5120bbd380bff74044e762bb90f",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8d094733_42e51621",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-05-31T13:32:37Z",
      "side": 1,
      "message": "LGTM",
      "revId": "11980116db6ef5120bbd380bff74044e762bb90f",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9c7a3d31_bc38d758",
        "filename": "src/dawn/tests/end2end/StorageTextureTests.cpp",
        "patchSetId": 1
      },
      "lineNbr": 38,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-05-31T13:32:37Z",
      "side": 1,
      "message": "Could we check for the adapter\u0027s compatibility mode and have list of the storage texture formats for the compatibility mode? +CC Stephen for this.",
      "revId": "11980116db6ef5120bbd380bff74044e762bb90f",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "689cd683_47e73047",
        "filename": "src/dawn/tests/end2end/StorageTextureTests.cpp",
        "patchSetId": 1
      },
      "lineNbr": 38,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2023-06-04T07:40:16Z",
      "side": 1,
      "message": "Probably we could pass the adapter\u0027s compatibility mode to `TextureFormatSupportsStorageTexture` at [1]. Beforehand we need to decide which formats we are going t support texture storage in the compatibility mode.\n```\n if (!utils::TextureFormatSupportsStorageTexture(format, adpaterMode)) {\n            continue;\n }\n```",
      "parentUuid": "9c7a3d31_bc38d758",
      "revId": "11980116db6ef5120bbd380bff74044e762bb90f",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5738a0af_1e666f66",
        "filename": "src/dawn/tests/end2end/StorageTextureTests.cpp",
        "patchSetId": 1
      },
      "lineNbr": 38,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-06-21T15:45:34Z",
      "side": 1,
      "message": "Jie, for now, let\u0027s do what you suggested and pass compatibility mode into utils::TextureFormatSupportsStorageTexture.\n\nWe can expand the list as needed.\n\nit appears only R32* formats are supported.\nThough, in D3D11, it looks like it could be emulated\n\nSee: https://microsoft.github.io/DirectX-Specs/d3d/archive/D3D11_3_FunctionalSpec.htm#5.3.9.5%20Limitations%20on%20Typed%20UAVs",
      "parentUuid": "689cd683_47e73047",
      "revId": "11980116db6ef5120bbd380bff74044e762bb90f",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f8f71444_a4dbe5f5",
        "filename": "src/dawn/tests/end2end/StorageTextureTests.cpp",
        "patchSetId": 1
      },
      "lineNbr": 38,
      "author": {
        "id": 1000024
      },
      "writtenOn": "2023-06-21T21:01:52Z",
      "side": 1,
      "message": "I think those R32* limitations are only for read/write storage textures. Both GLES and D3D11 have similar constraints in that case, and a similar workaround (bind RGBA to R32 and swizzle in the shader).\n\nHowever, WebGPU doesn\u0027t support readwrite storage textures, so the above limitation shouldn\u0027t be a problem. That said, RW storage textures are very interesting for Dawn-native in order to implement extended (Photoshop-style) blend modes, so we should look at a generalized way to expose them that (hopefully) works on Compat as well.",
      "parentUuid": "5738a0af_1e666f66",
      "revId": "11980116db6ef5120bbd380bff74044e762bb90f",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a2947c6a_71254456",
        "filename": "src/dawn/tests/end2end/StorageTextureTests.cpp",
        "patchSetId": 1
      },
      "lineNbr": 38,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2023-06-22T12:51:14Z",
      "side": 1,
      "message": "So let\u0027s only exclude RG32_* formats for compatible mode which are unsupported by GLES. How does that sound?",
      "parentUuid": "f8f71444_a4dbe5f5",
      "revId": "11980116db6ef5120bbd380bff74044e762bb90f",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "be6fadd7_8b737376",
        "filename": "src/dawn/tests/end2end/StorageTextureTests.cpp",
        "patchSetId": 1
      },
      "lineNbr": 38,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-06-22T16:09:17Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "a2947c6a_71254456",
      "revId": "11980116db6ef5120bbd380bff74044e762bb90f",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "60286ea8_13b48b2c",
        "filename": "src/dawn/tests/end2end/StorageTextureTests.cpp",
        "patchSetId": 1
      },
      "lineNbr": 676,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2023-06-04T07:40:16Z",
      "side": 1,
      "message": "[1]",
      "revId": "11980116db6ef5120bbd380bff74044e762bb90f",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "10704a7b_ce147ba4",
        "filename": "src/dawn/tests/end2end/StorageTextureTests.cpp",
        "patchSetId": 1
      },
      "lineNbr": 676,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2023-06-22T12:51:14Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "60286ea8_13b48b2c",
      "revId": "11980116db6ef5120bbd380bff74044e762bb90f",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}