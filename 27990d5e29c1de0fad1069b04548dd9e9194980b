{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "28ac053c_d3d15279",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2021-10-12T13:59:04Z",
      "side": 1,
      "message": "LGTM",
      "revId": "27990d5e29c1de0fad1069b04548dd9e9194980b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8d321d85_4714d5d9",
        "filename": "src/dawn_native/Buffer.cpp",
        "patchSetId": 10
      },
      "lineNbr": 543,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2021-10-27T04:20:52Z",
      "side": 1,
      "message": "do Error buffers still generate errors when you call .unmap() or .destroy() on them? Looking at end2end/BufferTests.cpp, I guess we don\u0027t have tests for this, but I think these methods should produce validation errors if you make an invalid buffer (with mappedAtCreation\u003dtrue), and then call unmap() or destroy() on it.\n\nEdit: nevermind! spec says:\nNote: It is valid to unmap an invalid GPUBuffer that is mapped at creation because the Content timeline might not know it is an error GPUBuffer.\nand I see destroy() was discussed on crbug.com/dawn/1002",
      "revId": "27990d5e29c1de0fad1069b04548dd9e9194980b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "46862ff4_775cd600",
        "filename": "src/tests/unittests/native/DestroyObjectTests.cpp",
        "patchSetId": 10
      },
      "lineNbr": 47,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2021-10-12T13:59:04Z",
      "side": 1,
      "message": "it would be great if we could also test DestroyApiObject while the buffer is in various states: ex.) mapped / mappedAtCreation.",
      "revId": "27990d5e29c1de0fad1069b04548dd9e9194980b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7c8a2c9b_431315e1",
        "filename": "src/tests/unittests/native/DestroyObjectTests.cpp",
        "patchSetId": 10
      },
      "lineNbr": 47,
      "author": {
        "id": 1002831
      },
      "writtenOn": "2021-10-12T16:58:48Z",
      "side": 1,
      "message": "Hmm I tried this just now, but it would require adding some mocking hooks to change the state which is private right now. Not sure how much benefit we will get from doing that for the unit test... Alternatively, maybe we can consider delaying testing these parts for e2e tests that will not need more mocking hooks, WDYT?",
      "parentUuid": "46862ff4_775cd600",
      "revId": "27990d5e29c1de0fad1069b04548dd9e9194980b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "49eee601_c8ae5f04",
        "filename": "src/tests/unittests/native/DestroyObjectTests.cpp",
        "patchSetId": 10
      },
      "lineNbr": 47,
      "author": {
        "id": 1002831
      },
      "writtenOn": "2021-10-26T19:18:56Z",
      "side": 1,
      "message": "Resolving this for now.",
      "parentUuid": "7c8a2c9b_431315e1",
      "revId": "27990d5e29c1de0fad1069b04548dd9e9194980b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2f7e25e9_fe33c5ab",
        "filename": "src/tests/unittests/native/DestroyObjectTests.cpp",
        "patchSetId": 10
      },
      "lineNbr": 124,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2021-10-12T13:59:04Z",
      "side": 1,
      "message": "BindGroup holds a ref to BindGroupLayoutBase, so we should probably also test the case when we call device.DestroyObjects and there are no external BGL references - it\u0027s kept alive only by the bind group\n\nprobably should do this on a previous CL though",
      "range": {
        "startLine": 124,
        "startChar": 8,
        "endLine": 124,
        "endChar": 37
      },
      "revId": "27990d5e29c1de0fad1069b04548dd9e9194980b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "73b33a86_545bf2e4",
        "filename": "src/tests/unittests/native/DestroyObjectTests.cpp",
        "patchSetId": 10
      },
      "lineNbr": 124,
      "author": {
        "id": 1002831
      },
      "writtenOn": "2021-10-12T16:58:48Z",
      "side": 1,
      "message": "Hmm not sure how we can do this in this CL chain yet since we don\u0027t actually pass the BGL to the BindGroups atm. I will keep this in mind though for e2e test when I am adding those.",
      "parentUuid": "2f7e25e9_fe33c5ab",
      "range": {
        "startLine": 124,
        "startChar": 8,
        "endLine": 124,
        "endChar": 37
      },
      "revId": "27990d5e29c1de0fad1069b04548dd9e9194980b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}