{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "0281103c_864eb05d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2023-04-28T08:38:34Z",
      "side": 1,
      "message": "PTAL",
      "revId": "60318a868ddeb2c3390f62dd3a121bfb805ae8e9",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e9adcdb9_1b0f482e",
        "filename": "src/dawn/native/d3d11/BufferD3D11.cpp",
        "patchSetId": 1
      },
      "lineNbr": 475,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2023-04-28T12:04:46Z",
      "side": 1,
      "message": "`Map()` call may block CPU if the last `CopySubresourceRegion()` call is not done with GPU. Maybe creating a new copy size staging buffer every time will be better (especially for huge size constant buffer or multiple writes per frame) until we have some thing like DynamicUploader for D3D11.",
      "range": {
        "startLine": 475,
        "startChar": 43,
        "endLine": 475,
        "endChar": 60
      },
      "revId": "60318a868ddeb2c3390f62dd3a121bfb805ae8e9",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1c93397b_34ced6ab",
        "filename": "src/dawn/native/d3d11/BufferD3D11.cpp",
        "patchSetId": 1
      },
      "lineNbr": 475,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2023-04-28T14:27:27Z",
      "side": 1,
      "message": "Good point.\nAnother idea is to use only one large size staging buffer of \" D3D11_MAP_WRITE_NO_OVERWRITE\" for all copies. How does that sound to you?\n\nhttps://learn.microsoft.com/en-us/windows/win32/direct3d11/how-to--use-dynamic-resources#using-dynamic-buffers",
      "parentUuid": "e9adcdb9_1b0f482e",
      "range": {
        "startLine": 475,
        "startChar": 43,
        "endLine": 475,
        "endChar": 60
      },
      "revId": "60318a868ddeb2c3390f62dd3a121bfb805ae8e9",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b462d7c8_71371a3a",
        "filename": "src/dawn/native/d3d11/BufferD3D11.cpp",
        "patchSetId": 1
      },
      "lineNbr": 475,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2023-04-28T14:38:00Z",
      "side": 1,
      "message": "`D3D11_MAP_WRITE_NO_OVERWRITE` is only valid on vertex and\nindex buffers. I am not sure if it can be used as copy. \n\nhttps://learn.microsoft.com/en-us/windows/win32/api/d3d11/ne-d3d11-d3d11_map",
      "parentUuid": "1c93397b_34ced6ab",
      "range": {
        "startLine": 475,
        "startChar": 43,
        "endLine": 475,
        "endChar": 60
      },
      "revId": "60318a868ddeb2c3390f62dd3a121bfb805ae8e9",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "59987e90_1078e318",
        "filename": "src/dawn/native/d3d11/BufferD3D11.cpp",
        "patchSetId": 1
      },
      "lineNbr": 475,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-04-28T17:30:51Z",
      "side": 1,
      "message": "agreed it will be simpler and non-blocking to make a one-off staging buffer every time. It\u0027ll be local to this function and easy to improve by adding DynamicUploader in the future",
      "parentUuid": "b462d7c8_71371a3a",
      "range": {
        "startLine": 475,
        "startChar": 43,
        "endLine": 475,
        "endChar": 60
      },
      "revId": "60318a868ddeb2c3390f62dd3a121bfb805ae8e9",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}