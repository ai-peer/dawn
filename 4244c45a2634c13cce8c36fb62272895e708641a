{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "b7b0081d_46f29f07",
        "filename": "src/tests/end2end/CopyTests.cpp",
        "patchSetId": 1
      },
      "lineNbr": 850,
      "author": {
        "id": 1000017
      },
      "writtenOn": "2021-06-01T06:13:20Z",
      "side": 1,
      "message": "Per my understanding, if we define rowsPerImage, we should have at least that many rows in buffer (include padding). It is similar to bytesPerRow: if we define bytesPerRow, the buffer\u0027s length should have that many bytes (including padding) if it has only one single row. Although bytesPerRow is more meaningful for a 2D texture whose height \u003e\u003d 2 and rowsPerImage is for a 2DArray or 3D texture whose depthOrArrayLayers \u003e\u003d2, but it still take effect when height is 1 and depthOrArrayLayers is 1 respectively. \n\nIf you set bytesPerRow to 256 with one single row like bufferSpec \u003d MinumumBufferSpec(2, 1), and don\u0027t increase the bufferSize to 256 bytes, I guess it will fail too. I mean, if we set bufferSpec.size \u003d bufferSpec.size * 2 + offset, it will be correct. So, this problem is caused by the test itself. \n\nWDYT?",
      "revId": "4244c45a2634c13cce8c36fb62272895e708641a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}