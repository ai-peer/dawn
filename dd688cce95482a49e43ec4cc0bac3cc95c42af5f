{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "b304ed2b_b8904e85",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 13
      },
      "lineNbr": 0,
      "author": {
        "id": 1002757
      },
      "writtenOn": "2021-09-16T01:55:00Z",
      "side": 1,
      "message": "Please take another look. Note that I have just finished hacking in a hopefully reasonable solution for supporting DII in RenderBundles too. The key problem there is that the same encoded DII command may be used by multiple render passes, so we can\u0027t simply mutate the command at render pass encoding time unless we copy the bundle\u0027s command list.\n\nMy solution to THAT problem here was to introduce a new SetValidationBufferLocationsInternal command. RenderValidationEncoder accumulates the list of all BufferLocations encoded in DII commands for the pass, paired with the actual buffer and offset they should use at execution time. The SetVBLI command actually pushes those concrete buffer+offset values to each BufferLocation, on the queue timeline, just before the render pass is recorded.\n\nIt feels a little sloppy to me especially since the backends all delegate back to the CommandBufferBase to do that trivial work. It\u0027s also not strictly necessary to do this deferred buffer resolution thing for non-bundled DII commands, but I didn\u0027t bother to optimize that (yet). Interested in your thoughts on this approach first.\n\nFinally, the current patchset also tries to address efficiency concerns. See inline comments about how validation passes are divided up now.\n\nThanks!",
      "revId": "dd688cce95482a49e43ec4cc0bac3cc95c42af5f",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}