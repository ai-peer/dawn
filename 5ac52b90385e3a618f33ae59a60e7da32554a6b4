{
  "comments": [
    {
      "key": {
        "uuid": "0cd7b8f0_9d5d141f",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-09-17T18:00:29Z",
      "side": 1,
      "message": "typo: calling",
      "range": {
        "startLine": 9,
        "startChar": 11,
        "endLine": 9,
        "endChar": 18
      },
      "revId": "5ac52b90385e3a618f33ae59a60e7da32554a6b4",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "59f62eb6_885db9bc",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-09-18T14:48:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0cd7b8f0_9d5d141f",
      "range": {
        "startLine": 9,
        "startChar": 11,
        "endLine": 9,
        "endChar": 18
      },
      "revId": "5ac52b90385e3a618f33ae59a60e7da32554a6b4",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2d4f3ecc_ee2604d9",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 22,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-09-17T18:00:29Z",
      "side": 1,
      "message": "dawn:527",
      "range": {
        "startLine": 22,
        "startChar": 5,
        "endLine": 22,
        "endChar": 8
      },
      "revId": "5ac52b90385e3a618f33ae59a60e7da32554a6b4",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "662be852_49cf65a5",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 22,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-09-18T14:48:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2d4f3ecc_ee2604d9",
      "range": {
        "startLine": 22,
        "startChar": 5,
        "endLine": 22,
        "endChar": 8
      },
      "revId": "5ac52b90385e3a618f33ae59a60e7da32554a6b4",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9cfe7d3e_21745ab1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-09-17T13:30:54Z",
      "side": 1,
      "message": "PTAL!",
      "revId": "5ac52b90385e3a618f33ae59a60e7da32554a6b4",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fe7ca2a4_1cc7d5e4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-09-17T18:00:29Z",
      "side": 1,
      "message": "LGTM",
      "revId": "5ac52b90385e3a618f33ae59a60e7da32554a6b4",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "31c75cc9_ce34092b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000024
      },
      "writtenOn": "2020-09-18T14:27:06Z",
      "side": 1,
      "message": "I\u0027ll let Austin verify the actual logic.\n\nLGTM2",
      "revId": "5ac52b90385e3a618f33ae59a60e7da32554a6b4",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cdadbdb3_2d8520ec",
        "filename": "src/dawn_native/PipelineLayout.cpp",
        "patchSetId": 1
      },
      "lineNbr": 155,
      "author": {
        "id": 1000024
      },
      "writtenOn": "2020-09-18T14:27:06Z",
      "side": 1,
      "message": "μNit: \"stage\" -\u003e \"stages\"? Also, sentence ends with a preposition. Prefer \"stages at which we find this binding\".",
      "revId": "5ac52b90385e3a618f33ae59a60e7da32554a6b4",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1950e258_87180414",
        "filename": "src/dawn_native/PipelineLayout.cpp",
        "patchSetId": 1
      },
      "lineNbr": 155,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-09-18T14:48:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cdadbdb3_2d8520ec",
      "revId": "5ac52b90385e3a618f33ae59a60e7da32554a6b4",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4b618e34_5003cdad",
        "filename": "src/dawn_native/PipelineLayout.cpp",
        "patchSetId": 1
      },
      "lineNbr": 204,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-09-17T18:00:29Z",
      "side": 1,
      "message": "nit: this will do double validation - can use GetOrCreatePipelineLayout instead",
      "range": {
        "startLine": 204,
        "startChar": 37,
        "endLine": 204,
        "endChar": 57
      },
      "revId": "5ac52b90385e3a618f33ae59a60e7da32554a6b4",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "42d55297_9a5b13eb",
        "filename": "src/dawn_native/PipelineLayout.cpp",
        "patchSetId": 1
      },
      "lineNbr": 204,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-09-18T14:48:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4b618e34_5003cdad",
      "range": {
        "startLine": 204,
        "startChar": 37,
        "endLine": 204,
        "endChar": 57
      },
      "revId": "5ac52b90385e3a618f33ae59a60e7da32554a6b4",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7110c004_d8389443",
        "filename": "src/dawn_native/PipelineLayout.cpp",
        "patchSetId": 1
      },
      "lineNbr": 216,
      "author": {
        "id": 1000024
      },
      "writtenOn": "2020-09-18T14:27:06Z",
      "side": 1,
      "message": "Nit: this function is fairly long (175 lines). Consider breaking it up.",
      "revId": "5ac52b90385e3a618f33ae59a60e7da32554a6b4",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8405ba1d_af5b5d72",
        "filename": "src/dawn_native/PipelineLayout.cpp",
        "patchSetId": 1
      },
      "lineNbr": 216,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-09-18T14:48:14Z",
      "side": 1,
      "message": "nit: 125 lines but it\u0027s a bit big. I\u0027ll look at splitting it slightly in a followup.",
      "parentUuid": "7110c004_d8389443",
      "revId": "5ac52b90385e3a618f33ae59a60e7da32554a6b4",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "843b5809_df8597e9",
        "filename": "src/tests/unittests/validation/GetBindGroupLayoutValidationTests.cpp",
        "patchSetId": 1
      },
      "lineNbr": 84,
      "author": {
        "id": 1000024
      },
      "writtenOn": "2020-09-18T14:27:06Z",
      "side": 1,
      "message": "μμNit: some comments start with \"Check that\", some do not.",
      "revId": "5ac52b90385e3a618f33ae59a60e7da32554a6b4",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d6d81ba5_39f98eaf",
        "filename": "src/tests/unittests/validation/GetBindGroupLayoutValidationTests.cpp",
        "patchSetId": 1
      },
      "lineNbr": 84,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-09-18T14:48:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "843b5809_df8597e9",
      "revId": "5ac52b90385e3a618f33ae59a60e7da32554a6b4",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1c6a888c_daeda8c3",
        "filename": "src/tests/unittests/validation/GetBindGroupLayoutValidationTests.cpp",
        "patchSetId": 1
      },
      "lineNbr": 544,
      "author": {
        "id": 1000024
      },
      "writtenOn": "2020-09-18T14:27:06Z",
      "side": 1,
      "message": "Out of curiosity (and because inferred BGLs are new to me), is this something that we expect other native wgpu implementations to adhere to? ie., that only one canonical BGL will be created for inferred layouts and they can be compared by pointer?",
      "revId": "5ac52b90385e3a618f33ae59a60e7da32554a6b4",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e9ca96cf_7aafae6a",
        "filename": "src/tests/unittests/validation/GetBindGroupLayoutValidationTests.cpp",
        "patchSetId": 1
      },
      "lineNbr": 544,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-09-18T14:48:14Z",
      "side": 1,
      "message": "This isn\u0027t guaranteed by WebGPU, for example this would break when using dawn_wire because it creates a new BGL object for each call to GetBindGroupLayout (since it has no knowledge of what\u0027s inside them).\n\nTo check for equality the proper way, we\u0027d have to create a pipeline against one layout, a bindgroup against another, and do a draw (validation would fail if they are different). We take advantage of validation tests running only on dawn_native for now to check equality with pointers.",
      "parentUuid": "1c6a888c_daeda8c3",
      "revId": "5ac52b90385e3a618f33ae59a60e7da32554a6b4",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    }
  ]
}