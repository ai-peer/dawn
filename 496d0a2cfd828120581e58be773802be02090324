{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "c3d8257c_90c32ffa",
        "filename": "src/tint/resolver/const_eval_member_access_test.cc",
        "patchSetId": 1
      },
      "lineNbr": 113,
      "author": {
        "id": 1000033
      },
      "writtenOn": "2022-12-22T22:03:58Z",
      "side": 1,
      "message": "nit:slightly risky to always enable this extension.\nIt means we have a coverage hole: we\u0027re not testing that the functionality exists *without* the f16 extension.",
      "revId": "496d0a2cfd828120581e58be773802be02090324",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2a0c586a_e8195034",
        "filename": "src/tint/resolver/const_eval_member_access_test.cc",
        "patchSetId": 1
      },
      "lineNbr": 113,
      "author": {
        "id": 1002361
      },
      "writtenOn": "2022-12-23T17:03:37Z",
      "side": 1,
      "message": "This is true, and it\u0027s not the first place we do this. We could address this in a future CL where we conditionally enable it when testing for F16 only.",
      "parentUuid": "c3d8257c_90c32ffa",
      "revId": "496d0a2cfd828120581e58be773802be02090324",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f8bddfd3_66ed9e20",
        "filename": "src/tint/resolver/const_eval_member_access_test.cc",
        "patchSetId": 1
      },
      "lineNbr": 130,
      "author": {
        "id": 1002361
      },
      "writtenOn": "2022-12-22T16:26:26Z",
      "side": 1,
      "message": "This is what prompted the parent CL, btw. I didn\u0027t like having to write this as:\n\n```\nWrapInFunction(utils::VectorRef\u003cconst ast::Statement*\u003e{std::move(stmts)});\n```",
      "range": {
        "startLine": 130,
        "startChar": 4,
        "endLine": 130,
        "endChar": 37
      },
      "revId": "496d0a2cfd828120581e58be773802be02090324",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "66ce761b_c1f7b488",
        "filename": "src/tint/resolver/const_eval_member_access_test.cc",
        "patchSetId": 1
      },
      "lineNbr": 130,
      "author": {
        "id": 1000033
      },
      "writtenOn": "2022-12-22T22:03:58Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "f8bddfd3_66ed9e20",
      "range": {
        "startLine": 130,
        "startChar": 4,
        "endLine": 130,
        "endChar": 37
      },
      "revId": "496d0a2cfd828120581e58be773802be02090324",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "496d0a2cfd828120581e58be773802be02090324",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Kokoro",
        "description": {
          "value": "A maximum vote is required for the Kokoro label. A minimum vote is blocking."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Kokoro\u003dMAX AND -label:Kokoro\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "uploader:dawn-autoroll@skia-public.iam.gserviceaccount.com"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Kokoro=MAX AND -label:Kokoro=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Kokoro=MAX"],"failingAtoms":["label:Kokoro=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"uploader:dawn-autoroll@skia-public.iam.gserviceaccount.com"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["uploader:dawn-autoroll@skia-public.iam.gserviceaccount.com"]}
      },
      "patchSetCommitId": "496d0a2cfd828120581e58be773802be02090324",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "496d0a2cfd828120581e58be773802be02090324",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    }
  ]
}