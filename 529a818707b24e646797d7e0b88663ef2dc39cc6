{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "9f259531_56a0a673",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2021-03-08T08:33:36Z",
      "side": 1,
      "message": "Double check the failure, it is a mesa driver bug in 19.0.2 but has been fixed in latest mesa(ubuntu 20.04 default driver)\nThe case fails when running without suffix ",
      "revId": "529a818707b24e646797d7e0b88663ef2dc39cc6",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b12ab82a_f37d8059",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2021-03-08T08:42:06Z",
      "side": 1,
      "message": "Double check the failure, it is a mesa driver bug in 19.0.2 but has been fixed in latest mesa(ubuntu 20.04 default driver, verified on local)\nThe case hangs on when running without suffix _e_use_tint_generator(I\u0027m not quite sure the difference). I\u0027m not quite sure whether we should workaround it(since it has been fixed by new mesa). What\u0027s your suggestions?\nAnd PTAL for the CL, thanks!",
      "revId": "529a818707b24e646797d7e0b88663ef2dc39cc6",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dd2b7281_15a301a7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-03-09T17:19:46Z",
      "side": 1,
      "message": "Could you dump the SPIRV ASM for both the tint_generator and non-tint_generator cases and open a Tint bug about it? Then we can discuss whether it\u0027s worth adding a workaround in Tint in a better forum. For this CL we can just add a suppression.",
      "parentUuid": "b12ab82a_f37d8059",
      "revId": "529a818707b24e646797d7e0b88663ef2dc39cc6",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "288851ed_e8429b85",
        "filename": "src/dawn_native/CopyTextureForBrowserHelper.cpp",
        "patchSetId": 6
      },
      "lineNbr": 64,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-03-09T17:19:46Z",
      "side": 1,
      "message": "nit: extra whitespace and we usually keep the fn main on the same line as stage(fragment).",
      "range": {
        "startLine": 64,
        "startChar": 31,
        "endLine": 64,
        "endChar": 32
      },
      "revId": "529a818707b24e646797d7e0b88663ef2dc39cc6",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bf845265_fe170192",
        "filename": "src/dawn_native/CopyTextureForBrowserHelper.cpp",
        "patchSetId": 6
      },
      "lineNbr": 71,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-03-09T17:19:46Z",
      "side": 1,
      "message": "nit: Maybe // Swizzling of texture formats when sampling / rendering is handled by the hardware so we don\u0027t need special logic in this shader. This is covered by a test.",
      "revId": "529a818707b24e646797d7e0b88663ef2dc39cc6",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}