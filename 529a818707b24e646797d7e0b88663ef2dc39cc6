{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "9f259531_56a0a673",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2021-03-08T08:33:36Z",
      "side": 1,
      "message": "Double check the failure, it is a mesa driver bug in 19.0.2 but has been fixed in latest mesa(ubuntu 20.04 default driver)\nThe case fails when running without suffix ",
      "revId": "529a818707b24e646797d7e0b88663ef2dc39cc6",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b12ab82a_f37d8059",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2021-03-08T08:42:06Z",
      "side": 1,
      "message": "Double check the failure, it is a mesa driver bug in 19.0.2 but has been fixed in latest mesa(ubuntu 20.04 default driver, verified on local)\nThe case hangs on when running without suffix _e_use_tint_generator(I\u0027m not quite sure the difference). I\u0027m not quite sure whether we should workaround it(since it has been fixed by new mesa). What\u0027s your suggestions?\nAnd PTAL for the CL, thanks!",
      "revId": "529a818707b24e646797d7e0b88663ef2dc39cc6",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dd2b7281_15a301a7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-03-09T17:19:46Z",
      "side": 1,
      "message": "Could you dump the SPIRV ASM for both the tint_generator and non-tint_generator cases and open a Tint bug about it? Then we can discuss whether it\u0027s worth adding a workaround in Tint in a better forum. For this CL we can just add a suppression.",
      "parentUuid": "b12ab82a_f37d8059",
      "revId": "529a818707b24e646797d7e0b88663ef2dc39cc6",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "53bc9860_34ed551f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2021-03-10T01:19:23Z",
      "side": 1,
      "message": "(Oops, I think I should reply to the failure reason here too).\nI\u0027ve dumped the spirv-asm and do some experiment on different mesa version. I added the analysis result as comments in CL(Could do a bisect for mesa to find the exactly CL fix this issue if you think necessary). The result is:\nNOTE: There is a bug in Mesa before version 19.1.0 which cannot\nhandle variables as index to access vector values correctly. It hangs\nthe execution of shader. Tint generator uses \u0027clamp\u0027 to prevent OOB\naccess for index access and it could workaround this bug too. But\nfor the test cases which doesn\u0027t use tint generator, it won\u0027t\ngenerate OOB guard ops and will hit this bug on bots(which running\nwith Mesa 19.0.2) and causes bots crash. To workaround this crash,\nwe use {vector}.r/g/b/a instead of \u0027loop\u0027 + {vector}[i] to access\nchannels in the test shader.\n\nSo I think tint generator has no need to workaround it. WDYT?",
      "parentUuid": "dd2b7281_15a301a7",
      "revId": "529a818707b24e646797d7e0b88663ef2dc39cc6",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "288851ed_e8429b85",
        "filename": "src/dawn_native/CopyTextureForBrowserHelper.cpp",
        "patchSetId": 6
      },
      "lineNbr": 64,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-03-09T17:19:46Z",
      "side": 1,
      "message": "nit: extra whitespace and we usually keep the fn main on the same line as stage(fragment).",
      "range": {
        "startLine": 64,
        "startChar": 31,
        "endLine": 64,
        "endChar": 32
      },
      "revId": "529a818707b24e646797d7e0b88663ef2dc39cc6",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a13d429b_51b340fe",
        "filename": "src/dawn_native/CopyTextureForBrowserHelper.cpp",
        "patchSetId": 6
      },
      "lineNbr": 64,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2021-03-16T06:00:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "288851ed_e8429b85",
      "range": {
        "startLine": 64,
        "startChar": 31,
        "endLine": 64,
        "endChar": 32
      },
      "revId": "529a818707b24e646797d7e0b88663ef2dc39cc6",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bf845265_fe170192",
        "filename": "src/dawn_native/CopyTextureForBrowserHelper.cpp",
        "patchSetId": 6
      },
      "lineNbr": 71,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-03-09T17:19:46Z",
      "side": 1,
      "message": "nit: Maybe // Swizzling of texture formats when sampling / rendering is handled by the hardware so we don\u0027t need special logic in this shader. This is covered by a test.",
      "revId": "529a818707b24e646797d7e0b88663ef2dc39cc6",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "deb6ef1d_83883ab4",
        "filename": "src/dawn_native/CopyTextureForBrowserHelper.cpp",
        "patchSetId": 6
      },
      "lineNbr": 71,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2021-03-15T05:39:15Z",
      "side": 1,
      "message": "Actually, the refactor test cases with fixed value help me catch this dangerous issue. It turns out that it is not true that we don\u0027t need the swizzle. The previous cases constructor happens construct r channel has the same value as b, so the test case doesn\u0027t catch this.",
      "parentUuid": "bf845265_fe170192",
      "revId": "529a818707b24e646797d7e0b88663ef2dc39cc6",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}