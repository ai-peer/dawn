{
  "comments": [
    {
      "key": {
        "uuid": "0d9d8ee9_f576748c",
        "filename": "src/dawn_wire/client/Client.h",
        "patchSetId": 1
      },
      "lineNbr": 53,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2019-10-15T17:07:22Z",
      "side": 1,
      "message": "The adapterId will be a Chromium-specific id. We don\u0027t need it in the wire.",
      "range": {
        "startLine": 51,
        "startChar": 8,
        "endLine": 53,
        "endChar": 9
      },
      "revId": "8783cc6bfa51ce94b5975aca1e3b8cb9bab34277",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0864fe0c_d6558152",
        "filename": "src/dawn_wire/client/Client.h",
        "patchSetId": 1
      },
      "lineNbr": 53,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2019-10-16T07:32:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0d9d8ee9_f576748c",
      "range": {
        "startLine": 51,
        "startChar": 8,
        "endLine": 53,
        "endChar": 9
      },
      "revId": "8783cc6bfa51ce94b5975aca1e3b8cb9bab34277",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "86440909_58044011",
        "filename": "src/include/dawn_wire/WireServer.h",
        "patchSetId": 1
      },
      "lineNbr": 47,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2019-10-15T17:07:22Z",
      "side": 1,
      "message": "The AdapterProperties are going to be sent out-of-band outside of dawn_wire.\nInstead of sending them from the WireServer and receiving them on the WireClient, I think it would be best to expose:\n\nDAWN_WIRE_EXPORT void dawn_wire::SerializeAdapterProperties(const DawnAdapterProperties*, char* serializeBuffer);\n\nDAWN_WIRE_EXPORT bool dawn_wire::DeserializeAdapterProperties(DawnAdapterProperties*, const char* deserializeBuffer);\n\nThen we hook these functions up to the autogenerated serialization/deserialization functions.\n\nIn Chromium, we\u0027ll call these Serialize/Deserialize functions to directly write/read data from shared memory.",
      "range": {
        "startLine": 46,
        "startChar": 8,
        "endLine": 47,
        "endChar": 83
      },
      "revId": "8783cc6bfa51ce94b5975aca1e3b8cb9bab34277",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "45c3f8eb_2e13a322",
        "filename": "src/include/dawn_wire/WireServer.h",
        "patchSetId": 1
      },
      "lineNbr": 47,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2019-10-16T06:03:31Z",
      "side": 1,
      "message": "The auto-generated deserialization functions all require a WireDeserializeAllocator variable as one of the parameters. According to your comment, dawn_wire::deserializeAdapterProperties() is called outside of WireClient, so could you give any suggestions on how to pass a WireDeserializeAllocator into the function? Shall we export the internal WireDeserializeAllocator of WireClient so that it can be used outside (used by DeserializeAdapterProperties)?",
      "parentUuid": "86440909_58044011",
      "range": {
        "startLine": 46,
        "startChar": 8,
        "endLine": 47,
        "endChar": 83
      },
      "revId": "8783cc6bfa51ce94b5975aca1e3b8cb9bab34277",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "33863c26_4a1ba060",
        "filename": "src/include/dawn_wire/WireServer.h",
        "patchSetId": 1
      },
      "lineNbr": 47,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2019-10-16T07:32:47Z",
      "side": 1,
      "message": "Done\n\nCurrently WireDeserializeAllocator is not used in DeserializeDeviceProperties() so I can just pass into a nullptr without thinking of this issue.",
      "parentUuid": "45c3f8eb_2e13a322",
      "range": {
        "startLine": 46,
        "startChar": 8,
        "endLine": 47,
        "endChar": 83
      },
      "revId": "8783cc6bfa51ce94b5975aca1e3b8cb9bab34277",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f556b3a2_17d366b2",
        "filename": "src/include/dawn_wire/WireServer.h",
        "patchSetId": 1
      },
      "lineNbr": 47,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2019-10-17T00:04:04Z",
      "side": 1,
      "message": "Sounds okay. Eventually we could detect when deserialization doesn\u0027t require the allocator and omit that argument.",
      "parentUuid": "33863c26_4a1ba060",
      "range": {
        "startLine": 46,
        "startChar": 8,
        "endLine": 47,
        "endChar": 83
      },
      "revId": "8783cc6bfa51ce94b5975aca1e3b8cb9bab34277",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4ea7fcf4_be19730a",
        "filename": "src/tests/unittests/wire/WireBasicTests.cpp",
        "patchSetId": 1
      },
      "lineNbr": 89,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2019-10-15T17:07:22Z",
      "side": 1,
      "message": "We can still unittest here by making a local `char buffer[sizeof(DawnAdapterProperties)]` and then serializing/deserializing into it.",
      "revId": "8783cc6bfa51ce94b5975aca1e3b8cb9bab34277",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "807b007e_877e7cce",
        "filename": "src/tests/unittests/wire/WireBasicTests.cpp",
        "patchSetId": 1
      },
      "lineNbr": 89,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2019-10-16T07:32:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4ea7fcf4_be19730a",
      "revId": "8783cc6bfa51ce94b5975aca1e3b8cb9bab34277",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    }
  ]
}