{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "90376c10_b2da6c5b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-01-14T13:04:05Z",
      "side": 1,
      "message": "PTAL!",
      "revId": "83bb4092aaf3b34f470dcba2c9306410db373d61",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "412e2941_5c4c27a0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2021-01-15T17:50:22Z",
      "side": 1,
      "message": "LGTM",
      "revId": "83bb4092aaf3b34f470dcba2c9306410db373d61",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fb66cefc_55afb7df",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2021-01-15T20:00:40Z",
      "side": 1,
      "message": "LGTM",
      "revId": "83bb4092aaf3b34f470dcba2c9306410db373d61",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dbf43082_6419f270",
        "filename": "src/dawn_native/vulkan/TextureVk.cpp",
        "patchSetId": 5
      },
      "lineNbr": 831,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2021-01-15T17:50:22Z",
      "side": 1,
      "message": "It\u0027s... ok. but I still don\u0027t love it. Can\u0027t we add a separate aspect DepthStencil? we would return DepthStencil here if ShouldCombineDepthStencilBarrier()\n\nwe could even name it DepthStencilForMergedBarriers so it\u0027s clear it\u0027s not to be used elsewhere\n\nGetAspectCount would return 1 and GetAspectIndex would return 0",
      "range": {
        "startLine": 822,
        "startChar": 4,
        "endLine": 831,
        "endChar": 5
      },
      "revId": "83bb4092aaf3b34f470dcba2c9306410db373d61",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8f11592d_ccc158e8",
        "filename": "src/dawn_native/vulkan/TextureVk.cpp",
        "patchSetId": 5
      },
      "lineNbr": 831,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-01-18T08:46:06Z",
      "side": 1,
      "message": "That would work, although I have slight concerns that it will be Vulkan-specific logic in the frontend\u0027s Subresource.h common header.\n\nAlternatively, what do you think of adding a static constexpr Aspect kDepthStencilForMergedBarriers \u003d Aspect::Depth; with a reasonably fat comment in TextureVk?",
      "parentUuid": "dbf43082_6419f270",
      "range": {
        "startLine": 822,
        "startChar": 4,
        "endLine": 831,
        "endChar": 5
      },
      "revId": "83bb4092aaf3b34f470dcba2c9306410db373d61",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5003d3b6_f916c376",
        "filename": "src/dawn_native/vulkan/TextureVk.cpp",
        "patchSetId": 5
      },
      "lineNbr": 831,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2021-01-19T18:12:44Z",
      "side": 1,
      "message": "The concern though is that some non-barrier-transitioning code in the Vulkan backend might be written that looks at |mSubresourceLastUsages|. And it gets back an Aspect, iterates on it, and assumes that it\u0027s iterated all the aspects of the subresource. It would look right, but actually be wrong since it only iterated Depth of a combined D/S texture. Having an enum value that\u0027s distinct from Aspect::Depth would make it clear that this is a bug since it would likely be UNREACHABLE() inside a switch statement.",
      "parentUuid": "8f11592d_ccc158e8",
      "range": {
        "startLine": 822,
        "startChar": 4,
        "endLine": 831,
        "endChar": 5
      },
      "revId": "83bb4092aaf3b34f470dcba2c9306410db373d61",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3eec94f6_a621866a",
        "filename": "src/dawn_native/vulkan/TextureVk.cpp",
        "patchSetId": 5
      },
      "lineNbr": 840,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2021-01-15T17:50:22Z",
      "side": 1,
      "message": "nit: Subresource",
      "range": {
        "startLine": 840,
        "startChar": 33,
        "endLine": 840,
        "endChar": 49
      },
      "revId": "83bb4092aaf3b34f470dcba2c9306410db373d61",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b58f3631_cbd5a66d",
        "filename": "src/dawn_native/vulkan/TextureVk.cpp",
        "patchSetId": 5
      },
      "lineNbr": 840,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-01-18T08:43:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3eec94f6_a621866a",
      "range": {
        "startLine": 840,
        "startChar": 33,
        "endLine": 840,
        "endChar": 49
      },
      "revId": "83bb4092aaf3b34f470dcba2c9306410db373d61",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}