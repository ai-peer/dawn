{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "c80bff9e_7f415e7f",
        "filename": "src/tint/program_builder.h",
        "patchSetId": 3
      },
      "lineNbr": 2749,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2023-02-07T16:36:31Z",
      "side": 1,
      "message": "Is the concern here that this is only a source so it ends up in here instead of the next overload?",
      "revId": "e63308f3c90ff78465b76c0cee40e7d728d1c5a9",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1d68d9fe_32f649e8",
        "filename": "src/tint/program_builder.h",
        "patchSetId": 3
      },
      "lineNbr": 2749,
      "author": {
        "id": 1002421
      },
      "writtenOn": "2023-02-07T18:35:19Z",
      "side": 1,
      "message": "Yes, `STATEMENT\u0026\u0026...` has a higher overload precedence than nearly anything. This is required to ensure that other overloads get picked.",
      "parentUuid": "c80bff9e_7f415e7f",
      "revId": "e63308f3c90ff78465b76c0cee40e7d728d1c5a9",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ace79b42_f7413f48",
        "filename": "src/tint/program_builder.h",
        "patchSetId": 3
      },
      "lineNbr": 2760,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2023-02-07T16:36:31Z",
      "side": 1,
      "message": "This doesn\u0027t seem needed because this also takes a source?",
      "revId": "e63308f3c90ff78465b76c0cee40e7d728d1c5a9",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "03e6f7a7_15e9a9ba",
        "filename": "src/tint/program_builder.h",
        "patchSetId": 3
      },
      "lineNbr": 2760,
      "author": {
        "id": 1002421
      },
      "writtenOn": "2023-02-07T18:35:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ace79b42_f7413f48",
      "revId": "e63308f3c90ff78465b76c0cee40e7d728d1c5a9",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "70b1af09_47c2d51c",
        "filename": "src/tint/resolver/attribute_validation_test.cc",
        "patchSetId": 3
      },
      "lineNbr": 1054,
      "author": {
        "id": 1002241
      },
      "writtenOn": "2023-02-07T16:22:33Z",
      "side": 1,
      "message": "Are the attributes in the right place here? The `Block` is being passed inside a `utils::Vector`, so wouldn\u0027t that make it a nested block inside the function body?",
      "revId": "e63308f3c90ff78465b76c0cee40e7d728d1c5a9",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e82bd219_3998a7ab",
        "filename": "src/tint/resolver/attribute_validation_test.cc",
        "patchSetId": 3
      },
      "lineNbr": 1054,
      "author": {
        "id": 1002421
      },
      "writtenOn": "2023-02-07T18:35:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "70b1af09_47c2d51c",
      "revId": "e63308f3c90ff78465b76c0cee40e7d728d1c5a9",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}