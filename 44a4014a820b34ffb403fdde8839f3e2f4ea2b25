{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "89db618b_3be3e19a",
        "filename": "tools/android/webgpu/src/androidTest/assets/compare/green.png",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2024-06-14T12:32:48Z",
      "side": 1,
      "message": "Note we tend to avoid adding binary files to git repos because they never disappear. Is there a way to do without them? Or maybe we could reduce them further? (or we can choose to not do anything as well)",
      "revId": "44a4014a820b34ffb403fdde8839f3e2f4ea2b25",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ad9b2644_d2fe5c02",
        "filename": "tools/android/webgpu/src/androidTest/assets/compare/green.png",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1004846
      },
      "writtenOn": "2024-06-14T14:03:33Z",
      "side": 1,
      "message": "They\u0027re only 2K. It\u0027s hard to think how to avoid reference images altogether.",
      "parentUuid": "89db618b_3be3e19a",
      "revId": "44a4014a820b34ffb403fdde8839f3e2f4ea2b25",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4361b858_989a62e3",
        "filename": "tools/android/webgpu/src/androidTest/assets/compare/green.png",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 3351543
      },
      "writtenOn": "2024-06-14T14:11:37Z",
      "side": 1,
      "message": "I believe that one time that it\u0027s common practice to add image files is when they serve as goldens for test purposes.  Searching in google3/ I find many examples of this (ref: [1]) including Chrome itself storing triangles in images (ref: [2]).\n\n[1] https://source.corp.google.com/search?q\u003df:golden%20f:png%20triangle\u0026sq\u003dpackage:piper%20file:%2F%2Fdepot%2Fgoogle3%20-file:google3%2Fexperimental\n[2] https://source.corp.google.com/piper///depot/google3/testing/screendiffing/js/test/scuba_goldens/chrome-linux/gl-triangle.png?q\u003df:golden%20f:png%20triangle\u0026sq\u003dpackage:piper%20file:%2F%2Fdepot%2Fgoogle3%20-file:google3%2Fexperimental",
      "parentUuid": "89db618b_3be3e19a",
      "revId": "44a4014a820b34ffb403fdde8839f3e2f4ea2b25",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "37a52891_2c2a4ba7",
        "filename": "tools/android/webgpu/src/androidTest/assets/compare/green.png",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2024-06-17T07:57:22Z",
      "side": 1,
      "message": "In Dawn we\u0027ve gotten away with not using a single image for tests, a couple are fine, but a proliferation of them would be very unfortunate. Note that piper (google3) isn\u0027t like Git where all developers have the whole history of the repo, so adding images doesn\u0027t forever increase the size for all devs.",
      "parentUuid": "4361b858_989a62e3",
      "revId": "44a4014a820b34ffb403fdde8839f3e2f4ea2b25",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f20c563e_9907f185",
        "filename": "tools/android/webgpu/src/androidTest/assets/compare/green.png",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 3351543
      },
      "writtenOn": "2024-06-17T09:02:21Z",
      "side": 1,
      "message": "Would a single image be okay?  Jim\u0027s test could be reduced to check exactly one image for exact match.\n\nIf even one binary is one too many in your eyes, we could convert the triangle to a square and then check for a square in the image buffer with kotlin code rather than against an actual image, though I feel like that would be stepping away from the concept of a \"golden\" image test which we\u0027d liked.  But we can do that if you\u0027d prefer -- the motivation for this test is primarily to have something that exercises a live Dawn instance.",
      "parentUuid": "37a52891_2c2a4ba7",
      "revId": "44a4014a820b34ffb403fdde8839f3e2f4ea2b25",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ad08c134_67b5dcc3",
        "filename": "tools/android/webgpu/src/androidTest/assets/compare/green.png",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2024-06-17T09:07:14Z",
      "side": 1,
      "message": "If we just want to test a triangle and don\u0027t think we\u0027re going to add many more rendering tests that are image-based in the future than I think it\u0027s ok to add the images (, if 0.1% sad). On the other hand if we start adding dozens of them because we are building a full test suite, then it would be a problem.",
      "parentUuid": "f20c563e_9907f185",
      "revId": "44a4014a820b34ffb403fdde8839f3e2f4ea2b25",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8ae980d5_83fd9e8a",
        "filename": "tools/android/webgpu/src/androidTest/assets/compare/green.png",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 3351543
      },
      "writtenOn": "2024-06-17T09:30:49Z",
      "side": 1,
      "message": "Would it be madness to depend on files elsewhere in Dawn instead?  Like,:\ndawn/third_party/webgpu-cts/src/resources/four_colors.png \nwould not be hard to recreate in webgpu code.  This one\u0027s not too hard to replicate either:\n/usr/local/google/home/bentonian/Documents/dev/dawn/tools/golang/src/image/png/testdata/pngsuite\n\nAlthough.  At this point, we\u0027re recreating something that\u0027s trivial to check for in software.  We really and don\u0027t need the image at all.  Jim, what would you think of drawing something predictable, then doing the check in memory instead of loading an image?",
      "parentUuid": "ad08c134_67b5dcc3",
      "revId": "44a4014a820b34ffb403fdde8839f3e2f4ea2b25",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "67b456b4_4bacbcc3",
        "filename": "tools/android/webgpu/src/androidTest/assets/compare/green.png",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2024-06-17T10:26:22Z",
      "side": 1,
      "message": "It gets very complicated to depend on other directories like that. Ultimately the Kotlin tests don\u0027t need to check that rendering happens correctly because Dawn has two different test suites that to that extensively already. The testing for Kotlin needs to cover most of the codegen templates / manually written code, not for all of Dawn. So we should have a limited number of targeted tests. (ofc there\u0027s also running the Dawn tests on a variety of devices but that\u0027s orthogonal to Kotlin work).",
      "parentUuid": "8ae980d5_83fd9e8a",
      "revId": "44a4014a820b34ffb403fdde8839f3e2f4ea2b25",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fa57b584_e4fcfc71",
        "filename": "tools/android/webgpu/src/androidTest/java/net/android/dawn/ImageTest.kt",
        "patchSetId": 4
      },
      "lineNbr": 51,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2024-06-14T12:32:48Z",
      "side": 1,
      "message": "Why the `!!`?",
      "range": {
        "startLine": 51,
        "startChar": 40,
        "endLine": 51,
        "endChar": 42
      },
      "revId": "44a4014a820b34ffb403fdde8839f3e2f4ea2b25",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9c7e7abd_f332233b",
        "filename": "tools/android/webgpu/src/androidTest/java/net/android/dawn/ImageTest.kt",
        "patchSetId": 4
      },
      "lineNbr": 51,
      "author": {
        "id": 1004846
      },
      "writtenOn": "2024-06-14T14:03:33Z",
      "side": 1,
      "message": "Checking \u0027device\u0027 wasn\u0027t returned null as per the function contract. I will check it explicitly for clarity.",
      "parentUuid": "fa57b584_e4fcfc71",
      "range": {
        "startLine": 51,
        "startChar": 40,
        "endLine": 51,
        "endChar": 42
      },
      "revId": "44a4014a820b34ffb403fdde8839f3e2f4ea2b25",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "52c6d08d_99f737af",
        "filename": "tools/android/webgpu/src/androidTest/java/net/android/dawn/ImageTest.kt",
        "patchSetId": 4
      },
      "lineNbr": 65,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2024-06-14T12:32:48Z",
      "side": 1,
      "message": "nit: offscreen is a GLism for when rendering to things that aren\u0027t the screen was dark magic. Now that\u0027s where most rendering happen so it can just be texture or testTexture.",
      "range": {
        "startLine": 65,
        "startChar": 16,
        "endLine": 65,
        "endChar": 32
      },
      "revId": "44a4014a820b34ffb403fdde8839f3e2f4ea2b25",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9fa9dd7e_31e46cee",
        "filename": "tools/android/webgpu/src/androidTest/java/net/android/dawn/ImageTest.kt",
        "patchSetId": 4
      },
      "lineNbr": 65,
      "author": {
        "id": 1004846
      },
      "writtenOn": "2024-06-14T14:03:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "52c6d08d_99f737af",
      "range": {
        "startLine": 65,
        "startChar": 16,
        "endLine": 65,
        "endChar": 32
      },
      "revId": "44a4014a820b34ffb403fdde8839f3e2f4ea2b25",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a1b76563_55fa7133",
        "filename": "tools/android/webgpu/src/androidTest/java/net/android/dawn/ImageTest.kt",
        "patchSetId": 4
      },
      "lineNbr": 138,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2024-06-14T12:32:48Z",
      "side": 1,
      "message": "This should be sufficient to free all the GPU resources.",
      "revId": "44a4014a820b34ffb403fdde8839f3e2f4ea2b25",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e4c22f6c_7617eebc",
        "filename": "tools/android/webgpu/src/androidTest/java/net/android/dawn/ImageTest.kt",
        "patchSetId": 4
      },
      "lineNbr": 138,
      "author": {
        "id": 1004846
      },
      "writtenOn": "2024-06-14T14:03:33Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "a1b76563_55fa7133",
      "revId": "44a4014a820b34ffb403fdde8839f3e2f4ea2b25",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}