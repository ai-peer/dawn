{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "a60232f2_8d805a07",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1001591
      },
      "writtenOn": "2021-12-07T23:44:34Z",
      "side": 1,
      "message": "Note that this CL assumes that https://github.com/gpuweb/gpuweb/pull/2393 will land and is the desired behavior.",
      "revId": "f5e2783da1b880496065d7be35e427dfd994c745",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a4a59800_aa243a68",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-12-08T08:35:27Z",
      "side": 1,
      "message": "LGTM with Kai\u0027s comment.",
      "revId": "f5e2783da1b880496065d7be35e427dfd994c745",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1b23170e_ddc0cfdc",
        "filename": "src/dawn_native/CommandBufferStateTracker.cpp",
        "patchSetId": 1
      },
      "lineNbr": 243,
      "author": {
        "id": 1001591
      },
      "writtenOn": "2021-12-08T16:13:54Z",
      "side": 1,
      "message": "[1]",
      "revId": "f5e2783da1b880496065d7be35e427dfd994c745",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0e74d1d2_f8e2efe2",
        "filename": "src/dawn_native/CommandBufferStateTracker.cpp",
        "patchSetId": 1
      },
      "lineNbr": 255,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2021-12-08T00:20:24Z",
      "side": 1,
      "message": "This detailed error message is nice but also makes this draw-time validation 2 checks instead of 1. Maybe the outside if() should change to:\n\n if (IsStripPrimitiveTopology(...) \u0026\u0026 mIndexFormat !\u003d pipelineIndexFormat) {\n\nto avoid that? (And the second DAWN_INVALID_IF would become unconditional:\n\n return DAWN_FORMAT_VALIDATION_ERROR(...);\n\n.)",
      "revId": "f5e2783da1b880496065d7be35e427dfd994c745",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ee82fca8_556463e9",
        "filename": "src/dawn_native/CommandBufferStateTracker.cpp",
        "patchSetId": 1
      },
      "lineNbr": 255,
      "author": {
        "id": 1001591
      },
      "writtenOn": "2021-12-08T16:13:54Z",
      "side": 1,
      "message": "It\u0027s easy to miss on a quick reading, but this branch is actually only executed if a much faster check (See [1]) fails, at which point the method is GOING to fail (See the UNREACHABLE() below this) and any further checks serve only to produce more precise error messages.",
      "parentUuid": "0e74d1d2_f8e2efe2",
      "revId": "f5e2783da1b880496065d7be35e427dfd994c745",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "be786fee_9f2eacdf",
        "filename": "src/dawn_native/CommandBufferStateTracker.cpp",
        "patchSetId": 1
      },
      "lineNbr": 255,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2021-12-08T19:10:52Z",
      "side": 1,
      "message": "Yeah, I noticed it\u0027s conditional on the dirty bit, but that dirty bit probably gets set pretty often (every time you set an index buffer), I don\u0027t know how often a single index buffer can be used for many draw calls.\n\nI might go so far as to say the dirty bits probably shouldn\u0027t be marked as UNLIKELY?",
      "parentUuid": "ee82fca8_556463e9",
      "revId": "f5e2783da1b880496065d7be35e427dfd994c745",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0aa2208b_85f61490",
        "filename": "src/dawn_native/CommandBufferStateTracker.cpp",
        "patchSetId": 1
      },
      "lineNbr": 255,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-12-08T20:54:19Z",
      "side": 1,
      "message": "This code is only to produce a nice error. The actual validation is at [1]. This function would be really cold.",
      "parentUuid": "be786fee_9f2eacdf",
      "revId": "f5e2783da1b880496065d7be35e427dfd994c745",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a17738d6_18991671",
        "filename": "src/dawn_native/CommandBufferStateTracker.cpp",
        "patchSetId": 1
      },
      "lineNbr": 255,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2021-12-09T01:33:20Z",
      "side": 1,
      "message": "Ohh I see. I remember now that we did this split.",
      "parentUuid": "0aa2208b_85f61490",
      "revId": "f5e2783da1b880496065d7be35e427dfd994c745",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fd35a821_6cb38da9",
        "filename": "src/tests/unittests/validation/IndexBufferValidationTests.cpp",
        "patchSetId": 1
      },
      "lineNbr": 202,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2021-12-08T00:20:24Z",
      "side": 1,
      "message": "nit: formats -\u003e format",
      "revId": "f5e2783da1b880496065d7be35e427dfd994c745",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d543519c_8792ea40",
        "filename": "src/tests/unittests/validation/IndexBufferValidationTests.cpp",
        "patchSetId": 1
      },
      "lineNbr": 202,
      "author": {
        "id": 1001591
      },
      "writtenOn": "2021-12-08T16:13:54Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fd35a821_6cb38da9",
      "revId": "f5e2783da1b880496065d7be35e427dfd994c745",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}