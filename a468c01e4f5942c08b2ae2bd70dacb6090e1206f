{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "4db7775c_d732d06f",
        "filename": "src/dawn/dawn.json",
        "patchSetId": 2
      },
      "lineNbr": 598,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2024-05-21T19:07:04Z",
      "side": 1,
      "message": "potentially you could call it \"map async 2 internal only\" so that you can land this and then land subsequent CLs - while we bikeshed what the enum names are supposed to be. That way no one uses the new version yet to avoid deprecating pain",
      "revId": "a468c01e4f5942c08b2ae2bd70dacb6090e1206f",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2a471c65_a1239413",
        "filename": "src/dawn/dawn.json",
        "patchSetId": 2
      },
      "lineNbr": 734,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2024-05-21T19:07:04Z",
      "side": 1,
      "message": "thinking that (2) is just \"error\"\nand (3) is \"aborted\" since abort isn\u0027t _really_ an error\n\nprobably should clarify on webgpu.h issue https://github.com/webgpu-native/webgpu-headers/issues/183 ? potentially we could not have aborted at all, and use Unknown ? not sure.",
      "range": {
        "startLine": 733,
        "startChar": 0,
        "endLine": 734,
        "endChar": 48
      },
      "revId": "a468c01e4f5942c08b2ae2bd70dacb6090e1206f",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aa172724_bcdb2235",
        "filename": "src/dawn/dawn.json",
        "patchSetId": 2
      },
      "lineNbr": 734,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2024-05-22T00:54:45Z",
      "side": 1,
      "message": "`AbortError` is a case in the JS API, so there should be a C equivalent for it (unlike a lot of other things where we only throw one exception type, `DOMException` with type `\"OperationError\"` and some flavor text).\n\nFor the naming, we don\u0027t usually use \"OperationError\" in the C API, though it\u0027s also not usually important to differentiate. We could use OperationError/AbortError to match JS, or \"Error\" and \"Aborted\" since that would be both simpler and a little more precise.",
      "parentUuid": "2a471c65_a1239413",
      "range": {
        "startLine": 733,
        "startChar": 0,
        "endLine": 734,
        "endChar": 48
      },
      "revId": "a468c01e4f5942c08b2ae2bd70dacb6090e1206f",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "022a89a0_73ebf303",
        "filename": "src/dawn/native/Buffer.cpp",
        "patchSetId": 2
      },
      "lineNbr": 215,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2024-05-21T19:07:04Z",
      "side": 1,
      "message": "EnsureComplete could be in the base class",
      "range": {
        "startLine": 215,
        "startChar": 0,
        "endLine": 215,
        "endChar": 81
      },
      "revId": "a468c01e4f5942c08b2ae2bd70dacb6090e1206f",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5038aba2_6505d39f",
        "filename": "src/dawn/native/Buffer.cpp",
        "patchSetId": 2
      },
      "lineNbr": 308,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2024-05-21T19:07:04Z",
      "side": 1,
      "message": "EnsureComplete could be in the base class",
      "revId": "a468c01e4f5942c08b2ae2bd70dacb6090e1206f",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4468f68f_28e9514e",
        "filename": "src/dawn/wire/client/Buffer.cpp",
        "patchSetId": 2
      },
      "lineNbr": 278,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2024-05-21T19:07:04Z",
      "side": 1,
      "message": "I think this would be an Error, not Unknown",
      "revId": "a468c01e4f5942c08b2ae2bd70dacb6090e1206f",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "13883f8f_25976d0e",
        "filename": "src/dawn/wire/client/Buffer.cpp",
        "patchSetId": 2
      },
      "lineNbr": 278,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2024-05-22T01:35:57Z",
      "side": 1,
      "message": "Unknown seems appropriate to me, for wire deserialization errors. These sound like cases that are supposed to never happen in chromium?\n\nAn Error/OperationError I think should map to cases in the JS API where we would throw an OperationError.",
      "parentUuid": "4468f68f_28e9514e",
      "revId": "a468c01e4f5942c08b2ae2bd70dacb6090e1206f",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ccfccce0_da0ee468",
        "filename": "src/dawn/wire/client/Buffer.cpp",
        "patchSetId": 2
      },
      "lineNbr": 289,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2024-05-21T19:07:04Z",
      "side": 1,
      "message": "I think this would be an Error, not Unknown",
      "revId": "a468c01e4f5942c08b2ae2bd70dacb6090e1206f",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7275f247_fc73bb43",
        "filename": "src/dawn/wire/client/Buffer.cpp",
        "patchSetId": 2
      },
      "lineNbr": 313,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2024-05-21T19:07:04Z",
      "side": 1,
      "message": "not sure what this is for: what other statuses?\n\nis it to handle arbitrary data the server sends back?",
      "range": {
        "startLine": 307,
        "startChar": 12,
        "endLine": 313,
        "endChar": 13
      },
      "revId": "a468c01e4f5942c08b2ae2bd70dacb6090e1206f",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}