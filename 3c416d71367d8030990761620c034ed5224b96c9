{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "4f92af8e_9126a6ed",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-10-14T13:38:32Z",
      "side": 1,
      "message": "LGTM overall but I think we need to handle the visibleWidth/Height in ExternalTexture itself.",
      "revId": "3c416d71367d8030990761620c034ed5224b96c9",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "305a3adf_9ccd3dac",
        "filename": "dawn.json",
        "patchSetId": 5
      },
      "lineNbr": 1440,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-10-14T13:38:32Z",
      "side": 1,
      "message": "Shouldn\u0027t the visible width / height be part of the external texture itself? I think that\u0027s a current thing that\u0027s missing and should be added. Otherwise when the WebGPU application samples the external texture, it may see a texture that\u0027s larger than the video due to 8x8 decode blocks for example.",
      "range": {
        "startLine": 1438,
        "startChar": 0,
        "endLine": 1440,
        "endChar": 0
      },
      "revId": "3c416d71367d8030990761620c034ed5224b96c9",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bf5dc2a1_21d19b7a",
        "filename": "dawn.json",
        "patchSetId": 5
      },
      "lineNbr": 1440,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2022-10-17T00:59:44Z",
      "side": 1,
      "message": "Agree, that makes more sense. And I\u0027d like to use a seperate CL to address this and make that ExternalTexture related CL the base of this one.",
      "parentUuid": "305a3adf_9ccd3dac",
      "range": {
        "startLine": 1438,
        "startChar": 0,
        "endLine": 1440,
        "endChar": 0
      },
      "revId": "3c416d71367d8030990761620c034ed5224b96c9",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e2aabcbc_d0c07a4f",
        "filename": "dawn.json",
        "patchSetId": 5
      },
      "lineNbr": 1440,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-10-17T08:26:44Z",
      "side": 1,
      "message": "Ok, but maybe we could remove the visible width/height from this CL. (and add a GetWidth/Height that returns the width/height of the first view in ExternalTexture with a big fat TODO).",
      "parentUuid": "bf5dc2a1_21d19b7a",
      "range": {
        "startLine": 1438,
        "startChar": 0,
        "endLine": 1440,
        "endChar": 0
      },
      "revId": "3c416d71367d8030990761620c034ed5224b96c9",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c55e5e04_e39afcf1",
        "filename": "dawn.json",
        "patchSetId": 5
      },
      "lineNbr": 1440,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2022-10-17T08:51:39Z",
      "side": 1,
      "message": "I make a CL stack for reviewing ðŸ˜Š",
      "parentUuid": "e2aabcbc_d0c07a4f",
      "range": {
        "startLine": 1438,
        "startChar": 0,
        "endLine": 1440,
        "endChar": 0
      },
      "revId": "3c416d71367d8030990761620c034ed5224b96c9",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a7e78818_0737e129",
        "filename": "dawn.json",
        "patchSetId": 5
      },
      "lineNbr": 1440,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2022-10-19T02:20:34Z",
      "side": 1,
      "message": "Marked as resolved.",
      "parentUuid": "c55e5e04_e39afcf1",
      "range": {
        "startLine": 1438,
        "startChar": 0,
        "endLine": 1440,
        "endChar": 0
      },
      "revId": "3c416d71367d8030990761620c034ed5224b96c9",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fa72d87d_ec8cee51",
        "filename": "src/dawn/native/CopyTextureForBrowserHelper.cpp",
        "patchSetId": 5
      },
      "lineNbr": 210,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-10-14T13:38:32Z",
      "side": 1,
      "message": "Instead of duplicating the header / footer, WDYT of having a single shader module with two entrypoints? The only thing that happens before sampling is the clamping of texcoords. So it could be\n\n```\n@fragment copyTexture() {\n  discardIfOutsideOfCopy();\n  \n  var color \u003d textureSampleLevel(...., 0);\n  return transform(color);\n}\n```",
      "revId": "3c416d71367d8030990761620c034ed5224b96c9",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "df533a0f_9f926120",
        "filename": "src/dawn/native/CopyTextureForBrowserHelper.cpp",
        "patchSetId": 5
      },
      "lineNbr": 210,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2022-10-17T00:59:44Z",
      "side": 1,
      "message": "That\u0027s the option I considered. The only concern is about the different binding type (texture2d vs texture_external). If we go in this direction, I think both dummy texture2D and dummy externalTexture are needed to setBindGroup correctly.",
      "parentUuid": "fa72d87d_ec8cee51",
      "revId": "3c416d71367d8030990761620c034ed5224b96c9",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "292be76b_92485c5b",
        "filename": "src/dawn/native/CopyTextureForBrowserHelper.cpp",
        "patchSetId": 5
      },
      "lineNbr": 210,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-10-17T08:26:44Z",
      "side": 1,
      "message": "If it\u0027s two separate entrypoints, as long as bindings aren\u0027t statically used they don\u0027t need to be set in the bindgroup (and in fact GetBindGroupLayout will reflect a BGL without the bindings).",
      "parentUuid": "df533a0f_9f926120",
      "revId": "3c416d71367d8030990761620c034ed5224b96c9",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "13a4cf70_7f3a4ead",
        "filename": "src/dawn/native/CopyTextureForBrowserHelper.cpp",
        "patchSetId": 5
      },
      "lineNbr": 210,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2022-10-17T08:51:39Z",
      "side": 1,
      "message": "Thanks! I\u0027ll have a try.",
      "parentUuid": "292be76b_92485c5b",
      "revId": "3c416d71367d8030990761620c034ed5224b96c9",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6e978897_6cebf943",
        "filename": "src/dawn/native/CopyTextureForBrowserHelper.cpp",
        "patchSetId": 5
      },
      "lineNbr": 210,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2022-10-18T05:32:18Z",
      "side": 1,
      "message": "Upload a new Patch set for a single shader module. PTAL, thanks!",
      "parentUuid": "13a4cf70_7f3a4ead",
      "revId": "3c416d71367d8030990761620c034ed5224b96c9",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "09ea015c_b359193f",
        "filename": "src/dawn/native/CopyTextureForBrowserHelper.cpp",
        "patchSetId": 5
      },
      "lineNbr": 210,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2022-10-19T02:20:34Z",
      "side": 1,
      "message": "Marked as resolved.",
      "parentUuid": "6e978897_6cebf943",
      "revId": "3c416d71367d8030990761620c034ed5224b96c9",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8eee054d_6540402d",
        "filename": "src/dawn/native/CopyTextureForBrowserHelper.cpp",
        "patchSetId": 5
      },
      "lineNbr": 615,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-10-14T13:38:32Z",
      "side": 1,
      "message": "When the visibleHeight/width is moved to external texture creation, this would be updated to ask the ExternalTexture for its width.\n\nAlso IMHO for a single DAWN_INVALID_IF we can move the code in its called.",
      "revId": "3c416d71367d8030990761620c034ed5224b96c9",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b5e5ab50_1c9dc85f",
        "filename": "src/dawn/native/CopyTextureForBrowserHelper.cpp",
        "patchSetId": 5
      },
      "lineNbr": 615,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2022-10-17T08:53:22Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8eee054d_6540402d",
      "revId": "3c416d71367d8030990761620c034ed5224b96c9",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "65825c33_7f6b7cfb",
        "filename": "src/dawn/native/CopyTextureForBrowserHelper.cpp",
        "patchSetId": 5
      },
      "lineNbr": 646,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-10-14T13:38:32Z",
      "side": 1,
      "message": "This is a bit weird, can\u0027t we check that the destination sample count is 1 directly like at [1]? (and this check is redundant since it is done at [1])",
      "revId": "3c416d71367d8030990761620c034ed5224b96c9",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7f068f98_3b3fb010",
        "filename": "src/dawn/native/CopyTextureForBrowserHelper.cpp",
        "patchSetId": 5
      },
      "lineNbr": 646,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2022-10-17T08:53:22Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "65825c33_7f6b7cfb",
      "revId": "3c416d71367d8030990761620c034ed5224b96c9",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9b7526c7_5e1b47d1",
        "filename": "src/dawn/native/CopyTextureForBrowserHelper.cpp",
        "patchSetId": 5
      },
      "lineNbr": 654,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-10-14T13:38:32Z",
      "side": 1,
      "message": "The valid formats are all color formats, so can\u0027t the only aspect used by all? (and we should validate that in common restrictions?)",
      "revId": "3c416d71367d8030990761620c034ed5224b96c9",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "19fae174_87f73a67",
        "filename": "src/dawn/native/CopyTextureForBrowserHelper.cpp",
        "patchSetId": 5
      },
      "lineNbr": 654,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2022-10-17T08:53:22Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9b7526c7_5e1b47d1",
      "revId": "3c416d71367d8030990761620c034ed5224b96c9",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "593f9473_3595fc73",
        "filename": "src/dawn/native/CopyTextureForBrowserHelper.cpp",
        "patchSetId": 5
      },
      "lineNbr": 671,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-10-14T13:38:32Z",
      "side": 1,
      "message": "nit: duplicate chack? The same check is just above.",
      "range": {
        "startLine": 670,
        "startChar": 0,
        "endLine": 671,
        "endChar": 81
      },
      "revId": "3c416d71367d8030990761620c034ed5224b96c9",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a23dc465_cec5ac73",
        "filename": "src/dawn/native/CopyTextureForBrowserHelper.cpp",
        "patchSetId": 5
      },
      "lineNbr": 671,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2022-10-17T08:53:22Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "593f9473_3595fc73",
      "range": {
        "startLine": 670,
        "startChar": 0,
        "endLine": 671,
        "endChar": 81
      },
      "revId": "3c416d71367d8030990761620c034ed5224b96c9",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1b1761a7_1b35cb2c",
        "filename": "src/dawn/native/CopyTextureForBrowserHelper.cpp",
        "patchSetId": 5
      },
      "lineNbr": 685,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-10-14T13:38:32Z",
      "side": 1,
      "message": "[1]",
      "revId": "3c416d71367d8030990761620c034ed5224b96c9",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6263c7eb_63382e88",
        "filename": "src/dawn/native/CopyTextureForBrowserHelper.cpp",
        "patchSetId": 5
      },
      "lineNbr": 685,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2022-10-17T08:53:22Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1b1761a7_1b35cb2c",
      "revId": "3c416d71367d8030990761620c034ed5224b96c9",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4a310e74_b34ae1db",
        "filename": "src/dawn/native/CopyTextureForBrowserHelper.cpp",
        "patchSetId": 5
      },
      "lineNbr": 753,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-10-14T13:38:32Z",
      "side": 1,
      "message": "Unfortunately I think we also need to validate that the textures that compose the external texture can be used in submits. Maybe we could make ValidateCanUseInSubmitNow recursively call the function on the textures that compose the external texture?",
      "revId": "3c416d71367d8030990761620c034ed5224b96c9",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ff280b33_664866a4",
        "filename": "src/dawn/native/CopyTextureForBrowserHelper.cpp",
        "patchSetId": 5
      },
      "lineNbr": 753,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2022-10-17T00:59:44Z",
      "side": 1,
      "message": "Thanks for reminding. I think \"make ValidateCanUseInSubmitNow recursively\" is a good choice.",
      "parentUuid": "4a310e74_b34ae1db",
      "revId": "3c416d71367d8030990761620c034ed5224b96c9",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "10138195_38be83f8",
        "filename": "src/dawn/native/CopyTextureForBrowserHelper.cpp",
        "patchSetId": 5
      },
      "lineNbr": 753,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2022-10-17T08:53:22Z",
      "side": 1,
      "message": "Done in the base CL \"Add visibleRect xxx\"",
      "parentUuid": "ff280b33_664866a4",
      "revId": "3c416d71367d8030990761620c034ed5224b96c9",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "30d70540_5819af9e",
        "filename": "src/dawn/tests/end2end/CopyExternalTextureForBrowserTests.cpp",
        "patchSetId": 5
      },
      "lineNbr": 53,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-10-14T13:38:32Z",
      "side": 1,
      "message": "optional nit: These constants seem to be in a lot of places. Maybe we can have a common place somewhere in src/dawn/tests/ for them? Not sure.",
      "revId": "3c416d71367d8030990761620c034ed5224b96c9",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "649a83dd_08d2e19c",
        "filename": "src/dawn/tests/end2end/CopyExternalTextureForBrowserTests.cpp",
        "patchSetId": 5
      },
      "lineNbr": 53,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2022-10-17T08:53:22Z",
      "side": 1,
      "message": "Put them into WGPUHelper, WDYT?",
      "parentUuid": "30d70540_5819af9e",
      "revId": "3c416d71367d8030990761620c034ed5224b96c9",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b6ad7276_292503f0",
        "filename": "src/dawn/tests/end2end/CopyExternalTextureForBrowserTests.cpp",
        "patchSetId": 5
      },
      "lineNbr": 53,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2022-10-19T02:20:34Z",
      "side": 1,
      "message": "Marked as resolved.",
      "parentUuid": "649a83dd_08d2e19c",
      "revId": "3c416d71367d8030990761620c034ed5224b96c9",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}