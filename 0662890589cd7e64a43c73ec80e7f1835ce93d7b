{
  "comments": [
    {
      "key": {
        "uuid": "421ae3de_59981bbd",
        "filename": "src/dawn_native/BUILD.gn",
        "patchSetId": 5
      },
      "lineNbr": 475,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-04-20T08:40:09Z",
      "side": 1,
      "message": "nit: Can you edit the CMakeLists.txt too?",
      "revId": "0662890589cd7e64a43c73ec80e7f1835ce93d7b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dc0b54b4_5f490058",
        "filename": "src/dawn_native/BUILD.gn",
        "patchSetId": 5
      },
      "lineNbr": 475,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-04-21T01:02:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "421ae3de_59981bbd",
      "revId": "0662890589cd7e64a43c73ec80e7f1835ce93d7b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1aa11836_483e9e24",
        "filename": "src/dawn_native/vulkan/DescriptorSetAllocator.cpp",
        "patchSetId": 5
      },
      "lineNbr": 26,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-04-17T21:49:42Z",
      "side": 1,
      "message": "I\u0027ll probably change this to 512 for now, but may need to tune more in the future. 512 was just as fast, 256 was a little slower.\n\nThe microbenchmarks can be a little noisy, so we can probably revisit when we have more real-world test cases.",
      "range": {
        "startLine": 26,
        "startChar": 55,
        "endLine": 26,
        "endChar": 59
      },
      "revId": "0662890589cd7e64a43c73ec80e7f1835ce93d7b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0b970e83_1df38462",
        "filename": "src/dawn_native/vulkan/DescriptorSetAllocator.cpp",
        "patchSetId": 5
      },
      "lineNbr": 26,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-04-20T08:40:09Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "1aa11836_483e9e24",
      "range": {
        "startLine": 26,
        "startChar": 55,
        "endLine": 26,
        "endChar": 59
      },
      "revId": "0662890589cd7e64a43c73ec80e7f1835ce93d7b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "628d2075_00bb2694",
        "filename": "src/dawn_native/vulkan/DescriptorSetAllocator.cpp",
        "patchSetId": 5
      },
      "lineNbr": 39,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-04-20T08:40:09Z",
      "side": 1,
      "message": "Note at some point we\u0027ll have to handle what happens with empty bind groups, that\u0027s valid in WebGPU but invalid in Vulkan.",
      "revId": "0662890589cd7e64a43c73ec80e7f1835ce93d7b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dbd56c7b_db1a4730",
        "filename": "src/dawn_native/vulkan/DescriptorSetAllocator.cpp",
        "patchSetId": 5
      },
      "lineNbr": 39,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-04-21T01:02:16Z",
      "side": 1,
      "message": "Ack. Added an assert about the descriptor count so we know to fix this.",
      "parentUuid": "628d2075_00bb2694",
      "revId": "0662890589cd7e64a43c73ec80e7f1835ce93d7b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cb6d1d11_7310fe50",
        "filename": "src/dawn_native/vulkan/DescriptorSetAllocator.cpp",
        "patchSetId": 5
      },
      "lineNbr": 42,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2020-04-18T01:38:42Z",
      "side": 1,
      "message": "Why do mMaxSets this way? I\u0027d think that the best performance would be achieved with a fixed mMaxSets (because IIUC it sets the number of allocations in a slab), not a fixed kMaxDescriptorsPerPool.",
      "range": {
        "startLine": 42,
        "startChar": 8,
        "endLine": 42,
        "endChar": 16
      },
      "revId": "0662890589cd7e64a43c73ec80e7f1835ce93d7b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d9648cbf_1a5bdaf1",
        "filename": "src/dawn_native/vulkan/DescriptorSetAllocator.cpp",
        "patchSetId": 5
      },
      "lineNbr": 42,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2020-04-18T01:38:42Z",
      "side": 1,
      "message": "nit: ASSERT \u003e 0",
      "range": {
        "startLine": 42,
        "startChar": 44,
        "endLine": 42,
        "endChar": 64
      },
      "revId": "0662890589cd7e64a43c73ec80e7f1835ce93d7b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c249650c_c5c0a580",
        "filename": "src/dawn_native/vulkan/DescriptorSetAllocator.cpp",
        "patchSetId": 5
      },
      "lineNbr": 42,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-04-20T16:43:30Z",
      "side": 1,
      "message": "Experimentally (at least in simple workloads) it doesn\u0027t seem to matter. Most of our benefit comes from reusing the descriptor sets and not from pool-allocating.\n\nI don\u0027t feel very strongly, but I have a slight preference to keep it this way because it matches what the CPU-side slab allocator does and the D3D12 descriptor allocators. Even if one BGL is bigger, The slabs are fixed-size across all layouts and we suballocate blocks for each bind group out of them. I guess this means that the fragmentation cost is constant regardless of the number of bindings in the layout.",
      "parentUuid": "cb6d1d11_7310fe50",
      "range": {
        "startLine": 42,
        "startChar": 8,
        "endLine": 42,
        "endChar": 16
      },
      "revId": "0662890589cd7e64a43c73ec80e7f1835ce93d7b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d6338f6c_0a37c041",
        "filename": "src/dawn_native/vulkan/DescriptorSetAllocator.cpp",
        "patchSetId": 5
      },
      "lineNbr": 42,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-04-21T01:02:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d9648cbf_1a5bdaf1",
      "range": {
        "startLine": 42,
        "startChar": 44,
        "endLine": 42,
        "endChar": 64
      },
      "revId": "0662890589cd7e64a43c73ec80e7f1835ce93d7b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7e992034_74068d83",
        "filename": "src/dawn_native/vulkan/DescriptorSetAllocator.cpp",
        "patchSetId": 5
      },
      "lineNbr": 51,
      "author": {
        "id": 1000268
      },
      "writtenOn": "2020-04-18T00:31:39Z",
      "side": 1,
      "message": "unit: also suggest checking for leaks via ASSERT(freeSetIndices \u003d\u003d MaxSets).",
      "revId": "0662890589cd7e64a43c73ec80e7f1835ce93d7b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4a722599_bfc946bf",
        "filename": "src/dawn_native/vulkan/DescriptorSetAllocator.cpp",
        "patchSetId": 5
      },
      "lineNbr": 51,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-04-21T01:02:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7e992034_74068d83",
      "revId": "0662890589cd7e64a43c73ec80e7f1835ce93d7b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3f1d0eb9_487c2514",
        "filename": "src/dawn_native/vulkan/DescriptorSetAllocator.cpp",
        "patchSetId": 5
      },
      "lineNbr": 66,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-04-20T08:40:09Z",
      "side": 1,
      "message": "nit: DescriptorPool* ?",
      "revId": "0662890589cd7e64a43c73ec80e7f1835ce93d7b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0ef0eecc_f98c9f84",
        "filename": "src/dawn_native/vulkan/DescriptorSetAllocator.cpp",
        "patchSetId": 5
      },
      "lineNbr": 66,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-04-21T01:02:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3f1d0eb9_487c2514",
      "revId": "0662890589cd7e64a43c73ec80e7f1835ce93d7b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e2122516_2be871fe",
        "filename": "src/dawn_native/vulkan/DescriptorSetAllocator.cpp",
        "patchSetId": 5
      },
      "lineNbr": 81,
      "author": {
        "id": 1000268
      },
      "writtenOn": "2020-04-18T00:31:39Z",
      "side": 1,
      "message": "unit: check allocationInfo is valid to prevent use-after-free.",
      "revId": "0662890589cd7e64a43c73ec80e7f1835ce93d7b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "49aa8963_4bc0755b",
        "filename": "src/dawn_native/vulkan/DescriptorSetAllocator.cpp",
        "patchSetId": 5
      },
      "lineNbr": 81,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-04-21T01:02:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e2122516_2be871fe",
      "revId": "0662890589cd7e64a43c73ec80e7f1835ce93d7b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "887fb6e0_85ff499c",
        "filename": "src/dawn_native/vulkan/DescriptorSetAllocator.cpp",
        "patchSetId": 5
      },
      "lineNbr": 136,
      "author": {
        "id": 1000268
      },
      "writtenOn": "2020-04-18T00:31:39Z",
      "side": 1,
      "message": "nit: isn\u0027t this more simply `return result;`?",
      "revId": "0662890589cd7e64a43c73ec80e7f1835ce93d7b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5bfd0080_d68bc20e",
        "filename": "src/dawn_native/vulkan/DescriptorSetAllocator.cpp",
        "patchSetId": 5
      },
      "lineNbr": 136,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-04-20T16:43:30Z",
      "side": 1,
      "message": "DAWN_TRY also includes a DAWN_UNLIKELY and records the callsite in the error stacktrace which is nice to have.",
      "parentUuid": "887fb6e0_85ff499c",
      "revId": "0662890589cd7e64a43c73ec80e7f1835ce93d7b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9c85b2ee_59cdfdb9",
        "filename": "src/dawn_native/vulkan/DescriptorSetService.h",
        "patchSetId": 5
      },
      "lineNbr": 37,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-04-20T08:40:09Z",
      "side": 1,
      "message": "Maybe this could be done only once per serial, with the serialQueue of poolIndex / setIndex living in DescriptorSetAllocator?",
      "revId": "0662890589cd7e64a43c73ec80e7f1835ce93d7b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a9adac41_74cf022f",
        "filename": "src/dawn_native/vulkan/DescriptorSetService.h",
        "patchSetId": 5
      },
      "lineNbr": 37,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-04-20T16:43:30Z",
      "side": 1,
      "message": "Hm that\u0027s a good idea, and this class would instead hold an unordered set of layouts that need ticking ?",
      "parentUuid": "9c85b2ee_59cdfdb9",
      "revId": "0662890589cd7e64a43c73ec80e7f1835ce93d7b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "55bd39fa_b8f89add",
        "filename": "src/dawn_native/vulkan/DescriptorSetService.h",
        "patchSetId": 5
      },
      "lineNbr": 37,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-04-20T18:30:58Z",
      "side": 1,
      "message": "That, or a SerialQueue of layouts that need ticking but without a layout added more than once per tick.",
      "parentUuid": "a9adac41_74cf022f",
      "revId": "0662890589cd7e64a43c73ec80e7f1835ce93d7b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f1a58d12_abc401f6",
        "filename": "src/dawn_native/vulkan/DescriptorSetService.h",
        "patchSetId": 5
      },
      "lineNbr": 37,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-04-21T01:02:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "55bd39fa_b8f89add",
      "revId": "0662890589cd7e64a43c73ec80e7f1835ce93d7b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    }
  ]
}