{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "a69421b1_0a81bc0b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-07-23T08:38:08Z",
      "side": 1,
      "message": "LGTM",
      "revId": "17ad0f46940046bac246d4cb0fc61ad5e8b2f07b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b6819c1d_e7889b49",
        "filename": "src/dawn_native/d3d12/BufferD3D12.cpp",
        "patchSetId": 2
      },
      "lineNbr": 48,
      "author": {
        "id": 1000030
      },
      "writtenOn": "2021-07-23T17:07:36Z",
      "side": 1,
      "message": "[3]",
      "revId": "17ad0f46940046bac246d4cb0fc61ad5e8b2f07b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e69d0de9_85dea23d",
        "filename": "src/dawn_native/d3d12/BufferD3D12.cpp",
        "patchSetId": 2
      },
      "lineNbr": 48,
      "author": {
        "id": 1000030
      },
      "writtenOn": "2021-07-26T08:43:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b6819c1d_e7889b49",
      "revId": "17ad0f46940046bac246d4cb0fc61ad5e8b2f07b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "745d622b_e9039e1b",
        "filename": "src/dawn_native/d3d12/BufferD3D12.cpp",
        "patchSetId": 2
      },
      "lineNbr": 67,
      "author": {
        "id": 1000030
      },
      "writtenOn": "2021-07-23T17:07:36Z",
      "side": 1,
      "message": "[4]",
      "revId": "17ad0f46940046bac246d4cb0fc61ad5e8b2f07b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c13203e1_5ba8746b",
        "filename": "src/dawn_native/d3d12/BufferD3D12.cpp",
        "patchSetId": 2
      },
      "lineNbr": 67,
      "author": {
        "id": 1000030
      },
      "writtenOn": "2021-07-26T08:43:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "745d622b_e9039e1b",
      "revId": "17ad0f46940046bac246d4cb0fc61ad5e8b2f07b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4f6b4874_e778f3c4",
        "filename": "src/dawn_native/d3d12/BufferD3D12.cpp",
        "patchSetId": 2
      },
      "lineNbr": 225,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-07-23T08:38:08Z",
      "side": 1,
      "message": "[1]",
      "revId": "17ad0f46940046bac246d4cb0fc61ad5e8b2f07b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fbeb56cb_ee210574",
        "filename": "src/dawn_native/d3d12/BufferD3D12.cpp",
        "patchSetId": 2
      },
      "lineNbr": 225,
      "author": {
        "id": 1000030
      },
      "writtenOn": "2021-07-26T08:43:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4f6b4874_e778f3c4",
      "revId": "17ad0f46940046bac246d4cb0fc61ad5e8b2f07b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "46eb625f_5a41051a",
        "filename": "src/dawn_native/d3d12/BufferD3D12.cpp",
        "patchSetId": 2
      },
      "lineNbr": 261,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-07-23T08:38:08Z",
      "side": 1,
      "message": "Can we do this optimization as a separate CL (and better, file an issue to do it post-OT)? It is very similar to the check at [1] and it would be better to have the whole function work in D3D12 terms if we want to go that route.",
      "revId": "17ad0f46940046bac246d4cb0fc61ad5e8b2f07b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1f25d003_2b3c311c",
        "filename": "src/dawn_native/d3d12/BufferD3D12.cpp",
        "patchSetId": 2
      },
      "lineNbr": 261,
      "author": {
        "id": 1000030
      },
      "writtenOn": "2021-07-23T16:09:15Z",
      "side": 1,
      "message": "We can do this in other PR, but we need to keep using CopyDst at [2].",
      "parentUuid": "46eb625f_5a41051a",
      "revId": "17ad0f46940046bac246d4cb0fc61ad5e8b2f07b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "14cb4b86_f3ad1680",
        "filename": "src/dawn_native/d3d12/BufferD3D12.cpp",
        "patchSetId": 2
      },
      "lineNbr": 261,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-07-23T16:39:37Z",
      "side": 1,
      "message": "Why? At worst we get an extra barrier. Does the D3D12 runtime produce an error?",
      "parentUuid": "1f25d003_2b3c311c",
      "revId": "17ad0f46940046bac246d4cb0fc61ad5e8b2f07b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ca72d6ef_2f72bcfe",
        "filename": "src/dawn_native/d3d12/BufferD3D12.cpp",
        "patchSetId": 2
      },
      "lineNbr": 261,
      "author": {
        "id": 1000030
      },
      "writtenOn": "2021-07-23T17:07:36Z",
      "side": 1,
      "message": "Oh, I forgot to say that D3D validation layer requires the before and after states must be same. In resolveQuerySet, we did two state transitions, one transition usage is CopyDst when initializing/clearing the buffer, another is QueryResolve when resolving query set. we need insert a transition barrier between them, but CopyDst and QueryResolve return same resource state at [3] and [4],",
      "parentUuid": "14cb4b86_f3ad1680",
      "revId": "17ad0f46940046bac246d4cb0fc61ad5e8b2f07b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "41efd259_29cd8f53",
        "filename": "src/dawn_native/d3d12/BufferD3D12.cpp",
        "patchSetId": 2
      },
      "lineNbr": 261,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-07-23T17:13:10Z",
      "side": 1,
      "message": "I assume you mean D3D12 requires the states to be \"different\". Can you add a TODO assigned to a new issue that\u0027s Type-Enhancement-Optimization about using D3D12 state instead of WebGPU usages to manage the tracking of barrier state?",
      "parentUuid": "ca72d6ef_2f72bcfe",
      "revId": "17ad0f46940046bac246d4cb0fc61ad5e8b2f07b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4a78749a_c09a2140",
        "filename": "src/dawn_native/d3d12/BufferD3D12.cpp",
        "patchSetId": 2
      },
      "lineNbr": 261,
      "author": {
        "id": 1000030
      },
      "writtenOn": "2021-07-26T08:43:20Z",
      "side": 1,
      "message": "Sorry, I typed wrongly. Yes, D3D validation layer requires the before and after states must be different. New issue for this: https://bugs.chromium.org/p/dawn/issues/detail?id\u003d1024",
      "parentUuid": "41efd259_29cd8f53",
      "revId": "17ad0f46940046bac246d4cb0fc61ad5e8b2f07b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "daf3dad6_3ccbe9d7",
        "filename": "src/dawn_native/d3d12/CommandBufferD3D12.cpp",
        "patchSetId": 2
      },
      "lineNbr": 918,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-07-23T08:38:08Z",
      "side": 1,
      "message": "Why do we need this check? It seems it will skip zero-initialization. (same question for Vulkan actually). I think it should just be\n\n if (hasUnavailableQueries \u0026\u0026 destination-\u003eIsDataInitialized()) {\n   ClearBuffer\n } else {\n   EnsureDataINitializedAsDestination.\n }",
      "range": {
        "startLine": 916,
        "startChar": 57,
        "endLine": 918,
        "endChar": 87
      },
      "revId": "17ad0f46940046bac246d4cb0fc61ad5e8b2f07b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8c5f59d5_8b9834eb",
        "filename": "src/dawn_native/d3d12/CommandBufferD3D12.cpp",
        "patchSetId": 2
      },
      "lineNbr": 918,
      "author": {
        "id": 1000030
      },
      "writtenOn": "2021-07-23T16:09:15Z",
      "side": 1,
      "message": "In EnsureDataINitializedAsDestination, it does not clear the buffer to zero when the buffer is fully written, this is no problem for queries that are all available, but it does not work for unavailable queries. This check is to make sure we also can clear the buffer when there are unavailbe queries and the buffer is not initialized but fully written.\nBut I find there is indeed a bug here. We need to set the buffer to be initialized in ClearBufferToZero, to prevent it from entering the else branch which will clear the whole buffer to zero if the buffer is not full written next time.\n\nThe zero-initialization will be called when there is no unavailable queries for resolving or there is unavailable queries but it\u0027s not initialized and not full buffer written.",
      "parentUuid": "daf3dad6_3ccbe9d7",
      "range": {
        "startLine": 916,
        "startChar": 57,
        "endLine": 918,
        "endChar": 87
      },
      "revId": "17ad0f46940046bac246d4cb0fc61ad5e8b2f07b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a398b40d_c350eba3",
        "filename": "src/dawn_native/d3d12/CommandBufferD3D12.cpp",
        "patchSetId": 2
      },
      "lineNbr": 918,
      "author": {
        "id": 1000030
      },
      "writtenOn": "2021-07-23T16:32:13Z",
      "side": 1,
      "message": "How about change the logic to the following to make it simpler? But it will clear the buffer twice at the first time if there are unavailable queries.\n\nEnsureDataINitializedAsDestination\nif (hasUnavailableQueries) {\n   ClearBuffer\n}",
      "parentUuid": "8c5f59d5_8b9834eb",
      "range": {
        "startLine": 916,
        "startChar": 57,
        "endLine": 918,
        "endChar": 87
      },
      "revId": "17ad0f46940046bac246d4cb0fc61ad5e8b2f07b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "abd1ef57_ac489020",
        "filename": "src/dawn_native/d3d12/CommandBufferD3D12.cpp",
        "patchSetId": 2
      },
      "lineNbr": 918,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-07-23T16:39:37Z",
      "side": 1,
      "message": "Sounds good. I don\u0027t think the double clear is too bad.",
      "parentUuid": "a398b40d_c350eba3",
      "range": {
        "startLine": 916,
        "startChar": 57,
        "endLine": 918,
        "endChar": 87
      },
      "revId": "17ad0f46940046bac246d4cb0fc61ad5e8b2f07b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "abe43008_1edf78aa",
        "filename": "src/dawn_native/d3d12/CommandBufferD3D12.cpp",
        "patchSetId": 2
      },
      "lineNbr": 918,
      "author": {
        "id": 1000030
      },
      "writtenOn": "2021-07-26T08:43:20Z",
      "side": 1,
      "message": "Update Vulkan backend in another PR: https://dawn-review.googlesource.com/c/dawn/+/59680",
      "parentUuid": "abd1ef57_ac489020",
      "range": {
        "startLine": 916,
        "startChar": 57,
        "endLine": 918,
        "endChar": 87
      },
      "revId": "17ad0f46940046bac246d4cb0fc61ad5e8b2f07b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "31ec6d1d_2e1bca19",
        "filename": "src/dawn_native/d3d12/CommandBufferD3D12.cpp",
        "patchSetId": 2
      },
      "lineNbr": 927,
      "author": {
        "id": 1000030
      },
      "writtenOn": "2021-07-23T16:09:15Z",
      "side": 1,
      "message": "[2]",
      "range": {
        "startLine": 927,
        "startChar": 79,
        "endLine": 927,
        "endChar": 91
      },
      "revId": "17ad0f46940046bac246d4cb0fc61ad5e8b2f07b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6612d620_e3abc34d",
        "filename": "src/dawn_native/d3d12/CommandBufferD3D12.cpp",
        "patchSetId": 2
      },
      "lineNbr": 927,
      "author": {
        "id": 1000030
      },
      "writtenOn": "2021-07-26T08:43:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "31ec6d1d_2e1bca19",
      "range": {
        "startLine": 927,
        "startChar": 79,
        "endLine": 927,
        "endChar": 91
      },
      "revId": "17ad0f46940046bac246d4cb0fc61ad5e8b2f07b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}