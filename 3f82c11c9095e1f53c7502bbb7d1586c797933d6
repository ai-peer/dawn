{
  "comments": [
    {
      "key": {
        "uuid": "9b01cf8d_887398fe",
        "filename": "src/dawn_native/ResourceHeap.h",
        "patchSetId": 5
      },
      "lineNbr": 25,
      "author": {
        "id": 1000262
      },
      "writtenOn": "2019-08-08T19:49:36Z",
      "side": 1,
      "message": "Nit: Nobody should be making objects of type ResourceHeapBase directly. Hence, this constructor should be protected.",
      "range": {
        "startLine": 25,
        "startChar": 8,
        "endLine": 25,
        "endChar": 37
      },
      "revId": "3f82c11c9095e1f53c7502bbb7d1586c797933d6",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "93f1adb1_be6f5bc8",
        "filename": "src/dawn_native/ResourceHeap.h",
        "patchSetId": 5
      },
      "lineNbr": 25,
      "author": {
        "id": 1000268
      },
      "writtenOn": "2019-08-13T17:23:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9b01cf8d_887398fe",
      "range": {
        "startLine": 25,
        "startChar": 8,
        "endLine": 25,
        "endChar": 37
      },
      "revId": "3f82c11c9095e1f53c7502bbb7d1586c797933d6",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "daab926d_19c920aa",
        "filename": "src/dawn_native/ResourceMemoryAllocation.h",
        "patchSetId": 5
      },
      "lineNbr": 31,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2019-08-13T01:06:20Z",
      "side": 1,
      "message": "nit: if it would make sense, you could refactor this into an enum class AllocationMethod { kDirect, kSuballocated }, or something like that, which would remove the need for /* isDirect */ elsewhere.",
      "range": {
        "startLine": 31,
        "startChar": 33,
        "endLine": 31,
        "endChar": 54
      },
      "revId": "3f82c11c9095e1f53c7502bbb7d1586c797933d6",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e2512577_22d83505",
        "filename": "src/dawn_native/ResourceMemoryAllocation.h",
        "patchSetId": 5
      },
      "lineNbr": 31,
      "author": {
        "id": 1000268
      },
      "writtenOn": "2019-08-13T17:23:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "daab926d_19c920aa",
      "range": {
        "startLine": 31,
        "startChar": 33,
        "endLine": 31,
        "endChar": 54
      },
      "revId": "3f82c11c9095e1f53c7502bbb7d1586c797933d6",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "05b7a969_e9549d3f",
        "filename": "src/dawn_native/d3d12/DeviceD3D12.cpp",
        "patchSetId": 5
      },
      "lineNbr": 124,
      "author": {
        "id": 1000262
      },
      "writtenOn": "2019-08-08T19:49:36Z",
      "side": 1,
      "message": "Can we assert mUsedComObjectRefs.Empty() after the ClearUpTo call?",
      "range": {
        "startLine": 124,
        "startChar": 8,
        "endLine": 124,
        "endChar": 55
      },
      "revId": "3f82c11c9095e1f53c7502bbb7d1586c797933d6",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c91c427a_f22936f9",
        "filename": "src/dawn_native/d3d12/DeviceD3D12.cpp",
        "patchSetId": 5
      },
      "lineNbr": 124,
      "author": {
        "id": 1000268
      },
      "writtenOn": "2019-08-13T17:23:49Z",
      "side": 1,
      "message": "Per the comment below, we cannot assert.",
      "parentUuid": "05b7a969_e9549d3f",
      "range": {
        "startLine": 124,
        "startChar": 8,
        "endLine": 124,
        "endChar": 55
      },
      "revId": "3f82c11c9095e1f53c7502bbb7d1586c797933d6",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "efe7f6a2_38f20b0b",
        "filename": "src/dawn_native/d3d12/DeviceD3D12.cpp",
        "patchSetId": 5
      },
      "lineNbr": 126,
      "author": {
        "id": 1000262
      },
      "writtenOn": "2019-08-08T19:49:36Z",
      "side": 1,
      "message": "Nit: \"could of enqueued\" ---\u003e \"could have enqueued\".",
      "range": {
        "startLine": 126,
        "startChar": 70,
        "endLine": 126,
        "endChar": 87
      },
      "revId": "3f82c11c9095e1f53c7502bbb7d1586c797933d6",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d38962f0_dc3de760",
        "filename": "src/dawn_native/d3d12/DeviceD3D12.cpp",
        "patchSetId": 5
      },
      "lineNbr": 126,
      "author": {
        "id": 1000268
      },
      "writtenOn": "2019-08-13T17:23:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "efe7f6a2_38f20b0b",
      "range": {
        "startLine": 126,
        "startChar": 70,
        "endLine": 126,
        "endChar": 87
      },
      "revId": "3f82c11c9095e1f53c7502bbb7d1586c797933d6",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2b8a3edc_2247ce9c",
        "filename": "src/dawn_native/d3d12/DeviceD3D12.cpp",
        "patchSetId": 5
      },
      "lineNbr": 333,
      "author": {
        "id": 1000262
      },
      "writtenOn": "2019-08-08T19:49:36Z",
      "side": 1,
      "message": "Nit: You can assign the allocator variable directly in line 337.",
      "range": {
        "startLine": 333,
        "startChar": 8,
        "endLine": 333,
        "endChar": 56
      },
      "revId": "3f82c11c9095e1f53c7502bbb7d1586c797933d6",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bc37679b_6894774d",
        "filename": "src/dawn_native/d3d12/DeviceD3D12.cpp",
        "patchSetId": 5
      },
      "lineNbr": 333,
      "author": {
        "id": 1000268
      },
      "writtenOn": "2019-08-13T17:23:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2b8a3edc_2247ce9c",
      "range": {
        "startLine": 333,
        "startChar": 8,
        "endLine": 333,
        "endChar": 56
      },
      "revId": "3f82c11c9095e1f53c7502bbb7d1586c797933d6",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "45a81a65_cbf31b1a",
        "filename": "src/dawn_native/d3d12/DeviceD3D12.cpp",
        "patchSetId": 5
      },
      "lineNbr": 336,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2019-08-12T23:54:02Z",
      "side": 1,
      "message": "Shouldn\u0027t this be heapType \u003c kMaxHeapTypes?",
      "revId": "3f82c11c9095e1f53c7502bbb7d1586c797933d6",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "317a7c9f_6aa4d60b",
        "filename": "src/dawn_native/d3d12/DeviceD3D12.cpp",
        "patchSetId": 5
      },
      "lineNbr": 336,
      "author": {
        "id": 1000268
      },
      "writtenOn": "2019-08-13T17:23:49Z",
      "side": 1,
      "message": "See other comment.",
      "parentUuid": "45a81a65_cbf31b1a",
      "revId": "3f82c11c9095e1f53c7502bbb7d1586c797933d6",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "257dced5_22f29294",
        "filename": "src/dawn_native/d3d12/DeviceD3D12.cpp",
        "patchSetId": 5
      },
      "lineNbr": 346,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2019-08-12T23:54:02Z",
      "side": 1,
      "message": "same",
      "revId": "3f82c11c9095e1f53c7502bbb7d1586c797933d6",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3cf66925_4d72a07b",
        "filename": "src/dawn_native/d3d12/DeviceD3D12.cpp",
        "patchSetId": 5
      },
      "lineNbr": 346,
      "author": {
        "id": 1000268
      },
      "writtenOn": "2019-08-13T17:23:49Z",
      "side": 1,
      "message": "See other comment.",
      "parentUuid": "257dced5_22f29294",
      "revId": "3f82c11c9095e1f53c7502bbb7d1586c797933d6",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b2c88e5e_3040e58c",
        "filename": "src/dawn_native/d3d12/DeviceD3D12.cpp",
        "patchSetId": 5
      },
      "lineNbr": 349,
      "author": {
        "id": 1000262
      },
      "writtenOn": "2019-08-08T19:49:36Z",
      "side": 1,
      "message": "I believe that the first enum value in D3D12_HEAP_TYPE is 0.  If so, won\u0027t we underflow here?",
      "range": {
        "startLine": 349,
        "startChar": 74,
        "endLine": 349,
        "endChar": 86
      },
      "revId": "3f82c11c9095e1f53c7502bbb7d1586c797933d6",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a6ada4c6_6136c2e7",
        "filename": "src/dawn_native/d3d12/DeviceD3D12.cpp",
        "patchSetId": 5
      },
      "lineNbr": 349,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2019-08-12T23:54:02Z",
      "side": 1,
      "message": "Agreed. If we\u0027re wrong and there\u0027s a reason for this, document it by making a well-named temporary variable for \"heapType - 1\" and use it in all 3 places here and 1 above.",
      "parentUuid": "b2c88e5e_3040e58c",
      "range": {
        "startLine": 349,
        "startChar": 74,
        "endLine": 349,
        "endChar": 86
      },
      "revId": "3f82c11c9095e1f53c7502bbb7d1586c797933d6",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6dae6588_e2b91018",
        "filename": "src/dawn_native/d3d12/DeviceD3D12.cpp",
        "patchSetId": 5
      },
      "lineNbr": 349,
      "author": {
        "id": 1000268
      },
      "writtenOn": "2019-08-13T17:23:49Z",
      "side": 1,
      "message": "Is my D3D12.h outdated (10.0.17134.0)? It shows D3D12_HEAP_TYPE_DEFAULT(1).",
      "parentUuid": "b2c88e5e_3040e58c",
      "range": {
        "startLine": 349,
        "startChar": 74,
        "endLine": 349,
        "endChar": 86
      },
      "revId": "3f82c11c9095e1f53c7502bbb7d1586c797933d6",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b27a89c7_bf0a396f",
        "filename": "src/dawn_native/d3d12/DeviceD3D12.cpp",
        "patchSetId": 5
      },
      "lineNbr": 349,
      "author": {
        "id": 1000262
      },
      "writtenOn": "2019-08-13T18:07:16Z",
      "side": 1,
      "message": "You are correct Bryan! That\u0027s what I get for using MSDN as my reference instead of the header file. :-)\n\nInstead of subtracting 1 in multiple places, please create a helper function called something like D3D12HeapTypeToIndex that subtracts 1 and has a comment explaining the rationale for the formula.",
      "parentUuid": "6dae6588_e2b91018",
      "range": {
        "startLine": 349,
        "startChar": 74,
        "endLine": 349,
        "endChar": 86
      },
      "revId": "3f82c11c9095e1f53c7502bbb7d1586c797933d6",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "38f7787d_e0c7de4b",
        "filename": "src/dawn_native/d3d12/DeviceD3D12.cpp",
        "patchSetId": 5
      },
      "lineNbr": 349,
      "author": {
        "id": 1000268
      },
      "writtenOn": "2019-08-19T19:08:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b27a89c7_bf0a396f",
      "range": {
        "startLine": 349,
        "startChar": 74,
        "endLine": 349,
        "endChar": 86
      },
      "revId": "3f82c11c9095e1f53c7502bbb7d1586c797933d6",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ffb47a5b_0ffe74a0",
        "filename": "src/dawn_native/d3d12/DeviceD3D12.h",
        "patchSetId": 5
      },
      "lineNbr": 140,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2019-08-12T23:54:02Z",
      "side": 1,
      "message": "nit: \"kNumHeapTypes\" for clarity, since the heap types are 0,1,2,3 (of which the \"max\" is 3, not 4).",
      "range": {
        "startLine": 140,
        "startChar": 34,
        "endLine": 140,
        "endChar": 47
      },
      "revId": "3f82c11c9095e1f53c7502bbb7d1586c797933d6",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a3eecaff_80a8f17d",
        "filename": "src/dawn_native/d3d12/DeviceD3D12.h",
        "patchSetId": 5
      },
      "lineNbr": 140,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2019-08-12T23:54:02Z",
      "side": 1,
      "message": "It would still make sense to add the static_asserts cwallez suggested, probably here.\n\n static_assert(D3D12_HEAP_TYPE_READBACK \u003c kMaxHeapTypes);\n static_assert(D3D12_HEAP_TYPE_UPLOAD \u003c kMaxHeapTypes);\n static_assert(D3D12_HEAP_TYPE_DEFAULT \u003c kMaxHeapTypes);\n static_assert(D3D12_HEAP_TYPE_CUSTOM \u003c kMaxHeapTypes);",
      "revId": "3f82c11c9095e1f53c7502bbb7d1586c797933d6",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7f594271_8c7b10e6",
        "filename": "src/dawn_native/d3d12/DeviceD3D12.h",
        "patchSetId": 5
      },
      "lineNbr": 140,
      "author": {
        "id": 1000268
      },
      "writtenOn": "2019-08-13T17:23:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ffb47a5b_0ffe74a0",
      "range": {
        "startLine": 140,
        "startChar": 34,
        "endLine": 140,
        "endChar": 47
      },
      "revId": "3f82c11c9095e1f53c7502bbb7d1586c797933d6",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8496fb77_21719352",
        "filename": "src/dawn_native/d3d12/DeviceD3D12.h",
        "patchSetId": 5
      },
      "lineNbr": 140,
      "author": {
        "id": 1000268
      },
      "writtenOn": "2019-08-13T17:23:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a3eecaff_80a8f17d",
      "revId": "3f82c11c9095e1f53c7502bbb7d1586c797933d6",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2957ca69_300bb281",
        "filename": "src/dawn_native/d3d12/ResourceAllocatorD3D12.cpp",
        "patchSetId": 5
      },
      "lineNbr": 40,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2019-08-13T01:06:20Z",
      "side": 1,
      "message": "optional: can just be TODO(crbug.com/dawn/153); no need to link it to yourself unless you want to",
      "range": {
        "startLine": 40,
        "startChar": 20,
        "endLine": 40,
        "endChar": 44
      },
      "revId": "3f82c11c9095e1f53c7502bbb7d1586c797933d6",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a01a444b_31f2376f",
        "filename": "src/dawn_native/d3d12/ResourceAllocatorD3D12.cpp",
        "patchSetId": 5
      },
      "lineNbr": 40,
      "author": {
        "id": 1000268
      },
      "writtenOn": "2019-08-13T17:23:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2957ca69_300bb281",
      "range": {
        "startLine": 40,
        "startChar": 20,
        "endLine": 40,
        "endChar": 44
      },
      "revId": "3f82c11c9095e1f53c7502bbb7d1586c797933d6",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "daa0e432_a808ec29",
        "filename": "src/dawn_native/d3d12/ResourceAllocatorD3D12.h",
        "patchSetId": 5
      },
      "lineNbr": 29,
      "author": {
        "id": 1000262
      },
      "writtenOn": "2019-08-08T19:49:36Z",
      "side": 1,
      "message": "Nit: Please have the name of the file match the name of the class.",
      "range": {
        "startLine": 29,
        "startChar": 10,
        "endLine": 29,
        "endChar": 36
      },
      "revId": "3f82c11c9095e1f53c7502bbb7d1586c797933d6",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2c78f7b6_ffcb990b",
        "filename": "src/dawn_native/d3d12/ResourceAllocatorD3D12.h",
        "patchSetId": 5
      },
      "lineNbr": 29,
      "author": {
        "id": 1000268
      },
      "writtenOn": "2019-08-13T17:23:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "daa0e432_a808ec29",
      "range": {
        "startLine": 29,
        "startChar": 10,
        "endLine": 29,
        "endChar": 36
      },
      "revId": "3f82c11c9095e1f53c7502bbb7d1586c797933d6",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    }
  ]
}