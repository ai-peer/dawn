{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "85530f6c_2b56cc8b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1000685
      },
      "writtenOn": "2022-06-03T20:30:26Z",
      "side": 1,
      "message": "Addressing review comments at https://dawn-review.googlesource.com/c/dawn/+/91180/24#message-a30d4e609c92d583d5a276e90f8822fa787a0ad9",
      "revId": "9ede42458f64becf367a1bb19df93d54757417cf",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f24136db_a4f7a04a",
        "filename": "src/dawn/native/Blob.h",
        "patchSetId": 6
      },
      "lineNbr": 21,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2022-06-03T21:11:42Z",
      "side": 1,
      "message": "nit: no longer needed",
      "range": {
        "startLine": 21,
        "startChar": 0,
        "endLine": 21,
        "endChar": 33
      },
      "revId": "9ede42458f64becf367a1bb19df93d54757417cf",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "32a652f8_94151b66",
        "filename": "src/dawn/native/Blob.h",
        "patchSetId": 6
      },
      "lineNbr": 21,
      "author": {
        "id": 1000685
      },
      "writtenOn": "2022-06-03T21:52:02Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f24136db_a4f7a04a",
      "range": {
        "startLine": 21,
        "startChar": 0,
        "endLine": 21,
        "endChar": 33
      },
      "revId": "9ede42458f64becf367a1bb19df93d54757417cf",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "959968ad_70eaebf5",
        "filename": "src/dawn/native/Blob.h",
        "patchSetId": 6
      },
      "lineNbr": 39,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2022-06-03T21:11:42Z",
      "side": 1,
      "message": "are you sure we need this \"::\"? IIRC, you had `class` in a previous CL, but this one has `struct`",
      "range": {
        "startLine": 39,
        "startChar": 46,
        "endLine": 39,
        "endChar": 48
      },
      "revId": "9ede42458f64becf367a1bb19df93d54757417cf",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c8d97df3_39f80498",
        "filename": "src/dawn/native/Blob.h",
        "patchSetId": 6
      },
      "lineNbr": 39,
      "author": {
        "id": 1000685
      },
      "writtenOn": "2022-06-03T21:52:02Z",
      "side": 1,
      "message": "Yep. :: is needed to make MSVC happy. \n\nhttps://logs.chromium.org/logs/dawn/buildbucket/cr-buildbucket/8812529757973991297/+/u/compile_with_ninja/stdout\n\n[2216/2232] LINK dawn_perf_tests.exe dawn_perf_tests.exe.pdb\nFAILED: dawn_perf_tests.exe dawn_perf_tests.exe.pdb \nC:/b/s/w/ir/cipd_bin_packages/cpython3/bin/python3.exe ../../build/toolchain/win/tool_wrapper.py link-wrapper environment.x64 False link.exe /OUT:./dawn_perf_tests.exe /nologo  /PDB:./dawn_perf_tests.exe.pdb @./dawn_perf_tests.exe.rsp\nb\u0027ComputePipelineD3D12.obj : error LNK2019: unresolved external symbol \"void __cdecl dawn::native::d3d12::StoreCachedBlob(class dawn::native::DeviceBase *,class dawn::native::CacheKey const \u0026,class Microsoft::WRL::ComPtr\u003cstruct ID3D10Blob\u003e)\" (?StoreCachedBlob@d3d12@native@dawn@@YAXPEAVDeviceBase@23@AEBVCacheKey@23@V?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@@Z) referenced in function \"public: virtual class Result\u003cvoid,class dawn::native::ErrorData\u003e __cdecl dawn::native::d3d12::ComputePipeline::Initialize(void)\" (?Initialize@ComputePipeline@d3d12@native@dawn@@UEAA?AV?$Result@XVErrorData@native@dawn@@@@XZ)\\r\\n\u0027\nb\u0027RenderPipelineD3D12.obj : error LNK2001: unresolved external symbol \"void __cdecl dawn::native::d3d12::StoreCachedBlob(class dawn::native::DeviceBase *,class dawn::native::CacheKey const \u0026,class Microsoft::WRL::ComPtr\u003cstruct ID3D10Blob\u003e)\" (?StoreCachedBlob@d3d12@native@dawn@@YAXPEAVDeviceBase@23@AEBVCacheKey@23@V?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@@Z)\\r\\n\u0027\nb\u0027.\\\\dawn_perf_tests.exe : fatal error LNK1120: 1 unresolved externals\\r\\n\u0027",
      "parentUuid": "959968ad_70eaebf5",
      "range": {
        "startLine": 39,
        "startChar": 46,
        "endLine": 39,
        "endChar": 48
      },
      "revId": "9ede42458f64becf367a1bb19df93d54757417cf",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d3bbfc5b_a0d54204",
        "filename": "src/dawn/native/Blob.h",
        "patchSetId": 6
      },
      "lineNbr": 39,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2022-06-03T22:38:18Z",
      "side": 1,
      "message": "ok but those are coming from StoreCachedBlob, not CachedBlob::Create ?\n\nI was able to reproduce the linker error with MSVC if the forward declaration is `class`, but it\u0027s OK when it is `struct` (even without \"::\").",
      "parentUuid": "c8d97df3_39f80498",
      "range": {
        "startLine": 39,
        "startChar": 46,
        "endLine": 39,
        "endChar": 48
      },
      "revId": "9ede42458f64becf367a1bb19df93d54757417cf",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b461b864_0693fb99",
        "filename": "src/dawn/native/Blob.h",
        "patchSetId": 6
      },
      "lineNbr": 39,
      "author": {
        "id": 1000685
      },
      "writtenOn": "2022-06-03T22:49:51Z",
      "side": 1,
      "message": "Eh let me try again. How do you config MSVC to be the compiler? I don\u0027t find one with ninja. Use CMake?",
      "parentUuid": "d3bbfc5b_a0d54204",
      "range": {
        "startLine": 39,
        "startChar": 46,
        "endLine": 39,
        "endChar": 48
      },
      "revId": "9ede42458f64becf367a1bb19df93d54757417cf",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0e333f6c_bd9221bd",
        "filename": "src/dawn/native/Blob.h",
        "patchSetId": 6
      },
      "lineNbr": 39,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2022-06-03T23:15:45Z",
      "side": 1,
      "message": "On windows, you should be able to do `is_clang\u003dfalse` and `use_goma\u003dfalse` to make it use MSVC",
      "parentUuid": "b461b864_0693fb99",
      "range": {
        "startLine": 39,
        "startChar": 46,
        "endLine": 39,
        "endChar": 48
      },
      "revId": "9ede42458f64becf367a1bb19df93d54757417cf",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "751be890_e61dc971",
        "filename": "src/dawn/native/Blob.h",
        "patchSetId": 6
      },
      "lineNbr": 39,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-06-06T13:16:15Z",
      "side": 1,
      "message": "IMHO we\u0027re running into problems because we are breaking the layering. Why not make CreateWithDeleter be a public API that\u0027s non-trivial to use but still public and tested? This way the D3D12 backend can do whatever it wants internally and we keep the layering.",
      "parentUuid": "0e333f6c_bd9221bd",
      "range": {
        "startLine": 39,
        "startChar": 46,
        "endLine": 39,
        "endChar": 48
      },
      "revId": "9ede42458f64becf367a1bb19df93d54757417cf",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e72d28dc_37169c55",
        "filename": "src/dawn/native/Blob.h",
        "patchSetId": 6
      },
      "lineNbr": 39,
      "author": {
        "id": 1000685
      },
      "writtenOn": "2022-06-06T18:02:05Z",
      "side": 1,
      "message": "Yep now I get the point that introducing backend specific thing to frontend interface break the layering.\n\nOnly think with CreateWithDeleter as a public API is we need to expose the Blob constructor as public. But I think it\u0027s okay. The point is we disable copy constructor and copy assign operator.",
      "parentUuid": "751be890_e61dc971",
      "range": {
        "startLine": 39,
        "startChar": 46,
        "endLine": 39,
        "endChar": 48
      },
      "revId": "9ede42458f64becf367a1bb19df93d54757417cf",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a0c1c940_35fc87aa",
        "filename": "src/dawn/native/Blob.h",
        "patchSetId": 6
      },
      "lineNbr": 57,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2022-06-03T21:11:42Z",
      "side": 1,
      "message": "it also should be called in the move assignment operator. found a bug there and fixing in https://dawn-review.googlesource.com/c/dawn/+/92600\n\nanyway, what\u0027s important to say is probably that this constructor takes ownership of |data| and releases ownership by calling |deleter|.",
      "revId": "9ede42458f64becf367a1bb19df93d54757417cf",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "efad089c_d2ae37c7",
        "filename": "src/dawn/native/Blob.h",
        "patchSetId": 6
      },
      "lineNbr": 57,
      "author": {
        "id": 1000685
      },
      "writtenOn": "2022-06-03T21:52:02Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a0c1c940_35fc87aa",
      "revId": "9ede42458f64becf367a1bb19df93d54757417cf",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b35a38f3_320a651f",
        "filename": "src/dawn/native/vulkan/PipelineCacheVk.cpp",
        "patchSetId": 6
      },
      "lineNbr": 67,
      "author": {
        "id": 1002831
      },
      "writtenOn": "2022-06-03T21:39:11Z",
      "side": 1,
      "message": "Hmm I saw Corentin\u0027s comment on this in the other CL, but looking at this, it\u0027s true that we will just be making the same call twice... (blob-\u003eData() will return nullptr in this case when bufferSize \u003d\u003d 0). Would be nice to just skip it?\n\nDepending on what is preferred we could also do an early return instead if that is easier to follow?",
      "range": {
        "startLine": 64,
        "startChar": 4,
        "endLine": 67,
        "endChar": 33
      },
      "revId": "9ede42458f64becf367a1bb19df93d54757417cf",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a056c387_a02af974",
        "filename": "src/dawn/native/vulkan/PipelineCacheVk.cpp",
        "patchSetId": 6
      },
      "lineNbr": 67,
      "author": {
        "id": 1000685
      },
      "writtenOn": "2022-06-03T21:52:02Z",
      "side": 1,
      "message": "Done (Added an early return)",
      "parentUuid": "b35a38f3_320a651f",
      "range": {
        "startLine": 64,
        "startChar": 4,
        "endLine": 67,
        "endChar": 33
      },
      "revId": "9ede42458f64becf367a1bb19df93d54757417cf",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}