{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "97278276_46ce72f9",
        "filename": "src/tint/ast/float_literal_expression_test.cc",
        "patchSetId": 7
      },
      "lineNbr": 23,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2022-05-09T23:02:14Z",
      "side": 1,
      "message": "Would it be useful to do `42.` to force it to double instead of depending on the int conversion? (and below?)",
      "revId": "03c89b2f6e843b547d8a583ac2f529f0aa14b2aa",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d4e31fa7_2c4ea467",
        "filename": "src/tint/ast/float_literal_expression_test.cc",
        "patchSetId": 7
      },
      "lineNbr": 23,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2022-05-10T08:43:50Z",
      "side": 1,
      "message": "Done.",
      "parentUuid": "97278276_46ce72f9",
      "revId": "03c89b2f6e843b547d8a583ac2f529f0aa14b2aa",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "174667a4_b16e83e1",
        "filename": "src/tint/number.h",
        "patchSetId": 7
      },
      "lineNbr": 31,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2022-05-09T23:02:14Z",
      "side": 1,
      "message": "Where does the second template get used?",
      "revId": "03c89b2f6e843b547d8a583ac2f529f0aa14b2aa",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e7cc607d_c4c002ab",
        "filename": "src/tint/number.h",
        "patchSetId": 7
      },
      "lineNbr": 31,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2022-05-10T08:43:50Z",
      "side": 1,
      "message": "It\u0027s to allow the explict constructor to also cast. For example: `f32(1)`\n\nWithout this, the compiler will warn if the argument type doesn\u0027t match the `T` type, and you\u0027d have to write `f32(1.f)` or `f32(static_cast\u003cfloat\u003e(expr))`, which is pointless and noisy given that the constructor is `explicit`.",
      "parentUuid": "174667a4_b16e83e1",
      "revId": "03c89b2f6e843b547d8a583ac2f529f0aa14b2aa",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2d294244_4ed7c6d4",
        "filename": "src/tint/number.h",
        "patchSetId": 7
      },
      "lineNbr": 57,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2022-05-09T23:02:14Z",
      "side": 1,
      "message": "wow....",
      "revId": "03c89b2f6e843b547d8a583ac2f529f0aa14b2aa",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "76c2d745_588466da",
        "filename": "src/tint/number.h",
        "patchSetId": 7
      },
      "lineNbr": 57,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2022-05-10T08:43:50Z",
      "side": 1,
      "message": "`std::equal_to` needs a template type - and this seemed the easiest way to find the \u0027common\u0027 type for comparison. ðŸ˜Š",
      "parentUuid": "2d294244_4ed7c6d4",
      "revId": "03c89b2f6e843b547d8a583ac2f529f0aa14b2aa",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "044ba30e_1c631022",
        "filename": "src/tint/number.h",
        "patchSetId": 7
      },
      "lineNbr": 58,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2022-05-09T23:02:14Z",
      "side": 1,
      "message": "`std::equal_to` compares with `\u003d\u003d`. Do we need to worry about float comparison tolerance here?",
      "revId": "03c89b2f6e843b547d8a583ac2f529f0aa14b2aa",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "49a17e10_866bd38d",
        "filename": "src/tint/number.h",
        "patchSetId": 7
      },
      "lineNbr": 58,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2022-05-10T08:43:50Z",
      "side": 1,
      "message": "Equality operators don\u0027t usually have tolerances, so I\u0027d say no.",
      "parentUuid": "044ba30e_1c631022",
      "revId": "03c89b2f6e843b547d8a583ac2f529f0aa14b2aa",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b7182f7c_0122fb2a",
        "filename": "src/tint/program_builder.h",
        "patchSetId": 7
      },
      "lineNbr": 989,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2022-05-09T23:02:14Z",
      "side": 1,
      "message": "nit: `unsuffixed` instead of `no-suffixed` ?",
      "revId": "03c89b2f6e843b547d8a583ac2f529f0aa14b2aa",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "400c0d70_dbbd2ecf",
        "filename": "src/tint/program_builder.h",
        "patchSetId": 7
      },
      "lineNbr": 989,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2022-05-10T08:43:50Z",
      "side": 1,
      "message": "English isn\u0027t my thing. No other spoken language is either. Done.",
      "parentUuid": "b7182f7c_0122fb2a",
      "revId": "03c89b2f6e843b547d8a583ac2f529f0aa14b2aa",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "279fa3d9_45d8ab53",
        "filename": "src/tint/program_builder.h",
        "patchSetId": 7
      },
      "lineNbr": 992,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2022-05-09T23:02:14Z",
      "side": 1,
      "message": "The description says no-suffix ...",
      "revId": "03c89b2f6e843b547d8a583ac2f529f0aa14b2aa",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0d5ba1c1_eeb2cfb0",
        "filename": "src/tint/program_builder.h",
        "patchSetId": 7
      },
      "lineNbr": 992,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2022-05-10T08:43:50Z",
      "side": 1,
      "message": "That was wrong. Good spot.",
      "parentUuid": "279fa3d9_45d8ab53",
      "revId": "03c89b2f6e843b547d8a583ac2f529f0aa14b2aa",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "62a63fca_ff071fe2",
        "filename": "src/tint/program_builder.h",
        "patchSetId": 7
      },
      "lineNbr": 996,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2022-05-09T23:02:14Z",
      "side": 1,
      "message": "nit: unsuffixed",
      "revId": "03c89b2f6e843b547d8a583ac2f529f0aa14b2aa",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "abbc7c6e_7d5e8856",
        "filename": "src/tint/program_builder.h",
        "patchSetId": 7
      },
      "lineNbr": 996,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2022-05-10T08:43:50Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "62a63fca_ff071fe2",
      "revId": "03c89b2f6e843b547d8a583ac2f529f0aa14b2aa",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7b7d9538_205b0f23",
        "filename": "src/tint/program_builder.h",
        "patchSetId": 7
      },
      "lineNbr": 999,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2022-05-09T23:02:14Z",
      "side": 1,
      "message": "ditto, no suffix?",
      "revId": "03c89b2f6e843b547d8a583ac2f529f0aa14b2aa",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7db6d81d_f835d353",
        "filename": "src/tint/program_builder.h",
        "patchSetId": 7
      },
      "lineNbr": 999,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2022-05-10T08:43:50Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7b7d9538_205b0f23",
      "revId": "03c89b2f6e843b547d8a583ac2f529f0aa14b2aa",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "330a0ace_59347521",
        "filename": "src/tint/program_builder.h",
        "patchSetId": 7
      },
      "lineNbr": 1005,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2022-05-09T23:02:14Z",
      "side": 1,
      "message": "Oh, that\u0027s subtle. I missed that this was a `f32` instead of a `float`. Maybe call that out in the doc comment to make it clearer this is a `Number`?",
      "revId": "03c89b2f6e843b547d8a583ac2f529f0aa14b2aa",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "01c3df15_8b2ae960",
        "filename": "src/tint/program_builder.h",
        "patchSetId": 7
      },
      "lineNbr": 1005,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2022-05-10T08:43:50Z",
      "side": 1,
      "message": "Called out the `f32` a bit more. I\u0027d like to avoid the mention of `Number` as I consider it an implementation detail of `f32`. With typical usage, you only see `i32`, `u32` and `f32`, which are distinct types, which just so happen to be backed by a templated class.",
      "parentUuid": "330a0ace_59347521",
      "revId": "03c89b2f6e843b547d8a583ac2f529f0aa14b2aa",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "29d0b6d0_134903fd",
        "filename": "src/tint/reader/wgsl/lexer.cc",
        "patchSetId": 7
      },
      "lineNbr": 718,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2022-05-09T23:02:14Z",
      "side": 1,
      "message": "TODO for AbstractFloat change?",
      "revId": "03c89b2f6e843b547d8a583ac2f529f0aa14b2aa",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c5fff524_fbba685f",
        "filename": "src/tint/reader/wgsl/lexer.cc",
        "patchSetId": 7
      },
      "lineNbr": 718,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2022-05-10T08:43:50Z",
      "side": 1,
      "message": "What\u0027s TODO? If the floating point number has no suffix, it\u0027ll emit the `Token::Type::kFloatLiteral`, which is transformed into a `FloatLiteralExpression` with `Suffix::kNone` in the parser, which will (eventually) resolve to an `AbstractFloat` type in the resolver. These lines won\u0027t change.",
      "parentUuid": "29d0b6d0_134903fd",
      "revId": "03c89b2f6e843b547d8a583ac2f529f0aa14b2aa",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e924d4a2_e458c9e1",
        "filename": "src/tint/reader/wgsl/lexer.cc",
        "patchSetId": 7
      },
      "lineNbr": 718,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2022-05-10T12:14:16Z",
      "side": 1,
      "message": "I missed the `F` again, sigh, though you\u0027d written `kFloatLiteral` twice.",
      "parentUuid": "c5fff524_fbba685f",
      "revId": "03c89b2f6e843b547d8a583ac2f529f0aa14b2aa",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e17f731a_eb046273",
        "filename": "src/tint/reader/wgsl/lexer_test.cc",
        "patchSetId": 7
      },
      "lineNbr": 322,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2022-05-09T23:02:14Z",
      "side": 1,
      "message": "TODO?",
      "revId": "03c89b2f6e843b547d8a583ac2f529f0aa14b2aa",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "86aec128_2d5c517d",
        "filename": "src/tint/reader/wgsl/lexer_test.cc",
        "patchSetId": 7
      },
      "lineNbr": 322,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2022-05-10T08:43:50Z",
      "side": 1,
      "message": "Nope?",
      "parentUuid": "e17f731a_eb046273",
      "revId": "03c89b2f6e843b547d8a583ac2f529f0aa14b2aa",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "eb7566a1_26b58d31",
        "filename": "src/tint/reader/wgsl/lexer_test.cc",
        "patchSetId": 7
      },
      "lineNbr": 322,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2022-05-10T12:14:16Z",
      "side": 1,
      "message": "\u0027F\u0027, sigh.",
      "parentUuid": "86aec128_2d5c517d",
      "revId": "03c89b2f6e843b547d8a583ac2f529f0aa14b2aa",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "74713ea1_5f9989d2",
        "filename": "src/tint/reader/wgsl/parser_impl_const_literal_test.cc",
        "patchSetId": 7
      },
      "lineNbr": 208,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2022-05-09T23:02:14Z",
      "side": 1,
      "message": "Do we care about comparison tolerance?",
      "revId": "03c89b2f6e843b547d8a583ac2f529f0aa14b2aa",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e996fd4a_1e38f5e8",
        "filename": "src/tint/reader/wgsl/parser_impl_const_literal_test.cc",
        "patchSetId": 7
      },
      "lineNbr": 208,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2022-05-10T08:43:50Z",
      "side": 1,
      "message": "No, these tests are expecting exact matches.",
      "parentUuid": "74713ea1_5f9989d2",
      "revId": "03c89b2f6e843b547d8a583ac2f529f0aa14b2aa",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2a576f12_3c4d41ac",
        "filename": "src/tint/reader/wgsl/token.cc",
        "patchSetId": 7
      },
      "lineNbr": 29,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2022-05-09T23:02:14Z",
      "side": 1,
      "message": "\u0027abstract float literal\u0027 ?",
      "revId": "03c89b2f6e843b547d8a583ac2f529f0aa14b2aa",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "adda9043_812b99b7",
        "filename": "src/tint/reader/wgsl/token.cc",
        "patchSetId": 7
      },
      "lineNbr": 29,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2022-05-10T08:43:50Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2a576f12_3c4d41ac",
      "revId": "03c89b2f6e843b547d8a583ac2f529f0aa14b2aa",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9b7ad88e_6fe72ea4",
        "filename": "src/tint/reader/wgsl/token.cc",
        "patchSetId": 7
      },
      "lineNbr": 308,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2022-05-09T23:02:14Z",
      "side": 1,
      "message": "FloatFLiteral?",
      "revId": "03c89b2f6e843b547d8a583ac2f529f0aa14b2aa",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "60cdd937_2c09e5a9",
        "filename": "src/tint/reader/wgsl/token.cc",
        "patchSetId": 7
      },
      "lineNbr": 308,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2022-05-10T08:43:50Z",
      "side": 1,
      "message": "Good spot. Clearly missing tests. Done and added tests.",
      "parentUuid": "9b7ad88e_6fe72ea4",
      "revId": "03c89b2f6e843b547d8a583ac2f529f0aa14b2aa",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ffb0c332_7b373e22",
        "filename": "src/tint/reader/wgsl/token.h",
        "patchSetId": 7
      },
      "lineNbr": 43,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2022-05-09T23:02:14Z",
      "side": 1,
      "message": "nit: \u0027f\u0027 suffix",
      "revId": "03c89b2f6e843b547d8a583ac2f529f0aa14b2aa",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "33f5b649_0fa8ab2d",
        "filename": "src/tint/reader/wgsl/token.h",
        "patchSetId": 7
      },
      "lineNbr": 43,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2022-05-10T08:43:50Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ffb0c332_7b373e22",
      "revId": "03c89b2f6e843b547d8a583ac2f529f0aa14b2aa",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b37253a3_e830b482",
        "filename": "src/tint/reader/wgsl/token.h",
        "patchSetId": 7
      },
      "lineNbr": 44,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2022-05-09T23:02:14Z",
      "side": 1,
      "message": "For some reason I find this much harder to differentiate then I did with the Int variants for some reason.",
      "revId": "03c89b2f6e843b547d8a583ac2f529f0aa14b2aa",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4baca54a_61556a80",
        "filename": "src/tint/reader/wgsl/token.h",
        "patchSetId": 7
      },
      "lineNbr": 44,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2022-05-10T08:43:50Z",
      "side": 1,
      "message": "Ack. Suggestions welcome.",
      "parentUuid": "b37253a3_e830b482",
      "revId": "03c89b2f6e843b547d8a583ac2f529f0aa14b2aa",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5dc8509e_701438aa",
        "filename": "src/tint/reader/wgsl/token.h",
        "patchSetId": 7
      },
      "lineNbr": 44,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2022-05-10T12:14:16Z",
      "side": 1,
      "message": "This one\u0027s tricky. I\u0027ve managed to mis-read it 3 times in this CL which doesn\u0027t bode well. I wonder if using `_` would help?\n\n* `kFloatLiteral`\n* `kFloat_FLiteral`\n* `kIntLiteral`\n* `kInt_ILiteral`\n* `kInt_ULiteral`\n\nOr even `kFloat_F_Literal` ? At least adds a bit of separation.",
      "parentUuid": "4baca54a_61556a80",
      "revId": "03c89b2f6e843b547d8a583ac2f529f0aa14b2aa",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b093120f_b379445a",
        "filename": "src/tint/reader/wgsl/token.h",
        "patchSetId": 7
      },
      "lineNbr": 44,
      "author": {
        "id": 1002536
      },
      "writtenOn": "2022-05-10T12:24:03Z",
      "side": 1,
      "message": "Another choice may be `kFloatLiteral_F`, `kIntLiteral_I`, and `kIntLiteral_U`, if I may suggest",
      "parentUuid": "5dc8509e_701438aa",
      "revId": "03c89b2f6e843b547d8a583ac2f529f0aa14b2aa",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "003bb7e5_10a1f58a",
        "filename": "src/tint/reader/wgsl/token.h",
        "patchSetId": 7
      },
      "lineNbr": 44,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2022-05-10T12:26:50Z",
      "side": 1,
      "message": "Oh, good idea. I like that the `_F`, `_I` and `_U` are all suffixes, just like the thing they\u0027re modeling.",
      "parentUuid": "b093120f_b379445a",
      "revId": "03c89b2f6e843b547d8a583ac2f529f0aa14b2aa",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "709f036c_b7ab1e5b",
        "filename": "src/tint/resolver/resolver_constants_test.cc",
        "patchSetId": 7
      },
      "lineNbr": 142,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2022-05-09T23:02:14Z",
      "side": 1,
      "message": "EXPECT_FLOAT_EQ ?",
      "revId": "03c89b2f6e843b547d8a583ac2f529f0aa14b2aa",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "936c3fc6_50910e85",
        "filename": "src/tint/resolver/resolver_constants_test.cc",
        "patchSetId": 7
      },
      "lineNbr": 142,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2022-05-10T08:43:50Z",
      "side": 1,
      "message": "Don\u0027t want to check with tolerances here, and comparing to zero is warning free.",
      "parentUuid": "709f036c_b7ab1e5b",
      "revId": "03c89b2f6e843b547d8a583ac2f529f0aa14b2aa",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}