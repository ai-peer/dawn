{
  "comments": [
    {
      "key": {
        "uuid": "14cab97a_cdc034ab",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 11,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2019-12-05T17:02:37Z",
      "side": 1,
      "message": "Dawn is 4MB? That\u0027s HUGE :/",
      "revId": "5c4e8cac5ae83ff0924e7e978d341381607d3bd7",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ef1dab98_bd0aeb36",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 11,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2019-12-05T23:58:08Z",
      "side": 1,
      "message": "I\u0027m also surprised that the size increase from this patch is 8kB. Are there really that many inline sites?",
      "parentUuid": "14cab97a_cdc034ab",
      "revId": "5c4e8cac5ae83ff0924e7e978d341381607d3bd7",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6b44559b_0e02a01d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 11,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2019-12-06T03:08:11Z",
      "side": 1,
      "message": "libdawn_native.so, on my Linux workstation with is_debug\u003dfalse is currently 3,374,288 bytes :-/\n\nBefore inlining, it\u0027s 3,370,432",
      "parentUuid": "ef1dab98_bd0aeb36",
      "revId": "5c4e8cac5ae83ff0924e7e978d341381607d3bd7",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "13cb7d4e_c8e41a4d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 11,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2019-12-06T12:31:22Z",
      "side": 1,
      "message": "Ah it\u0027s probably because you have debug symbols, you can try with stripping the library. Actually it would be nice to document when / how to inline and measure the perf / binary size increase in docs/",
      "parentUuid": "6b44559b_0e02a01d",
      "revId": "5c4e8cac5ae83ff0924e7e978d341381607d3bd7",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c0899a00_64c6644a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 11,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2019-12-06T22:20:33Z",
      "side": 1,
      "message": "Passed it through llvm-strip; now it\u0027s 2,611,728 -\u003e 2,615,824 bytes\nsymbol_level\u003d0 when building in a Chromium checkout also does this",
      "parentUuid": "13cb7d4e_c8e41a4d",
      "revId": "5c4e8cac5ae83ff0924e7e978d341381607d3bd7",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "89722e55_63bc5b6c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 12,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2019-12-05T17:02:37Z",
      "side": 1,
      "message": "nit: BUG\u003d",
      "revId": "5c4e8cac5ae83ff0924e7e978d341381607d3bd7",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "18d7bbd5_b1c46624",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 12,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2019-12-06T22:20:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "89722e55_63bc5b6c",
      "revId": "5c4e8cac5ae83ff0924e7e978d341381607d3bd7",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8a66af46_a2fecbca",
        "filename": "src/dawn_native/CommandAllocator.h",
        "patchSetId": 7
      },
      "lineNbr": 102,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2019-12-06T03:08:11Z",
      "side": 1,
      "message": "note: not inlining this takes us from 47 -\u003e 52 ns",
      "range": {
        "startLine": 102,
        "startChar": 13,
        "endLine": 102,
        "endChar": 26
      },
      "revId": "5c4e8cac5ae83ff0924e7e978d341381607d3bd7",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f951fbfd_98756223",
        "filename": "src/dawn_native/CommandAllocator.h",
        "patchSetId": 7
      },
      "lineNbr": 110,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2019-12-05T17:02:37Z",
      "side": 1,
      "message": "maybe: everything in this if is rare and could be put in a helper function.",
      "revId": "5c4e8cac5ae83ff0924e7e978d341381607d3bd7",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "930a78ec_8e92fda8",
        "filename": "src/dawn_native/CommandAllocator.h",
        "patchSetId": 7
      },
      "lineNbr": 110,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2019-12-06T03:08:11Z",
      "side": 1,
      "message": "Making this out-of-line slows us slightly from 47 -\u003e 49 ns\n\nSaves us 4 kB though which seems worth it",
      "parentUuid": "f951fbfd_98756223",
      "revId": "5c4e8cac5ae83ff0924e7e978d341381607d3bd7",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "01472e8a_7aac1b24",
        "filename": "src/dawn_native/CommandAllocator.h",
        "patchSetId": 7
      },
      "lineNbr": 116,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2019-12-05T17:02:37Z",
      "side": 1,
      "message": "I suspect that making AlignPtr inlined will improve both perf and binary size.",
      "revId": "5c4e8cac5ae83ff0924e7e978d341381607d3bd7",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ed77ba42_ee92aba8",
        "filename": "src/dawn_native/CommandAllocator.h",
        "patchSetId": 7
      },
      "lineNbr": 116,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2019-12-05T23:58:08Z",
      "side": 1,
      "message": "I wouldn\u0027t necessarily expect this to improve perf because the CPU is probably very good at optimizing this function call (since it\u0027s static).",
      "parentUuid": "01472e8a_7aac1b24",
      "revId": "5c4e8cac5ae83ff0924e7e978d341381607d3bd7",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7a8df4de_0947eb8d",
        "filename": "src/dawn_native/CommandAllocator.h",
        "patchSetId": 7
      },
      "lineNbr": 116,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2019-12-06T03:08:11Z",
      "side": 1,
      "message": "For some reason I thought this was slower before. Must have mixed up the numbers. Inlining this helps drop us from 48 down to 47 ns",
      "parentUuid": "ed77ba42_ee92aba8",
      "revId": "5c4e8cac5ae83ff0924e7e978d341381607d3bd7",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ce1e2183_8bf3c191",
        "filename": "src/dawn_native/CommandAllocator.h",
        "patchSetId": 7
      },
      "lineNbr": 116,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2019-12-06T03:08:11Z",
      "side": 1,
      "message": "I think I mixed up inlining AlignPtr and using -flto last time I tested. This does indeed improve perf. No significant binary size change",
      "parentUuid": "ed77ba42_ee92aba8",
      "revId": "5c4e8cac5ae83ff0924e7e978d341381607d3bd7",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d5ace04f_651585dd",
        "filename": "src/dawn_native/CommandAllocator.h",
        "patchSetId": 7
      },
      "lineNbr": 191,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2019-12-05T17:02:37Z",
      "side": 1,
      "message": "Maybe we should have a DAWN_INLINE tag that we pepper in various places to hint the compiler?",
      "revId": "5c4e8cac5ae83ff0924e7e978d341381607d3bd7",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "32abfe01_a24cc440",
        "filename": "src/dawn_native/CommandAllocator.h",
        "patchSetId": 7
      },
      "lineNbr": 191,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2019-12-06T03:08:11Z",
      "side": 1,
      "message": "note: not inlining this takes us from 47 -\u003e 52 ns",
      "range": {
        "startLine": 191,
        "startChar": 8,
        "endLine": 191,
        "endChar": 25
      },
      "revId": "5c4e8cac5ae83ff0924e7e978d341381607d3bd7",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0f7d459d_b8e88d7b",
        "filename": "src/dawn_native/CommandAllocator.h",
        "patchSetId": 7
      },
      "lineNbr": 191,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2019-12-06T22:20:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d5ace04f_651585dd",
      "revId": "5c4e8cac5ae83ff0924e7e978d341381607d3bd7",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "273abf84_3b6ad27d",
        "filename": "src/dawn_native/CommandAllocator.h",
        "patchSetId": 7
      },
      "lineNbr": 230,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2019-12-05T17:02:37Z",
      "side": 1,
      "message": "note sure: Everything below is rare and could be in a helper function to reduce the amount of header code.",
      "revId": "5c4e8cac5ae83ff0924e7e978d341381607d3bd7",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c34e91c3_85f79ae6",
        "filename": "src/dawn_native/CommandAllocator.h",
        "patchSetId": 7
      },
      "lineNbr": 230,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2019-12-06T03:08:11Z",
      "side": 1,
      "message": "Moving this out-of-line doesn\u0027t affect perf, and also barely changes binary size. Still seems good to move it out of line",
      "parentUuid": "273abf84_3b6ad27d",
      "revId": "5c4e8cac5ae83ff0924e7e978d341381607d3bd7",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    }
  ]
}