{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "49ae78dd_eb752971",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-08-03T12:17:46Z",
      "side": 1,
      "message": "LGTM",
      "revId": "13c503d88d4d1a0006da9d958f8b3004ad3bef4b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "59970869_ac00b052",
        "filename": "src/dawn/native/d3d12/TextureD3D12.cpp",
        "patchSetId": 4
      },
      "lineNbr": 700,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-08-03T12:17:46Z",
      "side": 1,
      "message": "nit: Maybe we could replace this with an assert so that the internal texture destruction code doesn\u0027t look like it is using fences etc. It could look like this:\n\n```\nvoid DestroyExternalTexture(fence value) {\n  ASSERT(is external)\n  ASSERT(fence !\u003d nullptr)\n  Fence wait and signal.\n  mFence \u003d nullptr\n  \n  DestroyImpl();\n}\n\nDestroyImpl() {\n  ASSERT fence \u003d\u003d nullpte\n  Do the regular destroy code.\n}\n```",
      "revId": "13c503d88d4d1a0006da9d958f8b3004ad3bef4b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}