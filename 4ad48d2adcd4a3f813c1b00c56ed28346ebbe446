{
  "comments": [
    {
      "key": {
        "uuid": "7a4723a9_10dda373",
        "filename": "src/dawn_native/BindingInfo.h",
        "patchSetId": 26
      },
      "lineNbr": 47,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-06-12T17:07:18Z",
      "side": 1,
      "message": "RequiredBufferSizes?",
      "range": {
        "startLine": 47,
        "startChar": 10,
        "endLine": 47,
        "endChar": 26
      },
      "revId": "4ad48d2adcd4a3f813c1b00c56ed28346ebbe446",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "84eca5aa_6f7d340e",
        "filename": "src/dawn_native/BindingInfo.h",
        "patchSetId": 26
      },
      "lineNbr": 47,
      "author": {
        "id": 1000418
      },
      "writtenOn": "2020-06-17T05:47:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7a4723a9_10dda373",
      "range": {
        "startLine": 47,
        "startChar": 10,
        "endLine": 47,
        "endChar": 26
      },
      "revId": "4ad48d2adcd4a3f813c1b00c56ed28346ebbe446",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bc4de656_5797fb66",
        "filename": "src/dawn_native/CommandBufferStateTracker.cpp",
        "patchSetId": 26
      },
      "lineNbr": 155,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-06-12T17:07:18Z",
      "side": 1,
      "message": "nit: else {UNREACHABLE()}",
      "revId": "4ad48d2adcd4a3f813c1b00c56ed28346ebbe446",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "79271680_5d6ad042",
        "filename": "src/dawn_native/CommandBufferStateTracker.cpp",
        "patchSetId": 26
      },
      "lineNbr": 155,
      "author": {
        "id": 1000418
      },
      "writtenOn": "2020-06-17T05:47:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bc4de656_5797fb66",
      "revId": "4ad48d2adcd4a3f813c1b00c56ed28346ebbe446",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "77f7a62f_49e5aaef",
        "filename": "src/dawn_native/PipelineLayout.cpp",
        "patchSetId": 26
      },
      "lineNbr": 33,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-06-12T17:07:18Z",
      "side": 1,
      "message": "We\u0027ll have to see with the group if we require it to be \u003d\u003d between stages or if we take the max if what\u0027s required between stages.",
      "revId": "4ad48d2adcd4a3f813c1b00c56ed28346ebbe446",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "21b43819_d1f6ac79",
        "filename": "src/dawn_native/ShaderModule.cpp",
        "patchSetId": 26
      },
      "lineNbr": 567,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-06-12T17:07:18Z",
      "side": 1,
      "message": "I think we should add the minBufferSize before this CL so we don\u0027t have gaps in testing and don\u0027t need to check for IsSPVC in tests.",
      "revId": "4ad48d2adcd4a3f813c1b00c56ed28346ebbe446",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1e06996c_8b396eec",
        "filename": "src/dawn_native/ShaderModule.cpp",
        "patchSetId": 26
      },
      "lineNbr": 567,
      "author": {
        "id": 1000418
      },
      "writtenOn": "2020-06-17T05:47:07Z",
      "side": 1,
      "message": "Added to SPVC!",
      "parentUuid": "21b43819_d1f6ac79",
      "revId": "4ad48d2adcd4a3f813c1b00c56ed28346ebbe446",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b9288c99_bb6dfd95",
        "filename": "src/dawn_native/ShaderModule.cpp",
        "patchSetId": 26
      },
      "lineNbr": 725,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-06-12T17:07:18Z",
      "side": 1,
      "message": "Also readonly storage buffer. Can we have a test for that?",
      "revId": "4ad48d2adcd4a3f813c1b00c56ed28346ebbe446",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "acd0d490_5b2d9bd8",
        "filename": "src/dawn_native/ShaderModule.cpp",
        "patchSetId": 26
      },
      "lineNbr": 725,
      "author": {
        "id": 1000418
      },
      "writtenOn": "2020-06-17T05:47:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b9288c99_bb6dfd95",
      "revId": "4ad48d2adcd4a3f813c1b00c56ed28346ebbe446",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e5d435ab_b041dc74",
        "filename": "src/dawn_native/ShaderModule.cpp",
        "patchSetId": 26
      },
      "lineNbr": 901,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-06-12T17:07:18Z",
      "side": 1,
      "message": "nit: requiredBufferSizes maybe? I\u0027m not sure.",
      "range": {
        "startLine": 901,
        "startChar": 30,
        "endLine": 901,
        "endChar": 47
      },
      "revId": "4ad48d2adcd4a3f813c1b00c56ed28346ebbe446",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e3ce71d9_a2e25c91",
        "filename": "src/dawn_native/ShaderModule.cpp",
        "patchSetId": 26
      },
      "lineNbr": 901,
      "author": {
        "id": 1000418
      },
      "writtenOn": "2020-06-17T05:47:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e5d435ab_b041dc74",
      "range": {
        "startLine": 901,
        "startChar": 30,
        "endLine": 901,
        "endChar": 47
      },
      "revId": "4ad48d2adcd4a3f813c1b00c56ed28346ebbe446",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0fa044c9_c93f9828",
        "filename": "src/dawn_native/ShaderModule.cpp",
        "patchSetId": 26
      },
      "lineNbr": 907,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-06-12T17:07:18Z",
      "side": 1,
      "message": "nit: could be if(!\u003d0) continue with a comment that we skip buffer bindings that have the minBufferSize set in the layout.",
      "revId": "4ad48d2adcd4a3f813c1b00c56ed28346ebbe446",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "30deaad5_8d9d10f7",
        "filename": "src/dawn_native/ShaderModule.cpp",
        "patchSetId": 26
      },
      "lineNbr": 907,
      "author": {
        "id": 1000418
      },
      "writtenOn": "2020-06-17T05:47:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0fa044c9_c93f9828",
      "revId": "4ad48d2adcd4a3f813c1b00c56ed28346ebbe446",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "17e76845_a7f4556b",
        "filename": "src/dawn_native/ShaderModule.h",
        "patchSetId": 26
      },
      "lineNbr": 80,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-06-12T17:07:18Z",
      "side": 1,
      "message": "nit: RequiredBufferSizes ComputeRequiredBufferSizesForLayout?",
      "revId": "4ad48d2adcd4a3f813c1b00c56ed28346ebbe446",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2056b918_20a6d55d",
        "filename": "src/dawn_native/ShaderModule.h",
        "patchSetId": 26
      },
      "lineNbr": 80,
      "author": {
        "id": 1000418
      },
      "writtenOn": "2020-06-17T05:47:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "17e76845_a7f4556b",
      "revId": "4ad48d2adcd4a3f813c1b00c56ed28346ebbe446",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "09fbf988_6306335a",
        "filename": "src/tests/unittests/validation/MinimumBufferSizeValidationTests.cpp",
        "patchSetId": 26
      },
      "lineNbr": 42,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-06-12T17:59:23Z",
      "side": 1,
      "message": "nit: Could we make this easier to read somehow?",
      "range": {
        "startLine": 32,
        "startChar": 12,
        "endLine": 42,
        "endChar": 64
      },
      "revId": "4ad48d2adcd4a3f813c1b00c56ed28346ebbe446",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8ee8252d_1525c167",
        "filename": "src/tests/unittests/validation/MinimumBufferSizeValidationTests.cpp",
        "patchSetId": 26
      },
      "lineNbr": 42,
      "author": {
        "id": 1000418
      },
      "writtenOn": "2020-06-17T05:47:07Z",
      "side": 1,
      "message": "How\u0027s this?",
      "parentUuid": "09fbf988_6306335a",
      "range": {
        "startLine": 32,
        "startChar": 12,
        "endLine": 42,
        "endChar": 64
      },
      "revId": "4ad48d2adcd4a3f813c1b00c56ed28346ebbe446",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d94c4a32_17285b5e",
        "filename": "src/tests/unittests/validation/MinimumBufferSizeValidationTests.cpp",
        "patchSetId": 26
      },
      "lineNbr": 59,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-06-12T17:59:23Z",
      "side": 1,
      "message": "All the layouts are std140. We should use std430 for some of the storage buffers to check we\u0027re getting the right thing. 430 hasn\u0027t different packing rules\n\nplease also test like mat2 and structs, etc. -- things with different width\n\n\nAlso test with non-contiguous and out-of-order binding numbers to check that our packing doesn\u0027t mess things up",
      "range": {
        "startLine": 59,
        "startChar": 23,
        "endLine": 59,
        "endChar": 29
      },
      "revId": "4ad48d2adcd4a3f813c1b00c56ed28346ebbe446",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "99ec4a9e_700004ac",
        "filename": "src/tests/unittests/validation/MinimumBufferSizeValidationTests.cpp",
        "patchSetId": 26
      },
      "lineNbr": 59,
      "author": {
        "id": 1000418
      },
      "writtenOn": "2020-06-17T05:47:07Z",
      "side": 1,
      "message": "How\u0027s it look now?",
      "parentUuid": "d94c4a32_17285b5e",
      "range": {
        "startLine": 59,
        "startChar": 23,
        "endLine": 59,
        "endChar": 29
      },
      "revId": "4ad48d2adcd4a3f813c1b00c56ed28346ebbe446",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "65bc3b1b_e8a34639",
        "filename": "src/tests/unittests/validation/MinimumBufferSizeValidationTests.cpp",
        "patchSetId": 26
      },
      "lineNbr": 96,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-06-12T17:59:23Z",
      "side": 1,
      "message": "nit: probably don\u0027t need these",
      "range": {
        "startLine": 95,
        "startChar": 16,
        "endLine": 96,
        "endChar": 43
      },
      "revId": "4ad48d2adcd4a3f813c1b00c56ed28346ebbe446",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fd1f2fb5_4abdf785",
        "filename": "src/tests/unittests/validation/MinimumBufferSizeValidationTests.cpp",
        "patchSetId": 26
      },
      "lineNbr": 96,
      "author": {
        "id": 1000418
      },
      "writtenOn": "2020-06-17T05:47:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "65bc3b1b_e8a34639",
      "range": {
        "startLine": 95,
        "startChar": 16,
        "endLine": 96,
        "endChar": 43
      },
      "revId": "4ad48d2adcd4a3f813c1b00c56ed28346ebbe446",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7269d32f_65e4d584",
        "filename": "src/tests/unittests/validation/MinimumBufferSizeValidationTests.cpp",
        "patchSetId": 26
      },
      "lineNbr": 157,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-06-12T17:59:23Z",
      "side": 1,
      "message": "nit: we don\u0027t need the fullness of std::function. Instead we can do:\n\ntemplate \u003ctypename F\u003e\nvoid ForEachSmallerSize(originalSizes, F func)\n\nMaybe a better name would be WithEachSizeOffsetBy(..)\nand then we can do both positive and negative offsets to test larger and smaller bindings.",
      "range": {
        "startLine": 156,
        "startChar": 9,
        "endLine": 157,
        "endChar": 89
      },
      "revId": "4ad48d2adcd4a3f813c1b00c56ed28346ebbe446",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9af91e56_49b13d2e",
        "filename": "src/tests/unittests/validation/MinimumBufferSizeValidationTests.cpp",
        "patchSetId": 26
      },
      "lineNbr": 157,
      "author": {
        "id": 1000418
      },
      "writtenOn": "2020-06-17T05:47:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7269d32f_65e4d584",
      "range": {
        "startLine": 156,
        "startChar": 9,
        "endLine": 157,
        "endChar": 89
      },
      "revId": "4ad48d2adcd4a3f813c1b00c56ed28346ebbe446",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5c2bea42_1ac2c929",
        "filename": "src/tests/unittests/validation/MinimumBufferSizeValidationTests.cpp",
        "patchSetId": 26
      },
      "lineNbr": 292,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-06-12T17:59:23Z",
      "side": 1,
      "message": "nit: also have some cases where there is other data before the unsized array",
      "range": {
        "startLine": 280,
        "startChar": 12,
        "endLine": 292,
        "endChar": 24
      },
      "revId": "4ad48d2adcd4a3f813c1b00c56ed28346ebbe446",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "91598480_d3276ae3",
        "filename": "src/tests/unittests/validation/MinimumBufferSizeValidationTests.cpp",
        "patchSetId": 26
      },
      "lineNbr": 292,
      "author": {
        "id": 1000418
      },
      "writtenOn": "2020-06-17T05:47:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5c2bea42_1ac2c929",
      "range": {
        "startLine": 280,
        "startChar": 12,
        "endLine": 292,
        "endChar": 24
      },
      "revId": "4ad48d2adcd4a3f813c1b00c56ed28346ebbe446",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "32de50f8_e849e706",
        "filename": "src/tests/unittests/validation/MinimumBufferSizeValidationTests.cpp",
        "patchSetId": 26
      },
      "lineNbr": 306,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-06-12T17:59:23Z",
      "side": 1,
      "message": "We should also check the buffers that are larger than the minimum size are allowed",
      "range": {
        "startLine": 306,
        "startChar": 4,
        "endLine": 306,
        "endChar": 52
      },
      "revId": "4ad48d2adcd4a3f813c1b00c56ed28346ebbe446",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b05263f3_b66fbc98",
        "filename": "src/tests/unittests/validation/MinimumBufferSizeValidationTests.cpp",
        "patchSetId": 26
      },
      "lineNbr": 306,
      "author": {
        "id": 1000418
      },
      "writtenOn": "2020-06-17T05:47:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "32de50f8_e849e706",
      "range": {
        "startLine": 306,
        "startChar": 4,
        "endLine": 306,
        "endChar": 52
      },
      "revId": "4ad48d2adcd4a3f813c1b00c56ed28346ebbe446",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d38b71f0_c219191a",
        "filename": "src/tests/unittests/validation/MinimumBufferSizeValidationTests.cpp",
        "patchSetId": 26
      },
      "lineNbr": 311,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-06-12T17:59:23Z",
      "side": 1,
      "message": "nit: have these lambdas be capital: MakeGroup",
      "range": {
        "startLine": 311,
        "startChar": 9,
        "endLine": 311,
        "endChar": 18
      },
      "revId": "4ad48d2adcd4a3f813c1b00c56ed28346ebbe446",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6626aa03_eb936432",
        "filename": "src/tests/unittests/validation/MinimumBufferSizeValidationTests.cpp",
        "patchSetId": 26
      },
      "lineNbr": 311,
      "author": {
        "id": 1000418
      },
      "writtenOn": "2020-06-17T05:47:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d38b71f0_c219191a",
      "range": {
        "startLine": 311,
        "startChar": 9,
        "endLine": 311,
        "endChar": 18
      },
      "revId": "4ad48d2adcd4a3f813c1b00c56ed28346ebbe446",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "446ff34d_71634efd",
        "filename": "src/tests/unittests/validation/RenderBundleValidationTests.cpp",
        "patchSetId": 26
      },
      "lineNbr": 70,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-06-12T17:07:18Z",
      "side": 1,
      "message": "Hey we found a bug! :D",
      "revId": "4ad48d2adcd4a3f813c1b00c56ed28346ebbe446",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cebae4c6_5754bc95",
        "filename": "src/tests/unittests/validation/RenderBundleValidationTests.cpp",
        "patchSetId": 26
      },
      "lineNbr": 70,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-06-12T17:09:34Z",
      "side": 1,
      "message": "Idan also updated a CTS test that was wrong too!",
      "parentUuid": "446ff34d_71634efd",
      "revId": "4ad48d2adcd4a3f813c1b00c56ed28346ebbe446",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "97dd36ce_4d43611b",
        "filename": "src/tests/unittests/validation/RenderBundleValidationTests.cpp",
        "patchSetId": 26
      },
      "lineNbr": 70,
      "author": {
        "id": 1000418
      },
      "writtenOn": "2020-06-17T05:47:07Z",
      "side": 1,
      "message": ":)",
      "parentUuid": "cebae4c6_5754bc95",
      "revId": "4ad48d2adcd4a3f813c1b00c56ed28346ebbe446",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    }
  ]
}