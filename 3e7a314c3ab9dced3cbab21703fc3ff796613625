{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "cb32b372_2b476394",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2024-05-08T06:09:21Z",
      "side": 1,
      "message": "PTAL",
      "revId": "3e7a314c3ab9dced3cbab21703fc3ff796613625",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "90294108_e68be109",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2024-05-08T11:00:01Z",
      "side": 1,
      "message": "LGTM",
      "revId": "3e7a314c3ab9dced3cbab21703fc3ff796613625",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "224b8f72_74e86f34",
        "filename": "src/dawn/tests/DawnTest.h",
        "patchSetId": 2
      },
      "lineNbr": 129,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2024-05-08T11:00:01Z",
      "side": 1,
      "message": "Why is this needed?",
      "revId": "3e7a314c3ab9dced3cbab21703fc3ff796613625",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5110d5d3_45bfde4a",
        "filename": "src/dawn/tests/DawnTest.h",
        "patchSetId": 2
      },
      "lineNbr": 129,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2024-05-08T13:47:22Z",
      "side": 1,
      "message": "There could be more than 1 validation errors raise from [1].",
      "parentUuid": "224b8f72_74e86f34",
      "revId": "3e7a314c3ab9dced3cbab21703fc3ff796613625",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8e143fe0_0025c2b7",
        "filename": "src/dawn/tests/DawnTest.h",
        "patchSetId": 2
      },
      "lineNbr": 129,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2024-05-08T14:02:45Z",
      "side": 1,
      "message": "Is it expected or a bug in validation code? If it is expected, could you please try adding more `ASSERT_DEVICE_ERROR_MSG_ON(..)` accordingly?",
      "parentUuid": "5110d5d3_45bfde4a",
      "revId": "3e7a314c3ab9dced3cbab21703fc3ff796613625",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2d9fb6de_d4b57859",
        "filename": "src/dawn/tests/DawnTest.h",
        "patchSetId": 2
      },
      "lineNbr": 129,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2024-05-08T14:42:53Z",
      "side": 1,
      "message": "It\u0027s expected. Also I can\u0027t add more `ASSERT_DEVICE_ERROR` for a single call to `CreateVideoTextureForTest`, which could raise multiple validation errors.",
      "parentUuid": "8e143fe0_0025c2b7",
      "revId": "3e7a314c3ab9dced3cbab21703fc3ff796613625",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "339b01d9_f740d800",
        "filename": "src/dawn/tests/DawnTest.h",
        "patchSetId": 2
      },
      "lineNbr": 129,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2024-05-08T14:47:27Z",
      "side": 1,
      "message": "What are those errors?",
      "parentUuid": "2d9fb6de_d4b57859",
      "revId": "3e7a314c3ab9dced3cbab21703fc3ff796613625",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3c3e42bb_d54cde72",
        "filename": "src/dawn/tests/DawnTest.h",
        "patchSetId": 2
      },
      "lineNbr": 129,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2024-05-09T01:04:36Z",
      "side": 1,
      "message": "They are:\n```\n    Function call: Call(1, 000001F92FF83910 pointing to \"The texture usage (TextureUsage::RenderAttachment) includes TextureUsage::RenderAttachment, which is incompatible with the non-renderable format (TextureFormat::R8BG8Biplanar420Unorm).\\n - While calling [SharedTextureMemory (unlabeled)].CreateTexture([TextureDescriptor]).\\n\", 000001F91D6941D0)\n\n\n    Function call: Call(1, 0000027285784500 pointing to \"[Invalid Texture] is invalid.\\n - While calling [SharedTextureMemory (unlabeled)].BeginAccess([Invalid Texture]).\\n\", 000002728612B670)\n\n```",
      "parentUuid": "339b01d9_f740d800",
      "revId": "3e7a314c3ab9dced3cbab21703fc3ff796613625",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "922ed2de_22c1a70d",
        "filename": "src/dawn/tests/DawnTest.h",
        "patchSetId": 2
      },
      "lineNbr": 129,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2024-05-09T01:10:05Z",
      "side": 1,
      "message": "at [2], could you first do something like:\n\n```\nEXPECT_CALL(mDeviceErrorCallback,                                            \\\n                Call(testing::Ne(WGPUErrorType_NoError), testing::HasSubstr(\"is invalid\"), device.Get())) \\\n        .Times(testing::AnyNumber());                                            \\\n```\n\nfollowed by the existing call to `ASSERT_DEVICE_ERROR_MSG`?\n\n\nThat way we only change the expectations for that one callsite, and we only speciifcally allow \"is invalid\" errors to happen multiple times.",
      "parentUuid": "3c3e42bb_d54cde72",
      "revId": "3e7a314c3ab9dced3cbab21703fc3ff796613625",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "867d43dc_2afb80b2",
        "filename": "src/dawn/tests/DawnTest.h",
        "patchSetId": 2
      },
      "lineNbr": 129,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2024-05-09T02:00:42Z",
      "side": 1,
      "message": "This should work, I believe. However it seems too specific. `CreateVideoTextureForTest` is backend specific, so we\u0027d better expect something general here. Looking into it in [mac](https://source.chromium.org/chromium/chromium/src/+/main:third_party/dawn/src/dawn/tests/end2end/VideoViewsTests_mac.cpp;drc\u003d9445a34c5b4e87f00f4e82eb2729baabec9d7a6b;l\u003d123), the same problem once showed up. The decision was to swallow one, and raise the other. Maybe we can simply follow it, or work out a better one.",
      "parentUuid": "922ed2de_22c1a70d",
      "revId": "3e7a314c3ab9dced3cbab21703fc3ff796613625",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2ae16d6f_00ad2896",
        "filename": "src/dawn/tests/DawnTest.h",
        "patchSetId": 2
      },
      "lineNbr": 129,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2024-05-09T02:09:31Z",
      "side": 1,
      "message": "Can we just add new macro like `ASSERT_DEVICE_ERRORS` to explicitly expect multiple errors?",
      "parentUuid": "867d43dc_2afb80b2",
      "revId": "3e7a314c3ab9dced3cbab21703fc3ff796613625",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5dc24e0f_ea407f8b",
        "filename": "src/dawn/tests/end2end/D3DResourceWrappingTests.cpp",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2024-05-08T11:00:01Z",
      "side": 1,
      "message": "I believe all of these tests should be covered by SharedTextureMemoryTests.cpp so we could just remove this file.",
      "revId": "3e7a314c3ab9dced3cbab21703fc3ff796613625",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3ae837fb_d5463ef8",
        "filename": "src/dawn/tests/end2end/D3DResourceWrappingTests.cpp",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2024-05-08T13:47:22Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5dc24e0f_ea407f8b",
      "revId": "3e7a314c3ab9dced3cbab21703fc3ff796613625",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}