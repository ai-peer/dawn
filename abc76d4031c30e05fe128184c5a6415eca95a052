{
  "comments": [
    {
      "key": {
        "uuid": "905b7025_deefe069",
        "filename": "src/dawn_native/Resource.h",
        "patchSetId": 5
      },
      "lineNbr": 22,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2019-09-13T20:21:36Z",
      "side": 1,
      "message": "I\u0027m still not 100% sure why we need this in the frontend: the BuddyResourceAllocator doesn\u0027t set the mResource member of ResourceMemoryAllocation. And nothing in the frontend calls GetResource. The design you did with the BuddyAllocator as a helper class is great as it allows using it as a utility in the backends such that the frontend never needs to know about the allocation shenanigans we are doing.\n\nOr do you plan to use ResourceBase and HeapBase in the frontend at some point?\n\nSorry to keep asking questions and restructurations like this. Landing the design little by little helps with review but we lost the big picture since we diverged from the design docs.",
      "revId": "abc76d4031c30e05fe128184c5a6415eca95a052",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f896de2f_732b4ade",
        "filename": "src/dawn_native/ResourceMemoryAllocation.h",
        "patchSetId": 5
      },
      "lineNbr": 65,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2019-09-13T20:21:36Z",
      "side": 1,
      "message": "Please describe what the difference is between this mOffset and the mBlockOffset",
      "revId": "abc76d4031c30e05fe128184c5a6415eca95a052",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4f38e98d_475292df",
        "filename": "src/dawn_native/ResourceMemoryAllocator.h",
        "patchSetId": 5
      },
      "lineNbr": 23,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2019-09-13T20:21:36Z",
      "side": 1,
      "message": "HeapAllocator now that it deals with Heaps ?",
      "range": {
        "startLine": 23,
        "startChar": 10,
        "endLine": 23,
        "endChar": 33
      },
      "revId": "abc76d4031c30e05fe128184c5a6415eca95a052",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6819d774_50c57e18",
        "filename": "src/dawn_native/vulkan/ResourceMemoryVk.h",
        "patchSetId": 5
      },
      "lineNbr": 24,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2019-09-13T20:21:36Z",
      "side": 1,
      "message": "Wouldn\u0027t this corrspond to HeapBase instead? It encapsulates a VkMemory which is exactly like an ID3D12Heap",
      "range": {
        "startLine": 24,
        "startChar": 10,
        "endLine": 24,
        "endChar": 24
      },
      "revId": "abc76d4031c30e05fe128184c5a6415eca95a052",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    }
  ]
}