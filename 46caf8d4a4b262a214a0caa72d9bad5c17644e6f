{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "a5b4156d_ae1c25c9",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 9,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2021-12-09T17:29:16Z",
      "side": 1,
      "message": "nit: typo",
      "range": {
        "startLine": 9,
        "startChar": 3,
        "endLine": 9,
        "endChar": 27
      },
      "revId": "46caf8d4a4b262a214a0caa72d9bad5c17644e6f",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0e8e8e48_0d6cc8ef",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 9,
      "author": {
        "id": 1000017
      },
      "writtenOn": "2021-12-09T19:59:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a5b4156d_ae1c25c9",
      "range": {
        "startLine": 9,
        "startChar": 3,
        "endLine": 9,
        "endChar": 27
      },
      "revId": "46caf8d4a4b262a214a0caa72d9bad5c17644e6f",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c26c606c_eca413b0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000017
      },
      "writtenOn": "2021-12-08T17:59:50Z",
      "side": 1,
      "message": "It seems to me that a couple of validation rules for DepthStencilState are missing. I found this issue when I was debugging my patch at https://dawn-review.googlesource.com/c/dawn/+/71441 for readonly depth/stencil attachment. \n\nPTAL. Thank you.",
      "revId": "46caf8d4a4b262a214a0caa72d9bad5c17644e6f",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a105c142_b9dce2de",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-12-09T08:20:09Z",
      "side": 1,
      "message": "LGTM! Thanks for the fix",
      "revId": "46caf8d4a4b262a214a0caa72d9bad5c17644e6f",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "93ba0a3b_0e7bcfc2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2021-12-09T17:29:16Z",
      "side": 1,
      "message": "LGTM too",
      "revId": "46caf8d4a4b262a214a0caa72d9bad5c17644e6f",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b9089a76_4eae259c",
        "filename": "src/dawn_native/RenderPipeline.cpp",
        "patchSetId": 2
      },
      "lineNbr": 298,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-12-09T08:20:09Z",
      "side": 1,
      "message": "nit: Maybe we can add information about these two values in the error message (in parenthensis) to help developer know what is causing the issue?\n\nFor stencil there\u0027s just too much information so I think we can skip it (and revisit only if someone complains about it)",
      "revId": "46caf8d4a4b262a214a0caa72d9bad5c17644e6f",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5cd10958_eb041242",
        "filename": "src/dawn_native/RenderPipeline.cpp",
        "patchSetId": 2
      },
      "lineNbr": 298,
      "author": {
        "id": 1000017
      },
      "writtenOn": "2021-12-09T19:59:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b9089a76_4eae259c",
      "revId": "46caf8d4a4b262a214a0caa72d9bad5c17644e6f",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c78bde61_62320d83",
        "filename": "src/dawn_native/RenderPipeline.cpp",
        "patchSetId": 2
      },
      "lineNbr": 556,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-12-09T08:20:09Z",
      "side": 1,
      "message": "nit: this name is a bit misleading because you can have no depth test but still write depth. Maybe we can just check both condition manually in ValidateDepthStencilState?",
      "range": {
        "startLine": 556,
        "startChar": 9,
        "endLine": 556,
        "endChar": 25
      },
      "revId": "46caf8d4a4b262a214a0caa72d9bad5c17644e6f",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1daaf4a4_07a282d9",
        "filename": "src/dawn_native/RenderPipeline.cpp",
        "patchSetId": 2
      },
      "lineNbr": 556,
      "author": {
        "id": 1000017
      },
      "writtenOn": "2021-12-09T19:59:30Z",
      "side": 1,
      "message": "Done.\n\nStencilTestEnabled below has the same problem: it is possible that no stencil test (stencilCompareFunction is Always) but still write stencil (say failOp\u003dReplace, although it will never fail because stencil test always pass). But as Corentin mentioned above, maybe we can revisit it only if someone complains about it, together with the validation code.",
      "parentUuid": "c78bde61_62320d83",
      "range": {
        "startLine": 556,
        "startChar": 9,
        "endLine": 556,
        "endChar": 25
      },
      "revId": "46caf8d4a4b262a214a0caa72d9bad5c17644e6f",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a3c69b8d_6f8bc05b",
        "filename": "src/tests/unittests/validation/RenderPipelineValidationTests.cpp",
        "patchSetId": 2
      },
      "lineNbr": 176,
      "author": {
        "id": 1000017
      },
      "writtenOn": "2021-12-08T18:05:58Z",
      "side": 1,
      "message": "AFAIK, wgpu::TextureFormat::Stencil8 is not fully implemented in Dawn, but it has already been added into FormatList at https://dawn.googlesource.com/dawn/+/refs/heads/main/src/dawn_native/Format.cpp#330. That is sufficient for this patch. So I used Stencil8 (a stencil-only format) for the new test, instead of writing a TODO.",
      "revId": "46caf8d4a4b262a214a0caa72d9bad5c17644e6f",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8b7572cb_66a9da4a",
        "filename": "src/tests/unittests/validation/RenderPipelineValidationTests.cpp",
        "patchSetId": 2
      },
      "lineNbr": 176,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-12-09T08:20:09Z",
      "side": 1,
      "message": "LGTM since these tests are running on the Null backend.",
      "parentUuid": "a3c69b8d_6f8bc05b",
      "revId": "46caf8d4a4b262a214a0caa72d9bad5c17644e6f",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e3d684c9_91d334e4",
        "filename": "src/tests/unittests/validation/RenderPipelineValidationTests.cpp",
        "patchSetId": 2
      },
      "lineNbr": 176,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2021-12-09T17:29:16Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "8b7572cb_66a9da4a",
      "revId": "46caf8d4a4b262a214a0caa72d9bad5c17644e6f",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2ab8c205_98da7a19",
        "filename": "src/tests/unittests/validation/RenderPipelineValidationTests.cpp",
        "patchSetId": 2
      },
      "lineNbr": 176,
      "author": {
        "id": 1000017
      },
      "writtenOn": "2021-12-09T19:59:30Z",
      "side": 1,
      "message": "Sorry for the misleading because of my carelessness. In theory, the tests are running on Null backend, so it doesn\u0027t require Stencil8 to be implemented at backend. However, the validation failure is actually caused by https://dawn.googlesource.com/dawn/+/refs/heads/main/src/dawn_native/Device.cpp#667 because it was set as Unsupported at https://dawn.googlesource.com/dawn/+/refs/heads/main/src/dawn_native/Format.cpp#330 when Stencil8 is added into format list. \n\nSo, maybe we still need to comment the code block? or remove it and add a TODO? I prefer to comment the code because it is already done (and I verified the code, it was working if I remove the code at https://dawn.googlesource.com/dawn/+/refs/heads/main/src/dawn_native/Device.cpp#667).",
      "parentUuid": "e3d684c9_91d334e4",
      "revId": "46caf8d4a4b262a214a0caa72d9bad5c17644e6f",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}