{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "34d152a8_469c095b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 17
      },
      "lineNbr": 0,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2022-06-01T15:23:53Z",
      "side": 1,
      "message": "LGTM!",
      "revId": "6db8fe798516456c67676706c7dff2f8bc35567a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "326c3467_b1b1600b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 17
      },
      "lineNbr": 0,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2022-06-01T15:24:32Z",
      "side": 1,
      "message": "need to update CMakeLists.txt for the added files to make Kokoro build happy",
      "revId": "6db8fe798516456c67676706c7dff2f8bc35567a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "98a60dce_0263570d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 17
      },
      "lineNbr": 0,
      "author": {
        "id": 1000685
      },
      "writtenOn": "2022-06-01T19:57:36Z",
      "side": 1,
      "message": "Done.",
      "parentUuid": "326c3467_b1b1600b",
      "revId": "6db8fe798516456c67676706c7dff2f8bc35567a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a7d5f912_b5ddf413",
        "filename": "src/dawn/native/BlobCache.h",
        "patchSetId": 17
      },
      "lineNbr": 43,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2022-06-01T15:29:56Z",
      "side": 1,
      "message": "nit: if we forward declare `struct ID3DBlob` or maybe `class ID3DBlob`, I *think* we should be able to not have `template\u003ctypename T\u003e` and just use\n\n`static CachedBlob Create(Microsoft::WRL::ComPtr\u003cID3DBlob\u003e blob);`",
      "range": {
        "startLine": 41,
        "startChar": 4,
        "endLine": 43,
        "endChar": 61
      },
      "revId": "6db8fe798516456c67676706c7dff2f8bc35567a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6890769e_116fd3c1",
        "filename": "src/dawn/native/BlobCache.h",
        "patchSetId": 17
      },
      "lineNbr": 43,
      "author": {
        "id": 1000685
      },
      "writtenOn": "2022-06-01T19:57:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a7d5f912_b5ddf413",
      "range": {
        "startLine": 41,
        "startChar": 4,
        "endLine": 43,
        "endChar": 61
      },
      "revId": "6db8fe798516456c67676706c7dff2f8bc35567a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "da253ce8_0e6e42ca",
        "filename": "src/dawn/native/BlobCache.h",
        "patchSetId": 17
      },
      "lineNbr": 43,
      "author": {
        "id": 1000685
      },
      "writtenOn": "2022-06-01T20:36:10Z",
      "side": 1,
      "message": "Oops seems to fail MSVC. Not sure how to fix that. Will just change back to using template",
      "parentUuid": "6890769e_116fd3c1",
      "range": {
        "startLine": 41,
        "startChar": 4,
        "endLine": 43,
        "endChar": 61
      },
      "revId": "6db8fe798516456c67676706c7dff2f8bc35567a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "eadc93b6_7e8daf3d",
        "filename": "src/dawn/native/BlobCache.h",
        "patchSetId": 17
      },
      "lineNbr": 43,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2022-06-01T20:47:11Z",
      "side": 1,
      "message": "on MSVC it is `struct ID3D10Blob` instead of `class`. What about we just include dawn/common/Platform.h and the required header (\"dawn/common/windows_with_undefs.h\" or maybe \"dawn/native/d3d12/d3d12_platform.h\") in BlobCache.h behind an `#if defined(DAWN_PLATFORM_WINDOWS)`. Also, we can put the `Create(Microsoft::WRL::ComPtr\u003cID3DBlob\u003e blob);` behind that guard as well?",
      "parentUuid": "da253ce8_0e6e42ca",
      "range": {
        "startLine": 41,
        "startChar": 4,
        "endLine": 43,
        "endChar": 61
      },
      "revId": "6db8fe798516456c67676706c7dff2f8bc35567a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cb4ac635_d973ad42",
        "filename": "src/dawn/native/PipelineCache.h",
        "patchSetId": 17
      },
      "lineNbr": 51,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2022-06-01T15:23:53Z",
      "side": 1,
      "message": "are these changes still needed?",
      "revId": "6db8fe798516456c67676706c7dff2f8bc35567a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "92a2ff16_e91fa0ac",
        "filename": "src/dawn/native/PipelineCache.h",
        "patchSetId": 17
      },
      "lineNbr": 51,
      "author": {
        "id": 1000685
      },
      "writtenOn": "2022-06-01T19:57:36Z",
      "side": 1,
      "message": "Yep mentioned in https://dawn-review.googlesource.com/c/dawn/+/91180/comments/a7a80502_cde4f0f3.\nUnfortunately The DAWN_TRY macro has scopes {} that prevent the compiler from copy ellision which is strictly needed now (we cannot call destructor of temp local CachedBlob because the ownership of the data pointer is unique).",
      "parentUuid": "cb4ac635_d973ad42",
      "revId": "6db8fe798516456c67676706c7dff2f8bc35567a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}