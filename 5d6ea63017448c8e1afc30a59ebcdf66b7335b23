{
  "comments": [
    {
      "key": {
        "uuid": "3de71623_7b6937d5",
        "filename": "BUILD.gn",
        "patchSetId": 1
      },
      "lineNbr": 19,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2018-12-03T16:06:13Z",
      "side": 1,
      "message": "Instead we could split-off test targets and move them to src/tests/BUILD.gn and only conditionally reference them in a group (or even \"all\") if dawn_build_tests \u003d\u003d true.",
      "revId": "5d6ea63017448c8e1afc30a59ebcdf66b7335b23",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7c8e6e78_180276d2",
        "filename": "BUILD.gn",
        "patchSetId": 1
      },
      "lineNbr": 19,
      "author": {
        "id": 1000024
      },
      "writtenOn": "2018-12-03T18:54:37Z",
      "side": 1,
      "message": "Sure, giving that a try.\n\nThis seems to require moving mock_dawn_gen as well (because get_target_outputs() can only be used on targets in the current file).\n\nMoving that requires moving the dawn_generator template to a common place; I picked build_overrides/dawn (feel free to suggest something better).\n\nThis failed because it can\u0027t find the generator/main.py script. This is probably just me being dumb: is there a way in GN to make a path relative to the main BUILD file or something, so that it can be satisfied for the invocations of the template in both BUILD.gn and src/tests/BUILD.gn? Failing that, I suppose I could pass in an template argument for the root build dir path.\n\nAnyway let me know if this sounds like the right general direction, or if there\u0027s another approach you\u0027d prefer.",
      "parentUuid": "3de71623_7b6937d5",
      "revId": "5d6ea63017448c8e1afc30a59ebcdf66b7335b23",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "61ddf095_2ed241fc",
        "filename": "BUILD.gn",
        "patchSetId": 1
      },
      "lineNbr": 19,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2018-12-04T15:20:11Z",
      "side": 1,
      "message": "Oh, that\u0027s interesting. It would make sense to have the mock only in the test directory yeah.\n\nFor the generator, how about having it in generator/dawn_generator.gni? The generator path could be fixed with private variables, see `gn help import`",
      "parentUuid": "7c8e6e78_180276d2",
      "revId": "5d6ea63017448c8e1afc30a59ebcdf66b7335b23",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6cf64b1c_b36e1109",
        "filename": "BUILD.gn",
        "patchSetId": 1
      },
      "lineNbr": 19,
      "author": {
        "id": 1000024
      },
      "writtenOn": "2018-12-04T18:07:30Z",
      "side": 1,
      "message": "\u003e For the generator, how about having it in generator/dawn_generator.gni?\n\nDone.\n\n\u003e The generator path could be fixed with private variables, see `gn help import`\n\nI\u0027m not sure how a private variable would help. I\u0027ve added a dawn_root variable to build_overrides/dawn.gni and set it to // for dawn standalone. This is similar to what ANGLE does with angle_root: https://cs.chromium.org/chromium/src/third_party/angle/gni/angle.gni?q\u003dangle_root\u0026g\u003d0\u0026l\u003d12. LMK what you think.",
      "parentUuid": "61ddf095_2ed241fc",
      "revId": "5d6ea63017448c8e1afc30a59ebcdf66b7335b23",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9f2116e9_e06eb6b5",
        "filename": "BUILD.gn",
        "patchSetId": 1
      },
      "lineNbr": 19,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2018-12-05T13:30:21Z",
      "side": 1,
      "message": "Something like the following should work:\n\n dawn_json \u003d get_path_info(\"abspath\", \"../dawn.json\")\n\nIt would avoid the need to add a dawn_root in every project using Dawn.\n\nTechnically dawn_root could be defined in a helper gni the same way, if we start to have too many things using get_path_info.\n\nIn general is is fine to use \"../..:dawn_something\" as long as the walk up the directory tree stays in this repo. We already do this in src/fuzzers/BUILD.gn",
      "parentUuid": "6cf64b1c_b36e1109",
      "revId": "5d6ea63017448c8e1afc30a59ebcdf66b7335b23",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "554a9948_a5c52e83",
        "filename": "BUILD.gn",
        "patchSetId": 1
      },
      "lineNbr": 19,
      "author": {
        "id": 1000024
      },
      "writtenOn": "2018-12-05T16:12:41Z",
      "side": 1,
      "message": "I noticed that. I was going to replace them with dawn_root. :)\n\nUsing relative paths means you have to adjust them all if you move files around. IMHO, dawn_root is cleaner and makes intent clear.",
      "parentUuid": "9f2116e9_e06eb6b5",
      "revId": "5d6ea63017448c8e1afc30a59ebcdf66b7335b23",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "adced726_406ee693",
        "filename": "BUILD.gn",
        "patchSetId": 1
      },
      "lineNbr": 19,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2018-12-05T16:20:46Z",
      "side": 1,
      "message": "Ok but then let\u0027s add dawn_root\u0027s definition using get_path_info in dawn_overrides_with_defaults.gni or something like that. We shouldn\u0027t require the embedders to set dawn_root since we can discover it ourselves.",
      "parentUuid": "554a9948_a5c52e83",
      "revId": "5d6ea63017448c8e1afc30a59ebcdf66b7335b23",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ea538350_a67c9846",
        "filename": "BUILD.gn",
        "patchSetId": 1
      },
      "lineNbr": 158,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2018-12-03T16:06:13Z",
      "side": 1,
      "message": "Why is this gated on build_tests? It\u0027s mildly annoying that we have to special case a ton of things because Skia\u0027s build/config is different from Chromium\u0027s. Do you think this could be added to Skia instead? (even if it is a noop).",
      "revId": "5d6ea63017448c8e1afc30a59ebcdf66b7335b23",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "44d974ec_af048f31",
        "filename": "BUILD.gn",
        "patchSetId": 1
      },
      "lineNbr": 158,
      "author": {
        "id": 1000024
      },
      "writtenOn": "2018-12-03T18:54:37Z",
      "side": 1,
      "message": "Could be my GN ignorance, but this seems to require a build/config directory existing in Skia, which I doubt they\u0027d let land.",
      "parentUuid": "ea538350_a67c9846",
      "revId": "5d6ea63017448c8e1afc30a59ebcdf66b7335b23",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4e962d72_f102f206",
        "filename": "BUILD.gn",
        "patchSetId": 1
      },
      "lineNbr": 158,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2018-12-04T15:20:11Z",
      "side": 1,
      "message": "Do you think they would be amenable to have something like \u003cdirectory of their choice\u003e/build/config/BUILD.gn? This is possible using .gn secondary_sources. See `gn help dotfile`.",
      "parentUuid": "44d974ec_af048f31",
      "revId": "5d6ea63017448c8e1afc30a59ebcdf66b7335b23",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "66f40720_906da956",
        "filename": "BUILD.gn",
        "patchSetId": 1
      },
      "lineNbr": 158,
      "author": {
        "id": 1000024
      },
      "writtenOn": "2018-12-04T16:56:35Z",
      "side": 1,
      "message": "Since this is the last dependency on build/, I\u0027d really prefer not to add it.\n\nCould we put it behind a different flag? Or put it into build_overrides somehow?",
      "parentUuid": "4e962d72_f102f206",
      "revId": "5d6ea63017448c8e1afc30a59ebcdf66b7335b23",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "44516861_9db3fa76",
        "filename": "BUILD.gn",
        "patchSetId": 1
      },
      "lineNbr": 195,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2018-12-03T16:06:13Z",
      "side": 1,
      "message": "Which targets need this? I\u0027d assume it is only for codegen so can we make it more precise?",
      "revId": "5d6ea63017448c8e1afc30a59ebcdf66b7335b23",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dd39da8e_4c8d91f6",
        "filename": "BUILD.gn",
        "patchSetId": 1
      },
      "lineNbr": 195,
      "author": {
        "id": 1000024
      },
      "writtenOn": "2018-12-04T15:10:57Z",
      "side": 1,
      "message": "Yes, it\u0027s only one function:\n\ngen/third_party/externals/dawn/dawn_wire/WireCmd_autogen.cpp:666:12: error: function \u0027dawnOrigin3DGetExtraRequiredSize\u0027 is not needed and will not be emitted [-Werror,-Wunneeded-internal-declaration]\n    size_t dawnOrigin3DGetExtraRequiredSize(const dawnOrigin3D\u0026 record) {\n\nI moved the warning to libdawn_wire_sources.",
      "parentUuid": "44516861_9db3fa76",
      "revId": "5d6ea63017448c8e1afc30a59ebcdf66b7335b23",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6f534127_cbe97108",
        "filename": "BUILD.gn",
        "patchSetId": 1
      },
      "lineNbr": 195,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2018-12-04T15:20:11Z",
      "side": 1,
      "message": "Mmmh it shouldn\u0027t be needed because we use DAWN_UNUSED_FUNC on it. Maybe the macro needs to be updated?",
      "parentUuid": "dd39da8e_4c8d91f6",
      "revId": "5d6ea63017448c8e1afc30a59ebcdf66b7335b23",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cf440b17_a5410ea3",
        "filename": "BUILD.gn",
        "patchSetId": 1
      },
      "lineNbr": 195,
      "author": {
        "id": 1000024
      },
      "writtenOn": "2018-12-04T16:56:35Z",
      "side": 1,
      "message": "The macro seems to work for -Wunused-function, but not for -Wunneeded-internal-declaration. I tried tweaking it to no avail.\n\n__attribute__((unused)) on the function fixes it. I guess having both that and the macro will work, if you\u0027re amenable to that. #beltandsuspenders\n\nBTW, it\u0027s pretty easy to repro. Just add -Wall to extra_warnings in build/config/clang/BUILD.gn. (Although the warning only seems to fire for this one instance of the function, which is odd.)",
      "parentUuid": "6f534127_cbe97108",
      "revId": "5d6ea63017448c8e1afc30a59ebcdf66b7335b23",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9155efeb_c756f7c6",
        "filename": "build_overrides/build.gni",
        "patchSetId": 1
      },
      "lineNbr": 20,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2018-12-03T16:06:13Z",
      "side": 1,
      "message": "Uuuh that\u0027s Chromium\u0027s main build_overrides file. Could this go in dawn.gni and be dawn_build_tests instead?",
      "revId": "5d6ea63017448c8e1afc30a59ebcdf66b7335b23",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "67fc0b53_f078e91e",
        "filename": "build_overrides/build.gni",
        "patchSetId": 1
      },
      "lineNbr": 20,
      "author": {
        "id": 1000024
      },
      "writtenOn": "2018-12-04T18:07:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9155efeb_c756f7c6",
      "revId": "5d6ea63017448c8e1afc30a59ebcdf66b7335b23",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8bc7dd3c_86521af0",
        "filename": "build_overrides/dawn_features.gni",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2018-12-03T16:06:13Z",
      "side": 1,
      "message": "Why does this need to be moved? Is it only because Skia needs to enable a single backend at a time for now?",
      "revId": "5d6ea63017448c8e1afc30a59ebcdf66b7335b23",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9c3a22a9_2cc50603",
        "filename": "build_overrides/dawn_features.gni",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000024
      },
      "writtenOn": "2018-12-04T18:07:30Z",
      "side": 1,
      "message": "Yes.",
      "parentUuid": "8bc7dd3c_86521af0",
      "revId": "5d6ea63017448c8e1afc30a59ebcdf66b7335b23",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fef684ae_450abced",
        "filename": "third_party/BUILD.gn",
        "patchSetId": 1
      },
      "lineNbr": 62,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2018-12-03T16:06:13Z",
      "side": 1,
      "message": "nit: add a comment to explain what this warning is.",
      "revId": "5d6ea63017448c8e1afc30a59ebcdf66b7335b23",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e7b8ea95_a39a29c0",
        "filename": "third_party/BUILD.gn",
        "patchSetId": 1
      },
      "lineNbr": 62,
      "author": {
        "id": 1000024
      },
      "writtenOn": "2018-12-04T18:07:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fef684ae_450abced",
      "revId": "5d6ea63017448c8e1afc30a59ebcdf66b7335b23",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "366568e3_55dfc178",
        "filename": "third_party/BUILD.gn",
        "patchSetId": 1
      },
      "lineNbr": 130,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2018-12-03T16:06:13Z",
      "side": 1,
      "message": "I\u0027d rather keep this in third-party if possible and use Skia\u0027s copy of gtest.",
      "revId": "5d6ea63017448c8e1afc30a59ebcdf66b7335b23",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8ed2cb47_f4e40b9c",
        "filename": "third_party/BUILD.gn",
        "patchSetId": 1
      },
      "lineNbr": 130,
      "author": {
        "id": 1000024
      },
      "writtenOn": "2018-12-04T18:07:30Z",
      "side": 1,
      "message": "Done.",
      "parentUuid": "366568e3_55dfc178",
      "revId": "5d6ea63017448c8e1afc30a59ebcdf66b7335b23",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e8dbc678_d219d924",
        "filename": "third_party/BUILD.gn",
        "patchSetId": 1
      },
      "lineNbr": 251,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2018-12-03T16:06:13Z",
      "side": 1,
      "message": "Woops I forgot to run gn format and the CQ didn\u0027t complain. This is obviously ok to land so it could be a separate patch.",
      "revId": "5d6ea63017448c8e1afc30a59ebcdf66b7335b23",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "588a3921_04761e9e",
        "filename": "third_party/BUILD.gn",
        "patchSetId": 1
      },
      "lineNbr": 251,
      "author": {
        "id": 1000024
      },
      "writtenOn": "2018-12-04T18:53:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e8dbc678_d219d924",
      "revId": "5d6ea63017448c8e1afc30a59ebcdf66b7335b23",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    }
  ]
}