{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "1a89cd78_d3dd4c7e",
        "filename": "src/tint/resolver/resolver.cc",
        "patchSetId": 1
      },
      "lineNbr": 1420,
      "author": {
        "id": 1002361
      },
      "writtenOn": "2022-10-11T18:13:54Z",
      "side": 1,
      "message": "When processing, say, `v[i]` here, we will process the three `sorted` expressions in reverse order: `v`, `i`, then `v[i]`. We don\u0027t know when processing `v` that it\u0027s part of an index accessor expression, and that it is a partial reference. When we process `v[i]`, though, we will set the sem::Reference::is_partial to true. But I don\u0027t know how to get back that sem::Reference from `v` alone later in the UA.",
      "revId": "0a257bc20b538369a9a672a2c629c4fefb9892c3",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8ad35adb_80ddb66e",
        "filename": "src/tint/resolver/resolver.cc",
        "patchSetId": 1
      },
      "lineNbr": 2228,
      "author": {
        "id": 1002361
      },
      "writtenOn": "2022-10-11T18:13:54Z",
      "side": 1,
      "message": "At this point, we don\u0027t know whether the identifier expression is the object of an index/member accessor expression.",
      "revId": "0a257bc20b538369a9a672a2c629c4fefb9892c3",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Code-Review=MAX,user=non_uploader","label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "0a257bc20b538369a9a672a2c629c4fefb9892c3",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforced_gerrit"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "0a257bc20b538369a9a672a2c629c4fefb9892c3",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}