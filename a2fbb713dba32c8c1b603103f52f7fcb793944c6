{
  "comments": [
    {
      "key": {
        "uuid": "d130a22f_b4505b76",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 7,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2018-12-08T02:14:05Z",
      "side": 1,
      "message": "Looking at it in this CL, I don\u0027t love the name imageHeight - it\u0027s kind of confusing what it means. We can update that later in sketch.webidl though, it doesn\u0027t block this CL.\n\nmaybe imagePitchInRows? slicePitchInRows? slicePitchHeight? \"slice\" may sort of collide with the 2darray meaning of \"slice\", but that\u0027s technically correct (I think) and \"image\" seems worse.",
      "revId": "a2fbb713dba32c8c1b603103f52f7fcb793944c6",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aad4954f_70183ace",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 7,
      "author": {
        "id": 1000248
      },
      "writtenOn": "2018-12-10T18:24:52Z",
      "side": 1,
      "message": "I agree. Above all I\u0027d like consistency with rowPitch, so columnPitch?\n\nAdditionally, units should match (both in bytes, or both in texels).",
      "parentUuid": "d130a22f_b4505b76",
      "revId": "a2fbb713dba32c8c1b603103f52f7fcb793944c6",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "63bda7dc_254eab48",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 7,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2018-12-11T09:47:27Z",
      "side": 1,
      "message": "rowPitchInTexels is weird because we still need to keep the 256 byte alignment and that wouldn\u0027t be possible to express for 3-byte formats if we ever support them (256 is 85.3333.. texels).\n\ncolumnPitchInBytes is weird too because it has to be a multiple of rowPitchInBytes so why not just express it as columnPitchInRowPitches which is the same as columnPitchInTexels?\n\nAnyway that\u0027s a good question, can you raise an issue / PR and we can discuss it in the next meeting.",
      "parentUuid": "aad4954f_70183ace",
      "revId": "a2fbb713dba32c8c1b603103f52f7fcb793944c6",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6176226e_98bfcf40",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 7,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2018-12-11T20:09:39Z",
      "side": 1,
      "message": "Opened https://github.com/gpuweb/gpuweb/issues/148 (don\u0027t have Brandon\u0027s github username so didn\u0027t @)",
      "parentUuid": "63bda7dc_254eab48",
      "revId": "a2fbb713dba32c8c1b603103f52f7fcb793944c6",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8fed11a2_ff28f07e",
        "filename": "src/dawn_native/CommandBuffer.cpp",
        "patchSetId": 6
      },
      "lineNbr": 97,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2018-12-08T02:14:05Z",
      "side": 1,
      "message": "This expression has gotten a bit complicated. I would like to split it out:\n\n  uint32_t slicePitch \u003d rowPitch * imageHeight;\n  uint32_t sliceSize \u003d rowPitch * (copySize.height - 1) + copySize.width;\n  *bufferSize \u003d slicePitch * (copySize.depth - 1) + sliceSize;\n\nAlso, what I\u0027ve just written doesn\u0027t actually match what you wrote. I\u0027m not 100% sure whether slicePitch should be (rowPitch * imageHeight) or (rowPitch * (imageHeight - 1) + copySize.width). (rowPitch * imageHeight) seems more likely to me.",
      "revId": "a2fbb713dba32c8c1b603103f52f7fcb793944c6",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "65f37173_5f8dedc3",
        "filename": "src/dawn_native/CommandBuffer.cpp",
        "patchSetId": 6
      },
      "lineNbr": 97,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2018-12-10T14:52:15Z",
      "side": 1,
      "message": "I\u0027m 99% sure slicePitch \u003d rowPitch * imageHeight",
      "parentUuid": "8fed11a2_ff28f07e",
      "revId": "a2fbb713dba32c8c1b603103f52f7fcb793944c6",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a2620e32_46a148b8",
        "filename": "src/dawn_native/CommandBuffer.cpp",
        "patchSetId": 6
      },
      "lineNbr": 97,
      "author": {
        "id": 1000248
      },
      "writtenOn": "2018-12-10T18:24:52Z",
      "side": 1,
      "message": "Yeah. You guys are right.",
      "parentUuid": "65f37173_5f8dedc3",
      "revId": "a2fbb713dba32c8c1b603103f52f7fcb793944c6",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e08b4574_da478bcf",
        "filename": "src/dawn_native/CommandBuffer.cpp",
        "patchSetId": 6
      },
      "lineNbr": 401,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2018-12-08T02:14:05Z",
      "side": 1,
      "message": "I think this could be called inside ComputeTextureCopyBufferSize instead of here.",
      "revId": "a2fbb713dba32c8c1b603103f52f7fcb793944c6",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b39a21fa_6b19d001",
        "filename": "src/dawn_native/CommandBuffer.cpp",
        "patchSetId": 6
      },
      "lineNbr": 401,
      "author": {
        "id": 1000248
      },
      "writtenOn": "2018-12-10T18:24:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e08b4574_da478bcf",
      "revId": "a2fbb713dba32c8c1b603103f52f7fcb793944c6",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2310f1e2_6940efb3",
        "filename": "src/dawn_native/CommandBuffer.cpp",
        "patchSetId": 6
      },
      "lineNbr": 427,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2018-12-08T02:14:05Z",
      "side": 1,
      "message": "same here",
      "revId": "a2fbb713dba32c8c1b603103f52f7fcb793944c6",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "deaac43f_16868c29",
        "filename": "src/dawn_native/CommandBuffer.cpp",
        "patchSetId": 6
      },
      "lineNbr": 427,
      "author": {
        "id": 1000248
      },
      "writtenOn": "2018-12-10T18:24:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2310f1e2_6940efb3",
      "revId": "a2fbb713dba32c8c1b603103f52f7fcb793944c6",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "002684d6_aebdfe22",
        "filename": "src/dawn_native/d3d12/TextureCopySplitter.cpp",
        "patchSetId": 6
      },
      "lineNbr": 45,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2018-12-10T14:52:15Z",
      "side": 1,
      "message": "This file will need to be updated once we support 3D texture, or using 3D copies to update 2D array textures.",
      "revId": "a2fbb713dba32c8c1b603103f52f7fcb793944c6",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6d48f63e_7a33b883",
        "filename": "src/dawn_native/d3d12/TextureCopySplitter.cpp",
        "patchSetId": 6
      },
      "lineNbr": 45,
      "author": {
        "id": 1000248
      },
      "writtenOn": "2018-12-10T18:24:52Z",
      "side": 1,
      "message": "Right. I saw this - but I couldn\u0027t figure out what still needs implementing for 3D. I added  imageHeight (with depth) tests in copySplitTests and everything seemed to work the way I would expect. If I add this back in, I\u0027ll have to back those tests out. I\u0027d like to see if Austin has a comment before I revert.",
      "parentUuid": "002684d6_aebdfe22",
      "revId": "a2fbb713dba32c8c1b603103f52f7fcb793944c6",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "11dfec5e_bbc81fcc",
        "filename": "src/dawn_native/d3d12/TextureCopySplitter.cpp",
        "patchSetId": 6
      },
      "lineNbr": 45,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2018-12-10T19:44:20Z",
      "side": 1,
      "message": "I think the changes Brandon has already made here are correct. Using the imageHeight as the buffer \"height\" should be fine. The docs don\u0027t have any additional alignment requirements for slicePitch / imageHeight so I don\u0027t think extra splits are necessary.\n\nWe can verify this once we have 3D textures.",
      "parentUuid": "6d48f63e_7a33b883",
      "revId": "a2fbb713dba32c8c1b603103f52f7fcb793944c6",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "621e5e42_454f9e45",
        "filename": "src/dawn_native/d3d12/TextureCopySplitter.cpp",
        "patchSetId": 6
      },
      "lineNbr": 45,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2018-12-11T09:47:27Z",
      "side": 1,
      "message": "Ok sounds good.",
      "parentUuid": "11dfec5e_bbc81fcc",
      "revId": "a2fbb713dba32c8c1b603103f52f7fcb793944c6",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2df146c6_d1be000b",
        "filename": "src/tests/unittests/validation/CopyCommandsValidationTests.cpp",
        "patchSetId": 6
      },
      "lineNbr": 343,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2018-12-10T14:52:15Z",
      "side": 1,
      "message": "nit: ImageHeightConstraint",
      "revId": "a2fbb713dba32c8c1b603103f52f7fcb793944c6",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "955e78a9_8a986f06",
        "filename": "src/tests/unittests/validation/CopyCommandsValidationTests.cpp",
        "patchSetId": 6
      },
      "lineNbr": 343,
      "author": {
        "id": 1000248
      },
      "writtenOn": "2018-12-10T18:24:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2df146c6_d1be000b",
      "revId": "a2fbb713dba32c8c1b603103f52f7fcb793944c6",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1dc2572e_a1c9dff9",
        "filename": "src/tests/unittests/validation/CopyCommandsValidationTests.cpp",
        "patchSetId": 6
      },
      "lineNbr": 350,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2018-12-10T14:52:15Z",
      "side": 1,
      "message": "nit: Can we have a test for exactly 4?",
      "revId": "a2fbb713dba32c8c1b603103f52f7fcb793944c6",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "80234695_0426b1aa",
        "filename": "src/tests/unittests/validation/CopyCommandsValidationTests.cpp",
        "patchSetId": 6
      },
      "lineNbr": 350,
      "author": {
        "id": 1000248
      },
      "writtenOn": "2018-12-10T18:24:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1dc2572e_a1c9dff9",
      "revId": "a2fbb713dba32c8c1b603103f52f7fcb793944c6",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "30f614e8_06a8b75f",
        "filename": "src/tests/unittests/validation/CopyCommandsValidationTests.cpp",
        "patchSetId": 6
      },
      "lineNbr": 545,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2018-12-10T14:52:15Z",
      "side": 1,
      "message": "nit: ImageHeightConstraint",
      "revId": "a2fbb713dba32c8c1b603103f52f7fcb793944c6",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "98affbaf_2507a33d",
        "filename": "src/tests/unittests/validation/CopyCommandsValidationTests.cpp",
        "patchSetId": 6
      },
      "lineNbr": 545,
      "author": {
        "id": 1000248
      },
      "writtenOn": "2018-12-10T18:24:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "30f614e8_06a8b75f",
      "revId": "a2fbb713dba32c8c1b603103f52f7fcb793944c6",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fd6762ae_9d72c91c",
        "filename": "src/tests/unittests/validation/CopyCommandsValidationTests.cpp",
        "patchSetId": 6
      },
      "lineNbr": 552,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2018-12-10T14:52:15Z",
      "side": 1,
      "message": "ditto.",
      "revId": "a2fbb713dba32c8c1b603103f52f7fcb793944c6",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0abe8c58_cf658b34",
        "filename": "src/tests/unittests/validation/CopyCommandsValidationTests.cpp",
        "patchSetId": 6
      },
      "lineNbr": 552,
      "author": {
        "id": 1000248
      },
      "writtenOn": "2018-12-10T18:24:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fd6762ae_9d72c91c",
      "revId": "a2fbb713dba32c8c1b603103f52f7fcb793944c6",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    }
  ]
}