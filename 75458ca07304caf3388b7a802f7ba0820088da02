{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "1d390f0e_20a1e882",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-12-16T08:49:40Z",
      "side": 1,
      "message": "LGTM",
      "revId": "75458ca07304caf3388b7a802f7ba0820088da02",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "09b70269_59aa698e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2022-12-16T20:30:28Z",
      "side": 1,
      "message": "LGTM too. looks like you\u0027re need to suppress the failing CTS tests with expectations.txt",
      "revId": "75458ca07304caf3388b7a802f7ba0820088da02",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4f49a405_b4cb24fe",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1003201
      },
      "writtenOn": "2022-12-17T03:00:42Z",
      "side": 1,
      "message": "Updated, thanks.\n\nThe timing change of Unmapped/DestroyedBeforeCallback error seems to affect the CTS tests.\n\nFor example there is a test case like the following\n\n// the buffer is invalid\n1. const promise \u003d t.expectGPUError(\u0027validation\u0027, buffer.mapAsync(params), true);\n2. t.shouldReject(\u0027OperationError\u0027, promise);\n3. buffer.unmap();\n\nIt tests that the promise is rejected with operation error because of an operation on invalid buffer at 2 and unmap on invalid buffer is valid.\n\nBut with the change in this CL, the test case above doesn\u0027t work as test author\u0027s expectation because the Dawn Wire client will reject the callback immediately with UnmappedBeforeCallback status (Abort error) when unmap() is called on pending map.\n\nThe lines 1-3 are executed synchronously so at line 3 buffer is being pending map (because it doesn\u0027t received a response from server yet). Then the promise will be rejected with UnmappedBeforeCallback status.\n\nProbably the test will be rewritten like\n\n1. const promise \u003d t.expectGPUError(\u0027validation\u0027, buffer.mapAsync(params), true);\n2. t.shouldReject(\u0027OperationError\u0027, promise);\n3. await promise; // Insert await\n4. buffer.unmap();",
      "parentUuid": "09b70269_59aa698e",
      "revId": "75458ca07304caf3388b7a802f7ba0820088da02",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c2e47c33_e78a9c2a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1003201
      },
      "writtenOn": "2022-12-17T03:24:10Z",
      "side": 1,
      "message": "And I think the new callback timing matches the spec\n\nhttps://gpuweb.github.io/gpuweb/#dom-gpubuffer-unmap",
      "parentUuid": "4f49a405_b4cb24fe",
      "revId": "75458ca07304caf3388b7a802f7ba0820088da02",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}