{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "8e2af3ab_53b354d3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2022-01-13T22:51:38Z",
      "side": 1,
      "message": "PTAL!",
      "revId": "567e86a246b10bbc6ccfa5e491a989f691954d4b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ebdf6232_3215d084",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-01-14T13:01:05Z",
      "side": 1,
      "message": "LGTM too, but slight preference to add copyB2TInternal and copyT2BInternal instead.",
      "revId": "567e86a246b10bbc6ccfa5e491a989f691954d4b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e890bf15_08b6b655",
        "filename": "dawn.json",
        "patchSetId": 2
      },
      "lineNbr": 2373,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-01-14T13:01:05Z",
      "side": 1,
      "message": "I assume this would deprecate copyT2TInternal? Can be done as a follow up.",
      "revId": "567e86a246b10bbc6ccfa5e491a989f691954d4b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "865e7185_284c8ec5",
        "filename": "dawn.json",
        "patchSetId": 2
      },
      "lineNbr": 2373,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2022-01-14T17:54:44Z",
      "side": 1,
      "message": "yes - chrome is still using it so this for Canvas, so I would need to land and then update in Chrome first",
      "parentUuid": "e890bf15_08b6b655",
      "revId": "567e86a246b10bbc6ccfa5e491a989f691954d4b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b9bf1297_126cac23",
        "filename": "docs/features/dawn_internal_usages.md",
        "patchSetId": 2
      },
      "lineNbr": 34,
      "author": {
        "id": 1002831
      },
      "writtenOn": "2022-01-13T23:14:26Z",
      "side": 1,
      "message": "I think it would be easier to understand the usage/examples if they followed immediately after the \"Add ...\" bullets above. Or at least some sort of delimiter between the two different examples being shown here.",
      "range": {
        "startLine": 13,
        "startChar": 0,
        "endLine": 34,
        "endChar": 3
      },
      "revId": "567e86a246b10bbc6ccfa5e491a989f691954d4b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fd81ad7c_67600522",
        "filename": "docs/features/dawn_internal_usages.md",
        "patchSetId": 2
      },
      "lineNbr": 34,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2022-01-14T21:46:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b9bf1297_126cac23",
      "range": {
        "startLine": 13,
        "startChar": 0,
        "endLine": 34,
        "endChar": 3
      },
      "revId": "567e86a246b10bbc6ccfa5e491a989f691954d4b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b2fc5395_1885e5b8",
        "filename": "src/dawn_native/CommandValidation.cpp",
        "patchSetId": 2
      },
      "lineNbr": 454,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-01-14T13:01:05Z",
      "side": 1,
      "message": "This function is super hot code, that\u0027s why I was a thinking it would be better to add \"CopyB2TInternal\" and \"CopyT2BInternal\" so that we don\u0027t add this extra branch. WDYT? It seems only the copy commands would need internal versions.\n\nBut maybe it\u0027s not that hot if it is only for the copy commands. BindGroups are the hottest part but do their own validation on creation.\n\nBuffers are an other story because they are used for vertex/index/indirect",
      "revId": "567e86a246b10bbc6ccfa5e491a989f691954d4b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9391a92a_b602bb05",
        "filename": "src/dawn_native/CommandValidation.cpp",
        "patchSetId": 2
      },
      "lineNbr": 454,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2022-01-14T17:54:44Z",
      "side": 1,
      "message": "yea, currently it is only Copy commands and beginRenderPass that get an extra branch - which I think is OK. And this expands nicely if/when we need internal usages for the buffers too. If it becomes a problem, we can pay extra binary size to generate code for internal/non-internal pass encoders if internal usages need to expand there.",
      "parentUuid": "b2fc5395_1885e5b8",
      "revId": "567e86a246b10bbc6ccfa5e491a989f691954d4b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "606e5730_cbadfe4d",
        "filename": "src/dawn_native/CommandValidation.cpp",
        "patchSetId": 2
      },
      "lineNbr": 454,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2022-01-18T20:05:35Z",
      "side": 1,
      "message": "I think this is OK since it\u0027s only copy commands and beginRenderPass.",
      "parentUuid": "9391a92a_b602bb05",
      "revId": "567e86a246b10bbc6ccfa5e491a989f691954d4b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6771b769_625a5524",
        "filename": "src/dawn_native/CommandValidation.cpp",
        "patchSetId": 2
      },
      "lineNbr": 454,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-01-24T08:14:40Z",
      "side": 1,
      "message": "Then we should probably remove CopyB2TInternal and reuse this new extension for the other Chromium thing that needs CopyB2TInternal",
      "parentUuid": "606e5730_cbadfe4d",
      "revId": "567e86a246b10bbc6ccfa5e491a989f691954d4b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "568813d2_734aef3e",
        "filename": "src/dawn_native/CommandValidation.cpp",
        "patchSetId": 2
      },
      "lineNbr": 454,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2022-01-24T16:37:55Z",
      "side": 1,
      "message": "yea I already added a deprecation note in the docs and will remove it from Chrome.",
      "parentUuid": "6771b769_625a5524",
      "revId": "567e86a246b10bbc6ccfa5e491a989f691954d4b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e64ed515_77dfa9dd",
        "filename": "src/dawn_native/CommandValidation.h",
        "patchSetId": 2
      },
      "lineNbr": 83,
      "author": {
        "id": 1002831
      },
      "writtenOn": "2022-01-13T23:14:26Z",
      "side": 1,
      "message": "Maybe worth to default this to Default? Then we don\u0027t need to update [1].",
      "range": {
        "startLine": 83,
        "startChar": 32,
        "endLine": 83,
        "endChar": 56
      },
      "revId": "567e86a246b10bbc6ccfa5e491a989f691954d4b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8fbb9269_7dbdea3f",
        "filename": "src/dawn_native/CommandValidation.h",
        "patchSetId": 2
      },
      "lineNbr": 83,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2022-01-14T18:49:46Z",
      "side": 1,
      "message": "I prefer being explicit so that it\u0027s very clear where this argument is passed in. Regarding Corentin\u0027s other comment about hot code, right now with this CL it\u0027s clear we\u0027re not introducing a branch in performance-sensitive parts of the code. Using a default argument would obscure this a bit more.",
      "parentUuid": "e64ed515_77dfa9dd",
      "range": {
        "startLine": 83,
        "startChar": 32,
        "endLine": 83,
        "endChar": 56
      },
      "revId": "567e86a246b10bbc6ccfa5e491a989f691954d4b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "58e7bb9a_5d819b1d",
        "filename": "src/dawn_native/CommandValidation.h",
        "patchSetId": 2
      },
      "lineNbr": 83,
      "author": {
        "id": 1002831
      },
      "writtenOn": "2022-01-15T00:43:37Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "8fbb9269_7dbdea3f",
      "range": {
        "startLine": 83,
        "startChar": 32,
        "endLine": 83,
        "endChar": 56
      },
      "revId": "567e86a246b10bbc6ccfa5e491a989f691954d4b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2573bc36_3a8b82a8",
        "filename": "src/dawn_native/CopyTextureForBrowserHelper.cpp",
        "patchSetId": 2
      },
      "lineNbr": 361,
      "author": {
        "id": 1002831
      },
      "writtenOn": "2022-01-13T23:14:26Z",
      "side": 1,
      "message": "[1]",
      "range": {
        "startLine": 353,
        "startChar": 8,
        "endLine": 361,
        "endChar": 65
      },
      "revId": "567e86a246b10bbc6ccfa5e491a989f691954d4b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c76f989a_ce38b3b2",
        "filename": "src/tests/unittests/validation/InternalUsageValidationTests.cpp",
        "patchSetId": 2
      },
      "lineNbr": 62,
      "author": {
        "id": 1002831
      },
      "writtenOn": "2022-01-13T23:14:26Z",
      "side": 1,
      "message": "I think short substr check is fine, but I think that the substr should also be unique enough to guarantee that the failure is the expected failure, otherwise we run into the same issues where we could fail for the wrong reason.\n\nIn this case, I think \"is invalid\" is too generic for this validation. It\u0027s generic enough that I would just consider leaving it out entirely, or making it a bit more specific.",
      "range": {
        "startLine": 62,
        "startChar": 61,
        "endLine": 62,
        "endChar": 73
      },
      "revId": "567e86a246b10bbc6ccfa5e491a989f691954d4b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "342f33c3_1b254194",
        "filename": "src/tests/unittests/validation/InternalUsageValidationTests.cpp",
        "patchSetId": 2
      },
      "lineNbr": 62,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2022-01-14T21:46:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c76f989a_ce38b3b2",
      "range": {
        "startLine": 62,
        "startChar": 61,
        "endLine": 62,
        "endChar": 73
      },
      "revId": "567e86a246b10bbc6ccfa5e491a989f691954d4b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "35bef9d9_4ae7d806",
        "filename": "src/tests/unittests/validation/InternalUsageValidationTests.cpp",
        "patchSetId": 2
      },
      "lineNbr": 234,
      "author": {
        "id": 1002831
      },
      "writtenOn": "2022-01-13T23:14:26Z",
      "side": 1,
      "message": "Just as a topic for discussion (potentially outside the scope of this CL):\n\nIf we do error matching in the tests, maybe the paradigm of having \"control\" cases isn\u0027t necessary as much anymore? WDYT?",
      "range": {
        "startLine": 225,
        "startChar": 4,
        "endLine": 234,
        "endChar": 5
      },
      "revId": "567e86a246b10bbc6ccfa5e491a989f691954d4b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a4e02f36_3ed02c78",
        "filename": "src/tests/unittests/validation/InternalUsageValidationTests.cpp",
        "patchSetId": 2
      },
      "lineNbr": 234,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-01-14T13:01:05Z",
      "side": 1,
      "message": "Control cases also test that the validation passes for many cases as well. IMHO it provides more coverage, are about the same amount of work, and should be less change-detecting than adding message checks for every call.",
      "parentUuid": "35bef9d9_4ae7d806",
      "range": {
        "startLine": 225,
        "startChar": 4,
        "endLine": 234,
        "endChar": 5
      },
      "revId": "567e86a246b10bbc6ccfa5e491a989f691954d4b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}