{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "411710c3_0df4b1e9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2022-05-25T10:06:40Z",
      "side": 1,
      "message": "PTAL, thanks!",
      "revId": "2bc97484f2ecfd36d8c65c113bf716e5bff8bda9",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e578fb71_4e11f8b5",
        "filename": "src/dawn/native/Device.h",
        "patchSetId": 1
      },
      "lineNbr": 368,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-05-25T13:38:32Z",
      "side": 1,
      "message": "nit: Can you add a TODO(\u003cnew bug to make toggles supported on adapter creation as well\u003e) to make this not overridable in the future?",
      "revId": "2bc97484f2ecfd36d8c65c113bf716e5bff8bda9",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c492a88f_18011e40",
        "filename": "src/dawn/native/Device.h",
        "patchSetId": 1
      },
      "lineNbr": 368,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2022-05-26T02:19:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e578fb71_4e11f8b5",
      "revId": "2bc97484f2ecfd36d8c65c113bf716e5bff8bda9",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "49cb4b42_967b4d18",
        "filename": "src/dawn/native/d3d12/DeviceD3D12.cpp",
        "patchSetId": 1
      },
      "lineNbr": 787,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-05-25T13:38:32Z",
      "side": 1,
      "message": "u-u-nit: we can have an early out if !IsFeatureEnabled. or even\n\n if ((feature \u003d\u003d DP4A || F16) \u0026\u0026 !DXC) {return false;}\n return DeviceBase::IsFeatureEnabled();",
      "revId": "2bc97484f2ecfd36d8c65c113bf716e5bff8bda9",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bf1e5ebe_d6a5617c",
        "filename": "src/dawn/native/d3d12/DeviceD3D12.cpp",
        "patchSetId": 1
      },
      "lineNbr": 787,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2022-05-26T02:19:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "49cb4b42_967b4d18",
      "revId": "2bc97484f2ecfd36d8c65c113bf716e5bff8bda9",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6476129d_c4340ee5",
        "filename": "src/dawn/native/vulkan/BackendVk.cpp",
        "patchSetId": 1
      },
      "lineNbr": 340,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-05-25T13:38:32Z",
      "side": 1,
      "message": "[1] I think this logic and comment needs to be updated for Vulkan 1.3. We could maybe just set appInfo.apiVersion \u003d mGlobalInfo.apiVersion? If we want to be safe it could be:\n\n appInfo.apiVersion \u003d std::min(mGlobalInfo.apiVersion, VK_MAKE_VERSION(1, 3, 0))\n \nsince now we support Vulkan 1.3 features",
      "revId": "2bc97484f2ecfd36d8c65c113bf716e5bff8bda9",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f234de36_2466287a",
        "filename": "src/dawn/native/vulkan/BackendVk.cpp",
        "patchSetId": 1
      },
      "lineNbr": 340,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2022-05-26T02:19:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6476129d_c4340ee5",
      "revId": "2bc97484f2ecfd36d8c65c113bf716e5bff8bda9",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b93157dd_a4d6301c",
        "filename": "src/dawn/native/vulkan/VulkanInfo.cpp",
        "patchSetId": 1
      },
      "lineNbr": 155,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-05-25T13:38:32Z",
      "side": 1,
      "message": "Interesting. Maybe use this quote from the Vulkan spec?\n\n\u003e Instance-level functionality or behavior added by a new core version of the API must not be used unless it is supported by the instance as determined by vkEnumerateInstanceVersion and the specified version of VkApplicationInfo::apiVersion.\n\nWith the comment at [1] I think we can use mGlobalInfo.apiVersion instead.",
      "revId": "2bc97484f2ecfd36d8c65c113bf716e5bff8bda9",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "591a2b86_a1fd62eb",
        "filename": "src/dawn/native/vulkan/VulkanInfo.cpp",
        "patchSetId": 1
      },
      "lineNbr": 155,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2022-05-26T02:19:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b93157dd_a4d6301c",
      "revId": "2bc97484f2ecfd36d8c65c113bf716e5bff8bda9",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "849be235_addf2141",
        "filename": "src/dawn/native/vulkan/VulkanInfo.cpp",
        "patchSetId": 1
      },
      "lineNbr": 157,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-05-25T13:38:32Z",
      "side": 1,
      "message": "Did you mean to also add querying to fill shaderIntegerDotProductFeatures ?",
      "revId": "2bc97484f2ecfd36d8c65c113bf716e5bff8bda9",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f6941481_09388231",
        "filename": "src/dawn/native/vulkan/VulkanInfo.cpp",
        "patchSetId": 1
      },
      "lineNbr": 157,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2022-05-26T02:19:57Z",
      "side": 1,
      "message": "Done\n\nDo you mean shaderIntegerDotProductProperties?",
      "parentUuid": "849be235_addf2141",
      "revId": "2bc97484f2ecfd36d8c65c113bf716e5bff8bda9",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}