{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "d65e7731_5a335e3b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-04-04T08:30:19Z",
      "side": 1,
      "message": "Ben PTAL! I think you missed this one.",
      "revId": "eddd8db935af5c2d4a94cceb07fbad0855d8def1",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "958fbedd_6b9f12cb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2022-04-04T08:33:12Z",
      "side": 1,
      "message": "https://www.w3.org/TR/WGSL/#textual-structure states:\n\n\u003e The program text must not include a null character.\n\n\nSo... This shouldn\u0027t be reachable code?",
      "revId": "eddd8db935af5c2d4a94cceb07fbad0855d8def1",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "50928478_6ba0d117",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-04-04T08:34:31Z",
      "side": 1,
      "message": "This is for the entryPoint passed from the API to match against the shader. WGSL can\u0027t contain a \\0, but \"main\\0\" shouldn\u0027t match with the entryPoint \"main\" in the shader.",
      "parentUuid": "958fbedd_6b9f12cb",
      "revId": "eddd8db935af5c2d4a94cceb07fbad0855d8def1",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f4062885_a198f709",
        "filename": "src/dawn/node/binding/Converter.cpp",
        "patchSetId": 3
      },
      "lineNbr": 554,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2022-04-04T09:26:42Z",
      "side": 1,
      "message": "What do you think about putting this logic in `src/dawn/node/binding/Converter.h`\u0027s string conversion function, and using that?\n\n```\n        // std::string to C string\n        inline bool Convert(const char*\u0026 out, const std::string\u0026 in) {\n            out \u003d in.c_str();\n            return true;\n        }\n```\n\nOr do you think there\u0027s no other places where null characters might creep in?",
      "range": {
        "startLine": 543,
        "startChar": 0,
        "endLine": 554,
        "endChar": 36
      },
      "revId": "eddd8db935af5c2d4a94cceb07fbad0855d8def1",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}