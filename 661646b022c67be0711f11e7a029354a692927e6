{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "62be9542_3c835a2d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 11,
      "author": {
        "id": 1000262
      },
      "writtenOn": "2024-05-28T22:31:09Z",
      "side": 1,
      "message": "Nit: People like it when you wrap descriptions to 70 characters.",
      "range": {
        "startLine": 11,
        "startChar": 76,
        "endLine": 11,
        "endChar": 124
      },
      "revId": "661646b022c67be0711f11e7a029354a692927e6",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "59f6f4b9_300f8836",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 11,
      "author": {
        "id": 1003787
      },
      "writtenOn": "2024-06-05T07:55:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "62be9542_3c835a2d",
      "range": {
        "startLine": 11,
        "startChar": 76,
        "endLine": 11,
        "endChar": 124
      },
      "revId": "661646b022c67be0711f11e7a029354a692927e6",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "150f7120_3f60c6ed",
        "filename": "src/dawn/native/Adapter.cpp",
        "patchSetId": 4
      },
      "lineNbr": 421,
      "author": {
        "id": 1000262
      },
      "writtenOn": "2024-05-28T22:31:09Z",
      "side": 1,
      "message": "For Windows we want to use JUST the order returned by `EnumAdaptersByPowerPreference` or `EnumAdapters1` with no second guessing by Dawn. \n\n* End users can adjust the order of adapters in \"Settings \u003e System \u003e Display \u003e Graphics\".\n* On my desktop machine, I\u0027ve connected all of my monitors to the NVidia GPU even though there is an \"integrated\" Intel GPU available. \n\nSecond guessing means the incorrect adapter can be chosen in the above two instances.",
      "range": {
        "startLine": 421,
        "startChar": 15,
        "endLine": 421,
        "endChar": 37
      },
      "revId": "661646b022c67be0711f11e7a029354a692927e6",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "45e5946a_2a927c34",
        "filename": "src/dawn/native/Adapter.cpp",
        "patchSetId": 4
      },
      "lineNbr": 421,
      "author": {
        "id": 1003787
      },
      "writtenOn": "2024-06-05T07:55:21Z",
      "side": 1,
      "message": "Is there any way in DXGI to determine whether an IDXGIAdapter is a discrete or integrated GPU? Ideally, we would set the [mAdapterType](https://source.chromium.org/chromium/chromium/src/+/main:third_party/dawn/src/dawn/native/PhysicalDevice.h?q\u003dsymbol%3A%5Cbdawn%3A%3Anative%3A%3APhysicalDeviceBase%3A%3AmAdapterType%5Cb%20case%3Ayes) correctly initially for cases where `EnumAdaptersByGpuPreference` is used, and then this function can be left as-is for a no-op since the `stable_sort` below would preserve the order.\n\nIf not, we would have to move the sorting into the Instance or the Backend so that we can avoid doing it for D3D. This complicates things for scenarios where there are multiple backends, since the current sorting sorts by the inferred power preference first, followed by the backend, which could end up interweaving adapters from different backends.",
      "parentUuid": "150f7120_3f60c6ed",
      "range": {
        "startLine": 421,
        "startChar": 15,
        "endLine": 421,
        "endChar": 37
      },
      "revId": "661646b022c67be0711f11e7a029354a692927e6",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8ab070ce_300eaded",
        "filename": "src/dawn/native/d3d/BackendD3D.cpp",
        "patchSetId": 4
      },
      "lineNbr": 138,
      "author": {
        "id": 1000262
      },
      "writtenOn": "2024-05-28T22:31:09Z",
      "side": 1,
      "message": "Can the factory ever be nullptr?",
      "range": {
        "startLine": 138,
        "startChar": 8,
        "endLine": 138,
        "endChar": 27
      },
      "revId": "661646b022c67be0711f11e7a029354a692927e6",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b8bc3763_eb5b7937",
        "filename": "src/dawn/native/d3d/BackendD3D.cpp",
        "patchSetId": 4
      },
      "lineNbr": 138,
      "author": {
        "id": 1000262
      },
      "writtenOn": "2024-05-28T22:31:09Z",
      "side": 1,
      "message": "The notion of currency is an interesting one to take into account. \n\nFor our purposes, the important thing is to always use the SAME factory when deciding which adapter to give clients so that all Chromium systems use the same high powered GPU. Adapters can come and go if, for example, you log into a remote desktop session in a VM. The factory is no longer current but the adapters are still perfectly fine to use. \n\nFor Chromium, currency only really matters if there are no longer references any adapters, the factory is no longer current. But in practice, that tends not to happen at least for the primary adapter because the GPU process terminates when the device becomes removed. \n\nI\u0027m OK with leaving currency evaluation out for the initial CL.",
      "range": {
        "startLine": 138,
        "startChar": 32,
        "endLine": 138,
        "endChar": 53
      },
      "revId": "661646b022c67be0711f11e7a029354a692927e6",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6aca8535_55d13b81",
        "filename": "src/dawn/native/d3d/BackendD3D.cpp",
        "patchSetId": 4
      },
      "lineNbr": 138,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2024-05-31T05:38:04Z",
      "side": 1,
      "message": "what happens if you use a factory that is not current ?",
      "parentUuid": "b8bc3763_eb5b7937",
      "range": {
        "startLine": 138,
        "startChar": 32,
        "endLine": 138,
        "endChar": 53
      },
      "revId": "661646b022c67be0711f11e7a029354a692927e6",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "661a8f34_db39d936",
        "filename": "src/dawn/native/d3d/BackendD3D.cpp",
        "patchSetId": 4
      },
      "lineNbr": 138,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2024-05-31T05:38:04Z",
      "side": 1,
      "message": "indeed it should never be null, unless of course the new factory you make fails.\nWhat about only replacing `mFactory` if creating the new one succeeds?",
      "parentUuid": "8ab070ce_300eaded",
      "range": {
        "startLine": 138,
        "startChar": 8,
        "endLine": 138,
        "endChar": 27
      },
      "revId": "661646b022c67be0711f11e7a029354a692927e6",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1316d41d_ce2b046a",
        "filename": "src/dawn/native/d3d/BackendD3D.cpp",
        "patchSetId": 4
      },
      "lineNbr": 138,
      "author": {
        "id": 1000262
      },
      "writtenOn": "2024-06-04T17:56:08Z",
      "side": 1,
      "message": "Creating a factory creates a snapshot of the state of the adapters currently on the system. If the factory is no longer current, it just means that the list has changed in some way. Adapters may have been added, others may have disappeared. You can keep using adapters in the non-current list who\u0027s status has not changed but you\u0027ll need to create a new factory to get an updated list.\n\nYou can poll the factory to determine whether it is current. You can also be notified, via an event, when the list changes.\n\nReasons for the factory becoming non-current include, but are not limited to:\n* Logging into a machine via remote desktop.\n* Driver updates. Only software will appear in lists while drivers are being installed.\n* Attaching the tablet portion of a Surface Book into its corresponding keyboard. The NVidia adapter is housed behind the keyboard and becomes accessible upon attach.\n* Detaching the tablet portion of the Surface Book from its corresponding keyboard. If applications happen to be using the NVidia adapter when the user requests a disconnect, the user will receive a warning before they\u0027re allowed to proceed. If the user proceeds, D3D devices on the NVidia GPU will become removed.",
      "parentUuid": "6aca8535_55d13b81",
      "range": {
        "startLine": 138,
        "startChar": 32,
        "endLine": 138,
        "endChar": 53
      },
      "revId": "661646b022c67be0711f11e7a029354a692927e6",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5731bd78_2f2d0c73",
        "filename": "src/dawn/native/d3d/BackendD3D.cpp",
        "patchSetId": 4
      },
      "lineNbr": 138,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2024-06-05T04:52:35Z",
      "side": 1,
      "message": "\u003e so that all Chromium systems use the same high powered GPU\n\nshouldn\u0027t we achieve this with the LUID then?\n\nIt sounds like if Chrome/Skia is using one GPU, then some system state changes, and then you make a WebGPU adapter - if we rely on the order from the list, it will be different from Chrome\u0027s adapter",
      "parentUuid": "1316d41d_ce2b046a",
      "range": {
        "startLine": 138,
        "startChar": 32,
        "endLine": 138,
        "endChar": 53
      },
      "revId": "661646b022c67be0711f11e7a029354a692927e6",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "81aca986_4f07801c",
        "filename": "src/dawn/native/d3d/BackendD3D.cpp",
        "patchSetId": 4
      },
      "lineNbr": 138,
      "author": {
        "id": 1003787
      },
      "writtenOn": "2024-06-05T07:55:21Z",
      "side": 1,
      "message": "I have a follow-up change coming up that will check for whether an Adapter of the requested power preference from Dawn is currently being used and if so, return that instead of re-enumerating. This should prevent multiple users of Dawn from being given different adapters of the same power preference. For example, here\u0027s what would happen in this scenario (assuming same power preference requested):\n- WebGPU requests an adapter from Dawn.\n- Dawn enumerates and returns the first adapter matching the power preference.\n- Since WebGPU takes a strong reference on the adapter, it won\u0027t be cleaned up and still available in Dawn.\n- WebNN requests an adapter from Dawn.\n- Since there\u0027s a strong reference to an adapter, Dawn returns that adapter to WebNN instead of re-enumerating.\n\nWhat are your thoughts on that @Austin?",
      "parentUuid": "5731bd78_2f2d0c73",
      "range": {
        "startLine": 138,
        "startChar": 32,
        "endLine": 138,
        "endChar": 53
      },
      "revId": "661646b022c67be0711f11e7a029354a692927e6",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "668d2523_7aedac84",
        "filename": "src/dawn/native/d3d/BackendD3D.cpp",
        "patchSetId": 4
      },
      "lineNbr": 138,
      "author": {
        "id": 1003787
      },
      "writtenOn": "2024-06-05T07:55:21Z",
      "side": 1,
      "message": "Removing the IsCurrent check pending discussion in other thread.\n\nIf we add it back, I\u0027ll replace `mFactory` only if creating the new one succeeds - this seems fine since the adapters from an old `mFactory` are still valid.",
      "parentUuid": "661a8f34_db39d936",
      "range": {
        "startLine": 138,
        "startChar": 8,
        "endLine": 138,
        "endChar": 27
      },
      "revId": "661646b022c67be0711f11e7a029354a692927e6",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6de303e8_4bdf90da",
        "filename": "src/dawn/native/d3d/BackendD3D.cpp",
        "patchSetId": 4
      },
      "lineNbr": 138,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2024-06-06T16:36:33Z",
      "side": 1,
      "message": "Without looking at it, I can\u0027t know for sure - but I think that it might not work.\n\nIn Chrome, Graphite uses an entirely separate wgpu::Instance from WebGPU. And in fact, there\u0027s a separate wgpu::Instance per page right now.\n\nGiven that the weakref list of physical devices is stored in instance-\u003eBackendConnection, we\u0027ll have separate lists per instance, so I don\u0027t think you\u0027ll be able to check correctly whether an adapter of the requested power preference from Dawn is currently being used.\n\nSo, I think using LUIDs may be the best way to ensure we use the same adapter.",
      "parentUuid": "81aca986_4f07801c",
      "range": {
        "startLine": 138,
        "startChar": 32,
        "endLine": 138,
        "endChar": 53
      },
      "revId": "661646b022c67be0711f11e7a029354a692927e6",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bc2ed423_36e425ec",
        "filename": "src/dawn/native/d3d/BackendD3D.cpp",
        "patchSetId": 4
      },
      "lineNbr": 138,
      "author": {
        "id": 1003787
      },
      "writtenOn": "2024-06-07T00:06:15Z",
      "side": 1,
      "message": "Ahh I see, that makes sense. In that case though, we currently wouldn\u0027t know the LUID that other instances/graphite are using. We would need a global way to keep track of what LUID is being used, perhaps a static map on the dawn::Instance?",
      "parentUuid": "6de303e8_4bdf90da",
      "range": {
        "startLine": 138,
        "startChar": 32,
        "endLine": 138,
        "endChar": 53
      },
      "revId": "661646b022c67be0711f11e7a029354a692927e6",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ec508965_7affd965",
        "filename": "src/dawn/native/d3d/BackendD3D.cpp",
        "patchSetId": 4
      },
      "lineNbr": 138,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2024-06-07T17:56:54Z",
      "side": 1,
      "message": "I think we could have global tracking in Chrome\u0027s GPU process somewhere? \nRight now, WebGPU is doing `gl::QueryD3D11DeviceObjectFromANGLE()`\n\nI\u0027m thinking we add something which queries the LUID. If using Graphite, it\u0027ll ask the graphite device. If not using Graphite, it\u0027ll ask ANGLE\n\n(in any case, I agree with the conclusion of this thread. Let\u0027s not deal with factory currency right now. eventually we may want to, but no need for now)",
      "parentUuid": "bc2ed423_36e425ec",
      "range": {
        "startLine": 138,
        "startChar": 32,
        "endLine": 138,
        "endChar": 53
      },
      "revId": "661646b022c67be0711f11e7a029354a692927e6",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "29b56e5a_67f92d8c",
        "filename": "src/dawn/native/d3d/BackendD3D.cpp",
        "patchSetId": 4
      },
      "lineNbr": 357,
      "author": {
        "id": 1000262
      },
      "writtenOn": "2024-05-28T22:31:09Z",
      "side": 1,
      "message": "```suggestion\n        ComPtr\u003cIDXGIAdapter1\u003e dxgiAdapter;\n```\n\nThe constructor of ComPtr already initializes the pointer member variable to nullptr.",
      "range": {
        "startLine": 357,
        "startChar": 42,
        "endLine": 357,
        "endChar": 51
      },
      "revId": "661646b022c67be0711f11e7a029354a692927e6",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "90203c3d_36501842",
        "filename": "src/dawn/native/d3d/BackendD3D.cpp",
        "patchSetId": 4
      },
      "lineNbr": 357,
      "author": {
        "id": 1003787
      },
      "writtenOn": "2024-06-05T07:55:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "29b56e5a_67f92d8c",
      "range": {
        "startLine": 357,
        "startChar": 42,
        "endLine": 357,
        "endChar": 51
      },
      "revId": "661646b022c67be0711f11e7a029354a692927e6",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}