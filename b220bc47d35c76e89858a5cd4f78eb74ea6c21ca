{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "ea134713_594034e9",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 11,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2021-08-27T21:33:49Z",
      "side": 1,
      "message": "nice! :D I\u0027m quite pleasantly surprised about how much test code we could reuse here",
      "range": {
        "startLine": 11,
        "startChar": 0,
        "endLine": 11,
        "endChar": 139
      },
      "revId": "b220bc47d35c76e89858a5cd4f78eb74ea6c21ca",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "92e6285b_e0b9fceb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2021-08-27T21:33:49Z",
      "side": 1,
      "message": "LGTM, some nits",
      "revId": "b220bc47d35c76e89858a5cd4f78eb74ea6c21ca",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ecf996fd_e79f3b46",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-08-30T07:49:59Z",
      "side": 1,
      "message": "LGTM too with some nits.",
      "revId": "b220bc47d35c76e89858a5cd4f78eb74ea6c21ca",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "44430ecb_aff79b71",
        "filename": "src/dawn_native/d3d12/TextureD3D12.cpp",
        "patchSetId": 7
      },
      "lineNbr": 354,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2021-08-27T21:33:49Z",
      "side": 1,
      "message": "surprised we don\u0027t have to do this in the Metal backend. Because Metal has default: UNREACHABLE()\n\nwe should fix that and explicitly list all cases, otherwise it\u0027s easy for an enum to be added and forget to handle it",
      "revId": "b220bc47d35c76e89858a5cd4f78eb74ea6c21ca",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "23dc6805_42a59fe7",
        "filename": "src/dawn_native/d3d12/TextureD3D12.cpp",
        "patchSetId": 7
      },
      "lineNbr": 354,
      "author": {
        "id": 1002831
      },
      "writtenOn": "2021-08-30T23:07:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "44430ecb_aff79b71",
      "revId": "b220bc47d35c76e89858a5cd4f78eb74ea6c21ca",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0f6739e6_393694bc",
        "filename": "src/tests/end2end/CompressedTextureFormatTests.cpp",
        "patchSetId": 7
      },
      "lineNbr": 1278,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2021-08-27T21:33:49Z",
      "side": 1,
      "message": "nit: don\u0027t need to add these yet, unless we\u0027re going to have a test that uses them in this suite",
      "range": {
        "startLine": 1276,
        "startChar": 8,
        "endLine": 1278,
        "endChar": 0
      },
      "revId": "b220bc47d35c76e89858a5cd4f78eb74ea6c21ca",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fed083ea_93c5912a",
        "filename": "src/tests/end2end/CompressedTextureFormatTests.cpp",
        "patchSetId": 7
      },
      "lineNbr": 1278,
      "author": {
        "id": 1002831
      },
      "writtenOn": "2021-08-30T23:07:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0f6739e6_393694bc",
      "range": {
        "startLine": 1276,
        "startChar": 8,
        "endLine": 1278,
        "endChar": 0
      },
      "revId": "b220bc47d35c76e89858a5cd4f78eb74ea6c21ca",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c4cba77c_76f2afe5",
        "filename": "src/tests/unittests/validation/TextureValidationTests.cpp",
        "patchSetId": 7
      },
      "lineNbr": 601,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-08-30T07:49:59Z",
      "side": 1,
      "message": "nit: // Test that using various MipLevelCount is allowed for compressed formats.",
      "revId": "b220bc47d35c76e89858a5cd4f78eb74ea6c21ca",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "965e3d85_f75f1399",
        "filename": "src/tests/unittests/validation/TextureValidationTests.cpp",
        "patchSetId": 7
      },
      "lineNbr": 601,
      "author": {
        "id": 1002831
      },
      "writtenOn": "2021-08-30T23:07:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c4cba77c_76f2afe5",
      "revId": "b220bc47d35c76e89858a5cd4f78eb74ea6c21ca",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1d75ec5e_924fc344",
        "filename": "src/tests/unittests/validation/TextureValidationTests.cpp",
        "patchSetId": 7
      },
      "lineNbr": 622,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-08-30T07:49:59Z",
      "side": 1,
      "message": "nit: compressed",
      "range": {
        "startLine": 622,
        "startChar": 70,
        "endLine": 622,
        "endChar": 72
      },
      "revId": "b220bc47d35c76e89858a5cd4f78eb74ea6c21ca",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "568a1ec2_1edc7806",
        "filename": "src/tests/unittests/validation/TextureValidationTests.cpp",
        "patchSetId": 7
      },
      "lineNbr": 622,
      "author": {
        "id": 1002831
      },
      "writtenOn": "2021-08-30T23:07:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1d75ec5e_924fc344",
      "range": {
        "startLine": 622,
        "startChar": 70,
        "endLine": 622,
        "endChar": 72
      },
      "revId": "b220bc47d35c76e89858a5cd4f78eb74ea6c21ca",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5c3d5199_d6dc1a8d",
        "filename": "src/tests/unittests/validation/TextureValidationTests.cpp",
        "patchSetId": 7
      },
      "lineNbr": 632,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-08-30T07:49:59Z",
      "side": 1,
      "message": "ditto",
      "range": {
        "startLine": 632,
        "startChar": 61,
        "endLine": 632,
        "endChar": 63
      },
      "revId": "b220bc47d35c76e89858a5cd4f78eb74ea6c21ca",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9e0704ee_44ddd5f1",
        "filename": "src/tests/unittests/validation/TextureValidationTests.cpp",
        "patchSetId": 7
      },
      "lineNbr": 632,
      "author": {
        "id": 1002831
      },
      "writtenOn": "2021-08-30T23:07:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5c3d5199_d6dc1a8d",
      "range": {
        "startLine": 632,
        "startChar": 61,
        "endLine": 632,
        "endChar": 63
      },
      "revId": "b220bc47d35c76e89858a5cd4f78eb74ea6c21ca",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "73c5dde2_53c8cc51",
        "filename": "src/tests/unittests/validation/TextureValidationTests.cpp",
        "patchSetId": 7
      },
      "lineNbr": 657,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-08-30T07:49:59Z",
      "side": 1,
      "message": "nit: here and for with, and for ETC, I think we should use 30 instead of 31 so that we check the size must be aligned to 4 and alignment to 2 is not enough (so we test exactly both sides of the limit)",
      "revId": "b220bc47d35c76e89858a5cd4f78eb74ea6c21ca",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "762b135b_d0d70b3e",
        "filename": "src/tests/unittests/validation/TextureValidationTests.cpp",
        "patchSetId": 7
      },
      "lineNbr": 657,
      "author": {
        "id": 1002831
      },
      "writtenOn": "2021-08-30T23:07:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "73c5dde2_53c8cc51",
      "revId": "b220bc47d35c76e89858a5cd4f78eb74ea6c21ca",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0ca397b7_3594378b",
        "filename": "src/tests/unittests/validation/TextureValidationTests.cpp",
        "patchSetId": 7
      },
      "lineNbr": 679,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2021-08-27T21:33:49Z",
      "side": 1,
      "message": "nit: BC -\u003e ETC",
      "range": {
        "startLine": 678,
        "startChar": 0,
        "endLine": 679,
        "endChar": 80
      },
      "revId": "b220bc47d35c76e89858a5cd4f78eb74ea6c21ca",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8bb83eb5_c3cca094",
        "filename": "src/tests/unittests/validation/TextureValidationTests.cpp",
        "patchSetId": 7
      },
      "lineNbr": 679,
      "author": {
        "id": 1002831
      },
      "writtenOn": "2021-08-30T23:07:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0ca397b7_3594378b",
      "range": {
        "startLine": 678,
        "startChar": 0,
        "endLine": 679,
        "endChar": 80
      },
      "revId": "b220bc47d35c76e89858a5cd4f78eb74ea6c21ca",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8b69477f_990d5b3e",
        "filename": "src/tests/unittests/wire/WireWGPUDevicePropertiesTests.cpp",
        "patchSetId": 7
      },
      "lineNbr": 26,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-08-30T07:49:59Z",
      "side": 1,
      "message": "u-nit: This test file is just checking we can set one extension so it doesn\u0027t necessarily needs to be updated.",
      "revId": "b220bc47d35c76e89858a5cd4f78eb74ea6c21ca",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c9e15202_29232d35",
        "filename": "src/tests/unittests/wire/WireWGPUDevicePropertiesTests.cpp",
        "patchSetId": 7
      },
      "lineNbr": 26,
      "author": {
        "id": 1002831
      },
      "writtenOn": "2021-08-30T23:07:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8b69477f_990d5b3e",
      "revId": "b220bc47d35c76e89858a5cd4f78eb74ea6c21ca",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1a190d5d_5a94b89e",
        "filename": "src/utils/TextureUtils.cpp",
        "patchSetId": 7
      },
      "lineNbr": 56,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2021-08-27T21:33:49Z",
      "side": 1,
      "message": "nit: prefer a switch statement here",
      "range": {
        "startLine": 43,
        "startChar": 4,
        "endLine": 56,
        "endChar": 5
      },
      "revId": "b220bc47d35c76e89858a5cd4f78eb74ea6c21ca",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "34af0467_16d315cd",
        "filename": "src/utils/TextureUtils.cpp",
        "patchSetId": 7
      },
      "lineNbr": 56,
      "author": {
        "id": 1002831
      },
      "writtenOn": "2021-08-30T23:07:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1a190d5d_5a94b89e",
      "range": {
        "startLine": 43,
        "startChar": 4,
        "endLine": 56,
        "endChar": 5
      },
      "revId": "b220bc47d35c76e89858a5cd4f78eb74ea6c21ca",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cc65cfda_e5320928",
        "filename": "src/utils/TextureUtils.h",
        "patchSetId": 7
      },
      "lineNbr": 25,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2021-08-27T21:33:49Z",
      "side": 1,
      "message": "hm, this was already off by two. Do you know why this is different from kKnownFormatCount ?",
      "range": {
        "startLine": 25,
        "startChar": 52,
        "endLine": 25,
        "endChar": 55
      },
      "revId": "b220bc47d35c76e89858a5cd4f78eb74ea6c21ca",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a88a192c_f921dd58",
        "filename": "src/utils/TextureUtils.h",
        "patchSetId": 7
      },
      "lineNbr": 25,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-08-30T07:49:59Z",
      "side": 1,
      "message": "I think it is missing Stencil8 and R8 BG8 Biplanar 420 unorm? Not sure if we should list multi-planar formats here though.",
      "parentUuid": "cc65cfda_e5320928",
      "range": {
        "startLine": 25,
        "startChar": 52,
        "endLine": 25,
        "endChar": 55
      },
      "revId": "b220bc47d35c76e89858a5cd4f78eb74ea6c21ca",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "19e16723_a68fa8c6",
        "filename": "src/utils/TextureUtils.h",
        "patchSetId": 7
      },
      "lineNbr": 25,
      "author": {
        "id": 1002831
      },
      "writtenOn": "2021-08-30T23:07:15Z",
      "side": 1,
      "message": "Yup those are the missing ones. As Corentin suggested, probably will not add them to this list atm. If needed we can do so in another change.",
      "parentUuid": "a88a192c_f921dd58",
      "range": {
        "startLine": 25,
        "startChar": 52,
        "endLine": 25,
        "endChar": 55
      },
      "revId": "b220bc47d35c76e89858a5cd4f78eb74ea6c21ca",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9f4ad64b_2a72b8f4",
        "filename": "src/utils/TextureUtils.h",
        "patchSetId": 7
      },
      "lineNbr": 109,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2021-08-27T21:33:49Z",
      "side": 1,
      "message": "I think it would be good to add some static_asserts that the size of this array is the sum of the sizes of the BC/ETC2/ASTC arrays",
      "range": {
        "startLine": 109,
        "startChar": 57,
        "endLine": 109,
        "endChar": 75
      },
      "revId": "b220bc47d35c76e89858a5cd4f78eb74ea6c21ca",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "aaec9dd5_962c1290",
        "filename": "src/utils/TextureUtils.h",
        "patchSetId": 7
      },
      "lineNbr": 109,
      "author": {
        "id": 1002831
      },
      "writtenOn": "2021-08-30T23:07:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9f4ad64b_2a72b8f4",
      "range": {
        "startLine": 109,
        "startChar": 57,
        "endLine": 109,
        "endChar": 75
      },
      "revId": "b220bc47d35c76e89858a5cd4f78eb74ea6c21ca",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}