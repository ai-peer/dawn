{
  "comments": [
    {
      "key": {
        "uuid": "31d6eb46_96116fc0",
        "filename": "src/dawn_native/CommandEncoder.cpp",
        "patchSetId": 6
      },
      "lineNbr": 213,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2019-06-13T09:58:42Z",
      "side": 1,
      "message": "This should be blockHeightInTexels",
      "range": {
        "startLine": 213,
        "startChar": 63,
        "endLine": 213,
        "endChar": 81
      },
      "revId": "e54d28292da6f921fb3853e085ba4c131d2947cd",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f8b8b8f3_101d6b29",
        "filename": "src/dawn_native/CommandEncoder.cpp",
        "patchSetId": 6
      },
      "lineNbr": 213,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2019-06-14T04:14:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "31d6eb46_96116fc0",
      "range": {
        "startLine": 213,
        "startChar": 63,
        "endLine": 213,
        "endChar": 81
      },
      "revId": "e54d28292da6f921fb3853e085ba4c131d2947cd",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6c6bc681_123e7601",
        "filename": "src/dawn_native/CommandEncoder.cpp",
        "patchSetId": 6
      },
      "lineNbr": 221,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2019-06-13T09:58:42Z",
      "side": 1,
      "message": "Note: at some point we\u0027ll want texture::GetFormat to return something like angle\u0027s InternalFormat structure so that we don\u0027t need to go through switch statements everywhere. https://cs.chromium.org/chromium/src/third_party/angle/src/libANGLE/formatutils.h?sq\u003dpackage:chromium\u0026g\u003d0\u0026l\u003d80",
      "revId": "e54d28292da6f921fb3853e085ba4c131d2947cd",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "65310c38_1707e257",
        "filename": "src/dawn_native/CommandEncoder.cpp",
        "patchSetId": 6
      },
      "lineNbr": 221,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2019-06-14T04:14:51Z",
      "side": 1,
      "message": "Ack\nI have added a TODO at Texture::GetFormat() for this issue.",
      "parentUuid": "6c6bc681_123e7601",
      "revId": "e54d28292da6f921fb3853e085ba4c131d2947cd",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "50adc94f_1adcf28e",
        "filename": "src/dawn_native/CommandEncoder.cpp",
        "patchSetId": 6
      },
      "lineNbr": 246,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2019-06-13T09:58:42Z",
      "side": 1,
      "message": "nit: This could also use BlockHeightInTexels",
      "range": {
        "startLine": 245,
        "startChar": 2,
        "endLine": 246,
        "endChar": 43
      },
      "revId": "e54d28292da6f921fb3853e085ba4c131d2947cd",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0bb0c94e_e98bd4ba",
        "filename": "src/dawn_native/CommandEncoder.cpp",
        "patchSetId": 6
      },
      "lineNbr": 246,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2019-06-14T04:14:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "50adc94f_1adcf28e",
      "range": {
        "startLine": 245,
        "startChar": 2,
        "endLine": 246,
        "endChar": 43
      },
      "revId": "e54d28292da6f921fb3853e085ba4c131d2947cd",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1e723d45_f0bdfb38",
        "filename": "src/dawn_native/CommandEncoder.cpp",
        "patchSetId": 6
      },
      "lineNbr": 257,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2019-06-13T09:58:42Z",
      "side": 1,
      "message": "nit: these two could use BlockWidth/HeightInTexels",
      "revId": "e54d28292da6f921fb3853e085ba4c131d2947cd",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6ce5e3bf_8f2abd3d",
        "filename": "src/dawn_native/CommandEncoder.cpp",
        "patchSetId": 6
      },
      "lineNbr": 257,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2019-06-14T04:14:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1e723d45_f0bdfb38",
      "revId": "e54d28292da6f921fb3853e085ba4c131d2947cd",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5d91dbac_5a8fe4ac",
        "filename": "src/dawn_native/CommandEncoder.cpp",
        "patchSetId": 6
      },
      "lineNbr": 272,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2019-06-13T09:58:42Z",
      "side": 1,
      "message": "Ditto",
      "revId": "e54d28292da6f921fb3853e085ba4c131d2947cd",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "71ab41ff_1cfe95ef",
        "filename": "src/dawn_native/CommandEncoder.cpp",
        "patchSetId": 6
      },
      "lineNbr": 272,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2019-06-14T04:14:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5d91dbac_5a8fe4ac",
      "revId": "e54d28292da6f921fb3853e085ba4c131d2947cd",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8d59dd5e_1216ac02",
        "filename": "src/dawn_native/d3d12/CommandBufferD3D12.cpp",
        "patchSetId": 6
      },
      "lineNbr": 555,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2019-06-13T09:58:42Z",
      "side": 1,
      "message": "nit: I\u0027m not sure if the splitter will work correctly for compressed texture, can you check? (not necessary for this CL)",
      "revId": "e54d28292da6f921fb3853e085ba4c131d2947cd",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a0e47bca_633308ae",
        "filename": "src/dawn_native/d3d12/CommandBufferD3D12.cpp",
        "patchSetId": 6
      },
      "lineNbr": 555,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2019-06-14T04:14:51Z",
      "side": 1,
      "message": "I think you don\u0027t need to worry about this because I had done some experiments before I started writing this patch:\nhttps://dawn-review.googlesource.com/c/dawn/+/7740\n\nIf we could support submitting a patch chain like ANGLE then I could rebase that patch and run the end2end tests for you.",
      "parentUuid": "8d59dd5e_1216ac02",
      "revId": "e54d28292da6f921fb3853e085ba4c131d2947cd",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ad3aea86_520185be",
        "filename": "src/dawn_native/d3d12/CommandBufferD3D12.cpp",
        "patchSetId": 6
      },
      "lineNbr": 555,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2019-06-14T04:44:55Z",
      "side": 1,
      "message": "Oh I find the tests in that patch are too simple to cover all the situations here with BC formats (it only tests bufferOffset \u003d\u003d 0). We need to add code to split copies correctly and more tests for verification.",
      "parentUuid": "a0e47bca_633308ae",
      "revId": "e54d28292da6f921fb3853e085ba4c131d2947cd",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cdfb8198_c3a50de3",
        "filename": "src/dawn_native/d3d12/CommandBufferD3D12.cpp",
        "patchSetId": 6
      },
      "lineNbr": 555,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2019-06-14T08:39:48Z",
      "side": 1,
      "message": "Ok, let\u0027s make a note of that somewhere, maybe on the bug and address some time in the CL chain for backend implementation, no need to do it now.",
      "parentUuid": "ad3aea86_520185be",
      "revId": "e54d28292da6f921fb3853e085ba4c131d2947cd",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "62ab55a5_af529de4",
        "filename": "src/tests/unittests/validation/CopyCommandsValidationTests.cpp",
        "patchSetId": 6
      },
      "lineNbr": 1240,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2019-06-13T09:58:42Z",
      "side": 1,
      "message": "nit: Can we test rowpitch \u003d\u003d 0 with a texture size that makes it so the computed rowpitch isn\u0027t a multiple of 256?",
      "revId": "e54d28292da6f921fb3853e085ba4c131d2947cd",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4e1bb695_67ab743a",
        "filename": "src/tests/unittests/validation/CopyCommandsValidationTests.cpp",
        "patchSetId": 6
      },
      "lineNbr": 1240,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2019-06-14T04:14:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "62ab55a5_af529de4",
      "revId": "e54d28292da6f921fb3853e085ba4c131d2947cd",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    }
  ]
}