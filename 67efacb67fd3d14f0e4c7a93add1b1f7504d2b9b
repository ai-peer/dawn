{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "8bb55ec7_6495a287",
        "filename": "src/dawn/native/vulkan/SwapChainVk.cpp",
        "patchSetId": 1
      },
      "lineNbr": 387,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-03-21T15:27:44Z",
      "side": 0,
      "message": "We know what format the application wants to use for this since it is given by the application when creating the swapchain (and we validate it in SwapChain.cpp). So instead we could get the format of the swapchain with GetFormat() (https://source.chromium.org/chromium/chromium/src/+/main:third_party/dawn/src/dawn/native/SwapChain.h;drc\u003de9d9e23e80e5687b28a4476e8dffc5f74093f4ae;l\u003d127) and then convert it to a Vulkan format with https://source.chromium.org/chromium/chromium/src/+/main:third_party/dawn/src/dawn/native/vulkan/TextureVk.h;drc\u003d818001d32ea782c784d42dbaedf66868a31cc9af;l\u003d32\n\nThis would avoid the need for introducing a CheckFormat function.",
      "revId": "67efacb67fd3d14f0e4c7a93add1b1f7504d2b9b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b2f79a4a_c917abdb",
        "filename": "src/dawn/native/vulkan/SwapChainVk.cpp",
        "patchSetId": 1
      },
      "lineNbr": 387,
      "author": {
        "id": 1002706
      },
      "writtenOn": "2022-03-22T12:00:55Z",
      "side": 0,
      "message": "Keep the validation for BGRA + ifndef android or validate GetFormat()?",
      "parentUuid": "8bb55ec7_6495a287",
      "revId": "67efacb67fd3d14f0e4c7a93add1b1f7504d2b9b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a4c6e97e_aba6f01b",
        "filename": "src/dawn/native/vulkan/SwapChainVk.cpp",
        "patchSetId": 1
      },
      "lineNbr": 387,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-03-22T14:05:44Z",
      "side": 0,
      "message": "We would add the validation in the frontend and here we would do something like:\n\n```\nVkFormat targetFormat \u003d VulkanImageFormat(GetDevice(), GetFormat());\nfor (...) {\n  if (format.format \u003d\u003d targetFormat \u0026\u0026 ...)\n   ....\n}\n```",
      "parentUuid": "b2f79a4a_c917abdb",
      "revId": "67efacb67fd3d14f0e4c7a93add1b1f7504d2b9b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a0992ae1_0d692fa0",
        "filename": "src/dawn/native/vulkan/SwapChainVk.cpp",
        "patchSetId": 1
      },
      "lineNbr": 387,
      "author": {
        "id": 1002706
      },
      "writtenOn": "2022-03-23T18:35:37Z",
      "side": 0,
      "message": "I wasn\u0027t sure how to do DAWN_INTERNAL_ERROR message, keep it as BGRA8Unorm or have a formatted error message with BGRA / RGBA?",
      "parentUuid": "a4c6e97e_aba6f01b",
      "revId": "67efacb67fd3d14f0e4c7a93add1b1f7504d2b9b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8ef9867d_9e875d00",
        "filename": "src/dawn/native/vulkan/SwapChainVk.cpp",
        "patchSetId": 1
      },
      "lineNbr": 387,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-03-24T09:33:10Z",
      "side": 0,
      "message": "Just saw this after writing the other comment. Yeah we should format the message so that it isn\u0027t confusing on Android.",
      "parentUuid": "a0992ae1_0d692fa0",
      "revId": "67efacb67fd3d14f0e4c7a93add1b1f7504d2b9b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "70c10661_8358d1f6",
        "filename": "src/dawn/native/vulkan/SwapChainVk.cpp",
        "patchSetId": 1
      },
      "lineNbr": 387,
      "author": {
        "id": 1002706
      },
      "writtenOn": "2022-03-25T10:50:44Z",
      "side": 0,
      "message": "Done",
      "parentUuid": "8ef9867d_9e875d00",
      "revId": "67efacb67fd3d14f0e4c7a93add1b1f7504d2b9b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}