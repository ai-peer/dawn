{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "caf20cc8_847c834a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1003581
      },
      "writtenOn": "2024-04-19T16:01:00Z",
      "side": 1,
      "message": "Addressed some feedback, please take another look.",
      "revId": "6068b853e1d15bb74ead35716519081b20bfe7a4",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ea9bb463_8eb4cc6f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1002701
      },
      "writtenOn": "2024-04-19T17:34:56Z",
      "side": 1,
      "message": "lgtm % comments",
      "revId": "6068b853e1d15bb74ead35716519081b20bfe7a4",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f709f4ed_f460b318",
        "filename": "src/dawn/native/Device.cpp",
        "patchSetId": 5
      },
      "lineNbr": 580,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2024-04-19T16:28:03Z",
      "side": 1,
      "message": "It\u0027s only necessary to load once\n\n```suggestion\n    if (uint32_t count \u003d mUniqueRenderPipelineCounter.load(std::memory_order_acquire)) {\n        DAWN_HISTOGRAM_COUNTS_100(GetPlatform(), \"UniqueRenderPipelineCreatedCount\",\n                                  count);\n    }\n```",
      "range": {
        "startLine": 577,
        "startChar": 4,
        "endLine": 580,
        "endChar": 5
      },
      "revId": "6068b853e1d15bb74ead35716519081b20bfe7a4",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "90b3e881_3702349f",
        "filename": "src/dawn/native/Device.cpp",
        "patchSetId": 5
      },
      "lineNbr": 1473,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2024-04-19T16:28:03Z",
      "side": 1,
      "message": "this can be relaxed\n```suggestion\n    mUniqueRenderPipelineCounter.fetch_add(1, std::memory_order_relaxed);\n```",
      "range": {
        "startLine": 1473,
        "startChar": 46,
        "endLine": 1473,
        "endChar": 71
      },
      "revId": "6068b853e1d15bb74ead35716519081b20bfe7a4",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b1b714cf_f2f3ccba",
        "filename": "src/dawn/native/Device.cpp",
        "patchSetId": 5
      },
      "lineNbr": 1473,
      "author": {
        "id": 1002701
      },
      "writtenOn": "2024-04-19T17:34:56Z",
      "side": 1,
      "message": "Although it it\u0027s relaxed, the value obtained in Destroy() might not be correct, right? std::memory_order_release is more appropriate, no?",
      "parentUuid": "90b3e881_3702349f",
      "range": {
        "startLine": 1473,
        "startChar": 46,
        "endLine": 1473,
        "endChar": 71
      },
      "revId": "6068b853e1d15bb74ead35716519081b20bfe7a4",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bcb07daf_56318b47",
        "filename": "src/dawn/native/Device.cpp",
        "patchSetId": 5
      },
      "lineNbr": 1473,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2024-04-19T17:36:33Z",
      "side": 1,
      "message": "ah, yes that\u0027s right",
      "parentUuid": "b1b714cf_f2f3ccba",
      "range": {
        "startLine": 1473,
        "startChar": 46,
        "endLine": 1473,
        "endChar": 71
      },
      "revId": "6068b853e1d15bb74ead35716519081b20bfe7a4",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "839ee5e3_bbe4e455",
        "filename": "src/dawn/native/Device.cpp",
        "patchSetId": 5
      },
      "lineNbr": 2162,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2024-04-19T16:28:03Z",
      "side": 1,
      "message": "this can be relaxed\n```suggestion\n    mUniqueRenderPipelineCounter.fetch_add(1, std::memory_order_relaxed);\n```",
      "range": {
        "startLine": 2162,
        "startChar": 46,
        "endLine": 2162,
        "endChar": 71
      },
      "revId": "6068b853e1d15bb74ead35716519081b20bfe7a4",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Code-Review=MAX,user=non_uploader","label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "6068b853e1d15bb74ead35716519081b20bfe7a4",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforced_gerrit"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "6068b853e1d15bb74ead35716519081b20bfe7a4",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}