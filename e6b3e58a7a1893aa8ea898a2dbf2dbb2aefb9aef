{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "5e03630b_b2dbdc9b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-11-12T18:09:24Z",
      "side": 1,
      "message": "PTAL!\n\nNext I\u0027ll make CoreFoundationRef.h and IOKitRef.h\n\n(I just didn\u0027t want to name NSRef.h NextStepRef.h as that would be quite anachronistic ^^)",
      "revId": "e6b3e58a7a1893aa8ea898a2dbf2dbb2aefb9aef",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "948409a5_a0b9f296",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-11-12T19:24:02Z",
      "side": 1,
      "message": "LGTM",
      "revId": "e6b3e58a7a1893aa8ea898a2dbf2dbb2aefb9aef",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "667fca19_4a9e8554",
        "filename": "src/common/NSRef.h",
        "patchSetId": 10
      },
      "lineNbr": 100,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-11-12T19:24:02Z",
      "side": 1,
      "message": "\"protocol\" with an o",
      "range": {
        "startLine": 100,
        "startChar": 42,
        "endLine": 100,
        "endChar": 50
      },
      "revId": "e6b3e58a7a1893aa8ea898a2dbf2dbb2aefb9aef",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "77ae8181_30a0cb5f",
        "filename": "src/common/NSRef.h",
        "patchSetId": 10
      },
      "lineNbr": 100,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-11-13T11:36:09Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "667fca19_4a9e8554",
      "range": {
        "startLine": 100,
        "startChar": 42,
        "endLine": 100,
        "endChar": 50
      },
      "revId": "e6b3e58a7a1893aa8ea898a2dbf2dbb2aefb9aef",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "901927f8_08ed0e0f",
        "filename": "src/dawn_native/metal/BufferMTL.mm",
        "patchSetId": 10
      },
      "lineNbr": 90,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-11-12T19:24:02Z",
      "side": 1,
      "message": "I was surprised to see comparison with nullptr - could it be nil? And in other places as well, like assignment. Not sure if \"nil\" is a different type and we can specialize that operator.",
      "range": {
        "startLine": 90,
        "startChar": 26,
        "endLine": 90,
        "endChar": 33
      },
      "revId": "e6b3e58a7a1893aa8ea898a2dbf2dbb2aefb9aef",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1f800b86_7e954352",
        "filename": "src/dawn_native/metal/BufferMTL.mm",
        "patchSetId": 10
      },
      "lineNbr": 90,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-11-13T11:36:09Z",
      "side": 1,
      "message": "nil and nullptr are the same thing (nil is #defined to (id)0 and id is #defined to void*), I think it is marginally better to use nullptr everywhere in the codebase.",
      "parentUuid": "901927f8_08ed0e0f",
      "range": {
        "startLine": 90,
        "startChar": 26,
        "endLine": 90,
        "endChar": 33
      },
      "revId": "e6b3e58a7a1893aa8ea898a2dbf2dbb2aefb9aef",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bdc9c9d7_e2df0540",
        "filename": "src/dawn_native/metal/BufferMTL.mm",
        "patchSetId": 10
      },
      "lineNbr": 90,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-11-14T00:42:23Z",
      "side": 1,
      "message": "We should do that everywhere else too then, like [1] - and I think Stephen mentioned a few places as well that are inconsistent",
      "parentUuid": "1f800b86_7e954352",
      "range": {
        "startLine": 90,
        "startChar": 26,
        "endLine": 90,
        "endChar": 33
      },
      "revId": "e6b3e58a7a1893aa8ea898a2dbf2dbb2aefb9aef",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "30da6c96_125d7019",
        "filename": "src/dawn_native/metal/BufferMTL.mm",
        "patchSetId": 10
      },
      "lineNbr": 90,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-11-16T15:23:40Z",
      "side": 1,
      "message": "Replaced all the places using nil with nullptr.",
      "parentUuid": "bdc9c9d7_e2df0540",
      "range": {
        "startLine": 90,
        "startChar": 26,
        "endLine": 90,
        "endChar": 33
      },
      "revId": "e6b3e58a7a1893aa8ea898a2dbf2dbb2aefb9aef",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7dc28e1f_d38b2528",
        "filename": "src/dawn_native/metal/CommandBufferMTL.mm",
        "patchSetId": 10
      },
      "lineNbr": 187,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-11-14T00:42:23Z",
      "side": 1,
      "message": "[1]",
      "range": {
        "startLine": 187,
        "startChar": 42,
        "endLine": 187,
        "endChar": 45
      },
      "revId": "e6b3e58a7a1893aa8ea898a2dbf2dbb2aefb9aef",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f0977bba_fa814315",
        "filename": "src/dawn_native/metal/CommandBufferMTL.mm",
        "patchSetId": 10
      },
      "lineNbr": 187,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-11-16T15:23:40Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "7dc28e1f_d38b2528",
      "range": {
        "startLine": 187,
        "startChar": 42,
        "endLine": 187,
        "endChar": 45
      },
      "revId": "e6b3e58a7a1893aa8ea898a2dbf2dbb2aefb9aef",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "723b22f8_b3737e97",
        "filename": "src/dawn_native/metal/QuerySetMTL.mm",
        "patchSetId": 10
      },
      "lineNbr": 128,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-11-12T19:24:02Z",
      "side": 1,
      "message": "nit: also add a small comment that this one is not refcounted the others, so you don\u0027t have to double check the header",
      "revId": "e6b3e58a7a1893aa8ea898a2dbf2dbb2aefb9aef",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2a12f353_391451d8",
        "filename": "src/dawn_native/metal/QuerySetMTL.mm",
        "patchSetId": 10
      },
      "lineNbr": 128,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-11-13T11:36:09Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "723b22f8_b3737e97",
      "revId": "e6b3e58a7a1893aa8ea898a2dbf2dbb2aefb9aef",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "10bae54e_57118b2c",
        "filename": "src/dawn_native/metal/TextureMTL.mm",
        "patchSetId": 10
      },
      "lineNbr": 468,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-11-12T19:24:02Z",
      "side": 1,
      "message": "is it worth making this a ref since it\u0027s well-scoped and autoreleased?",
      "range": {
        "startLine": 468,
        "startChar": 20,
        "endLine": 468,
        "endChar": 62
      },
      "revId": "e6b3e58a7a1893aa8ea898a2dbf2dbb2aefb9aef",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "79b67a1c_f9c6a466",
        "filename": "src/dawn_native/metal/TextureMTL.mm",
        "patchSetId": 10
      },
      "lineNbr": 468,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-11-13T11:36:09Z",
      "side": 1,
      "message": "I\u0027m not sure, I kind of took the route of not trusting ObjC at all. It also helps avoid issues when we refactor code.",
      "parentUuid": "10bae54e_57118b2c",
      "range": {
        "startLine": 468,
        "startChar": 20,
        "endLine": 468,
        "endChar": 62
      },
      "revId": "e6b3e58a7a1893aa8ea898a2dbf2dbb2aefb9aef",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "04cf0493_e691948b",
        "filename": "src/dawn_native/metal/TextureMTL.mm",
        "patchSetId": 10
      },
      "lineNbr": 468,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-11-14T00:42:23Z",
      "side": 1,
      "message": "okay. I don\u0027t really feel that strongly, it\u0027s just slightly uglier but ok since it\u0027s just one spot in the code",
      "parentUuid": "79b67a1c_f9c6a466",
      "range": {
        "startLine": 468,
        "startChar": 20,
        "endLine": 468,
        "endChar": 62
      },
      "revId": "e6b3e58a7a1893aa8ea898a2dbf2dbb2aefb9aef",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "df386a51_fe47e80f",
        "filename": "src/dawn_native/metal/TextureMTL.mm",
        "patchSetId": 10
      },
      "lineNbr": 468,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-11-16T15:23:40Z",
      "side": 1,
      "message": "Ack, thank you.",
      "parentUuid": "04cf0493_e691948b",
      "range": {
        "startLine": 468,
        "startChar": 20,
        "endLine": 468,
        "endChar": 62
      },
      "revId": "e6b3e58a7a1893aa8ea898a2dbf2dbb2aefb9aef",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}