{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "792ec943_f4c2c500",
        "filename": "src/dawn/native/Buffer.cpp",
        "patchSetId": 18
      },
      "lineNbr": 129,
      "author": {
        "id": 1002831
      },
      "writtenOn": "2023-11-21T21:48:18Z",
      "side": 1,
      "message": "nit. completes",
      "range": {
        "startLine": 129,
        "startChar": 45,
        "endLine": 129,
        "endChar": 54
      },
      "revId": "38182bdbbb268482b7110879b2acffb03fb70e01",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "640a7920_0f31153d",
        "filename": "src/dawn/native/EventManager.cpp",
        "patchSetId": 18
      },
      "lineNbr": 455,
      "author": {
        "id": 1002831
      },
      "writtenOn": "2023-11-21T21:48:18Z",
      "side": 1,
      "message": "I think it\u0027s possible to hit this `ASSERT` in `UnmapEarly` if we race at the moment. Maybe we should remove this `ASSERT` for now until we fix the race?",
      "range": {
        "startLine": 455,
        "startChar": 8,
        "endLine": 455,
        "endChar": 38
      },
      "revId": "38182bdbbb268482b7110879b2acffb03fb70e01",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ee5d57dc_4b47c422",
        "filename": "src/dawn/native/EventManager.cpp",
        "patchSetId": 18
      },
      "lineNbr": 455,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-11-21T22:14:21Z",
      "side": 1,
      "message": "can it? I don\u0027t see CompleteIfSpontaneous called anywhere else except the constructor of the event.\n\n@kainino@chromium.org what was the original reason for this assert?\n\nIn general though, it seems valid for two threads to race calling CompleteIfSpontaneous if they both determine an event is done.",
      "parentUuid": "640a7920_0f31153d",
      "range": {
        "startLine": 455,
        "startChar": 8,
        "endLine": 455,
        "endChar": 38
      },
      "revId": "38182bdbbb268482b7110879b2acffb03fb70e01",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "28d91dbf_8395f449",
        "filename": "src/dawn/native/EventManager.cpp",
        "patchSetId": 18
      },
      "lineNbr": 455,
      "author": {
        "id": 1002831
      },
      "writtenOn": "2023-11-21T22:37:20Z",
      "side": 1,
      "message": "Hmm, I could be considering an impossible scenario, but was imagining a case where the map spontaneously completes while an `Unmap` is called. If the spontaneous complete goes first, I think that the bool will be set to true already and hit the assert?",
      "parentUuid": "ee5d57dc_4b47c422",
      "range": {
        "startLine": 455,
        "startChar": 8,
        "endLine": 455,
        "endChar": 38
      },
      "revId": "38182bdbbb268482b7110879b2acffb03fb70e01",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "57916b35_c9a04479",
        "filename": "src/dawn/native/EventManager.cpp",
        "patchSetId": 18
      },
      "lineNbr": 455,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-11-21T22:47:23Z",
      "side": 1,
      "message": "yea, that would be a problem, but at least right now I don\u0027t think it happens.\nwe could either remove the ASSERT in the future since I think it\u0027s fine - or if we need it for some reason we can pass an enum in like AlreadyComplete::Ok / AlreadyComplete::NotOk",
      "parentUuid": "28d91dbf_8395f449",
      "range": {
        "startLine": 455,
        "startChar": 8,
        "endLine": 455,
        "endChar": 38
      },
      "revId": "38182bdbbb268482b7110879b2acffb03fb70e01",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fb4b8785_25b7a525",
        "filename": "src/dawn/native/EventManager.cpp",
        "patchSetId": 18
      },
      "lineNbr": 455,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2023-11-21T22:53:02Z",
      "side": 1,
      "message": "It\u0027s to guard against a problem where we try to report a failure, but then can\u0027t because the future has already completed.\n\nIn this particular case CompleteIfSpontaneous is called from UnmapEarly and I think I agree it can race. Maybe this just needs another instance of that TODO about mapping not being thread safe.",
      "parentUuid": "28d91dbf_8395f449",
      "range": {
        "startLine": 455,
        "startChar": 8,
        "endLine": 455,
        "endChar": 38
      },
      "revId": "38182bdbbb268482b7110879b2acffb03fb70e01",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "06104470_b566ffd5",
        "filename": "src/dawn/native/EventManager.cpp",
        "patchSetId": 18
      },
      "lineNbr": 455,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-11-21T22:54:43Z",
      "side": 1,
      "message": "race with what? CompleteIfSpontaneous isn\u0027t called anywhere *except* UnmapEarly - or is this just hypothetically when we call CompleteIfSpontaneous from more places?",
      "parentUuid": "fb4b8785_25b7a525",
      "range": {
        "startLine": 455,
        "startChar": 8,
        "endLine": 455,
        "endChar": 38
      },
      "revId": "38182bdbbb268482b7110879b2acffb03fb70e01",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}