{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "4cc7c527_16867403",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 13
      },
      "lineNbr": 0,
      "author": {
        "id": 1002361
      },
      "writtenOn": "2023-06-21T21:20:45Z",
      "side": 1,
      "message": "This is the big one. I apologize for its size, but it\u0027s not really possible to make it smaller. Apart from third_party/gn/dxc/BUILD.gn, which is 2000 lines long, there are a few helper .gni files that it uses.\n\nIt\u0027s not of particular use, but in case you\u0027re wondering, the way I wrote this was using a fork of Dawn on my GitHub so that I could [push many small commits](https://github.com/amaiorano/dawn/commits/add-dxc).",
      "revId": "0b8e1cd81d56ac7b765972151e5074b8a001bb3d",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1d751b2d_b69f0375",
        "filename": "DEPS",
        "patchSetId": 13
      },
      "lineNbr": 24,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2023-06-22T10:58:11Z",
      "side": 1,
      "message": "I don\u0027t quite understand why we need this set to `True` here and in `build_overrides/dawn.gni`. It doesn\u0027t look wrong, but I just don\u0027t understand it.",
      "range": {
        "startLine": 24,
        "startChar": 2,
        "endLine": 24,
        "endChar": 31
      },
      "revId": "0b8e1cd81d56ac7b765972151e5074b8a001bb3d",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5ca3c987_c66ef5a1",
        "filename": "DEPS",
        "patchSetId": 13
      },
      "lineNbr": 24,
      "author": {
        "id": 1002361
      },
      "writtenOn": "2023-06-22T13:48:27Z",
      "side": 1,
      "message": "This is a DEPS variable, not a GN variable, so they are not the same. Note that the same is done for `dawn_standalone`.",
      "parentUuid": "1d751b2d_b69f0375",
      "range": {
        "startLine": 24,
        "startChar": 2,
        "endLine": 24,
        "endChar": 31
      },
      "revId": "0b8e1cd81d56ac7b765972151e5074b8a001bb3d",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "747da544_f8ef007d",
        "filename": "third_party/gn/dxc/BUILD.gn",
        "patchSetId": 13
      },
      "lineNbr": 27,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2023-06-22T10:58:11Z",
      "side": 1,
      "message": "Are these scoped to this file, or do they leak into a more global scope?\nIf it\u0027s the latter, then maybe `dawn_dxc_llvm_target_triple` and same below.",
      "range": {
        "startLine": 27,
        "startChar": 0,
        "endLine": 27,
        "endChar": 18
      },
      "revId": "0b8e1cd81d56ac7b765972151e5074b8a001bb3d",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7b3a63b3_3cd2719f",
        "filename": "third_party/gn/dxc/BUILD.gn",
        "patchSetId": 13
      },
      "lineNbr": 27,
      "author": {
        "id": 1002361
      },
      "writtenOn": "2023-06-22T13:48:27Z",
      "side": 1,
      "message": "Variables do not leak out of GN files. The only way to see them is to import the file, but this isn\u0027t normally done with BUILD.gn files, only with .gni files. So we can leave as is.",
      "parentUuid": "747da544_f8ef007d",
      "range": {
        "startLine": 27,
        "startChar": 0,
        "endLine": 27,
        "endChar": 18
      },
      "revId": "0b8e1cd81d56ac7b765972151e5074b8a001bb3d",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e5313b90_4d18cc19",
        "filename": "third_party/gn/dxc/BUILD.gn",
        "patchSetId": 13
      },
      "lineNbr": 35,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2023-06-22T10:58:11Z",
      "side": 1,
      "message": "Inconsistent prefixing. `dawn_dxc_disable_asserts_debug` or strip `dawn_` from the above?",
      "range": {
        "startLine": 35,
        "startChar": 2,
        "endLine": 35,
        "endChar": 27
      },
      "revId": "0b8e1cd81d56ac7b765972151e5074b8a001bb3d",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a0f8ad9c_906e8d2d",
        "filename": "third_party/gn/dxc/BUILD.gn",
        "patchSetId": 13
      },
      "lineNbr": 35,
      "author": {
        "id": 1002361
      },
      "writtenOn": "2023-06-22T13:52:35Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e5313b90_4d18cc19",
      "range": {
        "startLine": 35,
        "startChar": 2,
        "endLine": 35,
        "endChar": 27
      },
      "revId": "0b8e1cd81d56ac7b765972151e5074b8a001bb3d",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "96c7b80c_5a9798d2",
        "filename": "third_party/gn/dxc/BUILD.gn",
        "patchSetId": 13
      },
      "lineNbr": 1252,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2023-06-22T10:58:11Z",
      "side": 1,
      "message": "Instead of the number suffixed names, how about a sourceset per `$dawn_dxc_dir/lib/` subdirectory?",
      "range": {
        "startLine": 1252,
        "startChar": 22,
        "endLine": 1252,
        "endChar": 46
      },
      "revId": "0b8e1cd81d56ac7b765972151e5074b8a001bb3d",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e7be815a_33319672",
        "filename": "third_party/gn/dxc/BUILD.gn",
        "patchSetId": 13
      },
      "lineNbr": 1252,
      "author": {
        "id": 1002361
      },
      "writtenOn": "2023-06-22T13:48:27Z",
      "side": 1,
      "message": "The idea was to have one sourceset for all the files, but because of filename collisions, I\u0027m forced to split them out this way. There isn\u0027t much gained by splitting them across each lib. Do you feel strongly about this?",
      "parentUuid": "96c7b80c_5a9798d2",
      "range": {
        "startLine": 1252,
        "startChar": 22,
        "endLine": 1252,
        "endChar": 46
      },
      "revId": "0b8e1cd81d56ac7b765972151e5074b8a001bb3d",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "48e86af6_16cd56ec",
        "filename": "third_party/gn/dxc/BUILD.gn",
        "patchSetId": 13
      },
      "lineNbr": 1252,
      "author": {
        "id": 1002361
      },
      "writtenOn": "2023-06-22T14:57:40Z",
      "side": 1,
      "message": "It\u0027s also worth noting that these \"source sets\" are actually compiled as static libs, and they _must_ be so, otherwise unreferenced globals are not stripped, which results in global \"option\" vars being constructed before DllMain runs, that results in crashes because the global allocator hasn\u0027t been initialized yet. DXC relies on these being static libs. The reason I mention this here is that one of the downsides to using static_libs with GN is that it makes builds take longer, since it cannot parallelize source building as much. So splitting this up into many static libs may impact total build time.",
      "parentUuid": "e7be815a_33319672",
      "range": {
        "startLine": 1252,
        "startChar": 22,
        "endLine": 1252,
        "endChar": 46
      },
      "revId": "0b8e1cd81d56ac7b765972151e5074b8a001bb3d",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9a3f4a4e_d7c70130",
        "filename": "third_party/gn/dxc/BUILD.gn",
        "patchSetId": 13
      },
      "lineNbr": 1252,
      "author": {
        "id": 1002361
      },
      "writtenOn": "2023-06-22T15:23:44Z",
      "side": 1,
      "message": "I went ahead and split up the source_sets.",
      "parentUuid": "48e86af6_16cd56ec",
      "range": {
        "startLine": 1252,
        "startChar": 22,
        "endLine": 1252,
        "endChar": 46
      },
      "revId": "0b8e1cd81d56ac7b765972151e5074b8a001bb3d",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}