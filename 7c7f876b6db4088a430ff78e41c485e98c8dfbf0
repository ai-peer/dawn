{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "fa037e24_f52bf95e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2022-09-19T08:29:36Z",
      "side": 1,
      "message": "PTAL, thanks!",
      "revId": "7c7f876b6db4088a430ff78e41c485e98c8dfbf0",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3ec9b9a7_2ecba247",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2022-09-20T13:49:19Z",
      "side": 1,
      "message": "hm, do you think we need to expose this as a chained struct on APIGetProperties?\n\nor, would it instead be sufficient to have a non-API getter on AdapterBase which InstanceBase::RequestAdapterInternal uses to select the right adapter?",
      "revId": "7c7f876b6db4088a430ff78e41c485e98c8dfbf0",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bff8b73a_26ed50f2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2022-09-21T02:05:06Z",
      "side": 1,
      "message": "Oh that would be much easier to do. I once thought it not that \"formal\" and I also found there were some gaps that let us support ChainedStructOut in Dawn, so this might be a good chance to fix this mechanism.\n\nDo you prefer this simpler way?",
      "parentUuid": "3ec9b9a7_2ecba247",
      "revId": "7c7f876b6db4088a430ff78e41c485e98c8dfbf0",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a619cd97_d5563370",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2022-09-21T02:43:41Z",
      "side": 1,
      "message": "Oh after more thoughts I find in Chromium instance_-\u003eDiscoverAdapters() or DiscoverDefaultAdapters() is only called once at the initialization of WebGPUDecoderImpl:\nhttps://source.chromium.org/chromium/chromium/src/+/main:gpu/command_buffer/service/webgpu_decoder_impl.cc;l\u003d1061\n\n\u003e  would it instead be sufficient to have a non-API getter on AdapterBase which InstanceBase::RequestAdapterInternal uses to select the right adapter?\nGiven the fact that we want to support users using both \"high-performance\" and \"low-power\" adapters on same Intel GPU, when calling DiscoverAdapters() we\u0027d like to return all the available adapters instead of \"selecting the right adapter\".\n\n\nI just see we are querying AdapterProperties when selecing adapters in Chromium:\nhttps://source.chromium.org/chromium/chromium/src/+/main:gpu/command_buffer/service/webgpu_decoder_impl.cc;l\u003d1340\n\nSo in current way we can still query the power preference of adapters in Chromium without changing too much code.",
      "revId": "7c7f876b6db4088a430ff78e41c485e98c8dfbf0",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}