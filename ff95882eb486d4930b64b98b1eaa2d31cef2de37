{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "a63b0597_1d8345a3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2022-08-21T03:42:57Z",
      "side": 1,
      "message": "PTAL.",
      "revId": "ff95882eb486d4930b64b98b1eaa2d31cef2de37",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e98ed113_f3222273",
        "filename": "src/tint/reader/wgsl/parser_impl.cc",
        "patchSetId": 1
      },
      "lineNbr": 300,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2022-08-22T10:13:19Z",
      "side": 1,
      "message": "I think all of this can be reduced to:\n\n```\nconst Token\u0026 ParserImpl::peek(size_t count) {\n    for (size_t idx \u003d count + next_token_idx_; idx \u003c tokens_.size(); idx++) {\n        if (tokens_[idx].IsPlaceholder()) {\n            continue;\n        }\n        if (count \u003d\u003d 0) {\n            return tokens_[idx];\n        }\n        count--;\n    };\n    return tokens_[tokens_.size() - 1]; // End of token stream.\n}\n```",
      "range": {
        "startLine": 274,
        "startChar": 0,
        "endLine": 300,
        "endChar": 1
      },
      "revId": "ff95882eb486d4930b64b98b1eaa2d31cef2de37",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}