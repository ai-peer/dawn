{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "5bab3dcb_2937dfcc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 19
      },
      "lineNbr": 0,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2023-10-18T03:12:17Z",
      "side": 1,
      "message": "Without NV12, most test cases can pass except the crash below:\n```\n[ RUN      ] Vulkan/SharedTextureMemoryTests.RenderThenSampleEncodeAfterBeginAccess/Vulkan_Intel_R__Xe_Graphics__TGL_GT2_____Backend_dma_buf__sync_fd\nError: ../mesa-iris-23.1.0/src/vulkan/runtime/vk_drm_syncobj.c:361: DRM_IOCTL_SYNCOBJ_HANDLE_TO_FD failed: Too many open files (VK_ERROR_UNKNOWN)\nError: Assertion failure at ../../third_party/dawn/src/dawn/native/vulkan/BackendVk.cpp:211 (OnDebugUtilsCallback): false\nReceived signal 6\n#0 0x56b086f6ccc2 (/usr/local/cros_test/out_amd64-generic/Release/dawn_end2end_tests+0xa2fcc1)\n#1 0x56b086f61df3 (/usr/local/cros_test/out_amd64-generic/Release/dawn_end2end_tests+0xa24df2)\n#2 0x56b086f6c6e1 (/usr/local/cros_test/out_amd64-generic/Release/dawn_end2end_tests+0xa2f6e0)\n#3 0x7ce13d033d10 (/lib64/libc.so.6+0x3cd0f)\n#4 0x7ce13d07ea3f (/lib64/libc.so.6+0x87a3e)\n#5 0x7ce13d033c6d (/lib64/libc.so.6+0x3cc6c)\n#6 0x7ce13d01f463 (/lib64/libc.so.6+0x28462)\n#7 0x56b08710b33b (/usr/local/cros_test/out_amd64-generic/Release/dawn_end2end_tests+0xbce33a)\n#8 0x56b086c78e7a (/usr/local/cros_test/out_amd64-generic/Release/dawn_end2end_tests+0x73be79)\n  r8: 00007ffdb13b3500  r9: 00007ce13d19a080 r10: 0000000000000008 r11: 0000000000000246\n r12: 0000000000000006 r13: 00007ffdb13b3758 r14: 0000000000000006 r15: 00007ffdb13b3760\n  di: 0000000000005241  si: 0000000000005241  bp: 00007ffdb13b34d0  bx: 0000000000005241\n  dx: 0000000000000006  ax: 0000000000000000  cx: 00007ce13d07ea3f  sp: 00007ffdb13b3410\n  ip: 00007ce13d07ea3f efl: 0000000000000246 cgf: 002b000000000033 erf: 0000000000000000\n trp: 0000000000000000 msk: 0000000000000000 cr2: 0000000000000000\n[end of stack trace]\n```",
      "revId": "f667e80bf79343ae07f9379ee965c17c805488e1",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "54b88b98_77b3499b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 19
      },
      "lineNbr": 0,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2023-10-18T05:50:44Z",
      "side": 1,
      "message": "No crash found if run the case separately.",
      "parentUuid": "5bab3dcb_2937dfcc",
      "revId": "f667e80bf79343ae07f9379ee965c17c805488e1",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "60e6a80c_27b544ee",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 19
      },
      "lineNbr": 0,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2023-10-19T03:13:22Z",
      "side": 1,
      "message": "Just let me know if anything I can do further!",
      "revId": "f667e80bf79343ae07f9379ee965c17c805488e1",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4acb3115_fe8d2e15",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 19
      },
      "lineNbr": 0,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-10-19T06:14:23Z",
      "side": 1,
      "message": "Interesting, this implies I\u0027m leaking file descriptors somewhere. Will need to investigate further.",
      "parentUuid": "54b88b98_77b3499b",
      "revId": "f667e80bf79343ae07f9379ee965c17c805488e1",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5af614ad_76d00c32",
        "filename": "src/dawn/native/vulkan/SharedTextureMemoryVk.cpp",
        "patchSetId": 19
      },
      "lineNbr": 207,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2023-10-19T03:13:22Z",
      "side": 1,
      "message": "Currently we are NOT using DISJOINT to import NV12 on Intel devices.",
      "range": {
        "startLine": 207,
        "startChar": 0,
        "endLine": 207,
        "endChar": 62
      },
      "revId": "f667e80bf79343ae07f9379ee965c17c805488e1",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a75f59dd_756e6f4d",
        "filename": "src/dawn/native/vulkan/SharedTextureMemoryVk.cpp",
        "patchSetId": 19
      },
      "lineNbr": 207,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-10-19T06:14:23Z",
      "side": 1,
      "message": "I moved validation of planeCount up above this to be more clear that we\u0027re not supporting multi-memory plane import right now",
      "parentUuid": "5af614ad_76d00c32",
      "range": {
        "startLine": 207,
        "startChar": 0,
        "endLine": 207,
        "endChar": 62
      },
      "revId": "f667e80bf79343ae07f9379ee965c17c805488e1",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "036c35ec_8ba13a41",
        "filename": "src/dawn/native/vulkan/SharedTextureMemoryVk.cpp",
        "patchSetId": 19
      },
      "lineNbr": 332,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2023-10-19T03:13:22Z",
      "side": 1,
      "message": "You are not going to support NV12 in this CL, right?",
      "range": {
        "startLine": 332,
        "startChar": 7,
        "endLine": 332,
        "endChar": 78
      },
      "revId": "f667e80bf79343ae07f9379ee965c17c805488e1",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2e596350_ba9e1512",
        "filename": "src/dawn/native/vulkan/SharedTextureMemoryVk.cpp",
        "patchSetId": 19
      },
      "lineNbr": 332,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-10-19T06:14:23Z",
      "side": 1,
      "message": "I thought I had to to support what Chrome is doing. Does Chrome use NV12 on Linux/ChromeOS?",
      "parentUuid": "036c35ec_8ba13a41",
      "range": {
        "startLine": 332,
        "startChar": 7,
        "endLine": 332,
        "endChar": 78
      },
      "revId": "f667e80bf79343ae07f9379ee965c17c805488e1",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a053b20c_eeabe36f",
        "filename": "src/dawn/tests/end2end/SharedTextureMemoryTests_linux.cpp",
        "patchSetId": 19
      },
      "lineNbr": 49,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2023-10-18T03:12:17Z",
      "side": 1,
      "message": "`wgpu::FeatureName::DawnMultiPlanarFormats` is required to support NV12.",
      "range": {
        "startLine": 49,
        "startChar": 7,
        "endLine": 49,
        "endChar": 76
      },
      "revId": "f667e80bf79343ae07f9379ee965c17c805488e1",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fe3b9012_390f052e",
        "filename": "src/dawn/tests/end2end/SharedTextureMemoryTests_linux.cpp",
        "patchSetId": 19
      },
      "lineNbr": 49,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-10-19T06:14:23Z",
      "side": 1,
      "message": "Done, thanks!",
      "parentUuid": "a053b20c_eeabe36f",
      "range": {
        "startLine": 49,
        "startChar": 7,
        "endLine": 49,
        "endChar": 76
      },
      "revId": "f667e80bf79343ae07f9379ee965c17c805488e1",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "61d8aad8_b9307b3c",
        "filename": "src/dawn/tests/end2end/SharedTextureMemoryTests_linux.cpp",
        "patchSetId": 19
      },
      "lineNbr": 99,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2023-10-19T03:13:22Z",
      "side": 1,
      "message": "In my impression, any operations including `close` are not needed or allowed after the ownership transfer of a fd.\n```\nImporting memory from a file descriptor transfers ownership of the file descriptor from the application to the Vulkan implementation. The application must not perform any operations on the file descriptor after a successful import. \n```",
      "range": {
        "startLine": 99,
        "startChar": 12,
        "endLine": 99,
        "endChar": 35
      },
      "revId": "f667e80bf79343ae07f9379ee965c17c805488e1",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7103ff5a_e47b9669",
        "filename": "src/dawn/tests/end2end/SharedTextureMemoryTests_linux.cpp",
        "patchSetId": 19
      },
      "lineNbr": 99,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-10-19T06:14:23Z",
      "side": 1,
      "message": "those are the semantics for Vulkan, but I\u0027m thinking for the WebGPU/Dawn API we have it so that passing the FD to Dawn does *not* transfer ownership.\n\nYou can see in my implementation I do `ScopedFd(dup(descriptor-\u003eplaneFDs[0]));` for Dawn to make a dup of it",
      "parentUuid": "61d8aad8_b9307b3c",
      "range": {
        "startLine": 99,
        "startChar": 12,
        "endLine": 99,
        "endChar": 35
      },
      "revId": "f667e80bf79343ae07f9379ee965c17c805488e1",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3c9bf08c_9bab48ff",
        "filename": "src/dawn/tests/end2end/SharedTextureMemoryTests_linux.cpp",
        "patchSetId": 19
      },
      "lineNbr": 117,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2023-10-18T03:12:17Z",
      "side": 1,
      "message": "NV12 ran into this error.\n```\n[ RUN      ] Vulkan/SharedTextureMemoryTests.UninitializedTextureIsCleared/Vulkan_Intel_R__Xe_Graphics__TGL_GT2_____Backend_dma_buf__opaque_fd\nunknown file: Failure\nUninteresting mock function call - returning directly.\n    Function call: Call(1, 0x11400095c00 pointing to \"Multi-planar Vulkan format (3b9d2b63) and drm modifier (0) did not have VK_FORMAT_FEATURE_DISJOINT_BIT tiling.\\n - While calling [Device].ImportSharedTextureMemory([SharedTextureMemoryDescriptor \\\"NV12 modifier:0 4x4\\\"]).\\n\", 0x114002c4000)\nStack trace:\n#0 0x5a7edd76f2fa testing::internal::GoogleTestFailureReporter::ReportFailure()\n#1 0x5a7edd770dc4 testing::internal::UntypedFunctionMockerBase::UntypedInvokeWith()\n#2 0x5a7edd536d2b testing::internal::MockFunction\u003c\u003e::Call()\n#3 0x5a7edd7bf146 dawn::native::CallbackTaskManager::Flush()\n#4 0x5a7edd7e5c89 dawn::native::DeviceBase::FlushCallbackTaskQueue()\n#5 0x5a7edd7ed781 dawn::native::DeviceBase::APITick()\n#6 0x5a7edd80bc02 dawn::native::InstanceBase::APIProcessEvents()\n#7 0x5a7edd6f3a48 dawn::DawnTestBase::WaitABit()\n#8 0x5a7edd6f3bcd dawn::DawnTestBase::MapSlotsSynchronously()\n#9 0x5a7edd6f1ca3 dawn::DawnTestBase::ResolveDeferredExpectationsNow()\n#10 0x5a7edd6f1b82 dawn::DawnTestBase::TearDown()\n```",
      "range": {
        "startLine": 117,
        "startChar": 17,
        "endLine": 117,
        "endChar": 33
      },
      "revId": "f667e80bf79343ae07f9379ee965c17c805488e1",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "84db6bc4_3a67fd03",
        "filename": "src/dawn/tests/end2end/SharedTextureMemoryTests_linux.cpp",
        "patchSetId": 19
      },
      "lineNbr": 117,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-10-19T06:14:23Z",
      "side": 1,
      "message": "Interesting, I think this is because NV12 is being used with GBM_BO_USE_LINEAR which then hits the part of the spec that says:\n\n\u003e If an image is linear, then the partition is the same for memory planes and for format planes. Therefore, if the returned drmFormatModifier is DRM_FORMAT_MOD_LINEAR, then drmFormatModifierPlaneCount must equal the format planecount, and drmFormatModifierTilingFeatures must be identical to the VkFormatProperties2::linearTilingFeatures returned in the same pNext chain.\n\nwhich means disjoint. we don\u0027t support disjoint yet, so I\u0027ve skipped this case for now.\nCould you let me know if it still hits the error?",
      "parentUuid": "3c9bf08c_9bab48ff",
      "range": {
        "startLine": 117,
        "startChar": 17,
        "endLine": 117,
        "endChar": 33
      },
      "revId": "f667e80bf79343ae07f9379ee965c17c805488e1",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a11541bf_953a6069",
        "filename": "src/dawn/tests/end2end/SharedTextureMemoryTests_linux.cpp",
        "patchSetId": 19
      },
      "lineNbr": 248,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2023-10-18T03:12:17Z",
      "side": 1,
      "message": "This line needs to be removed, otherwise BO can\u0027t be created.",
      "range": {
        "startLine": 248,
        "startChar": 8,
        "endLine": 248,
        "endChar": 28
      },
      "revId": "f667e80bf79343ae07f9379ee965c17c805488e1",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3c30516a_9cdb7f00",
        "filename": "src/dawn/tests/end2end/SharedTextureMemoryTests_linux.cpp",
        "patchSetId": 19
      },
      "lineNbr": 248,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-10-19T06:14:23Z",
      "side": 1,
      "message": "Done, thanks!",
      "parentUuid": "a11541bf_953a6069",
      "range": {
        "startLine": 248,
        "startChar": 8,
        "endLine": 248,
        "endChar": 28
      },
      "revId": "f667e80bf79343ae07f9379ee965c17c805488e1",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}