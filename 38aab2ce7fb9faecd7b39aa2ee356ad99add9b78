{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "8c93c1a1_21b6d058",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1001591
      },
      "writtenOn": "2021-03-15T23:15:33Z",
      "side": 1,
      "message": "Part 1 of N converting tests to the new RenderPipelineDescriptor format so that we can turn on the deprecation warnings.",
      "revId": "38aab2ce7fb9faecd7b39aa2ee356ad99add9b78",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "48349e46_e43c6066",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-03-16T14:46:44Z",
      "side": 1,
      "message": "LGTM too",
      "revId": "38aab2ce7fb9faecd7b39aa2ee356ad99add9b78",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "40b405e5_218afa0e",
        "filename": "src/tests/unittests/validation/RenderPipelineValidationTests.cpp",
        "patchSetId": 2
      },
      "lineNbr": 62,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-03-16T14:46:44Z",
      "side": 1,
      "message": "We didn\u0027t add the deprecation warning in this CL. How come the EXPECT_DEPRECATION_WARNING doesn\u0027t cause an error because no warning was raised?",
      "revId": "38aab2ce7fb9faecd7b39aa2ee356ad99add9b78",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0e791cd0_43ed7600",
        "filename": "src/tests/unittests/validation/RenderPipelineValidationTests.cpp",
        "patchSetId": 2
      },
      "lineNbr": 62,
      "author": {
        "id": 1001591
      },
      "writtenOn": "2021-03-16T15:29:06Z",
      "side": 1,
      "message": "Huh... that\u0027s weird. I did have the warning added for a bit to root out failures but commented it back out again before uploading. I would have expected these to failm on me at that point too. I\u0027ll take them out, but we probably want to look into why that happened.",
      "parentUuid": "40b405e5_218afa0e",
      "revId": "38aab2ce7fb9faecd7b39aa2ee356ad99add9b78",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "01ac151a_11899bec",
        "filename": "src/tests/unittests/validation/RenderPipelineValidationTests.cpp",
        "patchSetId": 2
      },
      "lineNbr": 267,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-03-16T14:46:44Z",
      "side": 1,
      "message": "I\u0027m surprised that this doesn\u0027t require the depth stencil format. Could we add a \"UseDepthStencil(wgpu::TextureFormat)\" as a helper on ComboRenderPipeline2?",
      "revId": "38aab2ce7fb9faecd7b39aa2ee356ad99add9b78",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fcf92af4_dccd3f8d",
        "filename": "src/tests/unittests/validation/RenderPipelineValidationTests.cpp",
        "patchSetId": 2
      },
      "lineNbr": 267,
      "author": {
        "id": 1001591
      },
      "writtenOn": "2021-03-16T15:29:06Z",
      "side": 1,
      "message": "So in this case I copied the behavior of ComboRenderPipeline, which was that the cDpethStencil(State) was initialized with a depth format, but not set as the pipeline\u0027s depthStencil(State). This meant that tests could simple set the depthStencil to cDepthStencil and it would already be valid. This DOES feel a little too \"magic\" to me, but then again so does some of the other ComboRenderPipeline behavior.\n\nI\u0027m happy to update the helper class to do things differently, I had just been assuming that it would be best to do so in a different CL so that the changes wouldn\u0027t get lost amid all the test updates.",
      "parentUuid": "01ac151a_11899bec",
      "revId": "38aab2ce7fb9faecd7b39aa2ee356ad99add9b78",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fa342de5_0c853ac0",
        "filename": "src/tests/unittests/validation/RenderPipelineValidationTests.cpp",
        "patchSetId": 2
      },
      "lineNbr": 267,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-03-16T16:47:55Z",
      "side": 1,
      "message": "Since we are going to go through all the tests it\u0027s an opportunity to see if small improvements like this can be done. It\u0027s a bit too magic indeed that the format is already set so that would be one such improvement.",
      "parentUuid": "fcf92af4_dccd3f8d",
      "revId": "38aab2ce7fb9faecd7b39aa2ee356ad99add9b78",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b485d7cd_b53bc600",
        "filename": "src/tests/unittests/validation/RenderPipelineValidationTests.cpp",
        "patchSetId": 2
      },
      "lineNbr": 267,
      "author": {
        "id": 1001591
      },
      "writtenOn": "2021-03-17T03:38:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fa342de5_0c853ac0",
      "revId": "38aab2ce7fb9faecd7b39aa2ee356ad99add9b78",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}