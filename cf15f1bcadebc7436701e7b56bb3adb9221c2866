{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "0056942b_fb9d319b",
        "filename": "src/dawn/native/d3d11/CommandRecordingContextD3D11.cpp",
        "patchSetId": 6
      },
      "lineNbr": 28,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-04-04T14:15:54Z",
      "side": 1,
      "message": "My understanding is that DeviceContext commands are executed immediately, contrary to D3D12 commands that are first staged in command lists. So do we need all the complexity of the CommandRecordingContext, or could we do something more like the OpenGL backend?",
      "revId": "cf15f1bcadebc7436701e7b56bb3adb9221c2866",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "58a59d13_487fc120",
        "filename": "src/dawn/native/d3d11/CommandRecordingContextD3D11.cpp",
        "patchSetId": 6
      },
      "lineNbr": 28,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2023-04-04T15:00:55Z",
      "side": 1,
      "message": "I uses this style, so we can easily switch to using deferred device context which is similar to command list. Maybe we will have a toggle to use the deferred device context.",
      "parentUuid": "0056942b_fb9d319b",
      "revId": "cf15f1bcadebc7436701e7b56bb3adb9221c2866",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b68b992f_7390466c",
        "filename": "src/dawn/native/d3d11/CommandRecordingContextD3D11.cpp",
        "patchSetId": 6
      },
      "lineNbr": 28,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-04-06T09:50:06Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "58a59d13_487fc120",
      "revId": "cf15f1bcadebc7436701e7b56bb3adb9221c2866",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0f0ee19a_ed57c628",
        "filename": "src/dawn/native/d3d11/CommandRecordingContextD3D11.cpp",
        "patchSetId": 6
      },
      "lineNbr": 32,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-04-04T14:15:54Z",
      "side": 1,
      "message": "Couldn\u0027t this be in an Initialize step done in Device::Initialize?",
      "revId": "cf15f1bcadebc7436701e7b56bb3adb9221c2866",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "969c29c9_f7eea4b8",
        "filename": "src/dawn/native/d3d11/CommandRecordingContextD3D11.cpp",
        "patchSetId": 6
      },
      "lineNbr": 32,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2023-04-04T15:00:55Z",
      "side": 1,
      "message": "If we want to support deferred device context, we have to put those stuff here. so we can initialize different device context base on toggle.",
      "parentUuid": "0f0ee19a_ed57c628",
      "revId": "cf15f1bcadebc7436701e7b56bb3adb9221c2866",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e422ac18_a4d3ca08",
        "filename": "src/dawn/native/d3d11/CommandRecordingContextD3D11.cpp",
        "patchSetId": 6
      },
      "lineNbr": 32,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-04-04T17:02:47Z",
      "side": 1,
      "message": "That makes sense, but then couldn\u0027t we directly start using DeferredContext?",
      "parentUuid": "969c29c9_f7eea4b8",
      "revId": "cf15f1bcadebc7436701e7b56bb3adb9221c2866",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6b249398_bf384bab",
        "filename": "src/dawn/native/d3d11/CommandRecordingContextD3D11.cpp",
        "patchSetId": 6
      },
      "lineNbr": 32,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2023-04-06T13:13:04Z",
      "side": 1,
      "message": "I can try it in a follow up to see which way\u0027s performance is better. But right now, dawn doesn\u0027t have hard requirement to use it yet, so I didn\u0027t use it from beginning.",
      "parentUuid": "e422ac18_a4d3ca08",
      "revId": "cf15f1bcadebc7436701e7b56bb3adb9221c2866",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "99fe7d5b_73cb6194",
        "filename": "src/dawn/native/d3d11/CommandRecordingContextD3D11.cpp",
        "patchSetId": 6
      },
      "lineNbr": 32,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-04-06T15:58:47Z",
      "side": 1,
      "message": "sounds fine to me. deferred context might be even slower unless we more eagerly record commands ahead of submit.",
      "parentUuid": "6b249398_bf384bab",
      "revId": "cf15f1bcadebc7436701e7b56bb3adb9221c2866",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "88785532_c1229600",
        "filename": "src/dawn/native/d3d11/CommandRecordingContextD3D11.cpp",
        "patchSetId": 6
      },
      "lineNbr": 38,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-04-04T14:15:54Z",
      "side": 1,
      "message": "Ditto, are we sure this is always available?",
      "revId": "cf15f1bcadebc7436701e7b56bb3adb9221c2866",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "05c17469_b6fa271d",
        "filename": "src/dawn/native/d3d11/CommandRecordingContextD3D11.cpp",
        "patchSetId": 6
      },
      "lineNbr": 38,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2023-04-04T15:00:55Z",
      "side": 1,
      "message": "I am not sure. But we need it for fence for implementing done callback for submitted work and external textures.\n\nBTW, ID3D11DeviceContext4 is defined in d3d11_3.h, and ID3D11Device5 is defined in  d3d11_4.h. If ID3D11Device5 is available, ID3D11DeviceContext4  must be available, so maybe we just need to check ID3D11Device5 during discover adapter or adapter initialization.",
      "parentUuid": "88785532_c1229600",
      "revId": "cf15f1bcadebc7436701e7b56bb3adb9221c2866",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "62f6b226_630233c2",
        "filename": "src/dawn/native/d3d11/CommandRecordingContextD3D11.cpp",
        "patchSetId": 6
      },
      "lineNbr": 38,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-04-04T17:02:47Z",
      "side": 1,
      "message": "Rafael, do you have info on what we can expect to always be present in Windows 10?",
      "parentUuid": "05c17469_b6fa271d",
      "revId": "cf15f1bcadebc7436701e7b56bb3adb9221c2866",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9fa5339a_125cd101",
        "filename": "src/dawn/native/d3d11/CommandRecordingContextD3D11.cpp",
        "patchSetId": 6
      },
      "lineNbr": 38,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2023-04-05T15:06:02Z",
      "side": 1,
      "message": "ID3D11Device5 is needed for creating ID3D11Fence. If it is not available, I think we can use ID3D11Query to check if submitted work are finished.\n\nHowever Chrome is also using ID3D11Fence for dawn and ANGLE synchronization[1]. Without fence, synchronize between between ANGLE and Dawn will become difficult. \n\n\n[1] https://source.chromium.org/chromium/chromium/src/+/refs/heads/main:gpu/command_buffer/service/shared_image/d3d_image_backing.cc;drc\u003d924687d1434ce6b38796d97be60c93e1e5622ebe;bpv\u003d1;bpt\u003d1;l\u003d879\n\nFiled a bug and add a TODO here",
      "parentUuid": "62f6b226_630233c2",
      "revId": "cf15f1bcadebc7436701e7b56bb3adb9221c2866",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dedac154_49c850f4",
        "filename": "src/dawn/native/d3d11/CommandRecordingContextD3D11.cpp",
        "patchSetId": 6
      },
      "lineNbr": 38,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-04-05T15:25:52Z",
      "side": 1,
      "message": "It might be OK to use fence. I\u0027ll confirm with sunny on the bug.",
      "parentUuid": "9fa5339a_125cd101",
      "revId": "cf15f1bcadebc7436701e7b56bb3adb9221c2866",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "76a5f3cf_c7f90295",
        "filename": "src/dawn/native/d3d11/CommandRecordingContextD3D11.cpp",
        "patchSetId": 6
      },
      "lineNbr": 38,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-04-06T09:50:06Z",
      "side": 1,
      "message": "Let\u0027s go forward with this for and see if we need changes later.",
      "parentUuid": "dedac154_49c850f4",
      "revId": "cf15f1bcadebc7436701e7b56bb3adb9221c2866",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cfbaeaaa_70c0659a",
        "filename": "src/dawn/native/d3d11/CommandRecordingContextD3D11.cpp",
        "patchSetId": 6
      },
      "lineNbr": 38,
      "author": {
        "id": 1000262
      },
      "writtenOn": "2023-04-06T17:13:09Z",
      "side": 1,
      "message": "Thank you for your patience. D3D11 is available on all versions of Windows 10 but D3D11 fences are not available until the Windows 10 Creators Update. \n\nTo synchronize textures across D3D11 devices on the same adapter, DXGI keyed mutexes are available on all Windows 10 versions.\n\nI would not recommend using D3D11 deferred contexts. Not all commands are available and I\u0027ve been told it is difficult to get them to work well.  \n\nSince Dawn runs in the same process and thread as ANGLE, I recommend using creating a D3D11 device context state object for Dawn on the ANGLE device using ID3D11Device1::CreateDeviceContext and swapping it in using ID3D11DeviceContext1::SwapDeviceContextState when Dawn wants issue calls to the D3D11 immediate context. All of the Dawn state is preserved in the state object; ANGLE is non-the-wiser to its existence or that its own state is swapped out from under it.\n\nOld Edge used device context state objects to interop different WebGL contexts, as well as with D2D, which has its own context state. All was pulled off with good success.",
      "parentUuid": "76a5f3cf_c7f90295",
      "revId": "cf15f1bcadebc7436701e7b56bb3adb9221c2866",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2386be30_94152d8d",
        "filename": "src/dawn/native/d3d11/CommandRecordingContextD3D11.cpp",
        "patchSetId": 6
      },
      "lineNbr": 38,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2023-04-06T17:37:21Z",
      "side": 1,
      "message": "Thanks for the good suggestion. I have several questions. In that case, all WebGPU clients and ANGLE will share the same ID3D11Device, and extra synchronization is not needed. Is there any security concerns for this model? Any idea about about the performance impact of sharing one device? Is  ID3D11DeviceContext1::SwapDeviceContextState() call heavy?",
      "parentUuid": "cfbaeaaa_70c0659a",
      "revId": "cf15f1bcadebc7436701e7b56bb3adb9221c2866",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a5c67de5_d60f940e",
        "filename": "src/dawn/native/d3d11/CommandRecordingContextD3D11.cpp",
        "patchSetId": 6
      },
      "lineNbr": 38,
      "author": {
        "id": 1000262
      },
      "writtenOn": "2023-04-06T19:52:58Z",
      "side": 1,
      "message": "\u003e Is there any security concerns for this model?\n\nNo. It\u0027s the same arrangement ANGLE already has with the GL contexts it multiplexes on top of one D3D11 immediate context.\n\n\u003e Any idea about about the performance impact of sharing one device? Is ID3D11DeviceContext1::SwapDeviceContextState() call heavy?\n\nPerformance should be improved on account of:\n-Only loading ONE instance of the UMD per GPU process instead of one per Dawn instance.\n-Reduced synchronization costs from having kernel manage one command queues instead of multiple ones.\n\nThere is already an intrinsic, default context state. Calling `SwapDeviceContextState` swaps out the pointer for yours. It\u0027s not free so don\u0027t be reckless and do it for every draw. Instead, do it when Dawn flushes its local command list.",
      "parentUuid": "2386be30_94152d8d",
      "revId": "cf15f1bcadebc7436701e7b56bb3adb9221c2866",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2431d7bb_84be434e",
        "filename": "src/dawn/native/d3d11/CommandRecordingContextD3D11.cpp",
        "patchSetId": 6
      },
      "lineNbr": 47,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-04-04T14:15:54Z",
      "side": 1,
      "message": "Why do we assert this? It\u0027s basically what is written above.",
      "revId": "cf15f1bcadebc7436701e7b56bb3adb9221c2866",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3a696f47_57ba8437",
        "filename": "src/dawn/native/d3d11/CommandRecordingContextD3D11.cpp",
        "patchSetId": 6
      },
      "lineNbr": 47,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2023-04-04T15:00:55Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2431d7bb_84be434e",
      "revId": "cf15f1bcadebc7436701e7b56bb3adb9221c2866",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "776c4be9_cd5d77f8",
        "filename": "src/dawn/native/d3d11/CommandRecordingContextD3D11.h",
        "patchSetId": 6
      },
      "lineNbr": 14,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-04-04T14:15:54Z",
      "side": 1,
      "message": "uber-nit: we usually have a newline between the header and this #ifndef",
      "revId": "cf15f1bcadebc7436701e7b56bb3adb9221c2866",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c3e43543_81e835f9",
        "filename": "src/dawn/native/d3d11/CommandRecordingContextD3D11.h",
        "patchSetId": 6
      },
      "lineNbr": 14,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2023-04-04T15:00:55Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "776c4be9_cd5d77f8",
      "revId": "cf15f1bcadebc7436701e7b56bb3adb9221c2866",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ce54f80f_c454b98b",
        "filename": "src/dawn/native/d3d11/CommandRecordingContextD3D11.h",
        "patchSetId": 6
      },
      "lineNbr": 19,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-04-04T14:15:54Z",
      "side": 1,
      "message": "nit: unused?",
      "revId": "cf15f1bcadebc7436701e7b56bb3adb9221c2866",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8bede76e_0da1d6d7",
        "filename": "src/dawn/native/d3d11/CommandRecordingContextD3D11.h",
        "patchSetId": 6
      },
      "lineNbr": 19,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2023-04-04T15:00:55Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ce54f80f_c454b98b",
      "revId": "cf15f1bcadebc7436701e7b56bb3adb9221c2866",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0fdea96e_eca386b7",
        "filename": "src/dawn/native/d3d11/DeviceD3D11.cpp",
        "patchSetId": 6
      },
      "lineNbr": 95,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-04-04T14:15:54Z",
      "side": 1,
      "message": "Is there any state on D3D11 devices such that reusing the same one for multiple wgpu::Device on the same adapter would cause problems?",
      "revId": "cf15f1bcadebc7436701e7b56bb3adb9221c2866",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c373f25a_25359feb",
        "filename": "src/dawn/native/d3d11/DeviceD3D11.cpp",
        "patchSetId": 6
      },
      "lineNbr": 95,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2023-04-04T15:00:55Z",
      "side": 1,
      "message": "I saw D3D12 reuses ID3D12Device, so I just copied it. Does webgpu clients share adapters?",
      "parentUuid": "0fdea96e_eca386b7",
      "revId": "cf15f1bcadebc7436701e7b56bb3adb9221c2866",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "efcc7e2a_35ecb014",
        "filename": "src/dawn/native/d3d11/DeviceD3D11.cpp",
        "patchSetId": 6
      },
      "lineNbr": 95,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2023-04-04T16:46:48Z",
      "side": 1,
      "message": "I think sharing ID3D11Device means sharing device context. It will cause problem. I changed it to have separate d3d11 device for eache wgpu::Device.",
      "parentUuid": "c373f25a_25359feb",
      "revId": "cf15f1bcadebc7436701e7b56bb3adb9221c2866",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1e15b8a5_e20949f6",
        "filename": "src/dawn/native/d3d11/DeviceD3D11.cpp",
        "patchSetId": 6
      },
      "lineNbr": 100,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-04-04T14:15:54Z",
      "side": 1,
      "message": "Do we have documentation on which Windows OSes or which devices the various D3D11Device interfaces are available on? We could ask Rafael for this data if needed.",
      "range": {
        "startLine": 100,
        "startChar": 37,
        "endLine": 100,
        "endChar": 50
      },
      "revId": "cf15f1bcadebc7436701e7b56bb3adb9221c2866",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d5dc3597_196f3462",
        "filename": "src/dawn/native/d3d11/DeviceD3D11.cpp",
        "patchSetId": 6
      },
      "lineNbr": 100,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2023-04-04T15:00:55Z",
      "side": 1,
      "message": "https://learn.microsoft.com/en-us/windows/win32/api/d3d11_4/nn-d3d11_4-id3d11device5\n\nNote  This interface, introduced in the Windows 10 Creators Update, is the latest version of the ID3D11Device interface. Applications targetting Windows 10 Creators Update should use this interface instead of earlier versions.\n\nLooks like Since chrome 110, we only support Windows 10 or later.\n\nhttps://blogs.windows.com/windowsexperience/2017/04/11/whats-new-in-the-windows-10-creators-update/\nLooks like the Windows 10 Creators Update was released before April 11, 2017.",
      "parentUuid": "1e15b8a5_e20949f6",
      "range": {
        "startLine": 100,
        "startChar": 37,
        "endLine": 100,
        "endChar": 50
      },
      "revId": "cf15f1bcadebc7436701e7b56bb3adb9221c2866",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ca918b84_fb61e094",
        "filename": "src/dawn/native/d3d11/DeviceD3D11.cpp",
        "patchSetId": 6
      },
      "lineNbr": 100,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-04-06T09:50:06Z",
      "side": 1,
      "message": "Ok it seems we might be able to rely on it, let\u0027s move forward with this CL with fences and Device5 and change things later if needed. Thank you for filing the bug.",
      "parentUuid": "d5dc3597_196f3462",
      "range": {
        "startLine": 100,
        "startChar": 37,
        "endLine": 100,
        "endChar": 50
      },
      "revId": "cf15f1bcadebc7436701e7b56bb3adb9221c2866",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "751f6f5d_8ed8e18e",
        "filename": "src/dawn/native/d3d11/DeviceD3D11.cpp",
        "patchSetId": 6
      },
      "lineNbr": 222,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-04-04T14:15:54Z",
      "side": 1,
      "message": "This one doesn\u0027t get to have a text? 😊",
      "range": {
        "startLine": 222,
        "startChar": 37,
        "endLine": 222,
        "endChar": 38
      },
      "revId": "cf15f1bcadebc7436701e7b56bb3adb9221c2866",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "faab7c17_f371f8ff",
        "filename": "src/dawn/native/d3d11/DeviceD3D11.cpp",
        "patchSetId": 6
      },
      "lineNbr": 222,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2023-04-04T15:00:55Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "751f6f5d_8ed8e18e",
      "range": {
        "startLine": 222,
        "startChar": 37,
        "endLine": 222,
        "endChar": 38
      },
      "revId": "cf15f1bcadebc7436701e7b56bb3adb9221c2866",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0516219b_5f112927",
        "filename": "src/dawn/native/d3d11/DeviceD3D11.cpp",
        "patchSetId": 6
      },
      "lineNbr": 355,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-04-04T14:15:54Z",
      "side": 1,
      "message": "nit: unused?",
      "revId": "cf15f1bcadebc7436701e7b56bb3adb9221c2866",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7a41630c_32c5bbc9",
        "filename": "src/dawn/native/d3d11/DeviceD3D11.cpp",
        "patchSetId": 6
      },
      "lineNbr": 355,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2023-04-04T15:00:55Z",
      "side": 1,
      "message": "This method is an implementation for a virtual method in base class.",
      "parentUuid": "0516219b_5f112927",
      "revId": "cf15f1bcadebc7436701e7b56bb3adb9221c2866",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "adee15d2_4978d702",
        "filename": "src/dawn/native/d3d11/DeviceD3D11.cpp",
        "patchSetId": 6
      },
      "lineNbr": 355,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-04-04T17:02:47Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "7a41630c_32c5bbc9",
      "revId": "cf15f1bcadebc7436701e7b56bb3adb9221c2866",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a7155f21_682b4e06",
        "filename": "src/dawn/native/d3d11/DeviceD3D11.cpp",
        "patchSetId": 6
      },
      "lineNbr": 391,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-04-04T14:15:54Z",
      "side": 1,
      "message": "Is that still true for D3D11?",
      "revId": "cf15f1bcadebc7436701e7b56bb3adb9221c2866",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9692b47e_80b73d0d",
        "filename": "src/dawn/native/d3d11/DeviceD3D11.cpp",
        "patchSetId": 6
      },
      "lineNbr": 391,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2023-04-04T15:00:55Z",
      "side": 1,
      "message": "No. Removed",
      "parentUuid": "a7155f21_682b4e06",
      "revId": "cf15f1bcadebc7436701e7b56bb3adb9221c2866",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4e3a153f_9de64d16",
        "filename": "src/dawn/native/d3d11/DeviceD3D11.cpp",
        "patchSetId": 6
      },
      "lineNbr": 405,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-04-04T14:15:54Z",
      "side": 1,
      "message": "nit: Use UNIMPLEMENTED() or similar instead of commented out code? Ditto in SetLabelImpl and ShouldDuplicateParametersForDrawIndirect",
      "revId": "cf15f1bcadebc7436701e7b56bb3adb9221c2866",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5d5fd22e_3f371b3a",
        "filename": "src/dawn/native/d3d11/DeviceD3D11.cpp",
        "patchSetId": 6
      },
      "lineNbr": 405,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2023-04-04T15:00:55Z",
      "side": 1,
      "message": "Seems UNIMPLEMENTED() cannot be used here. It is defined in dawn/node. Remove those comment out code.",
      "parentUuid": "4e3a153f_9de64d16",
      "revId": "cf15f1bcadebc7436701e7b56bb3adb9221c2866",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "105cdd34_39366220",
        "filename": "src/dawn/native/d3d11/SamplerD3D11.cpp",
        "patchSetId": 6
      },
      "lineNbr": 70,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-04-04T14:15:54Z",
      "side": 1,
      "message": "Double checked that all the filters must be linear in WebGPU for this to work, so it makes sense.",
      "revId": "cf15f1bcadebc7436701e7b56bb3adb9221c2866",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}