{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "0056942b_fb9d319b",
        "filename": "src/dawn/native/d3d11/CommandRecordingContextD3D11.cpp",
        "patchSetId": 6
      },
      "lineNbr": 28,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-04-04T14:15:54Z",
      "side": 1,
      "message": "My understanding is that DeviceContext commands are executed immediately, contrary to D3D12 commands that are first staged in command lists. So do we need all the complexity of the CommandRecordingContext, or could we do something more like the OpenGL backend?",
      "revId": "cf15f1bcadebc7436701e7b56bb3adb9221c2866",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0f0ee19a_ed57c628",
        "filename": "src/dawn/native/d3d11/CommandRecordingContextD3D11.cpp",
        "patchSetId": 6
      },
      "lineNbr": 32,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-04-04T14:15:54Z",
      "side": 1,
      "message": "Couldn\u0027t this be in an Initialize step done in Device::Initialize?",
      "revId": "cf15f1bcadebc7436701e7b56bb3adb9221c2866",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "88785532_c1229600",
        "filename": "src/dawn/native/d3d11/CommandRecordingContextD3D11.cpp",
        "patchSetId": 6
      },
      "lineNbr": 38,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-04-04T14:15:54Z",
      "side": 1,
      "message": "Ditto, are we sure this is always available?",
      "revId": "cf15f1bcadebc7436701e7b56bb3adb9221c2866",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2431d7bb_84be434e",
        "filename": "src/dawn/native/d3d11/CommandRecordingContextD3D11.cpp",
        "patchSetId": 6
      },
      "lineNbr": 47,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-04-04T14:15:54Z",
      "side": 1,
      "message": "Why do we assert this? It\u0027s basically what is written above.",
      "revId": "cf15f1bcadebc7436701e7b56bb3adb9221c2866",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "776c4be9_cd5d77f8",
        "filename": "src/dawn/native/d3d11/CommandRecordingContextD3D11.h",
        "patchSetId": 6
      },
      "lineNbr": 14,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-04-04T14:15:54Z",
      "side": 1,
      "message": "uber-nit: we usually have a newline between the header and this #ifndef",
      "revId": "cf15f1bcadebc7436701e7b56bb3adb9221c2866",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ce54f80f_c454b98b",
        "filename": "src/dawn/native/d3d11/CommandRecordingContextD3D11.h",
        "patchSetId": 6
      },
      "lineNbr": 19,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-04-04T14:15:54Z",
      "side": 1,
      "message": "nit: unused?",
      "revId": "cf15f1bcadebc7436701e7b56bb3adb9221c2866",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0fdea96e_eca386b7",
        "filename": "src/dawn/native/d3d11/DeviceD3D11.cpp",
        "patchSetId": 6
      },
      "lineNbr": 95,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-04-04T14:15:54Z",
      "side": 1,
      "message": "Is there any state on D3D11 devices such that reusing the same one for multiple wgpu::Device on the same adapter would cause problems?",
      "revId": "cf15f1bcadebc7436701e7b56bb3adb9221c2866",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1e15b8a5_e20949f6",
        "filename": "src/dawn/native/d3d11/DeviceD3D11.cpp",
        "patchSetId": 6
      },
      "lineNbr": 100,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-04-04T14:15:54Z",
      "side": 1,
      "message": "Do we have documentation on which Windows OSes or which devices the various D3D11Device interfaces are available on? We could ask Rafael for this data if needed.",
      "range": {
        "startLine": 100,
        "startChar": 37,
        "endLine": 100,
        "endChar": 50
      },
      "revId": "cf15f1bcadebc7436701e7b56bb3adb9221c2866",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "751f6f5d_8ed8e18e",
        "filename": "src/dawn/native/d3d11/DeviceD3D11.cpp",
        "patchSetId": 6
      },
      "lineNbr": 222,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-04-04T14:15:54Z",
      "side": 1,
      "message": "This one doesn\u0027t get to have a text? ðŸ˜Š",
      "range": {
        "startLine": 222,
        "startChar": 37,
        "endLine": 222,
        "endChar": 38
      },
      "revId": "cf15f1bcadebc7436701e7b56bb3adb9221c2866",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0516219b_5f112927",
        "filename": "src/dawn/native/d3d11/DeviceD3D11.cpp",
        "patchSetId": 6
      },
      "lineNbr": 355,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-04-04T14:15:54Z",
      "side": 1,
      "message": "nit: unused?",
      "revId": "cf15f1bcadebc7436701e7b56bb3adb9221c2866",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a7155f21_682b4e06",
        "filename": "src/dawn/native/d3d11/DeviceD3D11.cpp",
        "patchSetId": 6
      },
      "lineNbr": 391,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-04-04T14:15:54Z",
      "side": 1,
      "message": "Is that still true for D3D11?",
      "revId": "cf15f1bcadebc7436701e7b56bb3adb9221c2866",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4e3a153f_9de64d16",
        "filename": "src/dawn/native/d3d11/DeviceD3D11.cpp",
        "patchSetId": 6
      },
      "lineNbr": 405,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-04-04T14:15:54Z",
      "side": 1,
      "message": "nit: Use UNIMPLEMENTED() or similar instead of commented out code? Ditto in SetLabelImpl and ShouldDuplicateParametersForDrawIndirect",
      "revId": "cf15f1bcadebc7436701e7b56bb3adb9221c2866",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "105cdd34_39366220",
        "filename": "src/dawn/native/d3d11/SamplerD3D11.cpp",
        "patchSetId": 6
      },
      "lineNbr": 70,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-04-04T14:15:54Z",
      "side": 1,
      "message": "Double checked that all the filters must be linear in WebGPU for this to work, so it makes sense.",
      "revId": "cf15f1bcadebc7436701e7b56bb3adb9221c2866",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}