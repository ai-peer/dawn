{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "83ad0a20_a5b2d0eb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2021-08-02T21:32:25Z",
      "side": 1,
      "message": "Corentin is out, adding RC",
      "revId": "fd1e7e9dc054a5a0470644d1e201639dd56926d4",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0d013bc3_ffa0bb07",
        "filename": "src/dawn_native/d3d12/ResourceHeapAllocationD3D12.cpp",
        "patchSetId": 3
      },
      "lineNbr": 46,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2021-08-02T23:39:08Z",
      "side": 1,
      "message": "nit: can\u0027t we prepend DAWN_ at the callsite so that all the strings are compile-time constants?",
      "range": {
        "startLine": 46,
        "startChar": 0,
        "endLine": 46,
        "endChar": 68
      },
      "revId": "fd1e7e9dc054a5a0470644d1e201639dd56926d4",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "32866533_7202eec9",
        "filename": "src/dawn_native/d3d12/ResourceHeapAllocationD3D12.cpp",
        "patchSetId": 3
      },
      "lineNbr": 46,
      "author": {
        "id": 1000262
      },
      "writtenOn": "2021-08-03T01:58:10Z",
      "side": 1,
      "message": "For ANGLE, we prepend ANGLE_ for ANGLE allocations.\n\nFYI, a CL is in the works on the ANGLE side to enhance the string to be ANGLE_\u003cinternalName\u003e_\u003cexternalName\u003e. The internal name will correspond to the internal class or data structure; \"StagingBuffer\", \"ExternalTexture\", etc. The external name will be one provided by the user of ANGLE via the KHR_debug extension. For WebGPU, the corresponding \"KHR_debug extension\" is the the label attribute on GPUObjectBase.\n\nSince we\u0027re already going to be composing strings in this manner I don\u0027t feel too strongly about pre-pending DAWN_ to everything, up to you.\n\nI think having developer names in tools would be really cool.",
      "parentUuid": "0d013bc3_ffa0bb07",
      "range": {
        "startLine": 46,
        "startChar": 0,
        "endLine": 46,
        "endChar": 68
      },
      "revId": "fd1e7e9dc054a5a0470644d1e201639dd56926d4",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f47ab2f7_2f5d8480",
        "filename": "src/dawn_native/d3d12/ResourceHeapAllocationD3D12.cpp",
        "patchSetId": 3
      },
      "lineNbr": 46,
      "author": {
        "id": 1000268
      },
      "writtenOn": "2021-08-03T17:11:44Z",
      "side": 1,
      "message": "No strong preference here to prefix at call-site, I left it as-is.",
      "parentUuid": "32866533_7202eec9",
      "range": {
        "startLine": 46,
        "startChar": 0,
        "endLine": 46,
        "endChar": 68
      },
      "revId": "fd1e7e9dc054a5a0470644d1e201639dd56926d4",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5db1deea_5694a455",
        "filename": "src/dawn_native/d3d12/ResourceHeapAllocationD3D12.cpp",
        "patchSetId": 3
      },
      "lineNbr": 46,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2021-08-03T17:41:23Z",
      "side": 1,
      "message": "kind of a nit, but still prefer to prefix at the call-site.\n\nif there\u0027s no user-provided label,\n\"DAWN_\" + \"Buffer\" could instead be 0 temporary allocations if it were \"DAWN_Buffer\"\n\nif there is a label, it\u0027s also fewer operations:\na. \"DAWN_\" + \"Buffer\" + \"_\" + label\nb. \"DAWN_Buffer\" + \"_\" + label\n\nAlso unit: I think we should do casing like \"Dawn\". ANGLE is an acronym for Almost Native Graphics Layer Engine. Dawn is not an acronym.",
      "parentUuid": "f47ab2f7_2f5d8480",
      "range": {
        "startLine": 46,
        "startChar": 0,
        "endLine": 46,
        "endChar": 68
      },
      "revId": "fd1e7e9dc054a5a0470644d1e201639dd56926d4",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "045cd4a5_9777601d",
        "filename": "src/dawn_native/d3d12/ResourceHeapAllocationD3D12.cpp",
        "patchSetId": 3
      },
      "lineNbr": 46,
      "author": {
        "id": 1000268
      },
      "writtenOn": "2021-08-03T19:32:56Z",
      "side": 1,
      "message": "Np, done.",
      "parentUuid": "5db1deea_5694a455",
      "range": {
        "startLine": 46,
        "startChar": 0,
        "endLine": 46,
        "endChar": 68
      },
      "revId": "fd1e7e9dc054a5a0470644d1e201639dd56926d4",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9b8d7a61_219bb055",
        "filename": "src/dawn_native/d3d12/ResourceHeapAllocationD3D12.cpp",
        "patchSetId": 3
      },
      "lineNbr": 47,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2021-08-02T23:39:08Z",
      "side": 1,
      "message": "\"Note that this is simply a convenience wrapper around ID3D12Object::SetPrivateData with WKPDID_D3DDebugObjectNameW. Therefore names which are set with SetName can be retrieved with ID3D12Object::GetPrivateData with the same GUID. Additionally, D3D12 supports narrow strings for names, using the WKPDID_D3DDebugObjectName GUID directly instead.\"\n\nSeems like we should use a narrow string instead of a wide one",
      "range": {
        "startLine": 47,
        "startChar": 41,
        "endLine": 47,
        "endChar": 48
      },
      "revId": "fd1e7e9dc054a5a0470644d1e201639dd56926d4",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "04407463_f66073b1",
        "filename": "src/dawn_native/d3d12/ResourceHeapAllocationD3D12.cpp",
        "patchSetId": 3
      },
      "lineNbr": 47,
      "author": {
        "id": 1000262
      },
      "writtenOn": "2021-08-03T01:58:10Z",
      "side": 1,
      "message": "+1",
      "parentUuid": "9b8d7a61_219bb055",
      "range": {
        "startLine": 47,
        "startChar": 41,
        "endLine": 47,
        "endChar": 48
      },
      "revId": "fd1e7e9dc054a5a0470644d1e201639dd56926d4",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "caab5a5b_c43f9cc5",
        "filename": "src/dawn_native/d3d12/ResourceHeapAllocationD3D12.cpp",
        "patchSetId": 3
      },
      "lineNbr": 47,
      "author": {
        "id": 1000268
      },
      "writtenOn": "2021-08-03T17:11:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "04407463_f66073b1",
      "range": {
        "startLine": 47,
        "startChar": 41,
        "endLine": 47,
        "endChar": 48
      },
      "revId": "fd1e7e9dc054a5a0470644d1e201639dd56926d4",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}