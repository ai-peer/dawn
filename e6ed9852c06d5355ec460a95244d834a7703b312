{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "4c997277_b99cd7a7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2022-06-03T05:29:27Z",
      "side": 1,
      "message": "PTAL! Simplified this to not have the complex builder type-checking and added tests!\n\nalso, boohoo - https://developercommunity.visualstudio.com/t/template-class-friend-declaration-ignored/431551\n\nI\u0027ll just need to make the function public.",
      "revId": "e6ed9852c06d5355ec460a95244d834a7703b312",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b5416cd1_d75d8dbc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-06-03T16:38:13Z",
      "side": 1,
      "message": "Approach LGTM, thanks for trying it.",
      "revId": "e6ed9852c06d5355ec460a95244d834a7703b312",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "110ed2d0_064eb65a",
        "filename": "src/dawn/native/CacheRequest.h",
        "patchSetId": 10
      },
      "lineNbr": 53,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-06-03T16:38:13Z",
      "side": 1,
      "message": "Is this class needed with the if constexpr below?",
      "revId": "e6ed9852c06d5355ec460a95244d834a7703b312",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8de81daa_d631631d",
        "filename": "src/dawn/native/CacheRequest.h",
        "patchSetId": 10
      },
      "lineNbr": 53,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2022-06-03T17:19:19Z",
      "side": 1,
      "message": "which `if constexpr`? if you mean the existing one - no, we still need it even with that. Not sure if you mean adding a new one.\n\nI think we may be able to remove it if CreateFn always returns ErrorOrResult though",
      "parentUuid": "110ed2d0_064eb65a",
      "revId": "e6ed9852c06d5355ec460a95244d834a7703b312",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9f8409c6_ec345cbe",
        "filename": "src/dawn/native/CacheRequest.h",
        "patchSetId": 10
      },
      "lineNbr": 53,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2022-06-04T02:06:33Z",
      "side": 1,
      "message": "removed",
      "parentUuid": "8de81daa_d631631d",
      "revId": "e6ed9852c06d5355ec460a95244d834a7703b312",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3fd9a4f1_b86bbb17",
        "filename": "src/dawn/native/CacheRequest.h",
        "patchSetId": 10
      },
      "lineNbr": 55,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-06-03T16:38:13Z",
      "side": 1,
      "message": "Q: is RV RightValue?",
      "range": {
        "startLine": 55,
        "startChar": 16,
        "endLine": 55,
        "endChar": 18
      },
      "revId": "e6ed9852c06d5355ec460a95244d834a7703b312",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f3f3fe63_fac88621",
        "filename": "src/dawn/native/CacheRequest.h",
        "patchSetId": 10
      },
      "lineNbr": 55,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2022-06-03T17:19:19Z",
      "side": 1,
      "message": "\"ReturnValue\" - though I can expand it out. And here, it should be more like \"UnwrappedReturnValue\"",
      "parentUuid": "3fd9a4f1_b86bbb17",
      "range": {
        "startLine": 55,
        "startChar": 16,
        "endLine": 55,
        "endChar": 18
      },
      "revId": "e6ed9852c06d5355ec460a95244d834a7703b312",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5ffac223_c95b402d",
        "filename": "src/dawn/native/CacheRequest.h",
        "patchSetId": 10
      },
      "lineNbr": 55,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2022-06-04T02:06:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f3f3fe63_fac88621",
      "range": {
        "startLine": 55,
        "startChar": 16,
        "endLine": 55,
        "endChar": 18
      },
      "revId": "e6ed9852c06d5355ec460a95244d834a7703b312",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dbbdf95f_b6ab931f",
        "filename": "src/dawn/native/CacheRequest.h",
        "patchSetId": 10
      },
      "lineNbr": 93,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-06-03T16:38:13Z",
      "side": 1,
      "message": "nit: can we write down somewhere that it is VERY MUCH best practice that CreateFn doesn\u0027t capture anything?",
      "revId": "e6ed9852c06d5355ec460a95244d834a7703b312",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "afb54f53_3325219d",
        "filename": "src/dawn/native/CacheRequest.h",
        "patchSetId": 10
      },
      "lineNbr": 93,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2022-06-03T17:19:19Z",
      "side": 1,
      "message": "It is actually compile-time impossible for CreateFn to capture anything, though I will expand this comment to say it is not allowed",
      "parentUuid": "dbbdf95f_b6ab931f",
      "revId": "e6ed9852c06d5355ec460a95244d834a7703b312",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7f5c8083_203d817c",
        "filename": "src/dawn/native/CacheRequest.h",
        "patchSetId": 10
      },
      "lineNbr": 99,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-06-03T16:38:13Z",
      "side": 1,
      "message": "WDYT of forcing that CreateFn returns an ErrorOrResult? It seems that in the vast majority of cases we are going to call a driver or Tint in ways that can fail so we\u0027ll need to handle the failure anyway.",
      "revId": "e6ed9852c06d5355ec460a95244d834a7703b312",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9a3c5d12_7da60ddf",
        "filename": "src/dawn/native/CacheRequest.h",
        "patchSetId": 10
      },
      "lineNbr": 99,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2022-06-03T17:19:19Z",
      "side": 1,
      "message": "sounds reasonable",
      "parentUuid": "7f5c8083_203d817c",
      "revId": "e6ed9852c06d5355ec460a95244d834a7703b312",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "53376e6d_e207da72",
        "filename": "src/dawn/native/CacheRequest.h",
        "patchSetId": 10
      },
      "lineNbr": 99,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2022-06-04T02:06:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9a3c5d12_7da60ddf",
      "revId": "e6ed9852c06d5355ec460a95244d834a7703b312",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6ab27714_f35bd582",
        "filename": "src/dawn/native/CacheRequest.h",
        "patchSetId": 10
      },
      "lineNbr": 114,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-06-03T16:38:13Z",
      "side": 1,
      "message": "By what kind of magic does this function get into the scope enclosing the CacheRequestImpl class ???",
      "revId": "e6ed9852c06d5355ec460a95244d834a7703b312",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8e19ad41_5c3c9a4b",
        "filename": "src/dawn/native/CacheRequest.h",
        "patchSetId": 10
      },
      "lineNbr": 114,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2022-06-03T17:19:19Z",
      "side": 1,
      "message": "because it is `friend` - it\u0027s like defining a `friend std::ostream\u0026 operator\u003c\u003c (std::ostream\u0026 os, T);`\n\n\"ADL can find a friend function (typically, an overloaded operator) that is defined entirely within a class or class template, even if it was never declared at namespace level.\"\nhttps://en.cppreference.com/w/cpp/language/adl",
      "parentUuid": "6ab27714_f35bd582",
      "revId": "e6ed9852c06d5355ec460a95244d834a7703b312",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "10d0395e_cdc3e3e5",
        "filename": "src/dawn/native/CacheRequest.h",
        "patchSetId": 10
      },
      "lineNbr": 114,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-06-08T15:27:20Z",
      "side": 1,
      "message": "Gotcha, TIL.",
      "parentUuid": "8e19ad41_5c3c9a4b",
      "revId": "e6ed9852c06d5355ec460a95244d834a7703b312",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "930ad10d_f5ac4621",
        "filename": "src/dawn/native/CacheRequest.h",
        "patchSetId": 10
      },
      "lineNbr": 115,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-06-03T16:38:13Z",
      "side": 1,
      "message": "nit: Request\u0026\u0026 ?",
      "range": {
        "startLine": 115,
        "startChar": 29,
        "endLine": 115,
        "endChar": 36
      },
      "revId": "e6ed9852c06d5355ec460a95244d834a7703b312",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5b40687b_16c0dcfc",
        "filename": "src/dawn/native/CacheRequest.h",
        "patchSetId": 10
      },
      "lineNbr": 115,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2022-06-04T02:06:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "930ad10d_f5ac4621",
      "range": {
        "startLine": 115,
        "startChar": 29,
        "endLine": 115,
        "endChar": 36
      },
      "revId": "e6ed9852c06d5355ec460a95244d834a7703b312",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c65e0fad_fdd14adc",
        "filename": "src/dawn/native/CacheRequest.h",
        "patchSetId": 10
      },
      "lineNbr": 149,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-06-03T16:38:13Z",
      "side": 1,
      "message": "nit: Maybe write doc on how to use that macro with an example?",
      "revId": "e6ed9852c06d5355ec460a95244d834a7703b312",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a1e24dac_e0882a56",
        "filename": "src/dawn/native/CacheRequest.h",
        "patchSetId": 10
      },
      "lineNbr": 149,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2022-06-04T02:06:33Z",
      "side": 1,
      "message": "Done, in the DAWN_MAKE_CACHE_REQUEST macro",
      "parentUuid": "c65e0fad_fdd14adc",
      "revId": "e6ed9852c06d5355ec460a95244d834a7703b312",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "35665913_c89af340",
        "filename": "src/dawn/native/CacheRequest.h",
        "patchSetId": 10
      },
      "lineNbr": 166,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-06-03T16:38:13Z",
      "side": 1,
      "message": "WDYT of recording #Request instead? It would be a short string, that should be unique? But it wouldn\u0027t be machine checked that it is unique so IDK.",
      "revId": "e6ed9852c06d5355ec460a95244d834a7703b312",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "81820e9e_d65a71be",
        "filename": "src/dawn/native/CacheRequest.h",
        "patchSetId": 10
      },
      "lineNbr": 166,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2022-06-03T17:19:19Z",
      "side": 1,
      "message": "seems ok - I\u0027ll do that as it saves needing to list all the enums out. the enum is not guaranteed to be unique either so :-/\n\nthe current approach also does not save us from calling LoadOrCreate with the same request type, with functors that compute different results. Technically it should be typed on both the request type and the functor types, but idk why we would need that right now. Maybe one day we\u0027ll have some other magic identifier for the callsite.",
      "parentUuid": "35665913_c89af340",
      "revId": "e6ed9852c06d5355ec460a95244d834a7703b312",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "165356f0_1dc0124c",
        "filename": "src/dawn/native/CacheRequest.h",
        "patchSetId": 10
      },
      "lineNbr": 166,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2022-06-04T02:06:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "81820e9e_d65a71be",
      "revId": "e6ed9852c06d5355ec460a95244d834a7703b312",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "daae898f_5672c473",
        "filename": "src/dawn/native/CacheResult.h",
        "patchSetId": 10
      },
      "lineNbr": 40,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-06-03T16:38:13Z",
      "side": 1,
      "message": "nit: Why not static member functions CacheResult::CacheHit(key, value) and CacheResult::CacheMiss(key)?",
      "revId": "e6ed9852c06d5355ec460a95244d834a7703b312",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "689c7efe_c0a276a0",
        "filename": "src/dawn/native/CacheResult.h",
        "patchSetId": 10
      },
      "lineNbr": 40,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2022-06-04T02:06:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "daae898f_5672c473",
      "revId": "e6ed9852c06d5355ec460a95244d834a7703b312",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4303cd95_d197305c",
        "filename": "src/dawn/tests/DawnNativeTest.cpp",
        "patchSetId": 10
      },
      "lineNbr": 70,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-06-03T16:38:13Z",
      "side": 1,
      "message": "Q: Why is this needed?",
      "revId": "e6ed9852c06d5355ec460a95244d834a7703b312",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0e2c083f_1a6634b1",
        "filename": "src/dawn/tests/DawnNativeTest.cpp",
        "patchSetId": 10
      },
      "lineNbr": 70,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2022-06-03T17:19:19Z",
      "side": 1,
      "message": "because device is a member of DawnNativeTest, but mPlatform is a member of derived class CacheRequestTests. Without this, mPlatform is destructed first, then when device is destructed in the base class, it tries to access mPlatform due to usage of TRACE_EVENT calling Tick.\n\nI can comment about this",
      "parentUuid": "4303cd95_d197305c",
      "revId": "e6ed9852c06d5355ec460a95244d834a7703b312",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b2e0a00f_10e4896d",
        "filename": "src/dawn/tests/DawnNativeTest.cpp",
        "patchSetId": 10
      },
      "lineNbr": 70,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2022-06-04T02:06:33Z",
      "side": 1,
      "message": "instead, I moved the platform to DawnNativeTest",
      "parentUuid": "0e2c083f_1a6634b1",
      "revId": "e6ed9852c06d5355ec460a95244d834a7703b312",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "175098ae_c03e50b4",
        "filename": "src/dawn/tests/unittests/native/CacheRequestTests.cpp",
        "patchSetId": 10
      },
      "lineNbr": 57,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-06-03T16:38:13Z",
      "side": 1,
      "message": "nit: these are used in a single test, can they be defined there or is it not possible to do the same thing with lambdas?",
      "revId": "e6ed9852c06d5355ec460a95244d834a7703b312",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ab5cbdde_8177228e",
        "filename": "src/dawn/tests/unittests/native/CacheRequestTests.cpp",
        "patchSetId": 10
      },
      "lineNbr": 57,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2022-06-03T17:19:19Z",
      "side": 1,
      "message": "can\u0027t define a template inside the inner scope of another function",
      "parentUuid": "175098ae_c03e50b4",
      "revId": "e6ed9852c06d5355ec460a95244d834a7703b312",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e70db8df_7f6c5466",
        "filename": "src/dawn/tests/unittests/native/CacheRequestTests.cpp",
        "patchSetId": 10
      },
      "lineNbr": 57,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-06-08T15:27:20Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "ab5cbdde_8177228e",
      "revId": "e6ed9852c06d5355ec460a95244d834a7703b312",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}