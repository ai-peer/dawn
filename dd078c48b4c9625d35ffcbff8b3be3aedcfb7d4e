{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "607efafd_e3c1d511",
        "filename": "dawn.json",
        "patchSetId": 14
      },
      "lineNbr": 2040,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2021-09-17T00:19:14Z",
      "side": 1,
      "message": "I realized doing this created a hole in the format table (Format.cpp). kKnownFormatCount says \"Asserts in BuildFormatTable ensure that this is the exact number of known format\" but I\u0027m not seeing any assert fail due to this hole.\n\nIs it OK to have a hole or should I un-tag depth16unorm and add stub support for it (like we have for stencil8)?",
      "revId": "dd078c48b4c9625d35ffcbff8b3be3aedcfb7d4e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ecca5b6b_b8cb2716",
        "filename": "dawn.json",
        "patchSetId": 14
      },
      "lineNbr": 2040,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2021-09-17T00:31:57Z",
      "side": 1,
      "message": "I think the asserts are just about it not being out of bounds.\n\nIt might be okay; we just need to make sure the isSupported field is false. Probably getter to explicitly stub it to be false though?",
      "parentUuid": "607efafd_e3c1d511",
      "revId": "dd078c48b4c9625d35ffcbff8b3be3aedcfb7d4e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "570b333b_26e7e85a",
        "filename": "dawn.json",
        "patchSetId": 14
      },
      "lineNbr": 2040,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2021-09-17T00:35:12Z",
      "side": 1,
      "message": "Whoops apparently I wasn\u0027t running the test correctly locally. (Probably forgot to run debug version.)\n\nError: Assertion failure at ../../src/dawn_native/Format.cpp:408 (BuildFormatTable): formatsSet.all()",
      "parentUuid": "ecca5b6b_b8cb2716",
      "revId": "dd078c48b4c9625d35ffcbff8b3be3aedcfb7d4e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}