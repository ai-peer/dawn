{
  "comments": [
    {
      "key": {
        "uuid": "e979edb2_21916520",
        "filename": "dawn.json",
        "patchSetId": 7
      },
      "lineNbr": 508,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2019-01-03T00:44:58Z",
      "side": 1,
      "message": "It\u0027s weird that depthStencilStateDescriptor.back.compare doesn\u0027t specify that it\u0027s for stencil. It should probably be .stencilBack.compare (or maybe .back.stencilCompare). Opened an issue: https://github.com/gpuweb/gpuweb/issues/159",
      "range": {
        "startLine": 508,
        "startChar": 22,
        "endLine": 508,
        "endChar": 26
      },
      "revId": "0041ca4ae57bb6c0b6d01c62ec85a111b5279767",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7c50d69d_de0470c7",
        "filename": "src/dawn_native/metal/RenderPipelineMTL.mm",
        "patchSetId": 7
      },
      "lineNbr": 188,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2019-01-03T00:44:58Z",
      "side": 1,
      "message": "nit:\n\n\u003e If output-only parameters are used they should appear after input parameters.\n\nhttps://google.github.io/styleguide/cppguide.html#Output_Parameters\n(even though this is not _exactly_ a pure output parameter).",
      "range": {
        "startLine": 188,
        "startChar": 37,
        "endLine": 188,
        "endChar": 89
      },
      "revId": "0041ca4ae57bb6c0b6d01c62ec85a111b5279767",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6791109b_c3c24264",
        "filename": "src/dawn_native/metal/RenderPipelineMTL.mm",
        "patchSetId": 7
      },
      "lineNbr": 224,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2019-01-03T00:44:58Z",
      "side": 1,
      "message": "Is there a [MTLStencilDescriptor init]? If so, you might be able to do an in-place init instead of having the extra [release]. (might not be possible because of the type of backFaceStencil, not sure)",
      "range": {
        "startLine": 224,
        "startChar": 34,
        "endLine": 224,
        "endChar": 41
      },
      "revId": "0041ca4ae57bb6c0b6d01c62ec85a111b5279767",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1e93b8d8_638f0330",
        "filename": "src/dawn_native/metal/RenderPipelineMTL.mm",
        "patchSetId": 7
      },
      "lineNbr": 279,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2019-01-03T00:44:58Z",
      "side": 1,
      "message": "Can you brace this scope so that the `error` object doesn\u0027t escape?\n\n  {\n    ...\n  }",
      "range": {
        "startLine": 271,
        "startChar": 8,
        "endLine": 279,
        "endChar": 9
      },
      "revId": "0041ca4ae57bb6c0b6d01c62ec85a111b5279767",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "063d0e22_eb8a29a4",
        "filename": "src/dawn_native/metal/RenderPipelineMTL.mm",
        "patchSetId": 7
      },
      "lineNbr": 281,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2019-01-03T00:44:58Z",
      "side": 1,
      "message": "old code nit: Can this be released right after newRenderPipelineStateWithDescriptor instead of twice?",
      "range": {
        "startLine": 281,
        "startChar": 23,
        "endLine": 281,
        "endChar": 30
      },
      "revId": "0041ca4ae57bb6c0b6d01c62ec85a111b5279767",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "65505bec_4ccde8f5",
        "filename": "src/dawn_native/metal/RenderPipelineMTL.mm",
        "patchSetId": 7
      },
      "lineNbr": 291,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2019-01-03T00:44:58Z",
      "side": 1,
      "message": "`error` cannot have changed here; it\u0027s only used in newRenderPipelineStateWithDescriptor above. I think newDepthStencilStateWithDescriptor can\u0027t fail.",
      "range": {
        "startLine": 291,
        "startChar": 12,
        "endLine": 291,
        "endChar": 24
      },
      "revId": "0041ca4ae57bb6c0b6d01c62ec85a111b5279767",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f499f202_00d0804b",
        "filename": "src/dawn_native/opengl/RenderPipelineGL.cpp",
        "patchSetId": 7
      },
      "lineNbr": 159,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2019-01-03T00:44:58Z",
      "side": 1,
      "message": "should be * or const\u0026.\n\n\u003e we never allow non-const reference parameters except when required by convention\n\nhttps://google.github.io/styleguide/cppguide.html#Reference_Arguments",
      "range": {
        "startLine": 159,
        "startChar": 61,
        "endLine": 159,
        "endChar": 84
      },
      "revId": "0041ca4ae57bb6c0b6d01c62ec85a111b5279767",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2ba68c2c_8e4686bd",
        "filename": "src/dawn_native/vulkan/RenderPipelineVk.cpp",
        "patchSetId": 7
      },
      "lineNbr": 182,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2019-01-03T00:44:58Z",
      "side": 1,
      "message": "should this be set conditionally like in the OpenGL backend?",
      "range": {
        "startLine": 182,
        "startChar": 48,
        "endLine": 182,
        "endChar": 55
      },
      "revId": "0041ca4ae57bb6c0b6d01c62ec85a111b5279767",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b12e3bfe_8786b9d3",
        "filename": "src/dawn_native/vulkan/RenderPipelineVk.cpp",
        "patchSetId": 7
      },
      "lineNbr": 187,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2019-01-03T00:44:58Z",
      "side": 1,
      "message": "Why are both min and max \u003d 0 here? (Can you add a comment?)",
      "range": {
        "startLine": 187,
        "startChar": 30,
        "endLine": 187,
        "endChar": 44
      },
      "revId": "0041ca4ae57bb6c0b6d01c62ec85a111b5279767",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    }
  ]
}