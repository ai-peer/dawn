{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "6de585e6_0d80e6d6",
        "filename": "src/dawn_native/Texture.cpp",
        "patchSetId": 2
      },
      "lineNbr": 369,
      "author": {
        "id": 1000017
      },
      "writtenOn": "2021-07-14T16:25:56Z",
      "side": 0,
      "message": "WebGPU spec says that if texture view dimension is undefined, then texture view dimension will be texture\u0027s dimension. But I feel like that Dawn\u0027s implementation make more sense on this: If texture view dimension is undefined, its dimension will be \"2d-array\" if texture is \"2d\" and texture has multiple layers and the view\u0027s arrayLayerCount is undefined. Otherwise, view\u0027s dimension is \"2d\" if texture is \"2d\". \n\nWDYT? Kai, Austin (and Corentin if you are back to office).",
      "range": {
        "startLine": 365,
        "startChar": 20,
        "endLine": 369,
        "endChar": 21
      },
      "revId": "4742fbe6561e5a4f419cd9bb0b0fb0f6b15fa452",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8177107e_0b9266fd",
        "filename": "src/dawn_native/Texture.cpp",
        "patchSetId": 2
      },
      "lineNbr": 369,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2021-07-14T19:08:50Z",
      "side": 0,
      "message": "I think the spec used to say what Dawn currently does, and then we changed it. I don\u0027t remember the reasons, but we should probably just follow the spec.\n\nDo we have tests for the new defaults?",
      "parentUuid": "6de585e6_0d80e6d6",
      "range": {
        "startLine": 365,
        "startChar": 20,
        "endLine": 369,
        "endChar": 21
      },
      "revId": "4742fbe6561e5a4f419cd9bb0b0fb0f6b15fa452",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "77b5eab3_9a9db86c",
        "filename": "src/dawn_native/Texture.cpp",
        "patchSetId": 2
      },
      "lineNbr": 369,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2021-07-14T21:40:53Z",
      "side": 0,
      "message": "We spent quite a bit of time on this and I\u0027m pretty confident in the defaulting rules that we ended up landing in the spec. There were too many surprising or complex cases otherwise. For instance, it\u0027s likely that the number of layers in a 2d-array texture could be data-driven, and the application could end up passing 1 or \u003e1 depending on input data. And then the defaulting would suddenly change and break the app.\n\nThe rules as written mean there are more cases where optional parameters have to be specified, but in the overwhelmingly most common case (2d non-array textures), they won\u0027t have to be.",
      "parentUuid": "8177107e_0b9266fd",
      "range": {
        "startLine": 365,
        "startChar": 20,
        "endLine": 369,
        "endChar": 21
      },
      "revId": "4742fbe6561e5a4f419cd9bb0b0fb0f6b15fa452",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "96b22512_166f4f45",
        "filename": "src/dawn_native/Texture.cpp",
        "patchSetId": 2
      },
      "lineNbr": 369,
      "author": {
        "id": 1000017
      },
      "writtenOn": "2021-07-15T02:42:33Z",
      "side": 0,
      "message": "@Austin, TextureViewValidation tests can test these default values, although there is a bug. I also add a few tests for better coverage. \n\n@Kai, agreed. Considering that 2D view is used much more widely than 2DArray view, the current default dimension is more reasonable. The latest patchset strictly follows WebGPU spec on textureview\u0027s default values.",
      "parentUuid": "77b5eab3_9a9db86c",
      "range": {
        "startLine": 365,
        "startChar": 20,
        "endLine": 369,
        "endChar": 21
      },
      "revId": "4742fbe6561e5a4f419cd9bb0b0fb0f6b15fa452",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}