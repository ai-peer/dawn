{
  "comments": [
    {
      "key": {
        "uuid": "e20c8bb2_8dd3bdbf",
        "filename": "src/dawn_native/d3d12/DeviceD3D12.cpp",
        "patchSetId": 2
      },
      "lineNbr": 50,
      "author": {
        "id": 1000262
      },
      "writtenOn": "2019-05-20T18:48:22Z",
      "side": 1,
      "message": "I see this if check for descriptor in multiple places. \n\nWhen is it the case that descriptor will be nullptr?  \n\nIf multiple codepaths are doing this nullptr check, should we put the check in ApplyToogleOverrides itself?",
      "range": {
        "startLine": 50,
        "startChar": 0,
        "endLine": 50,
        "endChar": 36
      },
      "revId": "f52bb0e05502e88d15fb856f2431acea5c1378a0",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bb52cbe7_89de36de",
        "filename": "src/dawn_native/d3d12/TextureD3D12.cpp",
        "patchSetId": 2
      },
      "lineNbr": 146,
      "author": {
        "id": 1000262
      },
      "writtenOn": "2019-05-20T18:48:22Z",
      "side": 1,
      "message": "From looking at the code, CreateDefaultView allocates a new object. Do we leak this pointer?",
      "range": {
        "startLine": 146,
        "startChar": 0,
        "endLine": 146,
        "endChar": 33
      },
      "revId": "f52bb0e05502e88d15fb856f2431acea5c1378a0",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "31f857ae_1743d0ff",
        "filename": "src/dawn_native/d3d12/TextureD3D12.cpp",
        "patchSetId": 2
      },
      "lineNbr": 146,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2019-05-20T19:20:07Z",
      "side": 1,
      "message": "Yes we must be leaking it. Maybe we could extract the RTV creation in a helper function? It would help avoid the UB of overriding parts of a union.",
      "parentUuid": "bb52cbe7_89de36de",
      "range": {
        "startLine": 146,
        "startChar": 0,
        "endLine": 146,
        "endChar": 33
      },
      "revId": "f52bb0e05502e88d15fb856f2431acea5c1378a0",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0337642a_26c0a547",
        "filename": "src/dawn_native/d3d12/TextureD3D12.cpp",
        "patchSetId": 2
      },
      "lineNbr": 156,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2019-05-20T17:51:43Z",
      "side": 1,
      "message": "Doesn\u0027t ArraySize need to be overridden to 1 as well?\n\nI would have expected this to fail somewhere. It would be great if we could have a test that catches this.",
      "revId": "f52bb0e05502e88d15fb856f2431acea5c1378a0",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8aea4cc1_f8abcb71",
        "filename": "src/dawn_native/d3d12/TextureD3D12.cpp",
        "patchSetId": 2
      },
      "lineNbr": 156,
      "author": {
        "id": 1000308
      },
      "writtenOn": "2019-05-20T18:22:40Z",
      "side": 1,
      "message": "I think ArraySize gets set in GetRTVDescriptor() with the correct size. Does the total array size depend on which mip slice we are on?",
      "parentUuid": "0337642a_26c0a547",
      "revId": "f52bb0e05502e88d15fb856f2431acea5c1378a0",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f01b5540_fae4b340",
        "filename": "src/dawn_native/d3d12/TextureD3D12.cpp",
        "patchSetId": 2
      },
      "lineNbr": 156,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2019-05-20T18:28:07Z",
      "side": 1,
      "message": "Oh wait, I got confused between MipSlice and FirstArraySlice. LGTM",
      "parentUuid": "8aea4cc1_f8abcb71",
      "revId": "f52bb0e05502e88d15fb856f2431acea5c1378a0",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e2df08b7_4d04f04b",
        "filename": "src/dawn_native/d3d12/TextureD3D12.cpp",
        "patchSetId": 2
      },
      "lineNbr": 156,
      "author": {
        "id": 1000262
      },
      "writtenOn": "2019-05-20T19:09:35Z",
      "side": 1,
      "message": "It is dangerous to override what GetRTVDescriptor returns.  D3D12_RENDER_TARGET_VIEW_DESC contains a union of different structures, one of which is Texture2DArray. If the texture is a multi-sampled texture, GetRTVDescriptor sets the view dimension to D3D12_RTV_DIMENSION_TEXTURE2DMS, this means you must use the Texture2DMS field\n\nI recommend changing GetRTVDescriptor such that it accepts a miplevel parameter and have it take care of setting the correct structure field in the union.",
      "range": {
        "startLine": 156,
        "startChar": 16,
        "endLine": 156,
        "endChar": 52
      },
      "revId": "f52bb0e05502e88d15fb856f2431acea5c1378a0",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8143aded_f5ccb6e9",
        "filename": "src/dawn_native/d3d12/TextureD3D12.cpp",
        "patchSetId": 2
      },
      "lineNbr": 156,
      "author": {
        "id": 1000308
      },
      "writtenOn": "2019-05-20T22:09:14Z",
      "side": 1,
      "message": "I see, could I instead check here for the right texture type and modify the field here? The MipSlice field is the index of the mipmap level in use, so it needs to iterate through each level.",
      "parentUuid": "e2df08b7_4d04f04b",
      "range": {
        "startLine": 156,
        "startChar": 16,
        "endLine": 156,
        "endChar": 52
      },
      "revId": "f52bb0e05502e88d15fb856f2431acea5c1378a0",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    }
  ]
}