{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "93bfd02e_8eccbf0a",
        "filename": "src/tint/lang/msl/writer/ast_printer/ast_printer.cc",
        "patchSetId": 15
      },
      "lineNbr": 275,
      "author": {
        "id": 1002241
      },
      "writtenOn": "2023-11-11T18:31:54Z",
      "side": 1,
      "message": "IIUC `ExperimentalPixelLocal` should not longer be supported by the printer? If the extension hasn\u0027t been replaced then something has gone wrong and we shouldn\u0027t try to print.",
      "revId": "ad07cfa13760f1b414b6f763b1a8ed54842f4dae",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3cf2a2c7_c4193d92",
        "filename": "src/tint/lang/msl/writer/ast_printer/ast_printer.cc",
        "patchSetId": 15
      },
      "lineNbr": 275,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2023-11-11T19:13:10Z",
      "side": 1,
      "message": "True. I\u0027ll followup with a change next week. It\u0027s on the Whiteboard of Truth.",
      "parentUuid": "93bfd02e_8eccbf0a",
      "revId": "ad07cfa13760f1b414b6f763b1a8ed54842f4dae",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3688fd93_aab4e933",
        "filename": "src/tint/lang/wgsl/ast/transform/canonicalize_entry_point_io.cc",
        "patchSetId": 15
      },
      "lineNbr": 581,
      "author": {
        "id": 1002241
      },
      "writtenOn": "2023-11-11T18:31:54Z",
      "side": 1,
      "message": "Nit: Could just `TINT_ASSERT_OR_RETURN()` this (and remove the `nullptr` checks)? Unless I\u0027m missing something they should always both be builtins if we\u0027ve got here.",
      "revId": "ad07cfa13760f1b414b6f763b1a8ed54842f4dae",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3f7e7e19_2e850ccf",
        "filename": "src/tint/lang/wgsl/ast/transform/canonicalize_entry_point_io.cc",
        "patchSetId": 15
      },
      "lineNbr": 581,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2023-11-11T19:13:10Z",
      "side": 1,
      "message": "True - although I\u0027m slightly cautious of baking the _this-is-the-last-case_ logic into here. So easy to screw up with future changes, and often goes unnoticed (I had to fix this twice so far).\n\nI think I\u0027ll opt to keep the cleverness out of here for now. It\u0027s not like we\u0027re sorting huge arrays, nor is this code going to live very long.",
      "parentUuid": "3688fd93_aab4e933",
      "revId": "ad07cfa13760f1b414b6f763b1a8ed54842f4dae",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "ad07cfa13760f1b414b6f763b1a8ed54842f4dae",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Kokoro",
        "description": {
          "value": "A maximum vote is required for the Kokoro label. A minimum vote is blocking."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Kokoro\u003dMAX AND -label:Kokoro\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "uploader:dawn-autoroll@skia-public.iam.gserviceaccount.com OR uploader:chrome-automated-expectation@chops-service-accounts.iam.gserviceaccount.com OR uploader:chrome-branch-day@chops-service-accounts.iam.gserviceaccount.com"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Kokoro=MAX AND -label:Kokoro=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Kokoro=MAX"],"failingAtoms":["label:Kokoro=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"uploader:dawn-autoroll@skia-public.iam.gserviceaccount.com OR uploader:chrome-automated-expectation@chops-service-accounts.iam.gserviceaccount.com OR uploader:chrome-branch-day@chops-service-accounts.iam.gserviceaccount.com"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["uploader:dawn-autoroll@skia-public.iam.gserviceaccount.com","uploader:chrome-automated-expectation@chops-service-accounts.iam.gserviceaccount.com","uploader:chrome-branch-day@chops-service-accounts.iam.gserviceaccount.com"]}
      },
      "patchSetCommitId": "ad07cfa13760f1b414b6f763b1a8ed54842f4dae",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "ad07cfa13760f1b414b6f763b1a8ed54842f4dae",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    }
  ]
}