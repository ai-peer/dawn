{
  "comments": [
    {
      "key": {
        "uuid": "89041382_ada5f176",
        "filename": "src/dawn_native/d3d12/CommandRecordingContext.cpp",
        "patchSetId": 3
      },
      "lineNbr": 86,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2019-10-16T22:54:54Z",
      "side": 1,
      "message": "Why do we need to release the KeyedMutex immediately after executing?\n\nIf an imported texture is used in multiple back-to-back command lists, it seems like Dawn will unnecessarily Acquire/Release/Acquire/Release/etc. Can we acquire it once when we import the texture and release it once on \"ExportSharedTexture\"?\n\nThis also lets us simplify the error handling so that errors only happen on Import or on Export.\n\nWhat do you think?",
      "range": {
        "startLine": 84,
        "startChar": 8,
        "endLine": 86,
        "endChar": 9
      },
      "revId": "3e9a677a9112dd0dfa3271c23ad2295366073898",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "081942fb_fefa68c1",
        "filename": "src/dawn_native/d3d12/CommandRecordingContext.cpp",
        "patchSetId": 3
      },
      "lineNbr": 86,
      "author": {
        "id": 1000262
      },
      "writtenOn": "2019-10-16T23:11:21Z",
      "side": 1,
      "message": "I agree that acquiring the texture when you call WrapSharedHandle and releasing it when you call ExportSharedTexture would make the code easier.  \n\nHowever, Corentin insisted we do it this way so that the acquire/release is done in as narrow as window as possible for maximum concurrency. \n\nI do not have a strong opinion either way.\n\n@Corentin, what do you think?",
      "parentUuid": "89041382_ada5f176",
      "range": {
        "startLine": 84,
        "startChar": 8,
        "endLine": 86,
        "endChar": 9
      },
      "revId": "3e9a677a9112dd0dfa3271c23ad2295366073898",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a0a8f6c8_806ceb9a",
        "filename": "src/dawn_native/d3d12/CommandRecordingContext.cpp",
        "patchSetId": 3
      },
      "lineNbr": 86,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2019-10-16T23:14:16Z",
      "side": 1,
      "message": "Acquiring on first submit is fine, releasing eagerly like this helps maybe get some latency from the come case but releasing on ExportShared would work too. No strong opinions there.\n\n(I care much more about single use textures because that\u0027s important for the safety of WebGPU)",
      "parentUuid": "081942fb_fefa68c1",
      "range": {
        "startLine": 84,
        "startChar": 8,
        "endLine": 86,
        "endChar": 9
      },
      "revId": "3e9a677a9112dd0dfa3271c23ad2295366073898",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7552ffed_ef0bbdf8",
        "filename": "src/dawn_native/d3d12/CommandRecordingContext.cpp",
        "patchSetId": 3
      },
      "lineNbr": 86,
      "author": {
        "id": 1000262
      },
      "writtenOn": "2019-10-16T23:27:58Z",
      "side": 1,
      "message": "@Coretin, how do you feel about acquiring as part of WrapSharedHandle and releasing as part of ExportShared?",
      "parentUuid": "a0a8f6c8_806ceb9a",
      "range": {
        "startLine": 84,
        "startChar": 8,
        "endLine": 86,
        "endChar": 9
      },
      "revId": "3e9a677a9112dd0dfa3271c23ad2295366073898",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4ed915dd_27ccebfd",
        "filename": "src/dawn_native/d3d12/CommandRecordingContext.cpp",
        "patchSetId": 3
      },
      "lineNbr": 86,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2019-10-16T23:30:32Z",
      "side": 1,
      "message": "+1",
      "parentUuid": "7552ffed_ef0bbdf8",
      "range": {
        "startLine": 84,
        "startChar": 8,
        "endLine": 86,
        "endChar": 9
      },
      "revId": "3e9a677a9112dd0dfa3271c23ad2295366073898",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1427b016_982f5ac0",
        "filename": "src/dawn_native/d3d12/CommandRecordingContext.cpp",
        "patchSetId": 3
      },
      "lineNbr": 86,
      "author": {
        "id": 1000262
      },
      "writtenOn": "2019-10-17T00:59:24Z",
      "side": 1,
      "message": "@Corentin, I wish I had known your lack of preference before I got started. I wouldn\u0027t have bothered with the command recording context refactoring.  \n\nIn the next patch, I\u0027m going to change ExportSharedHandle to acquire the mutex right away. If we put the release of the mutex in Destroy, Chromium can simply call that when it\u0027s done with the texture. No need for an additional ExportXXX function.",
      "parentUuid": "4ed915dd_27ccebfd",
      "range": {
        "startLine": 84,
        "startChar": 8,
        "endLine": 86,
        "endChar": 9
      },
      "revId": "3e9a677a9112dd0dfa3271c23ad2295366073898",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f17481a4_a0aa10d1",
        "filename": "src/dawn_native/d3d12/CommandRecordingContext.cpp",
        "patchSetId": 3
      },
      "lineNbr": 86,
      "author": {
        "id": 1000262
      },
      "writtenOn": "2019-10-17T02:57:09Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1427b016_982f5ac0",
      "range": {
        "startLine": 84,
        "startChar": 8,
        "endLine": 86,
        "endChar": 9
      },
      "revId": "3e9a677a9112dd0dfa3271c23ad2295366073898",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "76714fd1_3e15c3b8",
        "filename": "src/dawn_native/d3d12/CommandRecordingContext.cpp",
        "patchSetId": 3
      },
      "lineNbr": 86,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2019-10-17T17:47:46Z",
      "side": 1,
      "message": "Hm, I could see the value in Acquiring the texture later on first Submit. Don\u0027t want to cause too much churn though. I think we should keep it simple for now until we measure a performance problem.",
      "parentUuid": "f17481a4_a0aa10d1",
      "range": {
        "startLine": 84,
        "startChar": 8,
        "endLine": 86,
        "endChar": 9
      },
      "revId": "3e9a677a9112dd0dfa3271c23ad2295366073898",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa3f23e8_ccbacf63",
        "filename": "src/dawn_native/d3d12/CommandRecordingContext.cpp",
        "patchSetId": 3
      },
      "lineNbr": 86,
      "author": {
        "id": 1000262
      },
      "writtenOn": "2019-10-17T18:58:44Z",
      "side": 1,
      "message": "I realize I mistyped what I wrote earlier.  I meant to write, \"I am going to change *WrapSharedHandle* to acquire the mutex right away\".\n\nAgreed on keeping things simple for now.  \n\nI\u0027ll add that when the time comes that we need to do D3D12\u003c-\u003eD3D12 interop with shared images on the Chromium side, this can be done more efficiently with fences on command lists instead of these individual keyed mutex objects. In that case, we won\u0027t even bother with shared handles. \n\nIn fact, on later versions of Windows, you can even use fences with D3D11. The only reason we\u0027re doing keyed mutexes as part of this CL is because we want WebGPU to run on as many versions of Windows as possible.",
      "parentUuid": "76714fd1_3e15c3b8",
      "range": {
        "startLine": 84,
        "startChar": 8,
        "endLine": 86,
        "endChar": 9
      },
      "revId": "3e9a677a9112dd0dfa3271c23ad2295366073898",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0aa6f092_1b083b26",
        "filename": "src/dawn_native/d3d12/TextureD3D12.cpp",
        "patchSetId": 3
      },
      "lineNbr": 347,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2019-10-16T22:54:54Z",
      "side": 1,
      "message": "I think we can also generate and consume a validation error here.",
      "revId": "3e9a677a9112dd0dfa3271c23ad2295366073898",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c8f60148_a65f7c46",
        "filename": "src/dawn_native/d3d12/TextureD3D12.cpp",
        "patchSetId": 3
      },
      "lineNbr": 347,
      "author": {
        "id": 1000262
      },
      "writtenOn": "2019-10-17T02:57:09Z",
      "side": 1,
      "message": "Function no longer exists",
      "parentUuid": "0aa6f092_1b083b26",
      "revId": "3e9a677a9112dd0dfa3271c23ad2295366073898",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bfa3c974_b04d1d33",
        "filename": "src/dawn_native/d3d12/TextureD3D12.cpp",
        "patchSetId": 3
      },
      "lineNbr": 359,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2019-10-16T22:54:54Z",
      "side": 1,
      "message": "[1]",
      "revId": "3e9a677a9112dd0dfa3271c23ad2295366073898",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "351e5ed7_b4dca6a6",
        "filename": "src/dawn_native/d3d12/TextureD3D12.cpp",
        "patchSetId": 3
      },
      "lineNbr": 359,
      "author": {
        "id": 1000262
      },
      "writtenOn": "2019-10-17T02:57:09Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bfa3c974_b04d1d33",
      "revId": "3e9a677a9112dd0dfa3271c23ad2295366073898",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8345e506_0fd61e10",
        "filename": "src/dawn_native/d3d12/TextureD3D12.cpp",
        "patchSetId": 3
      },
      "lineNbr": 363,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2019-10-16T22:54:54Z",
      "side": 1,
      "message": "nit: DAWN_TRY(CheckHResult(...))",
      "range": {
        "startLine": 361,
        "startChar": 8,
        "endLine": 363,
        "endChar": 9
      },
      "revId": "3e9a677a9112dd0dfa3271c23ad2295366073898",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "99494a3d_c8edd10e",
        "filename": "src/dawn_native/d3d12/TextureD3D12.cpp",
        "patchSetId": 3
      },
      "lineNbr": 363,
      "author": {
        "id": 1000262
      },
      "writtenOn": "2019-10-17T02:57:09Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8345e506_0fd61e10",
      "range": {
        "startLine": 361,
        "startChar": 8,
        "endLine": 363,
        "endChar": 9
      },
      "revId": "3e9a677a9112dd0dfa3271c23ad2295366073898",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ee94ac0d_d49af8ac",
        "filename": "src/dawn_native/d3d12/TextureD3D12.cpp",
        "patchSetId": 3
      },
      "lineNbr": 423,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2019-10-16T22:54:54Z",
      "side": 1,
      "message": "I think that if you use an imported texture twice in separate render passes, it\u0027ll get added to the acquire list twice. We do these transitions for the set of all resources in a pass, at the start of the pass.\n\nWe can either: \n  1) Make mAcquireList a set\n  2) At [1] guard AcquireKeyedMutex with if (!mAcquired) insteed of ASSERTing.",
      "range": {
        "startLine": 423,
        "startChar": 18,
        "endLine": 423,
        "endChar": 54
      },
      "revId": "3e9a677a9112dd0dfa3271c23ad2295366073898",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5a6717a6_d65cdf0d",
        "filename": "src/dawn_native/d3d12/TextureD3D12.cpp",
        "patchSetId": 3
      },
      "lineNbr": 423,
      "author": {
        "id": 1000262
      },
      "writtenOn": "2019-10-16T23:11:21Z",
      "side": 1,
      "message": "The acquire list is already a set: \n\n   set\u003cTexture*\u003e mAcquireTextures;\n\n    void CommandRecordingContext::AddToAcquireList(Texture* texture) {\n        ASSERT(IsOpen());\n        mAcquireTextures.insert(texture);\n    }",
      "parentUuid": "ee94ac0d_d49af8ac",
      "range": {
        "startLine": 423,
        "startChar": 18,
        "endLine": 423,
        "endChar": 54
      },
      "revId": "3e9a677a9112dd0dfa3271c23ad2295366073898",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "602e851f_537fef71",
        "filename": "src/dawn_native/d3d12/TextureD3D12.cpp",
        "patchSetId": 3
      },
      "lineNbr": 423,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2019-10-16T23:41:53Z",
      "side": 1,
      "message": "Ah whoops. Thanks for the pointer. The name confused me.",
      "parentUuid": "5a6717a6_d65cdf0d",
      "range": {
        "startLine": 423,
        "startChar": 18,
        "endLine": 423,
        "endChar": 54
      },
      "revId": "3e9a677a9112dd0dfa3271c23ad2295366073898",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "17eb3016_c5bd5ad2",
        "filename": "src/dawn_native/vulkan/TextureVk.cpp",
        "patchSetId": 3
      },
      "lineNbr": 605,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2019-10-16T22:54:54Z",
      "side": 1,
      "message": "Why do we skip this for external textures? The memory allocation and texture are still created with vkAllocateMemory and vkCreateImage. I think we still need to delete the imported handles even though the memory is owned externally.\n\nSame question about the Metal backend. (And OpenGL but we don\u0027t import textures there yet)",
      "range": {
        "startLine": 581,
        "startChar": 8,
        "endLine": 605,
        "endChar": 5
      },
      "revId": "3e9a677a9112dd0dfa3271c23ad2295366073898",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3c687fde_878c9c8a",
        "filename": "src/dawn_native/vulkan/TextureVk.cpp",
        "patchSetId": 3
      },
      "lineNbr": 605,
      "author": {
        "id": 1000262
      },
      "writtenOn": "2019-10-16T23:11:21Z",
      "side": 1,
      "message": "Here was the previous code for DestroyInternal in the base class: \n\n    void TextureBase::DestroyInternal() {\n        if (mState \u003d\u003d TextureState::OwnedInternal) { \n            DestroyImpl();\n        }\n        mState \u003d TextureState::Destroyed;\n    }\n\nFor the D3D12 backend, I need DestroyImpl to run even when the texture is external so I removed the if statement. To keep the other backends working the way they were before, I had to manually add the if statement to their code.\n\nWe can remove the if statement for the Vulkan backend if you wish but should probably tackle that as a separate change to avoid to much churn in one change.",
      "parentUuid": "17eb3016_c5bd5ad2",
      "range": {
        "startLine": 581,
        "startChar": 8,
        "endLine": 605,
        "endChar": 5
      },
      "revId": "3e9a677a9112dd0dfa3271c23ad2295366073898",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fa6391e1_a50d1720",
        "filename": "src/dawn_native/vulkan/TextureVk.cpp",
        "patchSetId": 3
      },
      "lineNbr": 605,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2019-10-16T23:41:53Z",
      "side": 1,
      "message": "Thanks for clarifying. Sounds good.",
      "parentUuid": "3c687fde_878c9c8a",
      "range": {
        "startLine": 581,
        "startChar": 8,
        "endLine": 605,
        "endChar": 5
      },
      "revId": "3e9a677a9112dd0dfa3271c23ad2295366073898",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    }
  ]
}