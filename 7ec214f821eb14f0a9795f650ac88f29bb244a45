{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "8828e417_8d5f85dc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 25
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-05-19T10:22:17Z",
      "side": 1,
      "message": "There\u0027s still a lot of complexity in this CL but I\u0027d like us to make forward progress somehow here. WDYT of landing the CL with the current architecture after smaller comments are addressed and then work on a design doc with that lists all the requirements on an async task manager, iterate on that, and then change Dawn to match that design doc.",
      "revId": "7ec214f821eb14f0a9795f650ac88f29bb244a45",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "862fab3f_00d8eb5f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 25
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-05-19T17:54:00Z",
      "side": 1,
      "message": "And I didn\u0027t see Austin\u0027s CL, which looks like a step in the right direction. Jiawei, when would the TF.js team need this? I\u0027m asking because we could take a suboptimal solution for now and revisit quickly but ideally we get something that\u0027s closer to the final solution.\n\nSo we need to make this design doc, the question is do we land this CL, Austin\u0027s CL or wait. I don\u0027t have strong feelings either way and I think it\u0027s mostly dependent on the timeline you\u0027re looking for.",
      "parentUuid": "8828e417_8d5f85dc",
      "revId": "7ec214f821eb14f0a9795f650ac88f29bb244a45",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e5981150_2a11e709",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 25
      },
      "lineNbr": 0,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2021-05-20T00:25:31Z",
      "side": 1,
      "message": "OK thanks for helping me make the decision. I will update this CL based on Austin\u0027s solution today.",
      "parentUuid": "862fab3f_00d8eb5f",
      "revId": "7ec214f821eb14f0a9795f650ac88f29bb244a45",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "883db378_c89397fb",
        "filename": "src/dawn_native/CallbackTaskManager.h",
        "patchSetId": 25
      },
      "lineNbr": 45,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-05-19T10:22:17Z",
      "side": 1,
      "message": "Serials should be uint64_t to ensure no wraparound and we can create a new type in TypeIntegers.h to avoid mixing it with other serials.",
      "revId": "7ec214f821eb14f0a9795f650ac88f29bb244a45",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d9e654c2_80e752ce",
        "filename": "src/dawn_native/Instance.cpp",
        "patchSetId": 25
      },
      "lineNbr": 227,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-05-19T10:22:17Z",
      "side": 1,
      "message": "nit: the default platform could be initialized on creation.",
      "revId": "7ec214f821eb14f0a9795f650ac88f29bb244a45",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "27240001_d527a62e",
        "filename": "src/dawn_native/Instance.cpp",
        "patchSetId": 25
      },
      "lineNbr": 227,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2021-05-27T04:51:34Z",
      "side": 1,
      "message": "Oh Austin prefers lazily creating default platform (in patch set 24):\n\n\"Can we lazily create mDefaultPlatform here instead? That way if someone manually sets it with SetPlatform, it is never instantiated\"",
      "parentUuid": "d9e654c2_80e752ce",
      "revId": "7ec214f821eb14f0a9795f650ac88f29bb244a45",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cda0ce3a_9b1080c0",
        "filename": "src/dawn_native/Instance.cpp",
        "patchSetId": 25
      },
      "lineNbr": 227,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2021-05-27T06:28:38Z",
      "side": 1,
      "message": "since we think differently on this, I\u0027ll explain my reasoning:\n\nI thought that we wouldn\u0027t want a thread pool to be created from the default platform when Dawn is used in Chromium. However, I now see the thread pool is not created on construction of the default platform, but only when you call \"CreateWorkerTaskPool\". so it is probably ok to allocate it on creation, as long as doing so doesn\u0027t launch any threads, etc.",
      "parentUuid": "27240001_d527a62e",
      "revId": "7ec214f821eb14f0a9795f650ac88f29bb244a45",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "be87986b_545c2691",
        "filename": "src/dawn_native/Instance.cpp",
        "patchSetId": 25
      },
      "lineNbr": 227,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-06-02T11:57:25Z",
      "side": 1,
      "message": "Ah sorry I got confused because I didn\u0027t realize the platform was set after creation with SetPlatform. I think the current code works. Can we have a TODO somewhere to make the platform an initialization parameter of the instance in the future?",
      "parentUuid": "cda0ce3a_9b1080c0",
      "revId": "7ec214f821eb14f0a9795f650ac88f29bb244a45",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}