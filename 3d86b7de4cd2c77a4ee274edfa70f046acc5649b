{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "3af85c70_2acfd40c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-10-30T13:00:18Z",
      "side": 1,
      "message": "Still LGTM",
      "revId": "3d86b7de4cd2c77a4ee274edfa70f046acc5649b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3b3b8824_74748ae7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-11-06T17:33:56Z",
      "side": 1,
      "message": "Stephen, I think you may have missed reviewing this one.",
      "revId": "3d86b7de4cd2c77a4ee274edfa70f046acc5649b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ad039c2a_ed8d8d11",
        "filename": "generator/templates/dawn_wire/ObjectType.h",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-11-10T19:09:45Z",
      "side": 1,
      "message": "I need to add this to CMakeLists.txt",
      "revId": "3d86b7de4cd2c77a4ee274edfa70f046acc5649b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "da8a8277_93065314",
        "filename": "src/dawn_wire/client/Client.cpp",
        "patchSetId": 3
      },
      "lineNbr": 62,
      "author": {
        "id": 1000024
      },
      "writtenOn": "2020-11-09T20:27:32Z",
      "side": 1,
      "message": "uNit: obejct -\u003e object",
      "revId": "3d86b7de4cd2c77a4ee274edfa70f046acc5649b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "592d2152_6aaa1203",
        "filename": "src/dawn_wire/client/Client.cpp",
        "patchSetId": 3
      },
      "lineNbr": 67,
      "author": {
        "id": 1000024
      },
      "writtenOn": "2020-11-09T20:27:32Z",
      "side": 1,
      "message": "Is this going to stay around, or is it going to be deprecated?\n\nIt seems a little odd to have one \"special\" device and then a vector of other devices, but maybe I\u0027m missing the big picture here. I also notice that one is a WGPUDevice* and the other a Device* (well, actually cast to ObjectBase), so maybe these are not the same thing? Or is it just that way because we don\u0027t want to have the vector contain owning pointers? (ie., no lifetime management)?\n\nSorry for all the questions; just trying to get up to speed. Feel free to point me at a design doc or discussion.",
      "revId": "3d86b7de4cd2c77a4ee274edfa70f046acc5649b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3d1e6fd9_116bfbf8",
        "filename": "src/dawn_wire/client/Client.cpp",
        "patchSetId": 3
      },
      "lineNbr": 67,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-11-09T21:33:26Z",
      "side": 1,
      "message": "It\u0027s going to be deprecated - though there\u0027s some multithreading concerns we need to address first. No worries for the questions. Historically we had a single device per wire, but will need to fix that in the future. I recently wrote this doc about it https://docs.google.com/document/d/1dcNqoSY-HjooM3-guhwDYj_iRKTvrjSR3Y_9oOiu30E/edit feel free to comment.\n\nRe: both list and mDevice - I could change this to return mDevices.head()-\u003evalue() ?",
      "parentUuid": "592d2152_6aaa1203",
      "revId": "3d86b7de4cd2c77a4ee274edfa70f046acc5649b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "25fa18b7_b560d489",
        "filename": "src/dawn_wire/client/Client.cpp",
        "patchSetId": 3
      },
      "lineNbr": 67,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-11-10T09:56:46Z",
      "side": 1,
      "message": "Also WGPUDevice and Device* are the same thing, WGPUDevice is the external WebGPU API, Device* is what this object is internally to dawn_wire.",
      "parentUuid": "3d1e6fd9_116bfbf8",
      "revId": "3d86b7de4cd2c77a4ee274edfa70f046acc5649b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3a27970f_41f8a082",
        "filename": "src/dawn_wire/client/Client.cpp",
        "patchSetId": 3
      },
      "lineNbr": 67,
      "author": {
        "id": 1000024
      },
      "writtenOn": "2020-11-10T19:05:31Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "25fa18b7_b560d489",
      "revId": "3d86b7de4cd2c77a4ee274edfa70f046acc5649b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9329f1ba_f057e91a",
        "filename": "src/dawn_wire/client/Client.h",
        "patchSetId": 3
      },
      "lineNbr": 77,
      "author": {
        "id": 1000024
      },
      "writtenOn": "2020-11-09T20:27:32Z",
      "side": 1,
      "message": "Nit: Why not a vector of Devices? The TrackObject() function takes a Device*.\n\nAlternatively, if this is eventually going to hold more than devices, it should be named mObjects.",
      "revId": "3d86b7de4cd2c77a4ee274edfa70f046acc5649b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "95981e15_04aea0db",
        "filename": "src/dawn_wire/client/Client.h",
        "patchSetId": 3
      },
      "lineNbr": 77,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-11-09T21:33:26Z",
      "side": 1,
      "message": "Not a vector so we don\u0027t need a linear scan when we remove one of the devices.\nI\u0027m not sure if it will ever contain more than devices.\n\nAlso, in the following patch we also keep objects separated by type so we don\u0027t have everything acquiring a mutex to operate on a linked list (in the future). The synchronization is only per-object-type.",
      "parentUuid": "9329f1ba_f057e91a",
      "revId": "3d86b7de4cd2c77a4ee274edfa70f046acc5649b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7bd727a2_a488f66a",
        "filename": "src/dawn_wire/client/Client.h",
        "patchSetId": 3
      },
      "lineNbr": 77,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-11-09T21:37:09Z",
      "side": 1,
      "message": "Sorry, not the next patch, it\u0027s this patch. The device owns all the other objects, and stores a linked list of each type.",
      "parentUuid": "95981e15_04aea0db",
      "revId": "3d86b7de4cd2c77a4ee274edfa70f046acc5649b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "36179e28_7d1f43c2",
        "filename": "src/dawn_wire/client/Client.h",
        "patchSetId": 3
      },
      "lineNbr": 77,
      "author": {
        "id": 1000024
      },
      "writtenOn": "2020-11-10T19:05:31Z",
      "side": 1,
      "message": "Sorry, I didn\u0027t mean a vector per-se. Linked list is fine; I\u0027m just asking about the component type: why not Device* rather than ObjectBase* (and the implicit upcast in TrackObject).\n\nI see the sorted-by-type flavour on the other class (I think it\u0027s Device) but this one if it only holds Devices could be Device* without the upcast.\n\nIt\u0027s a very minor nit, I was just curious.",
      "parentUuid": "7bd727a2_a488f66a",
      "revId": "3d86b7de4cd2c77a4ee274edfa70f046acc5649b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1eb14ec6_79d091f3",
        "filename": "src/dawn_wire/client/Client.h",
        "patchSetId": 3
      },
      "lineNbr": 77,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-11-10T19:09:45Z",
      "side": 1,
      "message": "oh this is because of how the class hierarchy is.\n\nwe have Device -\u003e ObjectBase -\u003e LinkNode\u003cObjectBase\u003e\n\nif we wanted LinkedList\u003cDevice\u003e, I think we need:\n\nDevice : public ObjectBase, public LinkNode\u003cDevice\u003e\n\nwhich is multiple concrete classes",
      "parentUuid": "36179e28_7d1f43c2",
      "revId": "3d86b7de4cd2c77a4ee274edfa70f046acc5649b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3348f436_4bc93b5f",
        "filename": "src/dawn_wire/client/Client.h",
        "patchSetId": 3
      },
      "lineNbr": 77,
      "author": {
        "id": 1000024
      },
      "writtenOn": "2020-11-11T17:11:30Z",
      "side": 1,
      "message": "Oh right, I forgot that these linked lists are intrusive. Looks good as-is.",
      "parentUuid": "1eb14ec6_79d091f3",
      "revId": "3d86b7de4cd2c77a4ee274edfa70f046acc5649b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}