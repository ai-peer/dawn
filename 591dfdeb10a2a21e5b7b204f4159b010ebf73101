{
  "comments": [
    {
      "key": {
        "uuid": "dd62a537_ba75ba89",
        "filename": "src/dawn_native/d3d12/CommandRecordingContext.cpp",
        "patchSetId": 4
      },
      "lineNbr": 57,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2019-10-08T01:18:21Z",
      "side": 1,
      "message": "Since the ComPtr is ref\u0027d in this class, we could probably return a raw pointer here. Unless a caller for some reason needs to hold onto the result of GetCommandList for a nontrivial amount of time.",
      "revId": "591dfdeb10a2a21e5b7b204f4159b010ebf73101",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "408ca473_9cecb30a",
        "filename": "src/dawn_native/d3d12/CommandRecordingContext.cpp",
        "patchSetId": 4
      },
      "lineNbr": 57,
      "author": {
        "id": 1000262
      },
      "writtenOn": "2019-10-08T01:28:49Z",
      "side": 1,
      "message": "No current callers hold onto the command list for a non-trivial amount of time. If they want to, they can always put it into a SmartPointer themselves. \n\nI\u0027m happy to do this change. While we\u0027re at it, we can change GetPendingCommandList to also return a raw pointer as well.",
      "parentUuid": "dd62a537_ba75ba89",
      "revId": "591dfdeb10a2a21e5b7b204f4159b010ebf73101",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a9bd733a_574085ea",
        "filename": "src/dawn_native/d3d12/CommandRecordingContext.cpp",
        "patchSetId": 4
      },
      "lineNbr": 57,
      "author": {
        "id": 1000262
      },
      "writtenOn": "2019-10-08T02:02:07Z",
      "side": 1,
      "message": "OK, this caused a little more churn than expected but it has reduced the number of places where we needlessly AddRef/Release objects. \n\nWe should do a followon change that further eliminates ComPtr from function parameters that do not take ownership of objects.",
      "parentUuid": "408ca473_9cecb30a",
      "revId": "591dfdeb10a2a21e5b7b204f4159b010ebf73101",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "14a46ef5_e2967f86",
        "filename": "src/dawn_native/d3d12/CommandRecordingContext.cpp",
        "patchSetId": 4
      },
      "lineNbr": 57,
      "author": {
        "id": 1000262
      },
      "writtenOn": "2019-10-08T02:02:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a9bd733a_574085ea",
      "revId": "591dfdeb10a2a21e5b7b204f4159b010ebf73101",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a822d60c_61ccf5e4",
        "filename": "src/dawn_native/d3d12/CommandRecordingContext.cpp",
        "patchSetId": 4
      },
      "lineNbr": 57,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2019-10-08T02:25:35Z",
      "side": 1,
      "message": "Nice, thanks! Sorry, didn\u0027t realize how much churn it would be either.",
      "parentUuid": "14a46ef5_e2967f86",
      "revId": "591dfdeb10a2a21e5b7b204f4159b010ebf73101",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "28861c4e_3a319865",
        "filename": "src/dawn_native/d3d12/DeviceD3D12.cpp",
        "patchSetId": 4
      },
      "lineNbr": 187,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2019-10-08T01:18:21Z",
      "side": 1,
      "message": "For encapsulation, would it make sense to move this method into CommandAllocatorManager?",
      "revId": "591dfdeb10a2a21e5b7b204f4159b010ebf73101",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d5f1277d_996fae84",
        "filename": "src/dawn_native/d3d12/DeviceD3D12.cpp",
        "patchSetId": 4
      },
      "lineNbr": 187,
      "author": {
        "id": 1000262
      },
      "writtenOn": "2019-10-08T01:28:49Z",
      "side": 1,
      "message": "Kai, I\u0027m not sure I follow what you\u0027re getting at. Are you referring to GetCommandList? \n\nThe CommandRecordingContext encapsulates, among other things, a command list instance. So it needs to own the lifetime of the command list.",
      "parentUuid": "28861c4e_3a319865",
      "revId": "591dfdeb10a2a21e5b7b204f4159b010ebf73101",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "92518570_18aafeee",
        "filename": "src/dawn_native/d3d12/DeviceD3D12.cpp",
        "patchSetId": 4
      },
      "lineNbr": 187,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2019-10-08T01:40:36Z",
      "side": 1,
      "message": "Oops, sorry, I meant move Device::GetPendingCommandList into *CommandRecordingContext*.",
      "parentUuid": "d5f1277d_996fae84",
      "revId": "591dfdeb10a2a21e5b7b204f4159b010ebf73101",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1de866dc_f3f0c24b",
        "filename": "src/dawn_native/d3d12/DeviceD3D12.cpp",
        "patchSetId": 4
      },
      "lineNbr": 187,
      "author": {
        "id": 1000262
      },
      "writtenOn": "2019-10-08T02:02:07Z",
      "side": 1,
      "message": "CommandRecordingContext is meant to encapsulate one commandlist, not more than one. In the current code, the pending command list is owned by the device. Each queue owns a command list of its own. My CL wasn\u0027t meant to change the lifetimes of the existing command lists.\n\nIs unifying the pending and queue command list something that is desired?",
      "parentUuid": "92518570_18aafeee",
      "revId": "591dfdeb10a2a21e5b7b204f4159b010ebf73101",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e4722700_721e7ef2",
        "filename": "src/dawn_native/d3d12/DeviceD3D12.cpp",
        "patchSetId": 4
      },
      "lineNbr": 187,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2019-10-08T02:25:35Z",
      "side": 1,
      "message": "No, I don\u0027t think so. I forgot about how that separation was implemented. This makes sense to me then. Thanks for the explanation!",
      "parentUuid": "1de866dc_f3f0c24b",
      "revId": "591dfdeb10a2a21e5b7b204f4159b010ebf73101",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "802cb656_cbf2ef8d",
        "filename": "src/dawn_native/d3d12/TextureD3D12.cpp",
        "patchSetId": 4
      },
      "lineNbr": 309,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2019-10-08T01:18:21Z",
      "side": 1,
      "message": "Seems like dawnTexture is just Acquired and immediately detached. Couldn\u0027t it just be kept as a raw pointer all along?",
      "revId": "591dfdeb10a2a21e5b7b204f4159b010ebf73101",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "18bc066f_d7e9f8a0",
        "filename": "src/dawn_native/d3d12/TextureD3D12.cpp",
        "patchSetId": 4
      },
      "lineNbr": 309,
      "author": {
        "id": 1000262
      },
      "writtenOn": "2019-10-08T01:28:49Z",
      "side": 1,
      "message": "It cannot be kept in a raw pointer because there are flow control macros (DAWN_TRY_ASSIGN and DAWN_TRY) between the construction of the class and when it is returned to the caller. If the flow control macros early out, then we leak memory.",
      "parentUuid": "802cb656_cbf2ef8d",
      "revId": "591dfdeb10a2a21e5b7b204f4159b010ebf73101",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "51e72c9a_e80985a4",
        "filename": "src/dawn_native/d3d12/TextureD3D12.cpp",
        "patchSetId": 4
      },
      "lineNbr": 309,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2019-10-08T01:40:36Z",
      "side": 1,
      "message": "Ah, of course.",
      "parentUuid": "18bc066f_d7e9f8a0",
      "revId": "591dfdeb10a2a21e5b7b204f4159b010ebf73101",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    }
  ]
}