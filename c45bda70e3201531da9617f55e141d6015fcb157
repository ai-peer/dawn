{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "c1fbb32a_45dc4c89",
        "filename": "src/tint/constant/scalar_test.cc",
        "patchSetId": 2
      },
      "lineNbr": 33,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2023-01-05T19:55:33Z",
      "side": 1,
      "message": "There\u0027s three separate places we have to specify the type here:\n1. `Scalar\u003cT\u003e`\n2. the first argument which is a `tint::Type*`\n3. the C++ value type.\n\nThis seems _really_ error prone.\n\nCan make the common API that just builds a Scalar from a C++ typed value?",
      "range": {
        "startLine": 33,
        "startChar": 40,
        "endLine": 33,
        "endChar": 50
      },
      "revId": "c45bda70e3201531da9617f55e141d6015fcb157",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2141d7f9_f3ac7a90",
        "filename": "src/tint/constant/scalar_test.cc",
        "patchSetId": 2
      },
      "lineNbr": 33,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2023-01-05T20:44:34Z",
      "side": 1,
      "message": "We probably can, but that all seems unrelated to this CL. I\u0027d prefer to hold that to a followup (I\u0027d also want to see if the actual, non-test, usage is error prone or not).",
      "parentUuid": "c1fbb32a_45dc4c89",
      "range": {
        "startLine": 33,
        "startChar": 40,
        "endLine": 33,
        "endChar": 50
      },
      "revId": "c45bda70e3201531da9617f55e141d6015fcb157",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "46c937a8_ac47f700",
        "filename": "src/tint/constant/scalar_test.cc",
        "patchSetId": 2
      },
      "lineNbr": 53,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2023-01-05T19:55:33Z",
      "side": 1,
      "message": "`AFloat` ?",
      "range": {
        "startLine": 53,
        "startChar": 53,
        "endLine": 53,
        "endChar": 73
      },
      "revId": "c45bda70e3201531da9617f55e141d6015fcb157",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "acc05cbe_183937ee",
        "filename": "src/tint/constant/scalar_test.cc",
        "patchSetId": 2
      },
      "lineNbr": 53,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2023-01-05T20:44:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "46c937a8_ac47f700",
      "range": {
        "startLine": 53,
        "startChar": 53,
        "endLine": 53,
        "endChar": 73
      },
      "revId": "c45bda70e3201531da9617f55e141d6015fcb157",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0f05dbe8_965604fd",
        "filename": "src/tint/constant/scalar_test.cc",
        "patchSetId": 2
      },
      "lineNbr": 58,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2023-01-05T19:55:33Z",
      "side": 1,
      "message": "`AInt` ?",
      "range": {
        "startLine": 58,
        "startChar": 48,
        "endLine": 58,
        "endChar": 69
      },
      "revId": "c45bda70e3201531da9617f55e141d6015fcb157",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "afc39da1_bdfe829d",
        "filename": "src/tint/constant/scalar_test.cc",
        "patchSetId": 2
      },
      "lineNbr": 58,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2023-01-05T20:44:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0f05dbe8_965604fd",
      "range": {
        "startLine": 58,
        "startChar": 48,
        "endLine": 58,
        "endChar": 69
      },
      "revId": "c45bda70e3201531da9617f55e141d6015fcb157",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}