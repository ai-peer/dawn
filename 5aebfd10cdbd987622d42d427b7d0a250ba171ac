{
  "comments": [
    {
      "key": {
        "uuid": "b4b83942_fe99b3f5",
        "filename": "src/dawn_native/opengl/CommandBufferGL.cpp",
        "patchSetId": 1
      },
      "lineNbr": 324,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-05-27T07:57:47Z",
      "side": 1,
      "message": "I think this and the glBindTexture aren\u0027t needed because the image units in OpenGL don\u0027t have a concept of active image unit.",
      "revId": "5aebfd10cdbd987622d42d427b7d0a250ba171ac",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b9bb3a45_4be650bc",
        "filename": "src/dawn_native/opengl/CommandBufferGL.cpp",
        "patchSetId": 1
      },
      "lineNbr": 340,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-05-27T07:57:47Z",
      "side": 1,
      "message": "Could we catch that at BindGroup creation time and return a validation error?",
      "revId": "5aebfd10cdbd987622d42d427b7d0a250ba171ac",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "49a661e2_271845dd",
        "filename": "src/dawn_native/opengl/PipelineGL.cpp",
        "patchSetId": 1
      },
      "lineNbr": 150,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-05-27T07:57:47Z",
      "side": 1,
      "message": "I\u0027m confused, how do tests pass in this CL if we\u0027re not able to get the uniform location?",
      "revId": "5aebfd10cdbd987622d42d427b7d0a250ba171ac",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e574d96b_45d843fb",
        "filename": "src/dawn_native/opengl/PipelineGL.cpp",
        "patchSetId": 1
      },
      "lineNbr": 150,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2020-05-27T08:15:06Z",
      "side": 1,
      "message": "It is because currently we only declare one image inside the shader in all our end2end tests, which is above the declaration of the storage buffer, so indices[group][bindingIndex] is always 0 and the uniform location in the program happpens to be 0.",
      "parentUuid": "49a661e2_271845dd",
      "revId": "5aebfd10cdbd987622d42d427b7d0a250ba171ac",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1e50d821_5a0eed3a",
        "filename": "src/dawn_native/opengl/PipelineGL.cpp",
        "patchSetId": 1
      },
      "lineNbr": 150,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-05-27T08:24:13Z",
      "side": 1,
      "message": "Ok. This CL is basically complete but maybe we should wait for the SPIRV-Cross bug to be fixed so that we don\u0027t rely on storage textures always happening to be the 0th one?",
      "parentUuid": "e574d96b_45d843fb",
      "revId": "5aebfd10cdbd987622d42d427b7d0a250ba171ac",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9ad69269_e010fa18",
        "filename": "src/dawn_native/opengl/ShaderModuleGL.cpp",
        "patchSetId": 1
      },
      "lineNbr": 186,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2020-05-27T08:53:10Z",
      "side": 1,
      "message": "[1]",
      "revId": "5aebfd10cdbd987622d42d427b7d0a250ba171ac",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8fb42430_44ed9b72",
        "filename": "src/dawn_native/opengl/ShaderModuleGL.cpp",
        "patchSetId": 1
      },
      "lineNbr": 186,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-05-27T09:23:17Z",
      "side": 1,
      "message": "I\u0027m quite surprised that this is setting the name of info.base_type_id and not info.id. Can you see if using info.id for storage textures works? (And maybe info.id for everything)",
      "revId": "5aebfd10cdbd987622d42d427b7d0a250ba171ac",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8f27c3aa_f5f05d31",
        "filename": "src/dawn_native/opengl/ShaderModuleGL.cpp",
        "patchSetId": 1
      },
      "lineNbr": 186,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2020-05-27T12:14:14Z",
      "side": 1,
      "message": "Yes I\u0027ve verified using info.id instead of info.base_type_id is the fix. \n\nThanks for your help and sorry that I\u0027ve missed this bug.",
      "parentUuid": "8fb42430_44ed9b72",
      "revId": "5aebfd10cdbd987622d42d427b7d0a250ba171ac",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    }
  ]
}