{
  "comments": [
    {
      "key": {
        "uuid": "b08ad0e3_3e457cf2",
        "filename": "src/dawn_native/DynamicUploader.cpp",
        "patchSetId": 3
      },
      "lineNbr": 69,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2019-10-25T20:54:25Z",
      "side": 1,
      "message": "This always makes a ring buffer of |kMaxBufferSize|. Shouldn\u0027t we grow up until this size, not always allocate at this size?\nWith this change, the smallest SetSubData will allocate |kMaxBufferSize| bytes.",
      "range": {
        "startLine": 69,
        "startChar": 60,
        "endLine": 69,
        "endChar": 74
      },
      "revId": "0e4ab3449ac1d34b27bd0cced69d519ea85632e0",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c12298e2_995c2ebe",
        "filename": "src/dawn_native/DynamicUploader.cpp",
        "patchSetId": 3
      },
      "lineNbr": 69,
      "author": {
        "id": 1000268
      },
      "writtenOn": "2019-10-25T21:13:42Z",
      "side": 1,
      "message": "It\u0027ll pre-allocate more upfront to keep things fast. I doubt it\u0027s large enough to matter.",
      "parentUuid": "b08ad0e3_3e457cf2",
      "range": {
        "startLine": 69,
        "startChar": 60,
        "endLine": 69,
        "endChar": 74
      },
      "revId": "0e4ab3449ac1d34b27bd0cced69d519ea85632e0",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "29a6b8ff_441fcefa",
        "filename": "src/dawn_native/DynamicUploader.cpp",
        "patchSetId": 3
      },
      "lineNbr": 69,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2019-10-25T23:44:56Z",
      "side": 1,
      "message": "I still think we should avoid allocating more than we need unless we have evidence that the dynamic resizing is harmful.",
      "parentUuid": "c12298e2_995c2ebe",
      "range": {
        "startLine": 69,
        "startChar": 60,
        "endLine": 69,
        "endChar": 74
      },
      "revId": "0e4ab3449ac1d34b27bd0cced69d519ea85632e0",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8596b523_ca3f0dcf",
        "filename": "src/dawn_native/DynamicUploader.cpp",
        "patchSetId": 3
      },
      "lineNbr": 69,
      "author": {
        "id": 1000268
      },
      "writtenOn": "2019-10-26T00:17:49Z",
      "side": 1,
      "message": "Well, creating more and smaller heaps is always slower. Esp. if they are thrown away immediately - SetSubData. That code was used to limit pre-allocating larger heaps (64KB -\u003e 128KB vs 1GB -\u003e 2GB).\n\nDid you see cases were we can\u0027t afford to pin 4MB? If not, we could keep it simple and use the same policy with mapped buffers.\n\nWDYT?",
      "parentUuid": "29a6b8ff_441fcefa",
      "range": {
        "startLine": 69,
        "startChar": 60,
        "endLine": 69,
        "endChar": 74
      },
      "revId": "0e4ab3449ac1d34b27bd0cced69d519ea85632e0",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    }
  ]
}