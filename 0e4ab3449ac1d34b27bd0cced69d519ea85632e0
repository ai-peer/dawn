{
  "comments": [
    {
      "key": {
        "uuid": "b4dba041_4d3d0373",
        "filename": "src/dawn_native/DynamicUploader.cpp",
        "patchSetId": 3
      },
      "lineNbr": 32,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2019-10-28T12:55:53Z",
      "side": 1,
      "message": "I don\u0027t know that we can call this direct allocation because that choice belong to the backend. Maybe just \"Make large allocations have their own staging buffer so as to not allocate huge persistent ringbuffers\" ?",
      "revId": "0e4ab3449ac1d34b27bd0cced69d519ea85632e0",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c684dca2_d68b9d35",
        "filename": "src/dawn_native/DynamicUploader.cpp",
        "patchSetId": 3
      },
      "lineNbr": 32,
      "author": {
        "id": 1000268
      },
      "writtenOn": "2019-10-29T17:25:00Z",
      "side": 1,
      "message": "Done.",
      "parentUuid": "b4dba041_4d3d0373",
      "revId": "0e4ab3449ac1d34b27bd0cced69d519ea85632e0",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b08ad0e3_3e457cf2",
        "filename": "src/dawn_native/DynamicUploader.cpp",
        "patchSetId": 3
      },
      "lineNbr": 69,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2019-10-25T20:54:25Z",
      "side": 1,
      "message": "This always makes a ring buffer of |kMaxBufferSize|. Shouldn\u0027t we grow up until this size, not always allocate at this size?\nWith this change, the smallest SetSubData will allocate |kMaxBufferSize| bytes.",
      "range": {
        "startLine": 69,
        "startChar": 60,
        "endLine": 69,
        "endChar": 74
      },
      "revId": "0e4ab3449ac1d34b27bd0cced69d519ea85632e0",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c12298e2_995c2ebe",
        "filename": "src/dawn_native/DynamicUploader.cpp",
        "patchSetId": 3
      },
      "lineNbr": 69,
      "author": {
        "id": 1000268
      },
      "writtenOn": "2019-10-25T21:13:42Z",
      "side": 1,
      "message": "It\u0027ll pre-allocate more upfront to keep things fast. I doubt it\u0027s large enough to matter.",
      "parentUuid": "b08ad0e3_3e457cf2",
      "range": {
        "startLine": 69,
        "startChar": 60,
        "endLine": 69,
        "endChar": 74
      },
      "revId": "0e4ab3449ac1d34b27bd0cced69d519ea85632e0",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "29a6b8ff_441fcefa",
        "filename": "src/dawn_native/DynamicUploader.cpp",
        "patchSetId": 3
      },
      "lineNbr": 69,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2019-10-25T23:44:56Z",
      "side": 1,
      "message": "I still think we should avoid allocating more than we need unless we have evidence that the dynamic resizing is harmful.",
      "parentUuid": "c12298e2_995c2ebe",
      "range": {
        "startLine": 69,
        "startChar": 60,
        "endLine": 69,
        "endChar": 74
      },
      "revId": "0e4ab3449ac1d34b27bd0cced69d519ea85632e0",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8596b523_ca3f0dcf",
        "filename": "src/dawn_native/DynamicUploader.cpp",
        "patchSetId": 3
      },
      "lineNbr": 69,
      "author": {
        "id": 1000268
      },
      "writtenOn": "2019-10-26T00:17:49Z",
      "side": 1,
      "message": "Well, creating more and smaller heaps is always slower. Esp. if they are thrown away immediately - SetSubData. That code was used to limit pre-allocating larger heaps (64KB -\u003e 128KB vs 1GB -\u003e 2GB).\n\nDid you see cases were we can\u0027t afford to pin 4MB? If not, we could keep it simple and use the same policy with mapped buffers.\n\nWDYT?",
      "parentUuid": "29a6b8ff_441fcefa",
      "range": {
        "startLine": 69,
        "startChar": 60,
        "endLine": 69,
        "endChar": 74
      },
      "revId": "0e4ab3449ac1d34b27bd0cced69d519ea85632e0",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "192eff0f_62a7614a",
        "filename": "src/dawn_native/DynamicUploader.cpp",
        "patchSetId": 3
      },
      "lineNbr": 69,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2019-10-28T12:55:53Z",
      "side": 1,
      "message": "I think either way is fine for now, but eventually we will need better heuristics especially on mobile where 4MB can matter, and when we want to answer to memory pressure events from the system.",
      "parentUuid": "8596b523_ca3f0dcf",
      "range": {
        "startLine": 69,
        "startChar": 60,
        "endLine": 69,
        "endChar": 74
      },
      "revId": "0e4ab3449ac1d34b27bd0cced69d519ea85632e0",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8ea01db3_58987789",
        "filename": "src/dawn_native/DynamicUploader.cpp",
        "patchSetId": 3
      },
      "lineNbr": 69,
      "author": {
        "id": 1000268
      },
      "writtenOn": "2019-10-29T17:25:00Z",
      "side": 1,
      "message": "Austin -\n\nThis will inherit the existing resource allocation policy which always creates at-least 4MB heaps. If we cannot afford to allocate 4MB then it\u0027s OOM anyway. After this change, I see no benefit - it saves no memory and only wastes cycles creating additional resources.",
      "parentUuid": "192eff0f_62a7614a",
      "range": {
        "startLine": 69,
        "startChar": 60,
        "endLine": 69,
        "endChar": 74
      },
      "revId": "0e4ab3449ac1d34b27bd0cced69d519ea85632e0",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7ef180cc_1dcea437",
        "filename": "src/dawn_native/DynamicUploader.h",
        "patchSetId": 3
      },
      "lineNbr": 47,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2019-10-28T12:55:53Z",
      "side": 1,
      "message": "nit: kRingBuffersSize to match the new semantics?",
      "revId": "0e4ab3449ac1d34b27bd0cced69d519ea85632e0",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "141bef20_63d98fb8",
        "filename": "src/dawn_native/DynamicUploader.h",
        "patchSetId": 3
      },
      "lineNbr": 47,
      "author": {
        "id": 1000268
      },
      "writtenOn": "2019-10-29T17:25:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7ef180cc_1dcea437",
      "revId": "0e4ab3449ac1d34b27bd0cced69d519ea85632e0",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    }
  ]
}