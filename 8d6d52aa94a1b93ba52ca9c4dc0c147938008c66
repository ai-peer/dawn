{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "c482b1e8_65c65498",
        "filename": "src/tint/ir/disassembler.cc",
        "patchSetId": 7
      },
      "lineNbr": 677,
      "author": {
        "id": 1002241
      },
      "writtenOn": "2023-06-06T20:21:34Z",
      "side": 1,
      "message": "Not sure how folks feel about this, but I can\u0027t think of another way to include stuff from custom types in the disassembly since we don\u0027t have generic attribute lists on on `type::Type`s.",
      "range": {
        "startLine": 675,
        "startChar": 0,
        "endLine": 677,
        "endChar": 5
      },
      "revId": "8d6d52aa94a1b93ba52ca9c4dc0c147938008c66",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f9130610_a918be79",
        "filename": "src/tint/ir/disassembler.cc",
        "patchSetId": 7
      },
      "lineNbr": 677,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2023-06-06T23:27:15Z",
      "side": 1,
      "message": "Yeah, this is a bit gross.\nMaybe we should just have an `utils::EnumSet\u003cStructFlags\u003e Flags()` on `type::Struct`, and `BlockDecoration` can be part of `enum class StructFlags`.",
      "parentUuid": "c482b1e8_65c65498",
      "range": {
        "startLine": 675,
        "startChar": 0,
        "endLine": 677,
        "endChar": 5
      },
      "revId": "8d6d52aa94a1b93ba52ca9c4dc0c147938008c66",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cef309c6_76c76309",
        "filename": "src/tint/ir/disassembler.cc",
        "patchSetId": 7
      },
      "lineNbr": 677,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2023-06-06T23:40:48Z",
      "side": 1,
      "message": "If we add attriubutes to the type, and have a `Block` attribute, does that mean we don\u0027t need the speical `transform::BlockDecoratedStructs::BlockStruct` anymore?",
      "parentUuid": "f9130610_a918be79",
      "range": {
        "startLine": 675,
        "startChar": 0,
        "endLine": 677,
        "endChar": 5
      },
      "revId": "8d6d52aa94a1b93ba52ca9c4dc0c147938008c66",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fec3f122_2be2cd0c",
        "filename": "src/tint/ir/disassembler.cc",
        "patchSetId": 7
      },
      "lineNbr": 677,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2023-06-06T23:43:20Z",
      "side": 1,
      "message": "Attributes or `Flags()` - yes, either way we can remove `transform::BlockDecoratedStructs::BlockStruct`.",
      "parentUuid": "cef309c6_76c76309",
      "range": {
        "startLine": 675,
        "startChar": 0,
        "endLine": 677,
        "endChar": 5
      },
      "revId": "8d6d52aa94a1b93ba52ca9c4dc0c147938008c66",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2516efcf_03389711",
        "filename": "src/tint/ir/disassembler.cc",
        "patchSetId": 7
      },
      "lineNbr": 677,
      "author": {
        "id": 1002241
      },
      "writtenOn": "2023-06-07T12:41:23Z",
      "side": 1,
      "message": "Is that really much better? Now you\u0027re pushing knowledge of IR transform stuff into the `type` namespace, as /well/ as needing the IR disassembler to do something bespoke.",
      "parentUuid": "fec3f122_2be2cd0c",
      "range": {
        "startLine": 675,
        "startChar": 0,
        "endLine": 677,
        "endChar": 5
      },
      "revId": "8d6d52aa94a1b93ba52ca9c4dc0c147938008c66",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "01e72a15_affbf9a2",
        "filename": "src/tint/ir/disassembler.cc",
        "patchSetId": 7
      },
      "lineNbr": 677,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2023-06-07T13:22:11Z",
      "side": 1,
      "message": "Either way you\u0027re sharing knowledge of the *this-struct-is-a-block* across different modules in the codebase. I\u0027m just suggesting that if we\u0027re going to do that, then we might as well just concede that the `BlockDecoration` flag is a property of the type and stop attempting to abstract it away.\n\nAlternatively, we could add type attributes, similarly to the AST. It\u0027ll take a bunch of code and tests to ensure that they\u0027re included in the type deduplication, that order doesn\u0027t matter, etc. That would address the ability to _print_ them, but you\u0027re going to face similar issues if we want to parse them.",
      "parentUuid": "2516efcf_03389711",
      "range": {
        "startLine": 675,
        "startChar": 0,
        "endLine": 677,
        "endChar": 5
      },
      "revId": "8d6d52aa94a1b93ba52ca9c4dc0c147938008c66",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "67f2cd8a_d30329f0",
        "filename": "src/tint/ir/disassembler.cc",
        "patchSetId": 7
      },
      "lineNbr": 677,
      "author": {
        "id": 1002241
      },
      "writtenOn": "2023-06-07T19:49:51Z",
      "side": 1,
      "message": "Switched to an EnumSet and removed the BlockDecoratedStruct subclass. PTAL.",
      "parentUuid": "01e72a15_affbf9a2",
      "range": {
        "startLine": 675,
        "startChar": 0,
        "endLine": 677,
        "endChar": 5
      },
      "revId": "8d6d52aa94a1b93ba52ca9c4dc0c147938008c66",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}