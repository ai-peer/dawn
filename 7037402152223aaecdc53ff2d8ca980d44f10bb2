{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "4605be78_d4df7037",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-07-13T10:33:32Z",
      "side": 1,
      "message": "LGTM",
      "revId": "7037402152223aaecdc53ff2d8ca980d44f10bb2",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "31b23aa7_cdfdffe8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2022-07-13T17:49:20Z",
      "side": 1,
      "message": "LGTM",
      "revId": "7037402152223aaecdc53ff2d8ca980d44f10bb2",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "86b55305_a0002716",
        "filename": "src/dawn/native/Toggles.cpp",
        "patchSetId": 3
      },
      "lineNbr": 273,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-07-13T10:33:32Z",
      "side": 1,
      "message": "nit: description could be updated.",
      "revId": "7037402152223aaecdc53ff2d8ca980d44f10bb2",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ac8a3aa4_65f612e5",
        "filename": "src/dawn/native/Toggles.cpp",
        "patchSetId": 3
      },
      "lineNbr": 273,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2022-07-13T17:49:20Z",
      "side": 1,
      "message": "the name as well - now it\u0027s initialized on creation, not on copy.\n\nI might call it \"D3D12ForceInitializeCopyableDepthStencilTextureOnCreation\"\n(I\u0027d include the D3D12 because the toggle does nothing on other backends)\n\nAlso, do we know if it is only a problem for CopyDst? what about CopySrc?",
      "parentUuid": "86b55305_a0002716",
      "revId": "7037402152223aaecdc53ff2d8ca980d44f10bb2",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3e222c0a_705d97eb",
        "filename": "src/dawn/native/Toggles.cpp",
        "patchSetId": 3
      },
      "lineNbr": 273,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2022-07-14T00:37:19Z",
      "side": 1,
      "message": "Done\n\n\u003e Also, do we know if it is only a problem for CopyDst? what about CopySrc?\n\nHi Ausin, I think it\u0027s enough to just think of the depth stencil textures as CopyDst because the depth stencil texture whose first usage is CopySrc will always be initialized before the copy call, and if it has RenderAttachment usage it will always be initialized by ClearDepthStencilView(). The depth stencil textures with RenderAttachment usage will not be initialized only when they are used as CopyDst and they are covered by a whole copy.",
      "parentUuid": "ac8a3aa4_65f612e5",
      "revId": "7037402152223aaecdc53ff2d8ca980d44f10bb2",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d24a80bf_5ebc31fc",
        "filename": "src/dawn/native/d3d12/TextureD3D12.cpp",
        "patchSetId": 3
      },
      "lineNbr": 610,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-07-13T10:33:32Z",
      "side": 1,
      "message": "optional nit: IMHO there isn\u0027t that much clarity coming from factoring both code paths like this because we need to re-compute the TextureBase::ClearValue.",
      "revId": "7037402152223aaecdc53ff2d8ca980d44f10bb2",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0d7f38b1_95cd6ecf",
        "filename": "src/dawn/native/d3d12/TextureD3D12.cpp",
        "patchSetId": 3
      },
      "lineNbr": 610,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2022-07-14T00:37:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d24a80bf_5ebc31fc",
      "revId": "7037402152223aaecdc53ff2d8ca980d44f10bb2",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "177076c1_c3367c29",
        "filename": "src/dawn/tests/end2end/CopyTests.cpp",
        "patchSetId": 3
      },
      "lineNbr": 2718,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2022-07-13T17:49:20Z",
      "side": 1,
      "message": "does the test not work for GL backends?",
      "revId": "7037402152223aaecdc53ff2d8ca980d44f10bb2",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "27c49672_d9d6fd01",
        "filename": "src/dawn/tests/end2end/CopyTests.cpp",
        "patchSetId": 3
      },
      "lineNbr": 2718,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2022-07-14T00:37:19Z",
      "side": 1,
      "message": "The test doesn\u0027t work for GL backends because of the assertion \"ASSERT(dst.aspect \u003d\u003d Aspect::Color);\" in https://source.chromium.org/chromium/chromium/src/+/main:third_party/dawn/src/dawn/native/opengl/CommandBufferGL.cpp;l\u003d537.",
      "parentUuid": "177076c1_c3367c29",
      "revId": "7037402152223aaecdc53ff2d8ca980d44f10bb2",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "33c22a95_8b61ead8",
        "filename": "src/dawn/tests/end2end/CopyTests.cpp",
        "patchSetId": 3
      },
      "lineNbr": 2718,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2022-07-14T23:05:39Z",
      "side": 1,
      "message": "That seems like something is unimplemented - perhaps because we did not previously have the Depth16Unorm format before.\n\nCould you file a bug and then suppress the test on the GL backends with a reference to the bug?",
      "parentUuid": "27c49672_d9d6fd01",
      "revId": "7037402152223aaecdc53ff2d8ca980d44f10bb2",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1957d025_b6e415c2",
        "filename": "src/dawn/tests/end2end/CopyTests.cpp",
        "patchSetId": 3
      },
      "lineNbr": 2718,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2022-07-15T02:15:24Z",
      "side": 1,
      "message": "I\u0027ve added the suppressions on OpenGL and OpenGL ES backends. PTAL, thanks!\n\nI find we have already had an issue about buffer-texture copies with Depth16Unorm:\nhttps://bugs.chromium.org/p/dawn/issues/detail?id\u003d1237",
      "parentUuid": "33c22a95_8b61ead8",
      "revId": "7037402152223aaecdc53ff2d8ca980d44f10bb2",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5ad3b971_7854e76c",
        "filename": "src/dawn/tests/end2end/CopyTests.cpp",
        "patchSetId": 3
      },
      "lineNbr": 2718,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2022-07-15T02:48:03Z",
      "side": 1,
      "message": "Oh sorry I just found dawn:1237 is about T2B copies. I\u0027ve filed a new one about B2T copies with Depth16Unorm:\nhttps://bugs.chromium.org/p/dawn/issues/detail?id\u003d1492",
      "parentUuid": "1957d025_b6e415c2",
      "revId": "7037402152223aaecdc53ff2d8ca980d44f10bb2",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}