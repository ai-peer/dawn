{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "7e224df2_2023b923",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000024
      },
      "writtenOn": "2023-05-01T20:04:50Z",
      "side": 1,
      "message": "Austin: PTAL. Thanks!\n\nNote: when the real AdapterBase comes back, the tests that are currently using multiple null::PhysicalDevices will likely create a single one, and multiple AdapterBases to wrap it. I\u0027ve left all the variable names the same for now.",
      "revId": "48b6b61fc43f881a15b97af21236e44873cb757a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "91d488a8_fc98638b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000024
      },
      "writtenOn": "2023-05-01T20:14:59Z",
      "side": 1,
      "message": "Austin: PTAL. Thanks!",
      "revId": "48b6b61fc43f881a15b97af21236e44873cb757a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "35e02b14_5cde7dcd",
        "filename": "src/dawn/tests/unittests/FeatureTests.cpp",
        "patchSetId": 2
      },
      "lineNbr": 50,
      "author": {
        "id": 1000024
      },
      "writtenOn": "2023-05-01T21:01:47Z",
      "side": 1,
      "message": "When the real AdapterBase comes back, these tests will likely have to create a single null::PhysicalDevice, and multiple AdapterBases to wrap them. For now, I\u0027ve left the variable names alone and just modified the types.",
      "revId": "48b6b61fc43f881a15b97af21236e44873cb757a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5c3330ee_a2e25b21",
        "filename": "src/dawn/tests/unittests/FeatureTests.cpp",
        "patchSetId": 2
      },
      "lineNbr": 50,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-05-01T21:04:42Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "35e02b14_5cde7dcd",
      "revId": "48b6b61fc43f881a15b97af21236e44873cb757a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "78994971_a580b020",
        "filename": "src/dawn/tests/unittests/FeatureTests.cpp",
        "patchSetId": 2
      },
      "lineNbr": 52,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-05-01T20:37:32Z",
      "side": 1,
      "message": "nit: rename these to physical device too, I think",
      "range": {
        "startLine": 50,
        "startChar": 4,
        "endLine": 52,
        "endChar": 58
      },
      "revId": "48b6b61fc43f881a15b97af21236e44873cb757a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fbd382b3_8ccefdbb",
        "filename": "src/dawn/tests/unittests/FeatureTests.cpp",
        "patchSetId": 2
      },
      "lineNbr": 52,
      "author": {
        "id": 1000024
      },
      "writtenOn": "2023-05-01T21:01:47Z",
      "side": 1,
      "message": "See my comment below (which I neglected to send, oops): they will become two AdapterBases wrapping a single PhysicalDevice, so I think the names should stay.",
      "parentUuid": "78994971_a580b020",
      "range": {
        "startLine": 50,
        "startChar": 4,
        "endLine": 52,
        "endChar": 58
      },
      "revId": "48b6b61fc43f881a15b97af21236e44873cb757a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9f8520af_25d8f442",
        "filename": "src/dawn/tests/unittests/FeatureTests.cpp",
        "patchSetId": 2
      },
      "lineNbr": 52,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-05-01T21:04:42Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "fbd382b3_8ccefdbb",
      "range": {
        "startLine": 50,
        "startChar": 4,
        "endLine": 52,
        "endChar": 58
      },
      "revId": "48b6b61fc43f881a15b97af21236e44873cb757a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6c90fe79_e499ac5c",
        "filename": "src/dawn/tests/unittests/PerThreadProcTests.cpp",
        "patchSetId": 2
      },
      "lineNbr": 35,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-05-01T20:37:32Z",
      "side": 1,
      "message": "this one we only ever call API* methods on. Could it be a normal AdapterBase?\n\nthe change is fine for now though until we add the AdapterBase class back",
      "range": {
        "startLine": 35,
        "startChar": 4,
        "endLine": 35,
        "endChar": 38
      },
      "revId": "48b6b61fc43f881a15b97af21236e44873cb757a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "48b6b61fc43f881a15b97af21236e44873cb757a",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Kokoro",
        "description": {
          "value": "A maximum vote is required for the Kokoro label. A minimum vote is blocking."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Kokoro\u003dMAX AND -label:Kokoro\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "uploader:dawn-autoroll@skia-public.iam.gserviceaccount.com"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Kokoro=MAX AND -label:Kokoro=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Kokoro=MAX"],"failingAtoms":["label:Kokoro=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"uploader:dawn-autoroll@skia-public.iam.gserviceaccount.com"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["uploader:dawn-autoroll@skia-public.iam.gserviceaccount.com"]}
      },
      "patchSetCommitId": "48b6b61fc43f881a15b97af21236e44873cb757a",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "patchSetCommitId": "48b6b61fc43f881a15b97af21236e44873cb757a",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    }
  ]
}