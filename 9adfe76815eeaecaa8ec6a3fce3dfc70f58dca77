{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "7face7b7_88bd1baa",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2023-09-12T16:02:24Z",
      "side": 1,
      "message": "PTAL, thanks.",
      "revId": "9adfe76815eeaecaa8ec6a3fce3dfc70f58dca77",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e1194ec1_1f95d1ca",
        "filename": "src/dawn/native/d3d11/TextureD3D11.cpp",
        "patchSetId": 3
      },
      "lineNbr": 1291,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-09-18T14:47:32Z",
      "side": 1,
      "message": "Views used to create DSV and RTV should have a single mip-level per WebGPU validation rules.",
      "revId": "9adfe76815eeaecaa8ec6a3fce3dfc70f58dca77",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5a77abb9_062615ef",
        "filename": "src/dawn/native/d3d11/TextureD3D11.cpp",
        "patchSetId": 3
      },
      "lineNbr": 1291,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2023-09-18T15:39:31Z",
      "side": 1,
      "message": "It is also used internal for clear texture per level.",
      "parentUuid": "e1194ec1_1f95d1ca",
      "revId": "9adfe76815eeaecaa8ec6a3fce3dfc70f58dca77",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "14552801_7d0d8130",
        "filename": "src/dawn/native/d3d11/TextureD3D11.cpp",
        "patchSetId": 3
      },
      "lineNbr": 1291,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-09-18T16:08:14Z",
      "side": 1,
      "message": "Clearing would use each RTV only once, and applications shouldn\u0027t rely too much on lazy-clearing for performance, so IMHO it could use CreateD3D11RTV (maybe there will be one duplicated RTV creation compared to your profile but that seems ok?) Same comment for the DSV.",
      "parentUuid": "5a77abb9_062615ef",
      "revId": "9adfe76815eeaecaa8ec6a3fce3dfc70f58dca77",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0d41202b_e4531135",
        "filename": "src/dawn/native/d3d11/TextureD3D11.cpp",
        "patchSetId": 3
      },
      "lineNbr": 1326,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-09-13T16:09:06Z",
      "side": 1,
      "message": "this seems like a weird way to do caching. Why not have a proper map?",
      "range": {
        "startLine": 1319,
        "startChar": 4,
        "endLine": 1326,
        "endChar": 5
      },
      "revId": "9adfe76815eeaecaa8ec6a3fce3dfc70f58dca77",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "401486a3_b9c862a8",
        "filename": "src/dawn/native/d3d11/TextureD3D11.cpp",
        "patchSetId": 3
      },
      "lineNbr": 1326,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2023-09-15T14:21:27Z",
      "side": 1,
      "message": "I think the common use cases are a depth stencil texture is always use the view with same properties, right? If it is true, then this CL should be good enough. Do you think we need cache all resource views for all uncommon use cases?",
      "parentUuid": "0d41202b_e4531135",
      "range": {
        "startLine": 1319,
        "startChar": 4,
        "endLine": 1326,
        "endChar": 5
      },
      "revId": "9adfe76815eeaecaa8ec6a3fce3dfc70f58dca77",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "10473a0d_11939ae0",
        "filename": "src/dawn/native/d3d11/TextureD3D11.h",
        "patchSetId": 3
      },
      "lineNbr": 183,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-09-15T17:03:22Z",
      "side": 1,
      "message": "IMHO we could store the views in the d3d11::BindGroup which would be most similar to what other backends are doing and would provide decent caching? Creating RTVs and DSVs doesn\u0027t seem too hot so that\u0027d be ok? We could also reorder bindings in the bindgroup to set a whole bunch of bindings at once in the BindGroupTracker instead of one by one.",
      "revId": "9adfe76815eeaecaa8ec6a3fce3dfc70f58dca77",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "43a9752d_13137c27",
        "filename": "src/dawn/native/d3d11/TextureD3D11.h",
        "patchSetId": 3
      },
      "lineNbr": 183,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2023-09-15T18:24:28Z",
      "side": 1,
      "message": "Graphite recreates BindGroup for each draw, it doesn\u0027t cache and reuse BindGroups.\n\nCreating RTVs and DSVs consume 2.82% and 1.68% of total CPU time. See crbug.com/1481660",
      "parentUuid": "10473a0d_11939ae0",
      "revId": "9adfe76815eeaecaa8ec6a3fce3dfc70f58dca77",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5dd4f8df_e38bd3c2",
        "filename": "src/dawn/native/d3d11/TextureD3D11.h",
        "patchSetId": 3
      },
      "lineNbr": 183,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2023-09-15T18:25:39Z",
      "side": 1,
      "message": "Graphite creates BindGroup at https://source.chromium.org/chromium/chromium/src/+/main:third_party/skia/src/gpu/graphite/dawn/DawnCommandBuffer.cpp;l\u003d586;drc\u003d31fb07c05718d671d96c227855bfe97af9e3fb20;bpv\u003d1;bpt\u003d1",
      "parentUuid": "43a9752d_13137c27",
      "revId": "9adfe76815eeaecaa8ec6a3fce3dfc70f58dca77",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bb5f8cac_7eaeab98",
        "filename": "src/dawn/native/d3d11/TextureD3D11.h",
        "patchSetId": 3
      },
      "lineNbr": 183,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-09-18T14:47:32Z",
      "side": 1,
      "message": "Graphite should probably try to cache bindgroups when it can, using dynamic uniform buffers for step buffers if needed.\n\nWhat are the improvements for each of the cached descriptor types? It seems that some of the view would get recreated all the time anyway so the improvement could be null.\n\nOk in general to add this caching temporarily but I expect that at least for SRV and UAV it should be done at the BindGroup level, and for RTV it would be easy to detect when we need to eagerly create one on a view. (DSV is fine uncached maybe?)",
      "parentUuid": "5dd4f8df_e38bd3c2",
      "revId": "9adfe76815eeaecaa8ec6a3fce3dfc70f58dca77",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d994ea1c_c9bb0c0f",
        "filename": "src/dawn/native/d3d11/TextureD3D11.h",
        "patchSetId": 3
      },
      "lineNbr": 183,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2023-09-18T15:39:31Z",
      "side": 1,
      "message": "I dumped new profile at https://bugs.chromium.org/p/chromium/issues/detail?id\u003d1481660#c3\n\nAs my test:\n\nFor SRV: 5.44% -\u003e 0.08%\nFor RTV:  2.82% -\u003e 0.19%\nFor DSV: 1.68% -\u003e 0.02%",
      "parentUuid": "bb5f8cac_7eaeab98",
      "revId": "9adfe76815eeaecaa8ec6a3fce3dfc70f58dca77",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6f75b7e2_9579188e",
        "filename": "src/dawn/native/d3d11/TextureD3D11.h",
        "patchSetId": 3
      },
      "lineNbr": 183,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-09-18T16:08:14Z",
      "side": 1,
      "message": "The data is pretty clear that we should do this even if there\u0027s also the opportunity for Graphite to cache bindgroups IMHO. The code for SRV/UAV/RTV is pretty small anyway.",
      "parentUuid": "d994ea1c_c9bb0c0f",
      "revId": "9adfe76815eeaecaa8ec6a3fce3dfc70f58dca77",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}