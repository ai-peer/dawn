{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "8bd33835_212b00e9",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 7,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-05-03T23:51:55Z",
      "side": 1,
      "message": "typo: \"support\"",
      "range": {
        "startLine": 7,
        "startChar": 7,
        "endLine": 7,
        "endChar": 13
      },
      "revId": "d3f4928c32dd0057aa663f327bc3d6983c62321e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "768c3834_0345f3f0",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 7,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2023-05-04T15:47:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8bd33835_212b00e9",
      "range": {
        "startLine": 7,
        "startChar": 7,
        "endLine": 7,
        "endChar": 13
      },
      "revId": "d3f4928c32dd0057aa663f327bc3d6983c62321e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0f2059b7_6bac9aa0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2023-05-03T19:06:48Z",
      "side": 1,
      "message": "Hi Austin \u0026 Corentin, PTAL. Thanks",
      "revId": "d3f4928c32dd0057aa663f327bc3d6983c62321e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c3666041_3892d811",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-05-04T12:16:39Z",
      "side": 1,
      "message": "Same comments as Austin for sharing more between D3D backends.",
      "revId": "d3f4928c32dd0057aa663f327bc3d6983c62321e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e76d5b41_151b6d66",
        "filename": "include/dawn/native/D3DBackend.h",
        "patchSetId": 3
      },
      "lineNbr": 33,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-05-03T23:51:55Z",
      "side": 1,
      "message": "I don\u0027t see it used - what is this for?",
      "range": {
        "startLine": 33,
        "startChar": 0,
        "endLine": 33,
        "endChar": 84
      },
      "revId": "d3f4928c32dd0057aa663f327bc3d6983c62321e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "62baa09b_9bfe06b5",
        "filename": "include/dawn/native/D3DBackend.h",
        "patchSetId": 3
      },
      "lineNbr": 33,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2023-05-04T15:47:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e76d5b41_151b6d66",
      "range": {
        "startLine": 33,
        "startChar": 0,
        "endLine": 33,
        "endChar": 84
      },
      "revId": "d3f4928c32dd0057aa663f327bc3d6983c62321e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3cb90bdc_b3eadac0",
        "filename": "src/dawn/native/d3d11/DeviceD3D11.cpp",
        "patchSetId": 3
      },
      "lineNbr": 395,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-05-04T12:16:39Z",
      "side": 1,
      "message": "Should this code somehow be shared at the d3d:: level or is it not worth it?",
      "revId": "d3f4928c32dd0057aa663f327bc3d6983c62321e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f9b8e3cb_f2495adb",
        "filename": "src/dawn/native/d3d11/DeviceD3D11.cpp",
        "patchSetId": 3
      },
      "lineNbr": 395,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2023-05-04T15:47:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3cb90bdc_b3eadac0",
      "revId": "d3f4928c32dd0057aa663f327bc3d6983c62321e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b0f78db4_8fb6be6f",
        "filename": "src/dawn/native/d3d11/DeviceD3D11.cpp",
        "patchSetId": 3
      },
      "lineNbr": 432,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-05-04T12:16:39Z",
      "side": 1,
      "message": "nit: Instead of all the consumedError, could we refactor to a function that does a bunch of DAWN_TRY and a wrapper function that does the single ConsumedError?",
      "revId": "d3f4928c32dd0057aa663f327bc3d6983c62321e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "abac727a_03c92b66",
        "filename": "src/dawn/native/d3d11/DeviceD3D11.cpp",
        "patchSetId": 3
      },
      "lineNbr": 432,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2023-05-04T15:47:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b0f78db4_8fb6be6f",
      "revId": "d3f4928c32dd0057aa663f327bc3d6983c62321e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cf127459_5944d91e",
        "filename": "src/dawn/native/d3d11/DeviceD3D11.cpp",
        "patchSetId": 3
      },
      "lineNbr": 449,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-05-03T23:51:55Z",
      "side": 1,
      "message": "just \"d3d\" ?",
      "range": {
        "startLine": 449,
        "startChar": 41,
        "endLine": 449,
        "endChar": 46
      },
      "revId": "d3f4928c32dd0057aa663f327bc3d6983c62321e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b0573e2e_b2126606",
        "filename": "src/dawn/native/d3d11/DeviceD3D11.cpp",
        "patchSetId": 3
      },
      "lineNbr": 449,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2023-05-04T15:47:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cf127459_5944d91e",
      "range": {
        "startLine": 449,
        "startChar": 41,
        "endLine": 449,
        "endChar": 46
      },
      "revId": "d3f4928c32dd0057aa663f327bc3d6983c62321e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2c7b6e79_a90dfe1f",
        "filename": "src/dawn/native/d3d11/ExternalImageDXGIImplD3D11.cpp",
        "patchSetId": 3
      },
      "lineNbr": 45,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-05-03T23:51:55Z",
      "side": 1,
      "message": "the implementation here is super similar to the d3d12 one - is there no way we could share it?\n\nI see there are some 11-specific things like Fence::CreateFromHandle, but there could be a way we have a virtual function on d3d::Device like device-\u003eCreateFenceFromHandle that returns the base abstract d3d::Fence",
      "revId": "d3f4928c32dd0057aa663f327bc3d6983c62321e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "42e9ad43_06639da0",
        "filename": "src/dawn/native/d3d11/ExternalImageDXGIImplD3D11.cpp",
        "patchSetId": 3
      },
      "lineNbr": 78,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-05-03T23:51:55Z",
      "side": 1,
      "message": "sType in the C++ api is defaulted",
      "range": {
        "startLine": 78,
        "startChar": 0,
        "endLine": 78,
        "endChar": 77
      },
      "revId": "d3f4928c32dd0057aa663f327bc3d6983c62321e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8f29ef72_294c9b60",
        "filename": "src/dawn/native/d3d11/ExternalImageDXGIImplD3D11.cpp",
        "patchSetId": 3
      },
      "lineNbr": 78,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2023-05-04T15:47:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "42e9ad43_06639da0",
      "range": {
        "startLine": 78,
        "startChar": 0,
        "endLine": 78,
        "endChar": 77
      },
      "revId": "d3f4928c32dd0057aa663f327bc3d6983c62321e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6276f0eb_face0ed0",
        "filename": "src/dawn/native/d3d11/ExternalImageDXGIImplD3D11.cpp",
        "patchSetId": 3
      },
      "lineNbr": 90,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-05-03T23:51:55Z",
      "side": 1,
      "message": "d3d11",
      "range": {
        "startLine": 90,
        "startChar": 50,
        "endLine": 90,
        "endChar": 55
      },
      "revId": "d3f4928c32dd0057aa663f327bc3d6983c62321e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "caa65a71_f0276a29",
        "filename": "src/dawn/native/d3d11/ExternalImageDXGIImplD3D11.cpp",
        "patchSetId": 3
      },
      "lineNbr": 90,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2023-05-04T15:47:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6276f0eb_face0ed0",
      "range": {
        "startLine": 90,
        "startChar": 50,
        "endLine": 90,
        "endChar": 55
      },
      "revId": "d3f4928c32dd0057aa663f327bc3d6983c62321e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "19989ed2_7610a146",
        "filename": "src/dawn/native/d3d11/ExternalImageDXGIImplD3D11.cpp",
        "patchSetId": 3
      },
      "lineNbr": 121,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-05-03T23:51:55Z",
      "side": 1,
      "message": "d3d11",
      "range": {
        "startLine": 121,
        "startChar": 29,
        "endLine": 121,
        "endChar": 34
      },
      "revId": "d3f4928c32dd0057aa663f327bc3d6983c62321e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ef585ee0_9ea6087d",
        "filename": "src/dawn/native/d3d11/ExternalImageDXGIImplD3D11.cpp",
        "patchSetId": 3
      },
      "lineNbr": 121,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2023-05-04T15:47:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "19989ed2_7610a146",
      "range": {
        "startLine": 121,
        "startChar": 29,
        "endLine": 121,
        "endChar": 34
      },
      "revId": "d3f4928c32dd0057aa663f327bc3d6983c62321e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "77c516ac_aae3ffd8",
        "filename": "src/dawn/native/d3d11/ExternalImageDXGIImplD3D11.h",
        "patchSetId": 3
      },
      "lineNbr": 55,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-05-03T23:51:55Z",
      "side": 1,
      "message": "is this defined?",
      "range": {
        "startLine": 55,
        "startChar": 0,
        "endLine": 55,
        "endChar": 25
      },
      "revId": "d3f4928c32dd0057aa663f327bc3d6983c62321e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9cb001bf_abca029f",
        "filename": "src/dawn/native/d3d11/ExternalImageDXGIImplD3D11.h",
        "patchSetId": 3
      },
      "lineNbr": 55,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2023-05-04T15:47:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "77c516ac_aae3ffd8",
      "range": {
        "startLine": 55,
        "startChar": 0,
        "endLine": 55,
        "endChar": 25
      },
      "revId": "d3f4928c32dd0057aa663f327bc3d6983c62321e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "437e7a96_e45b78ac",
        "filename": "src/dawn/native/d3d11/ExternalImageDXGIImplD3D11.h",
        "patchSetId": 3
      },
      "lineNbr": 62,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-05-03T23:51:55Z",
      "side": 1,
      "message": "d3d11",
      "range": {
        "startLine": 62,
        "startChar": 80,
        "endLine": 62,
        "endChar": 85
      },
      "revId": "d3f4928c32dd0057aa663f327bc3d6983c62321e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "08621768_aa415335",
        "filename": "src/dawn/native/d3d11/ExternalImageDXGIImplD3D11.h",
        "patchSetId": 3
      },
      "lineNbr": 62,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2023-05-04T15:47:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "437e7a96_e45b78ac",
      "range": {
        "startLine": 62,
        "startChar": 80,
        "endLine": 62,
        "endChar": 85
      },
      "revId": "d3f4928c32dd0057aa663f327bc3d6983c62321e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f2860bd7_1d73e3e7",
        "filename": "src/dawn/native/d3d11/TextureD3D11.cpp",
        "patchSetId": 3
      },
      "lineNbr": 261,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-05-03T23:51:55Z",
      "side": 1,
      "message": "this should probably do what d3d12 does and save the fences. Then, we could wait only when the texture is actually used which should improve parallelism in some situations",
      "range": {
        "startLine": 257,
        "startChar": 4,
        "endLine": 261,
        "endChar": 5
      },
      "revId": "d3f4928c32dd0057aa663f327bc3d6983c62321e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0aca7bd7_d13ec213",
        "filename": "src/dawn/native/d3d11/TextureD3D11.cpp",
        "patchSetId": 3
      },
      "lineNbr": 261,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2023-05-04T15:47:24Z",
      "side": 1,
      "message": "I didn\u0027t do that is because below reasons:\n1. Right now, d3d11::Texture doesn\u0027t track last usage, it needs extra work. it will make the CL complex to review.\n2. In chrome, we always call BeginAccess() and EndAccess() just before and after using it. So the optimization is good to have, but it doesn\u0027t have any benefit for chrome. And I think chrome is the only user for external texture API.",
      "parentUuid": "f2860bd7_1d73e3e7",
      "range": {
        "startLine": 257,
        "startChar": 4,
        "endLine": 261,
        "endChar": 5
      },
      "revId": "d3f4928c32dd0057aa663f327bc3d6983c62321e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "44085bde_dd2034bf",
        "filename": "src/dawn/native/d3d11/TextureD3D11.cpp",
        "patchSetId": 3
      },
      "lineNbr": 685,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-05-03T23:51:55Z",
      "side": 1,
      "message": "ditto: like d3d12, we can track mSignalFenceValue so that we have the exact serial when we stopped using the texture. this way the synchronization is more tightly scoped",
      "range": {
        "startLine": 685,
        "startChar": 0,
        "endLine": 685,
        "endChar": 56
      },
      "revId": "d3f4928c32dd0057aa663f327bc3d6983c62321e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ea2a1915_1e968778",
        "filename": "src/dawn/native/d3d11/TextureD3D11.cpp",
        "patchSetId": 3
      },
      "lineNbr": 685,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2023-05-04T15:47:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "44085bde_dd2034bf",
      "range": {
        "startLine": 685,
        "startChar": 0,
        "endLine": 685,
        "endChar": 56
      },
      "revId": "d3f4928c32dd0057aa663f327bc3d6983c62321e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}