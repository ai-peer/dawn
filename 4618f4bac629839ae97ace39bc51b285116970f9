{
  "comments": [
    {
      "key": {
        "uuid": "a67412f8_46f862f1",
        "filename": "src/dawn_native/d3d12/AdapterD3D12.cpp",
        "patchSetId": 8
      },
      "lineNbr": 108,
      "author": {
        "id": 1000268
      },
      "writtenOn": "2020-05-20T17:00:19Z",
      "side": 1,
      "message": "[1]",
      "revId": "4618f4bac629839ae97ace39bc51b285116970f9",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0269832d_f9977ba2",
        "filename": "src/dawn_native/d3d12/AdapterD3D12.cpp",
        "patchSetId": 8
      },
      "lineNbr": 108,
      "author": {
        "id": 1000861
      },
      "writtenOn": "2020-05-22T06:24:56Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a67412f8_46f862f1",
      "revId": "4618f4bac629839ae97ace39bc51b285116970f9",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9d70a68f_61359f0c",
        "filename": "src/dawn_native/d3d12/AdapterD3D12.cpp",
        "patchSetId": 8
      },
      "lineNbr": 144,
      "author": {
        "id": 1000268
      },
      "writtenOn": "2020-05-22T17:33:45Z",
      "side": 1,
      "message": "RC checked with DX team, think this one can be moved to permanent. Dawn does not persistently map read back heaps and requires Map/Unmap() but D3D12 only validates upon Submit(), which could be before Unmap() is called.",
      "revId": "4618f4bac629839ae97ace39bc51b285116970f9",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b313cd59_51e29bd7",
        "filename": "src/dawn_native/d3d12/AdapterD3D12.cpp",
        "patchSetId": 8
      },
      "lineNbr": 144,
      "author": {
        "id": 1000268
      },
      "writtenOn": "2020-05-22T17:35:30Z",
      "side": 1,
      "message": "Ops, leftover comment.",
      "parentUuid": "9d70a68f_61359f0c",
      "revId": "4618f4bac629839ae97ace39bc51b285116970f9",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fc159ae0_2f230708",
        "filename": "src/dawn_native/d3d12/AdapterD3D12.cpp",
        "patchSetId": 8
      },
      "lineNbr": 179,
      "author": {
        "id": 1000268
      },
      "writtenOn": "2020-05-20T17:00:19Z",
      "side": 1,
      "message": "nit: could be `ASSERT_SUCCESS(mD3d12Device.As(\u0026infoQueue));` and [1].",
      "revId": "4618f4bac629839ae97ace39bc51b285116970f9",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fc0d41e5_e5e70447",
        "filename": "src/dawn_native/d3d12/AdapterD3D12.cpp",
        "patchSetId": 8
      },
      "lineNbr": 179,
      "author": {
        "id": 1000861
      },
      "writtenOn": "2020-05-22T06:24:56Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fc159ae0_2f230708",
      "revId": "4618f4bac629839ae97ace39bc51b285116970f9",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d7ce92f8_4c42b3c0",
        "filename": "src/dawn_native/d3d12/AdapterD3D12.cpp",
        "patchSetId": 8
      },
      "lineNbr": 179,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-05-22T16:04:48Z",
      "side": 1,
      "message": "I think this one hasn\u0027t been done yet.",
      "parentUuid": "fc0d41e5_e5e70447",
      "revId": "4618f4bac629839ae97ace39bc51b285116970f9",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d1db5e1c_cfa9d5b1",
        "filename": "src/dawn_native/d3d12/DeviceD3D12.cpp",
        "patchSetId": 8
      },
      "lineNbr": 484,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-05-20T09:22:15Z",
      "side": 1,
      "message": "Instead of an explicit HandleError, this could return DAWN_INTERNAL_ERROR(...); that would be propagated inside TickImpl.\n\nAlso Validation errors are reserved for WebGPU validation errors. Backend validation errors should be \"internal\" because they result from Dawn issues.",
      "revId": "4618f4bac629839ae97ace39bc51b285116970f9",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a3b1ae7c_fae2c669",
        "filename": "src/dawn_native/d3d12/DeviceD3D12.cpp",
        "patchSetId": 8
      },
      "lineNbr": 484,
      "author": {
        "id": 1000861
      },
      "writtenOn": "2020-05-20T19:13:07Z",
      "side": 1,
      "message": "I ran into an assert [1] when using internal. Should I use DAWN_DEVICE_LOST_ERROR instead?\n\nAlso, what would be the best way to handle more than 1 error?\n\n[1] https://dawn.googlesource.com/dawn/+/refs/heads/master/src/dawn_native/Device.cpp#181",
      "parentUuid": "d1db5e1c_cfa9d5b1",
      "revId": "4618f4bac629839ae97ace39bc51b285116970f9",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "47af5d21_6c55cb94",
        "filename": "src/dawn_native/d3d12/DeviceD3D12.cpp",
        "patchSetId": 8
      },
      "lineNbr": 484,
      "author": {
        "id": 1000268
      },
      "writtenOn": "2020-05-20T20:20:29Z",
      "side": 1,
      "message": "\u003e I ran into an assert [1] when using internal. Should I use DAWN_DEVICE_LOST_ERROR instead?\n\nTo do as CW suggests, you\u0027ll likely need to check if the device is being disconnected and if so, return DEVICE_LOSS to tear down the device completely (two steps).\n\n\u003e Also, what would be the best way to handle more than 1 error?\n\nFirst error-out is fine IMHO. Overkill to dump the entire queue to stdout + stderr (twice).",
      "parentUuid": "a3b1ae7c_fae2c669",
      "revId": "4618f4bac629839ae97ace39bc51b285116970f9",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c047caf1_01b6795c",
        "filename": "src/dawn_native/d3d12/DeviceD3D12.cpp",
        "patchSetId": 8
      },
      "lineNbr": 484,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-05-21T10:03:47Z",
      "side": 1,
      "message": "+1 on it being fine to dump only surface the first error, since the goal is to have no errors.\n\nThe issue with the error type is unfortunate, but likewise since the goal is to have no errors, maybe we can use INTERNAL, and get an assert if we ever have an error during WaitForIdleForDestruction. We should fix all such errors anyway.",
      "parentUuid": "47af5d21_6c55cb94",
      "revId": "4618f4bac629839ae97ace39bc51b285116970f9",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "529815a4_f2fcb823",
        "filename": "src/dawn_native/d3d12/DeviceD3D12.cpp",
        "patchSetId": 8
      },
      "lineNbr": 484,
      "author": {
        "id": 1000861
      },
      "writtenOn": "2020-05-22T06:24:56Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c047caf1_01b6795c",
      "revId": "4618f4bac629839ae97ace39bc51b285116970f9",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d5954fdf_6798f1c4",
        "filename": "src/dawn_native/d3d12/DeviceD3D12.cpp",
        "patchSetId": 8
      },
      "lineNbr": 484,
      "author": {
        "id": 1000262
      },
      "writtenOn": "2020-05-22T16:24:37Z",
      "side": 1,
      "message": "I would like to pushback on only dumping the first error. \n\nIf one of our tests becomes flaky in TryBots and difficult to repro locally, it is really nice to have the complete output of errors available in the log instead of just the first error. \n\nErrors are related to each and the root cause of the problem might be more obvious by looking at the second or third error not just the first one. This is the reason we encourage people to use EXPECT macros in tests over just ASSERT.",
      "parentUuid": "529815a4_f2fcb823",
      "revId": "4618f4bac629839ae97ace39bc51b285116970f9",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3a7d1a64_64505dd2",
        "filename": "src/dawn_native/d3d12/DeviceD3D12.cpp",
        "patchSetId": 8
      },
      "lineNbr": 484,
      "author": {
        "id": 1000268
      },
      "writtenOn": "2020-05-22T17:33:45Z",
      "side": 1,
      "message": "\u003e Errors are related to each \n\nIf the first error leaves execution in a invalid/corrupt state, subsequent errors that do not add debug info, ex. `ExecuteCommandList() failed` flood the logs. Maybe only WARN could be EXPECT and if insufficient, make it more verbose in the future.",
      "parentUuid": "d5954fdf_6798f1c4",
      "revId": "4618f4bac629839ae97ace39bc51b285116970f9",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4195570b_1af37014",
        "filename": "src/dawn_native/d3d12/DeviceD3D12.cpp",
        "patchSetId": 8
      },
      "lineNbr": 484,
      "author": {
        "id": 1000262
      },
      "writtenOn": "2020-05-22T18:15:54Z",
      "side": 1,
      "message": "Capping the number of errors to a low number (5-10) seems reasonable. Just outputting the first error seems too low to me.",
      "parentUuid": "3a7d1a64_64505dd2",
      "revId": "4618f4bac629839ae97ace39bc51b285116970f9",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "76d9b4f0_8a7cab67",
        "filename": "src/dawn_native/d3d12/DeviceD3D12.cpp",
        "patchSetId": 8
      },
      "lineNbr": 484,
      "author": {
        "id": 1000262
      },
      "writtenOn": "2020-05-22T20:03:43Z",
      "side": 1,
      "message": "FWIW, having more than one GL error reported in the Chromium development tools and about:GPU logs has helped me debug problems in code. Having the cap be in the hundreds (like they do) is excessive for our purposes but we should definitely report more than one.",
      "parentUuid": "4195570b_1af37014",
      "revId": "4618f4bac629839ae97ace39bc51b285116970f9",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    }
  ]
}