{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "c1683a04_b874454f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-06-02T22:41:14Z",
      "side": 1,
      "message": "LGTM",
      "revId": "aa6398d40bb7c222ddcc9d24c08f7d035db827b3",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "128d3bf1_67360714",
        "filename": "generator/templates/dawn/wire/WireCmd.cpp",
        "patchSetId": 3
      },
      "lineNbr": 54,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-06-02T22:41:14Z",
      "side": 1,
      "message": "maybe we could assert this else case is_wire_transparent?",
      "range": {
        "startLine": 54,
        "startChar": 0,
        "endLine": 54,
        "endChar": 38
      },
      "revId": "aa6398d40bb7c222ddcc9d24c08f7d035db827b3",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "386bd0b3_236f34b7",
        "filename": "generator/templates/dawn/wire/WireCmd.cpp",
        "patchSetId": 3
      },
      "lineNbr": 54,
      "author": {
        "id": 1002831
      },
      "writtenOn": "2023-06-02T23:24:01Z",
      "side": 1,
      "message": "Done, but required making `FunctionPointerType`s `wire_transparent`. Seems fine to me, but lmk otherwise?",
      "parentUuid": "128d3bf1_67360714",
      "range": {
        "startLine": 54,
        "startChar": 0,
        "endLine": 54,
        "endChar": 38
      },
      "revId": "aa6398d40bb7c222ddcc9d24c08f7d035db827b3",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d8a939eb_177faedf",
        "filename": "generator/templates/dawn/wire/WireCmd.cpp",
        "patchSetId": 3
      },
      "lineNbr": 54,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-06-02T23:36:10Z",
      "side": 1,
      "message": "hm, I don\u0027t think it\u0027s OK - that means the size of the serialized DeviceDescriptor could be different on the client and server.\n\nWe really shouldn\u0027t be attempting to send function pointers at all.\n\nThis is a preexisting issue so OK not to fix it in this CL, but I think we should soon after.\n\nI think ideally we should find a way so that deviceLostCallback and deviceLostUserdata aren\u0027t even included in the transfer struct at all.\n\nwe might do that by detecting the types of these non-serializable types so that they aren\u0027t declared in the transfer struct (WGPUDeviceDescriptorTransfer) - and then have WGPUDeviceDescriptorSerialize validate they are null and not try to assign into the transfer struct (since they don\u0027t exist there). It looks like it validates deviceLostCallback right now, but not deviceLostUserdata.",
      "parentUuid": "386bd0b3_236f34b7",
      "range": {
        "startLine": 54,
        "startChar": 0,
        "endLine": 54,
        "endChar": 38
      },
      "revId": "aa6398d40bb7c222ddcc9d24c08f7d035db827b3",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "41d01e8f_c7441e6d",
        "filename": "generator/templates/dawn/wire/WireCmd.cpp",
        "patchSetId": 3
      },
      "lineNbr": 54,
      "author": {
        "id": 1002831
      },
      "writtenOn": "2023-06-02T23:42:29Z",
      "side": 1,
      "message": "Ok! I will create a follow up CL for that!",
      "parentUuid": "d8a939eb_177faedf",
      "range": {
        "startLine": 54,
        "startChar": 0,
        "endLine": 54,
        "endChar": 38
      },
      "revId": "aa6398d40bb7c222ddcc9d24c08f7d035db827b3",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}