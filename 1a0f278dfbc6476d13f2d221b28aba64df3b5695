{
  "comments": [
    {
      "key": {
        "uuid": "fe3bc0b4_3d5244fc",
        "filename": "src/tests/unittests/validation/BindGroupValidationTests.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1372,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-04-08T09:47:19Z",
      "side": 1,
      "message": "I don\u0027t think the tests below should be in this file. In a sense they are closer to https://cs.chromium.org/chromium/src/third_party/dawn/src/tests/unittests/validation/RenderPassValidationTests.cpp\n\nWhat matters for the validation in the passes is that the bindgroup\u0027s layout and the pipeline\u0027s bindGroupLayouts match. That part of the validation doesn\u0027t know anything about the specific bindings, so that it can be very small and fast. See the implementation of it here: https://cs.chromium.org/chromium/src/third_party/dawn/src/dawn_native/CommandBufferStateTracker.cpp?sq\u003dpackage:chromium\u0026g\u003d0\u0026l\u003d90",
      "revId": "1a0f278dfbc6476d13f2d221b28aba64df3b5695",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "38651185_5ca349b5",
        "filename": "src/tests/unittests/validation/BindGroupValidationTests.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1372,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-04-08T09:47:19Z",
      "side": 1,
      "message": "nit: with bindings unused by the pipeline.",
      "range": {
        "startLine": 1372,
        "startChar": 48,
        "endLine": 1372,
        "endChar": 80
      },
      "revId": "1a0f278dfbc6476d13f2d221b28aba64df3b5695",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ecfea095_a6f77429",
        "filename": "src/tests/unittests/validation/BindGroupValidationTests.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1372,
      "author": {
        "id": 1000017
      },
      "writtenOn": "2020-04-13T06:49:27Z",
      "side": 1,
      "message": "I removed RenderPassValidationTests.cpp. The tests in that file are fully contained in the new added tests. And the new tests are more inclusive. And all tests are about bindings. RenderPassValidationTests doesn\u0027t look like a good name. So I\u0027d like to put the tests here.\n\nYou are correct that validation for bindgroup\u0027s layout and the pipeline\u0027s BGL may doesn\u0027t know about anything about specific bindings in pipeline (designated by shaders). But once we set the pipeline\u0027s BGL, we need to set pipeline, which means that we have already set an appropriate pipeline with bindings via shaders. And there are validations between bindgroup/pipeline\u0027s BGL and bindings in pipeline. I know that the latter validation might be triggered by Draw/Dispatch in Dawn, but this is like a temp (or unstable? whatever) implementation. And the new tests show that the requirement about bindings is: bindings associated with bind group \u003e\u003d bindings in pipeline layout \u003e\u003d bindings in pipeline (shaders). If this rule is obeyed, then validation can pass. Otherwise, validation fails.",
      "parentUuid": "fe3bc0b4_3d5244fc",
      "revId": "1a0f278dfbc6476d13f2d221b28aba64df3b5695",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1029e0d1_476907fe",
        "filename": "src/tests/unittests/validation/BindGroupValidationTests.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1372,
      "author": {
        "id": 1000017
      },
      "writtenOn": "2020-04-13T06:49:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "38651185_5ca349b5",
      "range": {
        "startLine": 1372,
        "startChar": 48,
        "endLine": 1372,
        "endChar": 80
      },
      "revId": "1a0f278dfbc6476d13f2d221b28aba64df3b5695",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "024b528a_4aeea149",
        "filename": "src/tests/unittests/validation/BindGroupValidationTests.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1397,
      "author": {
        "id": 1000017
      },
      "writtenOn": "2020-04-08T06:47:22Z",
      "side": 1,
      "message": "I added two more tests to cover whether bindings in pipeline (used in shaders) match bindings in bind group in current render/compute pass. I followed the similar rule: extra bind group, and extra entry in a bind group. However, if we have extra entry in bind group, it will fail now. I suppose it is incorrect. So I added a TODO here. please correct me if it is not what you supposed to.",
      "range": {
        "startLine": 1390,
        "startChar": 4,
        "endLine": 1397,
        "endChar": 96
      },
      "revId": "1a0f278dfbc6476d13f2d221b28aba64df3b5695",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    }
  ]
}