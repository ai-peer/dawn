{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "99a8ef1c_b8566a4a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2023-06-08T07:49:57Z",
      "side": 1,
      "message": "PTAL, thanks!",
      "revId": "7894c0306ffb49a447f810e25f89697d316c07e1",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8c89804f_57813970",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-06-08T11:05:30Z",
      "side": 1,
      "message": "Dawn side LGTM",
      "revId": "7894c0306ffb49a447f810e25f89697d316c07e1",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a7466a7a_752d3aee",
        "filename": "src/tint/ast/transform/robustness.cc",
        "patchSetId": 7
      },
      "lineNbr": 681,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2023-06-08T11:44:32Z",
      "side": 1,
      "message": "Please add a TODO that in order for this to work with unrestricted pointer paramters, then this depends on `transform::DirectVariableAccess` to have been run first.\n\nI\u0027m happy to see that this defaults to `false`, so `uniform` and `storage` pointer parameters will lean towards getting software robustness.",
      "revId": "7894c0306ffb49a447f810e25f89697d316c07e1",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8d97572c_66fce44d",
        "filename": "src/tint/ast/transform/robustness.cc",
        "patchSetId": 7
      },
      "lineNbr": 683,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2023-06-08T11:44:32Z",
      "side": 1,
      "message": "Tests are crashing on `RobustnessTest.Read_ConstantSizedArrayVal_IndexWithLiteral/0`, I presume because `variable` is nullptr.\n\nYou can change this to `As\u003csem::GlobalVariable\u003e(variable)`, which handles the nullptr argument.",
      "range": {
        "startLine": 683,
        "startChar": 31,
        "endLine": 683,
        "endChar": 67
      },
      "revId": "7894c0306ffb49a447f810e25f89697d316c07e1",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5f3e9f76_fc75ea48",
        "filename": "src/tint/ast/transform/robustness.cc",
        "patchSetId": 7
      },
      "lineNbr": 692,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2023-06-08T11:44:32Z",
      "side": 1,
      "message": "use a `std::unordered_map` ?",
      "range": {
        "startLine": 691,
        "startChar": 8,
        "endLine": 692,
        "endChar": 70
      },
      "revId": "7894c0306ffb49a447f810e25f89697d316c07e1",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}