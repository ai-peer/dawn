{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "e2886832_5445d226",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 14,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-05-26T09:19:14Z",
      "side": 1,
      "message": "nit: bound",
      "range": {
        "startLine": 14,
        "startChar": 32,
        "endLine": 14,
        "endChar": 38
      },
      "revId": "232b2c8c3f6717770fe08ca5c43a07cbd3b613fe",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "86742037_bf5347d3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1002536
      },
      "writtenOn": "2021-05-26T02:20:01Z",
      "side": 1,
      "message": "Please let me know if you think I should add logging level type in this patch. Thanks!",
      "revId": "232b2c8c3f6717770fe08ca5c43a07cbd3b613fe",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c897fb36_1adc784c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-05-26T09:19:14Z",
      "side": 1,
      "message": "LGTM",
      "revId": "232b2c8c3f6717770fe08ca5c43a07cbd3b613fe",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4f7c6686_43efe202",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2021-05-26T15:49:21Z",
      "side": 1,
      "message": "Overall, looks good. I\u0027ll look again after this is moved to the CallbackQueue.\n\nHigh-level question: Why is it called a \"user warning\" versus just a \"warning\" ? The \"uncaptured error callback\" is also triggered when someone uses the API incorrectly (for validation errors), but we don\u0027t have \"user\" in the name.\n",
      "revId": "232b2c8c3f6717770fe08ca5c43a07cbd3b613fe",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "018ab56f_d840be2a",
        "filename": "src/dawn_native/Device.cpp",
        "patchSetId": 4
      },
      "lineNbr": 265,
      "author": {
        "id": 1002536
      },
      "writtenOn": "2021-05-26T06:37:10Z",
      "side": 1,
      "message": "The callback routine doesn\u0027t consider multithread yet.",
      "revId": "232b2c8c3f6717770fe08ca5c43a07cbd3b613fe",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4dd848fb_c7957f5c",
        "filename": "src/dawn_native/Device.cpp",
        "patchSetId": 4
      },
      "lineNbr": 265,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-05-26T09:19:14Z",
      "side": 1,
      "message": "Yeah we\u0027re not handling multithreading at all at the moment. In the future the application will be able to choose which thread to receive callbacks on based on the one it calls Tick (today) or Instance::ProcessEvents (future) on.",
      "parentUuid": "018ab56f_d840be2a",
      "revId": "232b2c8c3f6717770fe08ca5c43a07cbd3b613fe",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "368aca52_cb53016a",
        "filename": "src/dawn_native/Device.cpp",
        "patchSetId": 4
      },
      "lineNbr": 265,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2021-05-26T12:03:41Z",
      "side": 1,
      "message": "We will soon face the multi-threading issue here as I believe we will support creating pipeline asynchronously very soon :-)",
      "parentUuid": "4dd848fb_c7957f5c",
      "revId": "232b2c8c3f6717770fe08ca5c43a07cbd3b613fe",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cb8104e1_59575837",
        "filename": "src/dawn_native/Device.cpp",
        "patchSetId": 4
      },
      "lineNbr": 265,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-05-26T12:50:09Z",
      "side": 1,
      "message": "Got it :) Then I think this could add a callback to the CallbackQueue since that one is thread safe.",
      "parentUuid": "368aca52_cb53016a",
      "revId": "232b2c8c3f6717770fe08ca5c43a07cbd3b613fe",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "21d0cb35_9ce1bc3a",
        "filename": "src/dawn_native/Device.h",
        "patchSetId": 4
      },
      "lineNbr": 53,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-05-26T09:19:14Z",
      "side": 1,
      "message": "nit: EmitUserWarning? It could be next to EmitDeprecationWarning.",
      "revId": "232b2c8c3f6717770fe08ca5c43a07cbd3b613fe",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "54f76c06_be5418f6",
        "filename": "src/tests/unittests/wire/WireInjectDeviceTests.cpp",
        "patchSetId": 4
      },
      "lineNbr": 247,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-05-26T09:19:14Z",
      "side": 1,
      "message": "These additions we need to do are mildly annoying, we might want to have a helper function for them in the future. No need to address though.",
      "revId": "232b2c8c3f6717770fe08ca5c43a07cbd3b613fe",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "96eacef2_e14de270",
        "filename": "src/tests/unittests/wire/WireTest.cpp",
        "patchSetId": 4
      },
      "lineNbr": 47,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-05-26T09:19:14Z",
      "side": 1,
      "message": "wut?",
      "range": {
        "startLine": 47,
        "startChar": 32,
        "endLine": 47,
        "endChar": 44
      },
      "revId": "232b2c8c3f6717770fe08ca5c43a07cbd3b613fe",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}