{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "2c31cb9f_d496330d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2024-04-09T05:15:44Z",
      "side": 1,
      "message": "(Pls ignore the bots failure, most of them should be fixed by https://github.com/gpuweb/cts/pull/3605. \nBut Android platform is a real failure and seems the tranformation is not applied.)\n\nPTAL, thanks!",
      "revId": "cf32b9fceba9ec3ab81271c815891e10fb86c17d",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6c55e5e4_053d57f3",
        "filename": "src/dawn/native/ExternalTexture.cpp",
        "patchSetId": 2
      },
      "lineNbr": 338,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2024-04-09T10:16:50Z",
      "side": 1,
      "message": "We do essentially the same computations for loadTransformMatrix and coordTransformMatrix. It seems loadTransformMatrix \u003d Scale(coordTransformMatrix, mVisibleSize)?\n\nThis this would have the translation of xOffset/yOffset, then we can transform the clamp into a min() that\u0027s done before the transformation. We first clamp to the visible size, then perform the transform that will add the offset.",
      "revId": "cf32b9fceba9ec3ab81271c815891e10fb86c17d",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d5f3f54b_c885a9fa",
        "filename": "src/dawn/native/ExternalTexture.cpp",
        "patchSetId": 2
      },
      "lineNbr": 338,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2024-04-10T02:07:22Z",
      "side": 1,
      "message": "\u003eIt seems loadTransformMatrix \u003d Scale(coordTransformMatrix, mVisibleSize)?\n\nA little bit different. Developers provide exact coord(which should be in visible rect) for `textureLoad()` so we don\u0027t need to do the scale compute that coordTransformMatrix has.\n\n(And I\u0027m a bit worry about float precision during computation. But that seems not that important? not sure.)\n\n\nSo maybe we could do things like:\n- Pass a transformMatrix in ExternalTextureParams but only handles rotation/mirror\n- Pass visible size and visible origin in ExternalTextureParams\n- Pass frame size in ExternalTextureParams.\n\nSo we could use shader to do the final cropping steps instead of pre-baked it.\n\nIf we do this,\n- For TextureSampleClampToEdge()\n  - multiply transform matrix\n  - do scale based on framesize and visible size\n  - do translate based on visible origin and frame size.\n\n- For textureLoad(), we need to do\n  - multiply transform matrix\n  - do translate with visible origin.\n  \nWDYT?",
      "parentUuid": "6c55e5e4_053d57f3",
      "revId": "cf32b9fceba9ec3ab81271c815891e10fb86c17d",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6701b052_437d2730",
        "filename": "src/dawn/native/ExternalTexture.cpp",
        "patchSetId": 2
      },
      "lineNbr": 338,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2024-04-10T08:19:40Z",
      "side": 1,
      "message": "\u003eIt seems loadTransformMatrix \u003d Scale(coordTransformMatrix, mVisibleSize)?\n\nOk, I think I\u0027m also wrong about this. For example, a video frame [240, 480] size, with rotation 180. After applying rotation, it got the matrix:\n- for norm coord, mat2x3|-1, 0, 1, 0, -1, 1 |\n                  \n- for non norm coord , mat2x3 |-1, 0, 240 0, -1, 480|\n                       \nThese two matrix doesn\u0027t have linear transformation. But a simple rules here is that replace the last columns of norm matrix by multiplied frame size will get the non norm coord matrix.",
      "parentUuid": "d5f3f54b_c885a9fa",
      "revId": "cf32b9fceba9ec3ab81271c815891e10fb86c17d",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7de9a807_3db8b6fc",
        "filename": "src/dawn/native/ExternalTexture.cpp",
        "patchSetId": 2
      },
      "lineNbr": 338,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2024-04-22T06:54:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6701b052_437d2730",
      "revId": "cf32b9fceba9ec3ab81271c815891e10fb86c17d",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8616370d_5850896e",
        "filename": "src/tint/lang/wgsl/ast/transform/multiplanar_external_texture_test.cc",
        "patchSetId": 2
      },
      "lineNbr": 309,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2024-04-09T10:19:47Z",
      "side": 1,
      "message": "We also need to fix textureDimensions() to use mVisibleSize. IMHO we should add a size : vec2\u003cu32\u003e to the ExternalTextureParams and use that for both textureDimensions and clamping the coordinates for loading.",
      "revId": "cf32b9fceba9ec3ab81271c815891e10fb86c17d",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "871fe434_1111cbe7",
        "filename": "src/tint/lang/wgsl/ast/transform/multiplanar_external_texture_test.cc",
        "patchSetId": 2
      },
      "lineNbr": 309,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2024-04-10T02:07:22Z",
      "side": 1,
      "message": "Agree.",
      "parentUuid": "8616370d_5850896e",
      "revId": "cf32b9fceba9ec3ab81271c815891e10fb86c17d",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c7138f9e_0f9718e1",
        "filename": "src/tint/lang/wgsl/ast/transform/multiplanar_external_texture_test.cc",
        "patchSetId": 2
      },
      "lineNbr": 309,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2024-04-22T06:54:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "871fe434_1111cbe7",
      "revId": "cf32b9fceba9ec3ab81271c815891e10fb86c17d",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}