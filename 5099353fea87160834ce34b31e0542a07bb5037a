{
  "comments": [
    {
      "key": {
        "uuid": "c999c057_f8bf7eb5",
        "filename": "src/dawn_native/d3d12/ShaderModuleD3D12.cpp",
        "patchSetId": 11
      },
      "lineNbr": 76,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2019-12-03T18:09:43Z",
      "side": 1,
      "message": "We call InitializeForHlsl in ShaderModule::Initialize as well. Is it necessary to reinitialize the context?\n\nOr is InitializeForHlsl a very light function which only points to the SPIR-V data and sets options?",
      "range": {
        "startLine": 76,
        "startChar": 12,
        "endLine": 76,
        "endChar": 82
      },
      "revId": "5099353fea87160834ce34b31e0542a07bb5037a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9a95f18d_cc747479",
        "filename": "src/dawn_native/d3d12/ShaderModuleD3D12.cpp",
        "patchSetId": 11
      },
      "lineNbr": 76,
      "author": {
        "id": 1000250
      },
      "writtenOn": "2019-12-03T19:47:12Z",
      "side": 1,
      "message": "I am not sure about if it is required or not.\nThis is replicating the existing behaviour. The call in Initialize uses the default options, where as the call here sets some of the values. I do not know if there is a reason that different options are used. \nIf there is no need for seperate options, then I would prefer to only have one call to InitializeForHlsl.\n\nwrt heavy or light operation, InitializeForHlsl is not lightweight, since validation, parsing and IR generation are going to occur. That being said, it is about as heavyweight as the existing code, since creating an instance of spirv-cross::Compiler is going to validate, parse and generate IR also.",
      "parentUuid": "c999c057_f8bf7eb5",
      "range": {
        "startLine": 76,
        "startChar": 12,
        "endLine": 76,
        "endChar": 82
      },
      "revId": "5099353fea87160834ce34b31e0542a07bb5037a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "be9ff68b_c4ba69e7",
        "filename": "src/dawn_native/d3d12/ShaderModuleD3D12.cpp",
        "patchSetId": 11
      },
      "lineNbr": 76,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2019-12-03T20:01:24Z",
      "side": 1,
      "message": "I\u0027m not an expert with the spirv cross internals, but after a brief look it seems like it will be okay to have one call to InitializeForHlsl, with non-default options. I don\u0027t think the behavior of ExtractSpirvInfo will change based on these options because they\u0027re options for the HLSL transpilation.\n\nThat being said, if you want to land this first and then try deduplicating the initialization later, that would be okay with me.",
      "parentUuid": "9a95f18d_cc747479",
      "range": {
        "startLine": 76,
        "startChar": 12,
        "endLine": 76,
        "endChar": 82
      },
      "revId": "5099353fea87160834ce34b31e0542a07bb5037a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a96bdedc_5cc317e1",
        "filename": "src/dawn_native/d3d12/ShaderModuleD3D12.cpp",
        "patchSetId": 11
      },
      "lineNbr": 76,
      "author": {
        "id": 1000250
      },
      "writtenOn": "2019-12-03T20:05:48Z",
      "side": 1,
      "message": "I suspect it is safe also, but I think I would prefer to replicate the existing behaviour and de-dup later. Make it correct/equivalent first, then make it better.",
      "parentUuid": "be9ff68b_c4ba69e7",
      "range": {
        "startLine": 76,
        "startChar": 12,
        "endLine": 76,
        "endChar": 82
      },
      "revId": "5099353fea87160834ce34b31e0542a07bb5037a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "90620ca1_ca060b3f",
        "filename": "src/dawn_native/null/DeviceNull.cpp",
        "patchSetId": 11
      },
      "lineNbr": 134,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2019-12-03T18:09:43Z",
      "side": 1,
      "message": "this is the only usage of GetSpvcContext. If there are no other planned usages of GetSpvcContext, we could remove the getter and stack-allocate the SpvcContext here?",
      "range": {
        "startLine": 134,
        "startChar": 49,
        "endLine": 134,
        "endChar": 63
      },
      "revId": "5099353fea87160834ce34b31e0542a07bb5037a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "176b3b28_ae767db7",
        "filename": "src/dawn_native/null/DeviceNull.cpp",
        "patchSetId": 11
      },
      "lineNbr": 134,
      "author": {
        "id": 1000250
      },
      "writtenOn": "2019-12-03T19:47:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "90620ca1_ca060b3f",
      "range": {
        "startLine": 134,
        "startChar": 49,
        "endLine": 134,
        "endChar": 63
      },
      "revId": "5099353fea87160834ce34b31e0542a07bb5037a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    }
  ]
}