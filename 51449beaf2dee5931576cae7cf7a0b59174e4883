{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "47879d06_2c1af0a7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-03-15T06:03:36Z",
      "side": 1,
      "message": "hm, I\u0027m not understanding the intent of this CL.\nwhy are we passing a different source size into the copy command?\nif the visible size is not the correct source size for the video, and we should use natural size instead, why isn\u0027t it passed on creation in WGPUExternalTextureDescriptor?",
      "revId": "51449beaf2dee5931576cae7cf7a0b59174e4883",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2f2e4539_79c30eb0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2023-03-15T07:44:11Z",
      "side": 1,
      "message": "The reason is that for ExternalTexture (created from WGPUExternalTextureDescriptor), visible rect is the correct size. We sample/load texels from the ExternalTexture instead of copy from it. Visible rect describes origin video frame.\n\nBut for CopyEI2T, it is a bit different. CopyEI2T means a copy and it is important for user to know what is the source size(I proposed a PR in spec about this https://github.com/gpuweb/gpuweb/pull/3960). User in js cannot get visible rect from HTMLVideoElement. Instead, they can get intrinsic size (which is natural size in chromium implementation) from HTMLVideoElement.videoWidth/videoHeight.\n\nSo this CL is based on the fact that ExternalTexture requires video frame visible rect but copyEI2T requires video frame natural size. But yes, we could also do a simple change that adding WGPUExternalTextureDescriptor with the natural size for copyEI2T to use it.",
      "parentUuid": "47879d06_2c1af0a7",
      "revId": "51449beaf2dee5931576cae7cf7a0b59174e4883",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "06564541_b334ea04",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-03-15T12:29:55Z",
      "side": 1,
      "message": "LGTM",
      "revId": "51449beaf2dee5931576cae7cf7a0b59174e4883",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f8728393_c0941604",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-03-15T16:24:23Z",
      "side": 1,
      "message": "for HTMLVideoElement, we do GetExternalSourceFromExternalImage to turn it into a VideoFrame which has a visibleSize. Could we instead use the naturalSize for video element here? Then, we resolve the difference that VideoFrame needs visibleSize and VideoElement needs naturalSize up in Blink.",
      "parentUuid": "2f2e4539_79c30eb0",
      "revId": "51449beaf2dee5931576cae7cf7a0b59174e4883",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8bc61d02_0fc76862",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2023-03-16T00:42:18Z",
      "side": 1,
      "message": "\u003eCould we instead use the naturalSize for video element here? \nYes and that\u0027s the follow up blink side changes. We should set source.width and source.height there to natural size. That helps the source origin validation in blink side. But when we call CreateExternalTexture()(https://source.chromium.org/chromium/chromium/src/+/main:third_party/blink/renderer/modules/webgpu/gpu_queue.cc;l\u003d614;drc\u003d0e9a0b6e9bb6ec59521977eec805f5d0bca833e0;bpv\u003d0;bpt\u003d1), we don\u0027t use that source.width and source.height. Instead, we choose visible rect from media::VideoFrame in CreateExternalTexture() for both WebCodec::VideoFrame and HTMLVideoElement.\n\nTechnically, we could pass natural size to CreateExternalTexture() and create ExternalTexture with that natural size but I hesitate to do it because:\n- If we add extra attribute in WGPUExternalTextureDescriptor, pass natural size to ExternalTexture and doesn\u0027t generate internal shader with natural size, it is a bit trivial.\n- If using natural size instead of visible size to create ExternalTexture and generate internal shader, it means we might do two scale/crops. First is from frame coded_size to visible rect(That\u0027s what current ExternalTexture do, crop/downscale or no changes), second is from visible_rect to natural size(possible to upscale and downscale). Current internal shader for ExternalTexture doesn\u0027t support upscale, we need to add it.\n- I\u0027m hesitate to add the upscale ability for internal shader of ExternalTexture because it is a special thing for CopyEI2T(and copyEI2T has its own extra scale step to handle it https://source.chromium.org/chromium/chromium/src/+/main:third_party/dawn/src/dawn/native/CopyTextureForBrowserHelper.cpp;drc\u003d08027c662e35c50d1a08bd59c5ea405b0d337108;l\u003d412). For importExternalTexture() generated GPUExternalTexture, crop video frame to visible rect is enough (it provides the exactly content from origin video frame without extra scales). If user want a natural size result, they could issue a rendering pipeline to do the up-scale/down-scale themselves.",
      "parentUuid": "f8728393_c0941604",
      "revId": "51449beaf2dee5931576cae7cf7a0b59174e4883",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "54cc80ad_09bf0fb3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-03-16T17:12:48Z",
      "side": 1,
      "message": "ok, I see. thanks for explaining",
      "parentUuid": "8bc61d02_0fc76862",
      "revId": "51449beaf2dee5931576cae7cf7a0b59174e4883",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "15c8ca56_3006e8e5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2023-03-17T01:17:27Z",
      "side": 1,
      "message": "BTW, still wait for feedback about spec PR https://github.com/gpuweb/gpuweb/pull/3960 to see whether this CL behaviour is correct.",
      "revId": "51449beaf2dee5931576cae7cf7a0b59174e4883",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4e63b926_d821c7a1",
        "filename": "src/dawn/native/CopyTextureForBrowserHelper.cpp",
        "patchSetId": 3
      },
      "lineNbr": 701,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-03-15T12:29:55Z",
      "side": 1,
      "message": "Maybe we could keep this always (if both size and height are zero) for non-video CopyEI2T? Not sure, WDYT? GPUExtent2D defaults to (1, 1) so defaulting would require people to explicitly fill out the zeroes, which isn\u0027t super helpful.",
      "revId": "51449beaf2dee5931576cae7cf7a0b59174e4883",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0de2d968_9b6b0c73",
        "filename": "src/dawn/native/CopyTextureForBrowserHelper.cpp",
        "patchSetId": 3
      },
      "lineNbr": 701,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2023-03-16T00:47:27Z",
      "side": 1,
      "message": "\u003eGPUExtent2D defaults to (1, 1) so defaulting would require people to explicitly fill out the zeroes, which isn\u0027t super helpful.\n\nThat surprise me. Does dawn.json side default value not works(https://source.chromium.org/chromium/chromium/src/+/main:third_party/dawn/dawn.json;drc\u003d69e1c4b638d3909635ceb26b6b652a6a2cc28fe7;l\u003d1376)?",
      "parentUuid": "4e63b926_d821c7a1",
      "revId": "51449beaf2dee5931576cae7cf7a0b59174e4883",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2eb8a4d7_f7d88d80",
        "filename": "src/dawn/native/CopyTextureForBrowserHelper.cpp",
        "patchSetId": 3
      },
      "lineNbr": 701,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-03-16T09:12:38Z",
      "side": 1,
      "message": "We want to remove that defaulting apparently :/ So Chromium would need to always fill the naturalSize. But that\u0027s probably fine since it is just for external texture.",
      "parentUuid": "0de2d968_9b6b0c73",
      "revId": "51449beaf2dee5931576cae7cf7a0b59174e4883",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a0a40072_5dd347b2",
        "filename": "src/dawn/native/CopyTextureForBrowserHelper.cpp",
        "patchSetId": 3
      },
      "lineNbr": 701,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2023-03-17T01:19:12Z",
      "side": 1,
      "message": "Ah, got it. That maybe Ok because copyTextureForBrowser is used internally in blink (We can control the behaviour).",
      "parentUuid": "2eb8a4d7_f7d88d80",
      "revId": "51449beaf2dee5931576cae7cf7a0b59174e4883",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2e8e11e9_2f19e33d",
        "filename": "src/dawn/native/CopyTextureForBrowserHelper.cpp",
        "patchSetId": 3
      },
      "lineNbr": 704,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-03-15T12:29:55Z",
      "side": 1,
      "message": "Shouldn\u0027t we validate that the naturalSize is smaller than the source size?",
      "revId": "51449beaf2dee5931576cae7cf7a0b59174e4883",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d7bdb6a6_da8547bc",
        "filename": "src/dawn/native/CopyTextureForBrowserHelper.cpp",
        "patchSetId": 3
      },
      "lineNbr": 704,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2023-03-16T00:47:27Z",
      "side": 1,
      "message": "Actually, Dale@ said in slack confirms that natural size might be larger than the source size.\n\u003eIIRC, visible rect must be smaller than frame size, but natural size may be larger than frame size.",
      "parentUuid": "2e8e11e9_2f19e33d",
      "revId": "51449beaf2dee5931576cae7cf7a0b59174e4883",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9bbab40b_f151050a",
        "filename": "src/dawn/native/CopyTextureForBrowserHelper.cpp",
        "patchSetId": 3
      },
      "lineNbr": 704,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-03-16T09:12:38Z",
      "side": 1,
      "message": "Wat?? Ok. Do we have a test that if the naturalSize is larger than the source size things work correctly? (what would even be the correct behavior? Right now we discard? But should we put black instead?)",
      "parentUuid": "d7bdb6a6_da8547bc",
      "revId": "51449beaf2dee5931576cae7cf7a0b59174e4883",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "70cdae50_beb26ef9",
        "filename": "src/dawn/native/CopyTextureForBrowserHelper.cpp",
        "patchSetId": 3
      },
      "lineNbr": 704,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2023-03-17T01:15:26Z",
      "side": 1,
      "message": "\u003e Do we have a test that if the naturalSize is larger than the source size things work correctly?\nThat\u0027s the good point, I think I need to add it.\n\n\u003ewhat would even be the correct behavior? Right now we discard? But should we put black instead?\nNo, we don\u0027t discard. That\u0027s the interesting part for why we pass natural size here. In copyTextureForBrowser, we upload scale params here (https://source.chromium.org/chromium/chromium/src/+/main:third_party/dawn/src/dawn/native/CopyTextureForBrowserHelper.cpp;drc\u003d08027c662e35c50d1a08bd59c5ea405b0d337108;l\u003d413). But that sacle is based on natural size and copy size. For example, assume we have natural size larger than video frame size, and copy size equal to natural size, we could still generate correct texcoord in current shader (which I think 0.0, 0,0 for the top-left and 1.0, 1.0 for the bottom-right) and use that texcoord to sample ExternalTexture maps to the video frame origin size. \n\nSo I think we\u0027re doing things like, calculating a scale factor with natural size and copy size but apply the scale factor result in ExternalTexture visible rect by sampling with generated coord.",
      "parentUuid": "9bbab40b_f151050a",
      "revId": "51449beaf2dee5931576cae7cf7a0b59174e4883",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e470d156_238b99da",
        "filename": "src/dawn/native/CopyTextureForBrowserHelper.cpp",
        "patchSetId": 3
      },
      "lineNbr": 704,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2023-03-20T09:38:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "70cdae50_beb26ef9",
      "revId": "51449beaf2dee5931576cae7cf7a0b59174e4883",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}