; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 0
; Bound: 260
; Schema: 0
               OpCapability Shader
               OpCapability ImageQuery
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %main "main" %WorkGroupID_1 %LocalInvocationID_1 %local_invocation_index_1
               OpExecutionMode %main LocalSize 64 1 1
               OpName %WorkGroupID_1 "WorkGroupID_1"
               OpName %LocalInvocationID_1 "LocalInvocationID_1"
               OpName %local_invocation_index_1 "local_invocation_index_1"
               OpName %samp "samp"
               OpName %params_block "params_block"
               OpMemberName %params_block 0 "inner"
               OpName %Params "Params"
               OpMemberName %Params 0 "filterDim"
               OpMemberName %Params 1 "blockDim"
               OpName %params "params"
               OpName %inputTex "inputTex"
               OpName %outputTex "outputTex"
               OpName %flip_block "flip_block"
               OpMemberName %flip_block 0 "inner"
               OpName %Flip "Flip"
               OpMemberName %Flip 0 "value"
               OpName %flip "flip"
               OpName %tile "tile"
               OpName %main_inner "main_inner"
               OpName %WorkGroupID "WorkGroupID"
               OpName %LocalInvocationID "LocalInvocationID"
               OpName %local_invocation_index "local_invocation_index"
               OpName %idx "idx"
               OpName %r "r"
               OpName %c "c"
               OpName %loadIndex "loadIndex"
               OpName %r_0 "r"
               OpName %c_0 "c"
               OpName %writeIndex "writeIndex"
               OpName %acc "acc"
               OpName %f "f"
               OpName %i "i"
               OpName %main "main"
               OpDecorate %WorkGroupID_1 BuiltIn WorkgroupId
               OpDecorate %LocalInvocationID_1 BuiltIn LocalInvocationId
               OpDecorate %local_invocation_index_1 BuiltIn LocalInvocationIndex
               OpDecorate %samp DescriptorSet 0
               OpDecorate %samp Binding 0
               OpDecorate %params_block Block
               OpMemberDecorate %params_block 0 Offset 0
               OpMemberDecorate %Params 0 Offset 0
               OpMemberDecorate %Params 1 Offset 4
               OpDecorate %params NonWritable
               OpDecorate %params DescriptorSet 0
               OpDecorate %params Binding 1
               OpDecorate %inputTex DescriptorSet 1
               OpDecorate %inputTex Binding 1
               OpDecorate %outputTex NonReadable
               OpDecorate %outputTex DescriptorSet 1
               OpDecorate %outputTex Binding 2
               OpDecorate %flip_block Block
               OpMemberDecorate %flip_block 0 Offset 0
               OpMemberDecorate %Flip 0 Offset 0
               OpDecorate %flip NonWritable
               OpDecorate %flip DescriptorSet 1
               OpDecorate %flip Binding 3
               OpDecorate %_arr_v3float_uint_256 ArrayStride 16
               OpDecorate %_arr__arr_v3float_uint_256_uint_4 ArrayStride 4096
       %uint = OpTypeInt 32 0
     %v3uint = OpTypeVector %uint 3
%_ptr_Input_v3uint = OpTypePointer Input %v3uint
%WorkGroupID_1 = OpVariable %_ptr_Input_v3uint Input
%LocalInvocationID_1 = OpVariable %_ptr_Input_v3uint Input
%_ptr_Input_uint = OpTypePointer Input %uint
%local_invocation_index_1 = OpVariable %_ptr_Input_uint Input
         %10 = OpTypeSampler
%_ptr_UniformConstant_10 = OpTypePointer UniformConstant %10
       %samp = OpVariable %_ptr_UniformConstant_10 UniformConstant
     %Params = OpTypeStruct %uint %uint
%params_block = OpTypeStruct %Params
%_ptr_Uniform_params_block = OpTypePointer Uniform %params_block
     %params = OpVariable %_ptr_Uniform_params_block Uniform
      %float = OpTypeFloat 32
         %17 = OpTypeImage %float 2D 0 0 0 1 Unknown
%_ptr_UniformConstant_17 = OpTypePointer UniformConstant %17
   %inputTex = OpVariable %_ptr_UniformConstant_17 UniformConstant
         %21 = OpTypeImage %float 2D 0 0 0 2 Rgba8
%_ptr_UniformConstant_21 = OpTypePointer UniformConstant %21
  %outputTex = OpVariable %_ptr_UniformConstant_21 UniformConstant
       %Flip = OpTypeStruct %uint
 %flip_block = OpTypeStruct %Flip
%_ptr_Uniform_flip_block = OpTypePointer Uniform %flip_block
       %flip = OpVariable %_ptr_Uniform_flip_block Uniform
    %v3float = OpTypeVector %float 3
   %uint_256 = OpConstant %uint 256
%_arr_v3float_uint_256 = OpTypeArray %v3float %uint_256
     %uint_4 = OpConstant %uint 4
%_arr__arr_v3float_uint_256_uint_4 = OpTypeArray %_arr_v3float_uint_256 %uint_4
%_ptr_Workgroup__arr__arr_v3float_uint_256_uint_4 = OpTypePointer Workgroup %_arr__arr_v3float_uint_256_uint_4
       %tile = OpVariable %_ptr_Workgroup__arr__arr_v3float_uint_256_uint_4 Workgroup
       %void = OpTypeVoid
         %33 = OpTypeFunction %void %v3uint %v3uint %uint
%_ptr_Function_uint = OpTypePointer Function %uint
         %42 = OpConstantNull %uint
  %uint_1024 = OpConstant %uint 1024
       %bool = OpTypeBool
%_ptr_Workgroup_v3float = OpTypePointer Workgroup %v3float
         %60 = OpConstantNull %v3float
    %uint_64 = OpConstant %uint 64
     %uint_2 = OpConstant %uint 2
   %uint_264 = OpConstant %uint 264
     %uint_0 = OpConstant %uint 0
%_ptr_Uniform_uint = OpTypePointer Uniform %uint
     %uint_1 = OpConstant %uint 1
        %int = OpTypeInt 32 1
      %v2int = OpTypeVector %int 2
         %78 = OpConstantNull %int
     %v2uint = OpTypeVector %uint 2
         %87 = OpConstantComposite %v2uint %uint_4 %uint_1
%_ptr_Function_v2int = OpTypePointer Function %v2int
        %121 = OpConstantNull %v2int
    %v4float = OpTypeVector %float 4
        %139 = OpTypeSampledImage %17
    %v2float = OpTypeVector %float 2
 %float_0_25 = OpConstant %float 0.25
        %145 = OpConstantComposite %v2float %float_0_25 %float_0_25
        %149 = OpConstantNull %float
     %v2bool = OpTypeVector %bool 2
%_ptr_Function_v3float = OpTypePointer Function %v3float
    %float_1 = OpConstant %float 1
        %253 = OpTypeFunction %void
 %main_inner = OpFunction %void None %33
%WorkGroupID = OpFunctionParameter %v3uint
%LocalInvocationID = OpFunctionParameter %v3uint
%local_invocation_index = OpFunctionParameter %uint
         %39 = OpLabel
        %idx = OpVariable %_ptr_Function_uint Function %42
          %r = OpVariable %_ptr_Function_uint Function %42
          %c = OpVariable %_ptr_Function_uint Function %42
  %loadIndex = OpVariable %_ptr_Function_v2int Function %121
        %r_0 = OpVariable %_ptr_Function_uint Function %42
        %c_0 = OpVariable %_ptr_Function_uint Function %42
 %writeIndex = OpVariable %_ptr_Function_v2int Function %121
        %acc = OpVariable %_ptr_Function_v3float Function %60
          %f = OpVariable %_ptr_Function_uint Function %42
          %i = OpVariable %_ptr_Function_uint Function %42
               OpStore %idx %local_invocation_index
               OpBranch %43
         %43 = OpLabel
               OpLoopMerge %44 %45 None
               OpBranch %46
         %46 = OpLabel
         %48 = OpLoad %uint %idx
         %50 = OpULessThan %bool %48 %uint_1024
         %47 = OpLogicalNot %bool %50
               OpSelectionMerge %52 None
               OpBranchConditional %47 %53 %52
         %53 = OpLabel
               OpBranch %44
         %52 = OpLabel
         %54 = OpLoad %uint %idx
         %55 = OpUDiv %uint %54 %uint_256
         %56 = OpLoad %uint %idx
         %57 = OpUMod %uint %56 %uint_256
         %59 = OpAccessChain %_ptr_Workgroup_v3float %tile %55 %57
               OpStore %59 %60
               OpBranch %45
         %45 = OpLabel
         %61 = OpLoad %uint %idx
         %63 = OpIAdd %uint %61 %uint_64
               OpStore %idx %63
               OpBranch %43
         %44 = OpLabel
               OpControlBarrier %uint_2 %uint_2 %uint_264
         %69 = OpAccessChain %_ptr_Uniform_uint %params %uint_0 %uint_0
         %70 = OpLoad %uint %69
         %72 = OpISub %uint %70 %uint_1
         %73 = OpUDiv %uint %72 %uint_2
         %77 = OpLoad %17 %inputTex
         %74 = OpImageQuerySizeLod %v2int %77 %78
         %81 = OpVectorShuffle %v2uint %WorkGroupID %WorkGroupID 0 1
         %82 = OpAccessChain %_ptr_Uniform_uint %params %uint_0 %uint_1
         %83 = OpLoad %uint %82
         %84 = OpCompositeConstruct %v2uint %83 %uint_4
         %85 = OpIMul %v2uint %81 %84
         %86 = OpVectorShuffle %v2uint %LocalInvocationID %LocalInvocationID 0 1
         %88 = OpIMul %v2uint %86 %87
         %89 = OpIAdd %v2uint %85 %88
         %79 = OpBitcast %v2int %89
         %90 = OpBitcast %int %73
         %91 = OpCompositeConstruct %v2int %90 %78
         %92 = OpISub %v2int %79 %91
               OpStore %r %42
               OpBranch %94
         %94 = OpLabel
               OpLoopMerge %95 %96 None
               OpBranch %97
         %97 = OpLabel
         %99 = OpLoad %uint %r
        %100 = OpULessThan %bool %99 %uint_4
         %98 = OpLogicalNot %bool %100
               OpSelectionMerge %101 None
               OpBranchConditional %98 %102 %101
        %102 = OpLabel
               OpBranch %95
        %101 = OpLabel
               OpStore %c %42
               OpBranch %104
        %104 = OpLabel
               OpLoopMerge %105 %106 None
               OpBranch %107
        %107 = OpLabel
        %109 = OpLoad %uint %c
        %110 = OpULessThan %bool %109 %uint_4
        %108 = OpLogicalNot %bool %110
               OpSelectionMerge %111 None
               OpBranchConditional %108 %112 %111
        %112 = OpLabel
               OpBranch %105
        %111 = OpLabel
        %114 = OpLoad %uint %c
        %113 = OpBitcast %int %114
        %116 = OpLoad %uint %r
        %115 = OpBitcast %int %116
        %117 = OpCompositeConstruct %v2int %113 %115
        %118 = OpIAdd %v2int %92 %117
               OpStore %loadIndex %118
        %122 = OpAccessChain %_ptr_Uniform_uint %flip %uint_0 %uint_0
        %123 = OpLoad %uint %122
        %124 = OpINotEqual %bool %123 %42
               OpSelectionMerge %125 None
               OpBranchConditional %124 %126 %125
        %126 = OpLabel
        %127 = OpLoad %v2int %loadIndex
        %128 = OpVectorShuffle %v2int %127 %127 1 0
               OpStore %loadIndex %128
               OpBranch %125
        %125 = OpLabel
        %129 = OpLoad %uint %r
        %130 = OpCompositeExtract %uint %LocalInvocationID 0
        %131 = OpIMul %uint %uint_4 %130
        %132 = OpLoad %uint %c
        %133 = OpIAdd %uint %131 %132
        %134 = OpAccessChain %_ptr_Workgroup_v3float %tile %129 %133
        %137 = OpLoad %10 %samp
        %138 = OpLoad %17 %inputTex
        %140 = OpSampledImage %139 %138 %137
        %143 = OpLoad %v2int %loadIndex
        %141 = OpConvertSToF %v2float %143
        %146 = OpFAdd %v2float %141 %145
        %147 = OpConvertSToF %v2float %74
        %148 = OpFDiv %v2float %146 %147
        %135 = OpImageSampleExplicitLod %v4float %140 %148 Lod %149
        %150 = OpVectorShuffle %v3float %135 %135 0 1 2
               OpStore %134 %150
               OpBranch %106
        %106 = OpLabel
        %151 = OpLoad %uint %c
        %152 = OpIAdd %uint %151 %uint_1
               OpStore %c %152
               OpBranch %104
        %105 = OpLabel
               OpBranch %96
         %96 = OpLabel
        %153 = OpLoad %uint %r
        %154 = OpIAdd %uint %153 %uint_1
               OpStore %r %154
               OpBranch %94
         %95 = OpLabel
               OpControlBarrier %uint_2 %uint_2 %uint_264
               OpStore %r_0 %42
               OpBranch %157
        %157 = OpLabel
               OpLoopMerge %158 %159 None
               OpBranch %160
        %160 = OpLabel
        %162 = OpLoad %uint %r_0
        %163 = OpULessThan %bool %162 %uint_4
        %161 = OpLogicalNot %bool %163
               OpSelectionMerge %164 None
               OpBranchConditional %161 %165 %164
        %165 = OpLabel
               OpBranch %158
        %164 = OpLabel
               OpStore %c_0 %42
               OpBranch %167
        %167 = OpLabel
               OpLoopMerge %168 %169 None
               OpBranch %170
        %170 = OpLabel
        %172 = OpLoad %uint %c_0
        %173 = OpULessThan %bool %172 %uint_4
        %171 = OpLogicalNot %bool %173
               OpSelectionMerge %174 None
               OpBranchConditional %171 %175 %174
        %175 = OpLabel
               OpBranch %168
        %174 = OpLabel
        %177 = OpLoad %uint %c_0
        %176 = OpBitcast %int %177
        %179 = OpLoad %uint %r_0
        %178 = OpBitcast %int %179
        %180 = OpCompositeConstruct %v2int %176 %178
        %181 = OpIAdd %v2int %92 %180
               OpStore %writeIndex %181
        %183 = OpAccessChain %_ptr_Uniform_uint %flip %uint_0 %uint_0
        %184 = OpLoad %uint %183
        %185 = OpINotEqual %bool %184 %42
               OpSelectionMerge %186 None
               OpBranchConditional %185 %187 %186
        %187 = OpLabel
        %188 = OpLoad %v2int %writeIndex
        %189 = OpVectorShuffle %v2int %188 %188 1 0
               OpStore %writeIndex %189
               OpBranch %186
        %186 = OpLabel
        %190 = OpCompositeExtract %uint %LocalInvocationID 0
        %191 = OpIMul %uint %uint_4 %190
        %192 = OpLoad %uint %c_0
        %193 = OpIAdd %uint %191 %192
        %194 = OpUGreaterThanEqual %bool %193 %73
               OpSelectionMerge %195 None
               OpBranchConditional %194 %196 %195
        %196 = OpLabel
        %197 = OpISub %uint %uint_256 %73
        %198 = OpULessThan %bool %193 %197
               OpBranch %195
        %195 = OpLabel
        %199 = OpPhi %bool %194 %186 %198 %196
               OpSelectionMerge %200 None
               OpBranchConditional %199 %201 %200
        %201 = OpLabel
        %203 = OpLoad %v2int %writeIndex
        %204 = OpSLessThan %v2bool %203 %74
        %202 = OpAll %bool %204
               OpBranch %200
        %200 = OpLabel
        %206 = OpPhi %bool %199 %195 %202 %201
               OpSelectionMerge %207 None
               OpBranchConditional %206 %208 %207
        %208 = OpLabel
               OpStore %acc %60
               OpStore %f %42
               OpBranch %212
        %212 = OpLabel
               OpLoopMerge %213 %214 None
               OpBranch %215
        %215 = OpLabel
        %217 = OpLoad %uint %f
        %218 = OpAccessChain %_ptr_Uniform_uint %params %uint_0 %uint_0
        %219 = OpLoad %uint %218
        %220 = OpULessThan %bool %217 %219
        %216 = OpLogicalNot %bool %220
               OpSelectionMerge %221 None
               OpBranchConditional %216 %222 %221
        %222 = OpLabel
               OpBranch %213
        %221 = OpLabel
        %223 = OpLoad %uint %f
        %224 = OpIAdd %uint %193 %223
        %225 = OpISub %uint %224 %73
               OpStore %i %225
        %227 = OpLoad %v3float %acc
        %230 = OpAccessChain %_ptr_Uniform_uint %params %uint_0 %uint_0
        %231 = OpLoad %uint %230
        %229 = OpConvertUToF %float %231
        %232 = OpFDiv %float %float_1 %229
        %233 = OpLoad %uint %r_0
        %234 = OpLoad %uint %i
        %235 = OpAccessChain %_ptr_Workgroup_v3float %tile %233 %234
        %236 = OpLoad %v3float %235
        %237 = OpVectorTimesScalar %v3float %236 %232
        %238 = OpFAdd %v3float %227 %237
               OpStore %acc %238
               OpBranch %214
        %214 = OpLabel
        %239 = OpLoad %uint %f
        %240 = OpIAdd %uint %239 %uint_1
               OpStore %f %240
               OpBranch %212
        %213 = OpLabel
        %242 = OpLoad %21 %outputTex
        %243 = OpLoad %v2int %writeIndex
        %244 = OpLoad %v3float %acc
        %245 = OpCompositeExtract %float %244 0
        %246 = OpCompositeExtract %float %244 1
        %247 = OpCompositeExtract %float %244 2
        %248 = OpCompositeConstruct %v4float %245 %246 %247 %float_1
               OpImageWrite %242 %243 %248
               OpBranch %207
        %207 = OpLabel
               OpBranch %169
        %169 = OpLabel
        %249 = OpLoad %uint %c_0
        %250 = OpIAdd %uint %249 %uint_1
               OpStore %c_0 %250
               OpBranch %167
        %168 = OpLabel
               OpBranch %159
        %159 = OpLabel
        %251 = OpLoad %uint %r_0
        %252 = OpIAdd %uint %251 %uint_1
               OpStore %r_0 %252
               OpBranch %157
        %158 = OpLabel
               OpReturn
               OpFunctionEnd
       %main = OpFunction %void None %253
        %255 = OpLabel
        %257 = OpLoad %v3uint %WorkGroupID_1
        %258 = OpLoad %v3uint %LocalInvocationID_1
        %259 = OpLoad %uint %local_invocation_index_1
        %256 = OpFunctionCall %void %main_inner %257 %258 %259
               OpReturn
               OpFunctionEnd
