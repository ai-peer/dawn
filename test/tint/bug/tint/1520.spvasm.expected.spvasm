; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 0
; Bound: 171
; Schema: 0
               OpCapability Shader
               OpMemoryModel Logical GLSL450
               OpEntryPoint Fragment %main "main" %sk_Clockwise_param_1 %vcolor_S0_param_1 %sk_FragColor_1_1
               OpExecutionMode %main OriginUpperLeft
               OpName %sk_Clockwise_param_1 "sk_Clockwise_param_1"
               OpName %vcolor_S0_param_1 "vcolor_S0_param_1"
               OpName %sk_FragColor_1_1 "sk_FragColor_1_1"
               OpName %x_4_block "x_4_block"
               OpMemberName %x_4_block 0 "inner"
               OpName %UniformBuffer "UniformBuffer"
               OpMemberName %UniformBuffer 0 "unknownInput_S1_c0"
               OpMemberName %UniformBuffer 1 "ucolorRed_S1_c0"
               OpMemberName %UniformBuffer 2 "ucolorGreen_S1_c0"
               OpMemberName %UniformBuffer 3 "umatrix_S1"
               OpName %x_4 "x_4"
               OpName %sk_FragColor "sk_FragColor"
               OpName %sk_Clockwise "sk_Clockwise"
               OpName %vcolor_S0 "vcolor_S0"
               OpName %test_int_S1_c0_b "test_int_S1_c0_b"
               OpName %unknown "unknown"
               OpName %ok "ok"
               OpName %val "val"
               OpName %x_40 "x_40"
               OpName %x_54 "x_54"
               OpName %x_65 "x_65"
               OpName %x_41_phi "x_41_phi"
               OpName %x_55_phi "x_55_phi"
               OpName %x_66_phi "x_66_phi"
               OpName %main_1 "main_1"
               OpName %outputColor_S0 "outputColor_S0"
               OpName %output_S1 "output_S1"
               OpName %x_8_unknown "x_8_unknown"
               OpName %x_9_ok "x_9_ok"
               OpName %x_10_val "x_10_val"
               OpName %x_116 "x_116"
               OpName %x_86 "x_86"
               OpName %x_99 "x_99"
               OpName %x_110 "x_110"
               OpName %x_114 "x_114"
               OpName %x_87_phi "x_87_phi"
               OpName %x_100_phi "x_100_phi"
               OpName %x_111_phi "x_111_phi"
               OpName %x_115_phi "x_115_phi"
               OpName %main_out "main_out"
               OpMemberName %main_out 0 "sk_FragColor_1"
               OpName %main_inner "main_inner"
               OpName %sk_Clockwise_param "sk_Clockwise_param"
               OpName %vcolor_S0_param "vcolor_S0_param"
               OpName %main "main"
               OpDecorate %sk_Clockwise_param_1 BuiltIn FrontFacing
               OpDecorate %vcolor_S0_param_1 Location 0
               OpDecorate %sk_FragColor_1_1 Location 0
               OpDecorate %x_4_block Block
               OpMemberDecorate %x_4_block 0 Offset 0
               OpMemberDecorate %UniformBuffer 0 Offset 16
               OpMemberDecorate %UniformBuffer 1 Offset 32
               OpMemberDecorate %UniformBuffer 2 Offset 48
               OpMemberDecorate %UniformBuffer 3 Offset 64
               OpMemberDecorate %UniformBuffer 3 ColMajor
               OpMemberDecorate %UniformBuffer 3 MatrixStride 16
               OpDecorate %x_4 NonWritable
               OpDecorate %x_4 Binding 0
               OpDecorate %x_4 DescriptorSet 0
               OpMemberDecorate %main_out 0 Offset 0
       %bool = OpTypeBool
%_ptr_Input_bool = OpTypePointer Input %bool
%sk_Clockwise_param_1 = OpVariable %_ptr_Input_bool Input
      %float = OpTypeFloat 32
    %v4float = OpTypeVector %float 4
%_ptr_Input_v4float = OpTypePointer Input %v4float
%vcolor_S0_param_1 = OpVariable %_ptr_Input_v4float Input
%_ptr_Output_v4float = OpTypePointer Output %v4float
         %10 = OpConstantNull %v4float
%sk_FragColor_1_1 = OpVariable %_ptr_Output_v4float Output %10
    %v3float = OpTypeVector %float 3
%mat3v3float = OpTypeMatrix %v3float 3
%UniformBuffer = OpTypeStruct %float %v4float %v4float %mat3v3float
  %x_4_block = OpTypeStruct %UniformBuffer
%_ptr_Uniform_x_4_block = OpTypePointer Uniform %x_4_block
        %x_4 = OpVariable %_ptr_Uniform_x_4_block Uniform
%_ptr_Private_v4float = OpTypePointer Private %v4float
%sk_FragColor = OpVariable %_ptr_Private_v4float Private %10
%_ptr_Private_bool = OpTypePointer Private %bool
         %21 = OpConstantNull %bool
%sk_Clockwise = OpVariable %_ptr_Private_bool Private %21
  %vcolor_S0 = OpVariable %_ptr_Private_v4float Private %10
         %23 = OpTypeFunction %bool
        %int = OpTypeInt 32 1
%_ptr_Function_int = OpTypePointer Function %int
         %29 = OpConstantNull %int
%_ptr_Function_bool = OpTypePointer Function %bool
      %v4int = OpTypeVector %int 4
%_ptr_Function_v4int = OpTypePointer Function %v4int
         %35 = OpConstantNull %v4int
       %uint = OpTypeInt 32 0
     %uint_0 = OpConstant %uint 0
%_ptr_Uniform_float = OpTypePointer Uniform %float
       %true = OpConstantTrue %bool
     %v4bool = OpTypeVector %bool 4
      %int_1 = OpConstant %int 1
         %60 = OpConstantComposite %v4int %int_1 %int_1 %int_1 %int_1
      %int_2 = OpConstant %int 2
         %72 = OpConstantComposite %v4int %int_2 %int_2 %int_2 %int_2
       %void = OpTypeVoid
         %83 = OpTypeFunction %void
%_ptr_Function_v4float = OpTypePointer Function %v4float
%_ptr_Function_float = OpTypePointer Function %float
         %92 = OpConstantNull %float
    %float_1 = OpConstant %float 1
        %117 = OpConstantComposite %v4float %float_1 %float_1 %float_1 %float_1
    %float_2 = OpConstant %float 2
        %129 = OpConstantComposite %v4float %float_2 %float_2 %float_2 %float_2
     %uint_2 = OpConstant %uint 2
%_ptr_Uniform_v4float = OpTypePointer Uniform %v4float
     %uint_1 = OpConstant %uint 1
   %main_out = OpTypeStruct %v4float
        %156 = OpTypeFunction %main_out %bool %v4float
%test_int_S1_c0_b = OpFunction %bool None %23
         %25 = OpLabel
    %unknown = OpVariable %_ptr_Function_int Function %29
         %ok = OpVariable %_ptr_Function_bool Function %21
        %val = OpVariable %_ptr_Function_v4int Function %35
       %x_40 = OpVariable %_ptr_Function_bool Function %21
       %x_54 = OpVariable %_ptr_Function_bool Function %21
       %x_65 = OpVariable %_ptr_Function_bool Function %21
   %x_41_phi = OpVariable %_ptr_Function_bool Function %21
   %x_55_phi = OpVariable %_ptr_Function_bool Function %21
   %x_66_phi = OpVariable %_ptr_Function_bool Function %21
         %45 = OpAccessChain %_ptr_Uniform_float %x_4 %uint_0 %uint_0
         %46 = OpLoad %float %45
         %47 = OpConvertFToS %int %46
               OpStore %unknown %47
               OpStore %ok %true
               OpStore %x_41_phi %21
               OpSelectionMerge %49 None
               OpBranchConditional %true %50 %49
         %50 = OpLabel
         %52 = OpCompositeConstruct %v4int %47 %47 %47 %47
         %53 = OpSDiv %v4int %35 %52
         %54 = OpIEqual %v4bool %53 %35
         %51 = OpAll %bool %54
               OpStore %x_40 %51
         %56 = OpLoad %bool %x_40
               OpStore %x_41_phi %56
               OpBranch %49
         %49 = OpLabel
         %57 = OpLoad %bool %x_41_phi
               OpStore %ok %57
         %58 = OpCompositeConstruct %v4int %47 %47 %47 %47
               OpStore %val %58
         %61 = OpIAdd %v4int %58 %60
               OpStore %val %61
         %62 = OpISub %v4int %61 %60
               OpStore %val %62
         %63 = OpIAdd %v4int %62 %60
               OpStore %val %63
         %64 = OpISub %v4int %63 %60
               OpStore %val %64
               OpStore %x_55_phi %21
               OpSelectionMerge %65 None
               OpBranchConditional %57 %66 %65
         %66 = OpLabel
         %68 = OpIEqual %v4bool %64 %58
         %67 = OpAll %bool %68
               OpStore %x_54 %67
         %69 = OpLoad %bool %x_54
               OpStore %x_55_phi %69
               OpBranch %65
         %65 = OpLabel
         %70 = OpLoad %bool %x_55_phi
               OpStore %ok %70
         %73 = OpIMul %v4int %64 %72
               OpStore %val %73
         %74 = OpSDiv %v4int %73 %72
               OpStore %val %74
         %75 = OpIMul %v4int %74 %72
               OpStore %val %75
         %76 = OpSDiv %v4int %75 %72
               OpStore %val %76
               OpStore %x_66_phi %21
               OpSelectionMerge %77 None
               OpBranchConditional %70 %78 %77
         %78 = OpLabel
         %80 = OpIEqual %v4bool %76 %58
         %79 = OpAll %bool %80
               OpStore %x_65 %79
         %81 = OpLoad %bool %x_65
               OpStore %x_66_phi %81
               OpBranch %77
         %77 = OpLabel
         %82 = OpLoad %bool %x_66_phi
               OpStore %ok %82
               OpReturnValue %82
               OpFunctionEnd
     %main_1 = OpFunction %void None %83
         %86 = OpLabel
%outputColor_S0 = OpVariable %_ptr_Function_v4float Function %10
  %output_S1 = OpVariable %_ptr_Function_v4float Function %10
%x_8_unknown = OpVariable %_ptr_Function_float Function %92
     %x_9_ok = OpVariable %_ptr_Function_bool Function %21
   %x_10_val = OpVariable %_ptr_Function_v4float Function %10
      %x_116 = OpVariable %_ptr_Function_v4float Function %10
       %x_86 = OpVariable %_ptr_Function_bool Function %21
       %x_99 = OpVariable %_ptr_Function_bool Function %21
      %x_110 = OpVariable %_ptr_Function_bool Function %21
      %x_114 = OpVariable %_ptr_Function_bool Function %21
   %x_87_phi = OpVariable %_ptr_Function_bool Function %21
  %x_100_phi = OpVariable %_ptr_Function_bool Function %21
  %x_111_phi = OpVariable %_ptr_Function_bool Function %21
  %x_115_phi = OpVariable %_ptr_Function_bool Function %21
        %104 = OpLoad %v4float %vcolor_S0
               OpStore %outputColor_S0 %104
        %105 = OpAccessChain %_ptr_Uniform_float %x_4 %uint_0 %uint_0
        %106 = OpLoad %float %105
               OpStore %x_8_unknown %106
               OpStore %x_9_ok %true
               OpStore %x_87_phi %21
               OpSelectionMerge %107 None
               OpBranchConditional %true %108 %107
        %108 = OpLabel
        %110 = OpCompositeConstruct %v4float %106 %106 %106 %106
        %111 = OpFDiv %v4float %10 %110
        %112 = OpFOrdEqual %v4bool %111 %10
        %109 = OpAll %bool %112
               OpStore %x_86 %109
        %113 = OpLoad %bool %x_86
               OpStore %x_87_phi %113
               OpBranch %107
        %107 = OpLabel
        %114 = OpLoad %bool %x_87_phi
               OpStore %x_9_ok %114
        %115 = OpCompositeConstruct %v4float %106 %106 %106 %106
               OpStore %x_10_val %115
        %118 = OpFAdd %v4float %115 %117
               OpStore %x_10_val %118
        %119 = OpFSub %v4float %118 %117
               OpStore %x_10_val %119
        %120 = OpFAdd %v4float %119 %117
               OpStore %x_10_val %120
        %121 = OpFSub %v4float %120 %117
               OpStore %x_10_val %121
               OpStore %x_100_phi %21
               OpSelectionMerge %122 None
               OpBranchConditional %114 %123 %122
        %123 = OpLabel
        %125 = OpFOrdEqual %v4bool %121 %115
        %124 = OpAll %bool %125
               OpStore %x_99 %124
        %126 = OpLoad %bool %x_99
               OpStore %x_100_phi %126
               OpBranch %122
        %122 = OpLabel
        %127 = OpLoad %bool %x_100_phi
               OpStore %x_9_ok %127
        %130 = OpFMul %v4float %121 %129
               OpStore %x_10_val %130
        %131 = OpFDiv %v4float %130 %129
               OpStore %x_10_val %131
        %132 = OpFMul %v4float %131 %129
               OpStore %x_10_val %132
        %133 = OpFDiv %v4float %132 %129
               OpStore %x_10_val %133
               OpStore %x_111_phi %21
               OpSelectionMerge %134 None
               OpBranchConditional %127 %135 %134
        %135 = OpLabel
        %137 = OpFOrdEqual %v4bool %133 %115
        %136 = OpAll %bool %137
               OpStore %x_110 %136
        %138 = OpLoad %bool %x_110
               OpStore %x_111_phi %138
               OpBranch %134
        %134 = OpLabel
        %139 = OpLoad %bool %x_111_phi
               OpStore %x_9_ok %139
               OpStore %x_115_phi %21
               OpSelectionMerge %140 None
               OpBranchConditional %139 %141 %140
        %141 = OpLabel
        %142 = OpFunctionCall %bool %test_int_S1_c0_b
               OpStore %x_114 %142
        %143 = OpLoad %bool %x_114
               OpStore %x_115_phi %143
               OpBranch %140
        %140 = OpLabel
        %144 = OpLoad %bool %x_115_phi
               OpSelectionMerge %145 None
               OpBranchConditional %144 %146 %147
        %146 = OpLabel
        %150 = OpAccessChain %_ptr_Uniform_v4float %x_4 %uint_0 %uint_2
        %151 = OpLoad %v4float %150
               OpStore %x_116 %151
               OpBranch %145
        %147 = OpLabel
        %153 = OpAccessChain %_ptr_Uniform_v4float %x_4 %uint_0 %uint_1
        %154 = OpLoad %v4float %153
               OpStore %x_116 %154
               OpBranch %145
        %145 = OpLabel
        %155 = OpLoad %v4float %x_116
               OpStore %output_S1 %155
               OpStore %sk_FragColor %155
               OpReturn
               OpFunctionEnd
 %main_inner = OpFunction %main_out None %156
%sk_Clockwise_param = OpFunctionParameter %bool
%vcolor_S0_param = OpFunctionParameter %v4float
        %161 = OpLabel
               OpStore %sk_Clockwise %sk_Clockwise_param
               OpStore %vcolor_S0 %vcolor_S0_param
        %162 = OpFunctionCall %void %main_1
        %163 = OpLoad %v4float %sk_FragColor
        %164 = OpCompositeConstruct %main_out %163
               OpReturnValue %164
               OpFunctionEnd
       %main = OpFunction %void None %83
        %166 = OpLabel
        %168 = OpLoad %bool %sk_Clockwise_param_1
        %169 = OpLoad %v4float %vcolor_S0_param_1
        %167 = OpFunctionCall %main_out %main_inner %168 %169
        %170 = OpCompositeExtract %v4float %167 0
               OpStore %sk_FragColor_1_1 %170
               OpReturn
               OpFunctionEnd
