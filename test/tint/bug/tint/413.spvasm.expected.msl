#include <metal_stdlib>

using namespace metal;
void main_1(texture2d<uint, access::sample> tint_symbol_1, texture2d<uint, access::write> tint_symbol_2) {
  volatile bool tint_loop_preserving_true = true;
  uint4 srcValue = 0u;
  srcValue = tint_symbol_1.read(uint2(int2(0)), 0);
  srcValue[0] = (srcValue[0] + 1u);
  uint4 const x_27 = srcValue;
  tint_symbol_2.write(x_27, uint2(int2(0)));
  return;
}

kernel void tint_symbol(texture2d<uint, access::sample> tint_symbol_3 [[texture(0)]], texture2d<uint, access::write> tint_symbol_4 [[texture(1)]]) {
  volatile bool tint_loop_preserving_true_1 = true;
  main_1(tint_symbol_3, tint_symbol_4);
  return;
}

