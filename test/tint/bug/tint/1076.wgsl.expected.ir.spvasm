; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 53
; Schema: 0
               OpCapability Shader
               OpMemoryModel Logical GLSL450
               OpEntryPoint Fragment %main "main" %main_loc0_Input %main_sample_mask_Input %main_loc1_Input %main_loc0_Output %main_sample_mask_Output
               OpExecutionMode %main OriginUpperLeft
               OpName %main_loc0_Input "main_loc0_Input"
               OpName %main_sample_mask_Input "main_sample_mask_Input"
               OpName %main_loc1_Input "main_loc1_Input"
               OpName %main_loc0_Output "main_loc0_Output"
               OpName %main_sample_mask_Output "main_sample_mask_Output"
               OpName %main_inner "main_inner"
               OpMemberName %FragIn 0 "a"
               OpMemberName %FragIn 1 "mask"
               OpName %FragIn "FragIn"
               OpName %in "in"
               OpName %b "b"
               OpName %return_value "return_value"
               OpName %continue_execution "continue_execution"
               OpName %main "main"
               OpDecorate %main_loc0_Input Location 0
               OpDecorate %_arr_uint_uint_1 ArrayStride 4
               OpDecorate %main_sample_mask_Input BuiltIn SampleMask
               OpDecorate %main_loc1_Input Location 1
               OpDecorate %main_loc0_Output Location 0
               OpDecorate %main_sample_mask_Output BuiltIn SampleMask
               OpMemberDecorate %FragIn 0 Offset 0
               OpMemberDecorate %FragIn 1 Offset 4
      %float = OpTypeFloat 32
%_ptr_Input_float = OpTypePointer Input %float
%main_loc0_Input = OpVariable %_ptr_Input_float Input
       %uint = OpTypeInt 32 0
     %uint_1 = OpConstant %uint 1
%_arr_uint_uint_1 = OpTypeArray %uint %uint_1
%_ptr_Input__arr_uint_uint_1 = OpTypePointer Input %_arr_uint_uint_1
%main_sample_mask_Input = OpVariable %_ptr_Input__arr_uint_uint_1 Input
%main_loc1_Input = OpVariable %_ptr_Input_float Input
%_ptr_Output_float = OpTypePointer Output %float
%main_loc0_Output = OpVariable %_ptr_Output_float Output
%_ptr_Output__arr_uint_uint_1 = OpTypePointer Output %_arr_uint_uint_1
%main_sample_mask_Output = OpVariable %_ptr_Output__arr_uint_uint_1 Output
     %FragIn = OpTypeStruct %float %uint
         %18 = OpTypeFunction %FragIn %FragIn %float
%_ptr_Function_FragIn = OpTypePointer Function %FragIn
         %22 = OpConstantNull %FragIn
       %bool = OpTypeBool
%_ptr_Function_bool = OpTypePointer Function %bool
       %true = OpConstantTrue %bool
     %uint_0 = OpConstant %uint 0
      %false = OpConstantFalse %bool
       %void = OpTypeVoid
         %40 = OpTypeFunction %void
%_ptr_Input_uint = OpTypePointer Input %uint
%_ptr_Output_uint = OpTypePointer Output %uint
 %main_inner = OpFunction %FragIn None %18
         %in = OpFunctionParameter %FragIn
          %b = OpFunctionParameter %float
         %19 = OpLabel
%return_value = OpVariable %_ptr_Function_FragIn Function %22
%continue_execution = OpVariable %_ptr_Function_bool Function
               OpStore %continue_execution %true
         %27 = OpCompositeExtract %uint %in 1
         %28 = OpIEqual %bool %27 %uint_0
               OpSelectionMerge %30 None
               OpBranchConditional %28 %31 %30
         %31 = OpLabel
               OpStore %continue_execution %false
               OpStore %return_value %in
               OpBranch %30
         %30 = OpLabel
         %33 = OpLoad %bool %continue_execution
               OpSelectionMerge %34 None
               OpBranchConditional %33 %35 %34
         %35 = OpLabel
         %36 = OpCompositeConstruct %FragIn %b %uint_1
               OpStore %return_value %36
               OpBranch %34
         %34 = OpLabel
         %37 = OpLoad %FragIn %return_value
               OpReturnValue %37
               OpFunctionEnd
       %main = OpFunction %void None %40
         %41 = OpLabel
         %42 = OpLoad %float %main_loc0_Input
         %43 = OpAccessChain %_ptr_Input_uint %main_sample_mask_Input %uint_0
         %45 = OpLoad %uint %43
         %46 = OpCompositeConstruct %FragIn %42 %45
         %47 = OpLoad %float %main_loc1_Input
         %48 = OpFunctionCall %FragIn %main_inner %46 %47
         %49 = OpCompositeExtract %float %48 0
               OpStore %main_loc0_Output %49
         %50 = OpCompositeExtract %uint %48 1
         %51 = OpAccessChain %_ptr_Output_uint %main_sample_mask_Output %uint_0
               OpStore %51 %50
               OpReturn
               OpFunctionEnd
