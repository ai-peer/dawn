#include <metal_stdlib>

using namespace metal;
void atomicStore_8bea94(threadgroup atomic_int* const tint_symbol) {
  volatile bool tint_loop_preserving_true = true;
  int arg_1 = 1;
  atomic_store_explicit(tint_symbol, arg_1, memory_order_relaxed);
}

void compute_main_inner(uint local_invocation_index, threadgroup atomic_int* const tint_symbol_1) {
  volatile bool tint_loop_preserving_true_1 = true;
  {
    atomic_store_explicit(tint_symbol_1, 0, memory_order_relaxed);
  }
  threadgroup_barrier(mem_flags::mem_threadgroup);
  atomicStore_8bea94(tint_symbol_1);
}

kernel void compute_main(uint local_invocation_index [[thread_index_in_threadgroup]]) {
  volatile bool tint_loop_preserving_true_2 = true;
  threadgroup atomic_int tint_symbol_2;
  compute_main_inner(local_invocation_index, &(tint_symbol_2));
  return;
}

