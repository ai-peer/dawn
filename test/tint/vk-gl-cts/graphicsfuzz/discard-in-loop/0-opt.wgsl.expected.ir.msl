SKIP: FAILED

<dawn>/src/tint/lang/msl/writer/printer/printer.cc:1206 internal compiler error: main_out = struct @align(16) {
  x_GLF_color_1:vec4<f32> @offset(0), @location(0)
}

%b1 = block {  # root
  %gl_FragCoord:ptr<private, vec4<f32>, read_write> = var
  %x_GLF_color:ptr<private, vec4<f32>, read_write> = var
}

%x_47 = func():void -> %b2 {
  %b2 = block {
    discard
    ret
  }
}
%main_1 = func():void -> %b3 {
  %b3 = block {
    loop [b: %b4, c: %b5] {  # loop_1
      %b4 = block {  # body
        %x_30_phi:ptr<function, i32, read_write> = var
        %x_48_phi:ptr<function, bool, read_write> = var
        store %x_30_phi, 0i
        loop [b: %b6, c: %b7] {  # loop_2
          %b6 = block {  # body
            %x_31:ptr<function, i32, read_write> = var
            %x_30:i32 = load %x_30_phi
            store %x_48_phi, false
            %9:bool = lt %x_30, 10i
            if %9 [t: %b8, f: %b9] {  # if_1
              %b8 = block {  # true
                exit_if  # if_1
              }
              %b9 = block {  # false
                exit_loop  # loop_2
              }
            }
            %x_37:f32 = load_vector_element %gl_FragCoord, 1u
            %11:bool = lt %x_37, 0.0f
            if %11 [t: %b10] {  # if_2
              %b10 = block {  # true
                %x_42:f32 = load_vector_element %gl_FragCoord, 0u
                %13:bool = lt %x_42, 0.0f
                if %13 [t: %b11, f: %b12] {  # if_3
                  %b11 = block {  # true
                    store %x_48_phi, false
                    exit_loop  # loop_2
                  }
                  %b12 = block {  # false
                    continue %b7
                  }
                }
                exit_if  # if_2
              }
            }
            %14:void = call %x_47
            continue %b7
          }
          %b7 = block {  # continuing
            %15:i32 = add %x_30, 1i
            store %x_31, %15
            %16:i32 = load %x_31
            store %x_30_phi, %16
            next_iteration %b6
          }
        }
        %x_48:bool = load %x_48_phi
        if %x_48 [t: %b13] {  # if_4
          %b13 = block {  # true
            exit_loop  # loop_1
          }
        }
        store %x_GLF_color, vec4<f32>(1.0f, 0.0f, 0.0f, 1.0f)
        exit_loop  # loop_1
      }
      %b5 = block {  # continuing
        next_iteration %b4
      }
    }
    ret
  }
}
%tint_symbol = @fragment func(%gl_FragCoord_param:vec4<f32> [@position]):main_out -> %b14 {
  %b14 = block {
    store %gl_FragCoord, %gl_FragCoord_param
    %20:void = call %main_1
    %21:vec4<f32> = load %x_GLF_color
    %22:main_out = construct %21
    ret %22
  }
}

invalid entry point IO struct uses
********************************************************************
*  The tint shader compiler has encountered an unexpected error.   *
*                                                                  *
*  Please help us fix this issue by submitting a bug report at     *
*  crbug.com/tint with the source program that triggered the bug.  *
********************************************************************
