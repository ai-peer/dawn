SKIP: FAILED

<dawn>/src/tint/lang/msl/writer/printer/printer.cc:1206 internal compiler error: S = struct @align(16) {
  f0:i32 @offset(0)
  f1:mat4x3<f32> @offset(16)
}

main_out = struct @align(16) {
  x_GLF_color_1:vec4<f32> @offset(0), @location(0)
}

%b1 = block {  # root
  %gl_FragCoord:ptr<private, vec4<f32>, read_write> = var
  %x_GLF_color:ptr<private, vec4<f32>, read_write> = var
}

%main_1 = func():void -> %b2 {
  %b2 = block {
    %x_51:ptr<function, i32, read_write> = var
    %x_12:ptr<function, i32, read_write> = var
    loop [b: %b3, c: %b4] {  # loop_1
      %b3 = block {  # body
        %x_45:ptr<function, S, read_write> = var
        %x_11:ptr<function, i32, read_write> = var
        store %x_45, S(0i, mat4x3<f32>(vec3<f32>(1.0f, 0.0f, 0.0f), vec3<f32>(0.0f, 1.0f, 0.0f), vec3<f32>(0.0f, 0.0f, 1.0f), vec3<f32>(0.0f)))
        store %x_11, 0i
        loop [b: %b5, c: %b6] {  # loop_2
          %b5 = block {  # body
            %x_46:ptr<function, S, read_write> = var
            %x_9:ptr<function, i32, read_write> = var
            %10:f32 = load_vector_element %gl_FragCoord, 0u
            %11:bool = eq %10, 0.0f
            %12:i32 = select 2i, 1i, %11
            store %x_51, %12
            %13:i32 = load %x_11
            %14:i32 = load %x_51
            %15:bool = lt %13, %14
            if %15 [t: %b7, f: %b8] {  # if_1
              %b7 = block {  # true
                exit_if  # if_1
              }
              %b8 = block {  # false
                exit_loop  # loop_2
              }
            }
            continue %b6
          }
          %b6 = block {  # continuing
            store %x_GLF_color, vec4<f32>(1.0f)
            %16:S = load %x_45
            store %x_46, %16
            %17:ptr<function, i32, read_write> = access %x_46, 0u
            %18:ptr<function, i32, read_write> = access %x_45, 0u
            %19:i32 = load %18
            %20:i32 = add %19, 1i
            store %17, %20
            %21:i32 = load %x_11
            %22:i32 = add %21, 1i
            store %x_9, %22
            %23:S = load %x_46
            store %x_45, %23
            %24:i32 = load %x_9
            store %x_11, %24
            next_iteration %b5
          }
        }
        %25:ptr<function, i32, read_write> = access %x_45, 0u
        %26:i32 = load %25
        %27:bool = lt %26, 1000i
        if %27 [t: %b9] {  # if_2
          %b9 = block {  # true
            exit_loop  # loop_1
          }
        }
        exit_loop  # loop_1
      }
      %b4 = block {  # continuing
        next_iteration %b3
      }
    }
    store %x_12, 0i
    loop [b: %b10, c: %b11] {  # loop_3
      %b10 = block {  # body
        %x_6:ptr<function, i32, read_write> = var
        %29:i32 = load %x_12
        %30:i32 = load %x_51
        %31:bool = lt %29, %30
        if %31 [t: %b12, f: %b13] {  # if_3
          %b12 = block {  # true
            exit_if  # if_3
          }
          %b13 = block {  # false
            exit_loop  # loop_3
          }
        }
        continue %b11
      }
      %b11 = block {  # continuing
        store %x_GLF_color, vec4<f32>(1.0f, 0.0f, 0.0f, 1.0f)
        %32:i32 = load %x_12
        %33:i32 = add %32, 1i
        store %x_6, %33
        %34:i32 = load %x_6
        store %x_12, %34
        next_iteration %b10
      }
    }
    ret
  }
}
%tint_symbol = @fragment func(%gl_FragCoord_param:vec4<f32> [@position]):main_out -> %b14 {
  %b14 = block {
    store %gl_FragCoord, %gl_FragCoord_param
    %37:void = call %main_1
    %38:vec4<f32> = load %x_GLF_color
    %39:main_out = construct %38
    ret %39
  }
}

invalid entry point IO struct uses
********************************************************************
*  The tint shader compiler has encountered an unexpected error.   *
*                                                                  *
*  Please help us fix this issue by submitting a bug report at     *
*  crbug.com/tint with the source program that triggered the bug.  *
********************************************************************
