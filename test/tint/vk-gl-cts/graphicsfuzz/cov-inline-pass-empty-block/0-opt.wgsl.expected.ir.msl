SKIP: FAILED

<dawn>/src/tint/lang/msl/writer/printer/printer.cc:1206 internal compiler error: main_out = struct @align(16) {
  x_GLF_color_1:vec4<f32> @offset(0), @location(0)
}

%b1 = block {  # root
  %gl_FragCoord:ptr<private, vec4<f32>, read_write> = var
  %x_GLF_color:ptr<private, vec4<f32>, read_write> = var
}

%func_ = func():vec4<f32> -> %b2 {
  %b2 = block {
    %x:ptr<function, f32, read_write> = var
    store %x, 1.0f
    %x_30:f32 = load_vector_element %gl_FragCoord, 0u
    %6:bool = lt %x_30, 0.0f
    if %6 [t: %b3] {  # if_1
      %b3 = block {  # true
        store %x, 0.5f
        exit_if  # if_1
      }
    }
    %x_34:f32 = load %x
    %8:vec4<f32> = construct %x_34, 0.0f, 0.0f, 1.0f
    ret %8
  }
}
%main_1 = func():void -> %b4 {
  %b4 = block {
    store %x_GLF_color, vec4<f32>(0.0f)
    loop [b: %b5, c: %b6] {  # loop_1
      %b5 = block {  # body
        %x_26:vec4<f32> = call %func_
        store %x_GLF_color, %x_26
        if false [t: %b7, f: %b8] {  # if_2
          %b7 = block {  # true
            exit_if  # if_2
          }
          %b8 = block {  # false
            exit_loop  # loop_1
          }
        }
        continue %b6
      }
      %b6 = block {  # continuing
        next_iteration %b5
      }
    }
    ret
  }
}
%tint_symbol = @fragment func(%gl_FragCoord_param:vec4<f32> [@position]):main_out -> %b9 {
  %b9 = block {
    store %gl_FragCoord, %gl_FragCoord_param
    %13:void = call %main_1
    %14:vec4<f32> = load %x_GLF_color
    %15:main_out = construct %14
    ret %15
  }
}

invalid entry point IO struct uses
********************************************************************
*  The tint shader compiler has encountered an unexpected error.   *
*                                                                  *
*  Please help us fix this issue by submitting a bug report at     *
*  crbug.com/tint with the source program that triggered the bug.  *
********************************************************************
