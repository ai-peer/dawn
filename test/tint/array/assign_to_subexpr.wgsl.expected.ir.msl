SKIP: FAILED

#include <metal_stdlib>
using namespace metal;
template<typename T, size_t N>
struct tint_array {
  const constant T& operator[](size_t i) const constant { return elements[i]; }
  device T& operator[](size_t i) device { return elements[i]; }
  const device T& operator[](size_t i) const device { return elements[i]; }
  thread T& operator[](size_t i) thread { return elements[i]; }
  const thread T& operator[](size_t i) const thread { return elements[i]; }
  threadgroup T& operator[](size_t i) threadgroup { return elements[i]; }
  const threadgroup T& operator[](size_t i) const threadgroup { return elements[i]; }
  T elements[N];
};

struct S {
  tint_array<int, 4> arr;
};

void foo() {
  tint_array<int, 4> const src = tint_array<int, 4>{};
  tint_array<int, 4> dst = {};
  S dst_struct = {};
  tint_array<tint_array<int, 4>, 2> dst_array = {};
  thread tint_array<int, 4>* const dst_ptr = dst;
  thread S* const dst_struct_ptr = dst_struct;
  thread tint_array<tint_array<int, 4>, 2>* const dst_array_ptr = dst_array;
  dst_struct.arr = src;
  dst_array[1] = src;
  dst_ptr = src;
  dst_struct_ptr.arr = src;
  dst_array_ptr[0] = src;
}
program_source:24:36: error: no viable conversion from 'tint_array<int, 4>' to 'tint_array<int, 4> *const'
  thread tint_array<int, 4>* const dst_ptr = dst;
                                   ^         ~~~
program_source:25:19: error: no viable conversion from 'S' to 'S *const'
  thread S* const dst_struct_ptr = dst_struct;
                  ^                ~~~~~~~~~~
program_source:26:51: error: no viable conversion from 'tint_array<tint_array<int, 4>, 2>' to 'tint_array<tint_array<int, 4>, 2> *const'
  thread tint_array<tint_array<int, 4>, 2>* const dst_array_ptr = dst_array;
                                                  ^               ~~~~~~~~~
program_source:29:11: error: cannot assign to variable 'dst_ptr' with const-qualified type 'tint_array<int, 4> *const'
  dst_ptr = src;
  ~~~~~~~ ^
program_source:24:36: note: variable 'dst_ptr' declared const here
  thread tint_array<int, 4>* const dst_ptr = dst;
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~
program_source:30:17: error: member reference type 'S *const' is a pointer; did you mean to use '->'?
  dst_struct_ptr.arr = src;
  ~~~~~~~~~~~~~~^
                ->
program_source:31:20: error: no viable overloaded '='
  dst_array_ptr[0] = src;
  ~~~~~~~~~~~~~~~~ ^ ~~~
program_source:4:8: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'const tint_array<int, 4>' to 'const tint_array<tint_array<int, 4>, 2>' for 1st argument
struct tint_array {
       ^
program_source:4:8: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'const tint_array<int, 4>' to 'const device tint_array<tint_array<int, 4>, 2> &' for 1st argument
struct tint_array {
       ^
program_source:4:8: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'const tint_array<int, 4>' to 'const threadgroup tint_array<tint_array<int, 4>, 2> &' for 1st argument
struct tint_array {
       ^
program_source:4:8: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'const tint_array<int, 4>' to 'const constant tint_array<tint_array<int, 4>, 2> &' for 1st argument
struct tint_array {
       ^
program_source:4:8: note: candidate function (the implicit copy assignment operator) not viable: 'this' object is in default address space, but method expects object in address space 'device'
program_source:4:8: note: candidate function (the implicit copy assignment operator) not viable: 'this' object is in default address space, but method expects object in address space 'device'
program_source:4:8: note: candidate function (the implicit copy assignment operator) not viable: 'this' object is in default address space, but method expects object in address space 'device'
program_source:4:8: note: candidate function (the implicit copy assignment operator) not viable: 'this' object is in default address space, but method expects object in address space 'device'
program_source:4:8: note: candidate function (the implicit copy assignment operator) not viable: 'this' object is in default address space, but method expects object in address space 'threadgroup'
program_source:4:8: note: candidate function (the implicit copy assignment operator) not viable: 'this' object is in default address space, but method expects object in address space 'threadgroup'
program_source:4:8: note: candidate function (the implicit copy assignment operator) not viable: 'this' object is in default address space, but method expects object in address space 'threadgroup'
program_source:4:8: note: candidate function (the implicit copy assignment operator) not viable: 'this' object is in default address space, but method expects object in address space 'threadgroup'
program_source:4:8: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'const tint_array<int, 4>' to 'tint_array<tint_array<int, 4>, 2>' for 1st argument
struct tint_array {
       ^
program_source:4:8: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'const tint_array<int, 4>' to 'device tint_array<tint_array<int, 4>, 2> &&' for 1st argument
struct tint_array {
       ^
program_source:4:8: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'const tint_array<int, 4>' to 'threadgroup tint_array<tint_array<int, 4>, 2> &&' for 1st argument
struct tint_array {
       ^
program_source:4:8: note: candidate function (the implicit move assignment operator) not viable: 'this' object is in default address space, but method expects object in address space 'device'
program_source:4:8: note: candidate function (the implicit move assignment operator) not viable: 'this' object is in default address space, but method expects object in address space 'device'
program_source:4:8: note: candidate function (the implicit move assignment operator) not viable: 'this' object is in default address space, but method expects object in address space 'device'
program_source:4:8: note: candidate function (the implicit move assignment operator) not viable: 'this' object is in default address space, but method expects object in address space 'threadgroup'
program_source:4:8: note: candidate function (the implicit move assignment operator) not viable: 'this' object is in default address space, but method expects object in address space 'threadgroup'
program_source:4:8: note: candidate function (the implicit move assignment operator) not viable: 'this' object is in default address space, but method expects object in address space 'threadgroup'

