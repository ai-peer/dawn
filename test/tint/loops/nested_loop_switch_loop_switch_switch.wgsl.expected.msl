#include <metal_stdlib>

using namespace metal;
kernel void tint_symbol() {
  volatile bool tint_loop_preserving_true = true;
  int k = 0;
  for(int i = 0; ((i < 2)) && tint_loop_preserving_true; i = as_type<int>((as_type<uint>(i) + as_type<uint>(2)))) {
    switch(i) {
      case 0: {
        for(int j = 0; ((j < 2)) && tint_loop_preserving_true; j = as_type<int>((as_type<uint>(j) + as_type<uint>(2)))) {
          switch(j) {
            case 0: {
              continue;
              break;
            }
            case 1: {
              switch(k) {
                case 0: {
                  continue;
                  break;
                }
                default: {
                  break;
                }
              }
              break;
            }
            default: {
              break;
            }
          }
        }
        continue;
        break;
      }
      default: {
        break;
      }
    }
  }
  return;
}

