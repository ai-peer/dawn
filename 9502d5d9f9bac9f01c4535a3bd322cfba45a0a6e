{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "8c65000a_6f8f44f8",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 15,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-12-08T13:47:19Z",
      "side": 1,
      "message": "When we implement the path fully, won\u0027t we have a problem because the renderer process can start causing crashes in the GPU process even if it isn\u0027t the path it is supposed to use?",
      "revId": "9502d5d9f9bac9f01c4535a3bd322cfba45a0a6e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7830067a_58c18c17",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 15,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2021-12-08T18:01:05Z",
      "side": 1,
      "message": "I don\u0027t think so, since Chromium will always Reserve+Inject the instance. Or if we ever add CreateInstance, we\u0027re going to override that proc on the server to return a ref to an externally owned instance. So the client will only ever be able to remove refs for injected instances, but not fully delete it. Probably should update this, because I don\u0027t think \"in the near term\" is accurate. It\u0027ll likely be this way for quite a while.",
      "parentUuid": "8c65000a_6f8f44f8",
      "revId": "9502d5d9f9bac9f01c4535a3bd322cfba45a0a6e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6e26a8fc_2f3c8881",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-12-08T13:47:19Z",
      "side": 1,
      "message": "I think we need to figure out the story for embedding in Chromium before we add paths that are partially implemented. LGTM otherwise.",
      "revId": "9502d5d9f9bac9f01c4535a3bd322cfba45a0a6e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "941dea2c_9a45ec22",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2021-12-10T20:35:41Z",
      "side": 1,
      "message": "what do you mean? I think we can add this stuff since it gets the protocol most of the way there. and then later we can teach the server how to customize the response to requestAdapter/Device. and once that\u0027s done, actually migrate to using it in Chrome.\nor is the concern about rando commands in shmem telling the server to invoke unimplemented stuff (should be ok I think since we always reject the callback in dawn_native for requestAdapter/requestDevice right now).",
      "parentUuid": "6e26a8fc_2f3c8881",
      "revId": "9502d5d9f9bac9f01c4535a3bd322cfba45a0a6e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a567e7dd_7e0e0e83",
        "filename": "dawn.json",
        "patchSetId": 5
      },
      "lineNbr": 138,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-12-08T13:47:19Z",
      "side": 1,
      "message": "maybe default nullptr too?",
      "revId": "9502d5d9f9bac9f01c4535a3bd322cfba45a0a6e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "04a42f3f_790d171a",
        "filename": "dawn.json",
        "patchSetId": 5
      },
      "lineNbr": 138,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2021-12-10T20:35:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a567e7dd_7e0e0e83",
      "revId": "9502d5d9f9bac9f01c4535a3bd322cfba45a0a6e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5bb0cfe8_83472a14",
        "filename": "dawn.json",
        "patchSetId": 5
      },
      "lineNbr": 138,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-12-13T08:21:18Z",
      "side": 1,
      "message": "Ah I guess it could have been just optional. Either way.",
      "parentUuid": "04a42f3f_790d171a",
      "revId": "9502d5d9f9bac9f01c4535a3bd322cfba45a0a6e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0f3be607_ec5f0f06",
        "filename": "src/dawn_wire/client/Adapter.cpp",
        "patchSetId": 5
      },
      "lineNbr": 20,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-12-08T13:47:19Z",
      "side": 1,
      "message": "nit: UNIMPLEMENTED()?",
      "range": {
        "startLine": 20,
        "startChar": 8,
        "endLine": 20,
        "endChar": 19
      },
      "revId": "9502d5d9f9bac9f01c4535a3bd322cfba45a0a6e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "455bdca7_0ed475e5",
        "filename": "src/dawn_wire/client/Adapter.cpp",
        "patchSetId": 5
      },
      "lineNbr": 20,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2021-12-10T20:35:41Z",
      "side": 1,
      "message": "we don\u0027t have that macro (we have DAWN_UNIMPLEMENTED_ERROR for error scopes)",
      "parentUuid": "0f3be607_ec5f0f06",
      "range": {
        "startLine": 20,
        "startChar": 8,
        "endLine": 20,
        "endChar": 19
      },
      "revId": "9502d5d9f9bac9f01c4535a3bd322cfba45a0a6e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7f6a74d5_20e83b75",
        "filename": "src/include/dawn_wire/WireClient.h",
        "patchSetId": 5
      },
      "lineNbr": 77,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-12-08T13:47:19Z",
      "side": 1,
      "message": "nit: we usually have tests for this reservation APIs, but I don\u0027t know how easy it is to do for Instance since it is the root object.",
      "revId": "9502d5d9f9bac9f01c4535a3bd322cfba45a0a6e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3af07480_6d5fee56",
        "filename": "src/include/dawn_wire/WireClient.h",
        "patchSetId": 5
      },
      "lineNbr": 77,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2021-12-10T20:35:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7f6a74d5_20e83b75",
      "revId": "9502d5d9f9bac9f01c4535a3bd322cfba45a0a6e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}