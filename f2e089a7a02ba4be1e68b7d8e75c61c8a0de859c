{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "a1de1909_9ad48522",
        "filename": "generator/templates/api_cpp.h",
        "patchSetId": 2
      },
      "lineNbr": 380,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2024-04-26T20:06:36Z",
      "side": 1,
      "message": "Just to verify something, I looked this up and AFAIU: members not specified in a designated initializer (like nextInChain in your example) will be default initialized, which for pointers is `{}` which is nullptr.",
      "revId": "f2e089a7a02ba4be1e68b7d8e75c61c8a0de859c",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cd3b14f4_06c23043",
        "filename": "generator/templates/api_cpp.h",
        "patchSetId": 2
      },
      "lineNbr": 380,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2024-04-26T20:10:11Z",
      "side": 1,
      "message": "oh - the implication being, I don\u0027t need \" \u003d nullptr\" right?\n\nor would you prefer I include it for consistency? there is a lot of \" \u003d nullptr\" around",
      "parentUuid": "a1de1909_9ad48522",
      "revId": "f2e089a7a02ba4be1e68b7d8e75c61c8a0de859c",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "045873e8_05297789",
        "filename": "generator/templates/api_cpp.h",
        "patchSetId": 2
      },
      "lineNbr": 380,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2024-04-26T20:30:28Z",
      "side": 1,
      "message": "Yes, pretty sure you don\u0027t need `\u003d nullptr`. I guess it would be nice to include so it\u0027s clearer there isn\u0027t an uninitialized value though.",
      "parentUuid": "cd3b14f4_06c23043",
      "revId": "f2e089a7a02ba4be1e68b7d8e75c61c8a0de859c",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "f2e089a7a02ba4be1e68b7d8e75c61c8a0de859c",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "patchSetCommitId": "f2e089a7a02ba4be1e68b7d8e75c61c8a0de859c",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    }
  ]
}