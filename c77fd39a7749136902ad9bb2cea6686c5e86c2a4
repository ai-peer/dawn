{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "5f5dfa7a_5f6b3c5d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2024-03-26T15:50:48Z",
      "side": 1,
      "message": "high level - is there a way we can share the begin/end fence logic and stuff with SharedTextureMemory? Seems like quite a bit of duplication right now.",
      "revId": "c77fd39a7749136902ad9bb2cea6686c5e86c2a4",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "11034240_c1738b67",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 1000248
      },
      "writtenOn": "2024-03-27T23:12:45Z",
      "side": 1,
      "message": "I did try to make a SharedResourceMemory superclass, but imo it adds a lot of boilerplate and there isn\u0027t really that much shared code that can be eliminated. The primary things we can share are generic object validation and the fence import/export loops. Much of it seems very similar, but really operates on a different object type and can\u0027t be easily condensed.",
      "parentUuid": "5f5dfa7a_5f6b3c5d",
      "revId": "c77fd39a7749136902ad9bb2cea6686c5e86c2a4",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "043d7427_fbaf828f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2024-03-28T22:45:19Z",
      "side": 1,
      "message": "I started trying this in https://dawn-review.googlesource.com/c/dawn/+/181441 - though I didn\u0027t finish all the renames.\n\nIf it works, I think it\u0027s worth it since the ordering of how we validate and acquire fences can be pretty subtle. It would be really preferable to not duplicate it.",
      "parentUuid": "11034240_c1738b67",
      "revId": "c77fd39a7749136902ad9bb2cea6686c5e86c2a4",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ff24bd1c_cbbe18cb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 1000248
      },
      "writtenOn": "2024-03-29T00:05:02Z",
      "side": 1,
      "message": "I\u0027m open to doing this, but I would prefer to do so after we get this functionality merged in.",
      "parentUuid": "043d7427_fbaf828f",
      "revId": "c77fd39a7749136902ad9bb2cea6686c5e86c2a4",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e8e01720_43d9cbb1",
        "filename": "src/dawn/native/Buffer.cpp",
        "patchSetId": 10
      },
      "lineNbr": 883,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2024-03-26T12:52:32Z",
      "side": 1,
      "message": "nit: I believe this could be updated in SharedTextureMemory::EndAccess",
      "revId": "c77fd39a7749136902ad9bb2cea6686c5e86c2a4",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a331716a_18212a78",
        "filename": "src/dawn/native/Buffer.cpp",
        "patchSetId": 10
      },
      "lineNbr": 883,
      "author": {
        "id": 1000248
      },
      "writtenOn": "2024-03-26T19:14:34Z",
      "side": 1,
      "message": "Removed in favor of just using buffer\u0027s lastUsageSerial.",
      "parentUuid": "e8e01720_43d9cbb1",
      "revId": "c77fd39a7749136902ad9bb2cea6686c5e86c2a4",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cc8d86a5_409272ac",
        "filename": "src/dawn/native/Buffer.cpp",
        "patchSetId": 10
      },
      "lineNbr": 893,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2024-03-26T12:52:32Z",
      "side": 1,
      "message": "```suggestion\n    return mState !\u003d BufferState::SharedMemoryNoAccess;\n```",
      "revId": "c77fd39a7749136902ad9bb2cea6686c5e86c2a4",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "93389a65_6d8d1cc6",
        "filename": "src/dawn/native/Buffer.cpp",
        "patchSetId": 10
      },
      "lineNbr": 893,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2024-03-26T15:50:48Z",
      "side": 1,
      "message": "```suggestion\n    return mState !\u003d BufferState::SharedMemoryNoAccess;\n```",
      "range": {
        "startLine": 893,
        "startChar": 0,
        "endLine": 893,
        "endChar": 70
      },
      "revId": "c77fd39a7749136902ad9bb2cea6686c5e86c2a4",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bc6216f4_c98a4e29",
        "filename": "src/dawn/native/Buffer.cpp",
        "patchSetId": 10
      },
      "lineNbr": 893,
      "author": {
        "id": 1000248
      },
      "writtenOn": "2024-03-26T19:14:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "93389a65_6d8d1cc6",
      "range": {
        "startLine": 893,
        "startChar": 0,
        "endLine": 893,
        "endChar": 70
      },
      "revId": "c77fd39a7749136902ad9bb2cea6686c5e86c2a4",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d691b3f5_dc117ea0",
        "filename": "src/dawn/native/Buffer.cpp",
        "patchSetId": 10
      },
      "lineNbr": 893,
      "author": {
        "id": 1000248
      },
      "writtenOn": "2024-03-26T19:14:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cc8d86a5_409272ac",
      "revId": "c77fd39a7749136902ad9bb2cea6686c5e86c2a4",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "679c5fe2_9f035a1c",
        "filename": "src/dawn/native/SharedBufferMemory.cpp",
        "patchSetId": 10
      },
      "lineNbr": 170,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2024-03-26T12:52:32Z",
      "side": 1,
      "message": "Why is some of the validation done here and some in BeginAccess? We could do like in SharedTextureMemory and just handle it all in BeginAccess.",
      "revId": "c77fd39a7749136902ad9bb2cea6686c5e86c2a4",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "34ab9bff_f15ee0eb",
        "filename": "src/dawn/native/SharedBufferMemory.cpp",
        "patchSetId": 10
      },
      "lineNbr": 170,
      "author": {
        "id": 1000248
      },
      "writtenOn": "2024-03-26T19:14:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "679c5fe2_9f035a1c",
      "revId": "c77fd39a7749136902ad9bb2cea6686c5e86c2a4",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1d1e10f4_439b744a",
        "filename": "src/dawn/native/SharedBufferMemory.cpp",
        "patchSetId": 10
      },
      "lineNbr": 222,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2024-03-26T12:52:32Z",
      "side": 1,
      "message": "ditto",
      "revId": "c77fd39a7749136902ad9bb2cea6686c5e86c2a4",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e6a8da1a_f6733627",
        "filename": "src/dawn/native/SharedBufferMemory.cpp",
        "patchSetId": 10
      },
      "lineNbr": 222,
      "author": {
        "id": 1000248
      },
      "writtenOn": "2024-03-26T19:14:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1d1e10f4_439b744a",
      "revId": "c77fd39a7749136902ad9bb2cea6686c5e86c2a4",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "df67f598_1cd17434",
        "filename": "src/dawn/native/SharedBufferMemory.cpp",
        "patchSetId": 10
      },
      "lineNbr": 235,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2024-03-26T12:52:32Z",
      "side": 1,
      "message": "This should be done after all validation otherwise we might acquire the fences when returning an error, which will make them leak.",
      "revId": "c77fd39a7749136902ad9bb2cea6686c5e86c2a4",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "51d25b89_3d58c758",
        "filename": "src/dawn/native/SharedBufferMemory.cpp",
        "patchSetId": 10
      },
      "lineNbr": 235,
      "author": {
        "id": 1000248
      },
      "writtenOn": "2024-03-26T19:14:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "df67f598_1cd17434",
      "revId": "c77fd39a7749136902ad9bb2cea6686c5e86c2a4",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "46585302_4ec20950",
        "filename": "src/dawn/native/SharedBufferMemory.cpp",
        "patchSetId": 10
      },
      "lineNbr": 242,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2024-03-26T12:52:32Z",
      "side": 1,
      "message": "The buffer will have been validated to not be an error so that condition can be removed.",
      "revId": "c77fd39a7749136902ad9bb2cea6686c5e86c2a4",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "55896542_2c782bd2",
        "filename": "src/dawn/native/SharedBufferMemory.cpp",
        "patchSetId": 10
      },
      "lineNbr": 242,
      "author": {
        "id": 1000248
      },
      "writtenOn": "2024-03-26T19:14:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "46585302_4ec20950",
      "revId": "c77fd39a7749136902ad9bb2cea6686c5e86c2a4",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3c82cf86_638824d0",
        "filename": "src/dawn/native/SharedBufferMemory.cpp",
        "patchSetId": 10
      },
      "lineNbr": 276,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2024-03-26T12:52:32Z",
      "side": 1,
      "message": "At that point the buffer will have been validated to not be an error.",
      "range": {
        "startLine": 276,
        "startChar": 25,
        "endLine": 276,
        "endChar": 45
      },
      "revId": "c77fd39a7749136902ad9bb2cea6686c5e86c2a4",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f3698d11_f31968c3",
        "filename": "src/dawn/native/SharedBufferMemory.cpp",
        "patchSetId": 10
      },
      "lineNbr": 276,
      "author": {
        "id": 1000248
      },
      "writtenOn": "2024-03-26T19:14:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3c82cf86_638824d0",
      "range": {
        "startLine": 276,
        "startChar": 25,
        "endLine": 276,
        "endChar": 45
      },
      "revId": "c77fd39a7749136902ad9bb2cea6686c5e86c2a4",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3698c5ce_5782af8d",
        "filename": "src/dawn/native/SharedBufferMemory.cpp",
        "patchSetId": 10
      },
      "lineNbr": 284,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2024-03-26T12:52:32Z",
      "side": 1,
      "message": "These could be at the start of EndAccessImpl.",
      "range": {
        "startLine": 283,
        "startChar": 0,
        "endLine": 284,
        "endChar": 52
      },
      "revId": "c77fd39a7749136902ad9bb2cea6686c5e86c2a4",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4aafdfbf_195a1d90",
        "filename": "src/dawn/native/SharedBufferMemory.cpp",
        "patchSetId": 10
      },
      "lineNbr": 284,
      "author": {
        "id": 1000248
      },
      "writtenOn": "2024-03-26T19:14:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3698c5ce_5782af8d",
      "range": {
        "startLine": 283,
        "startChar": 0,
        "endLine": 284,
        "endChar": 52
      },
      "revId": "c77fd39a7749136902ad9bb2cea6686c5e86c2a4",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7eb9a3a3_c64fdd6c",
        "filename": "src/dawn/native/SharedBufferMemory.cpp",
        "patchSetId": 10
      },
      "lineNbr": 286,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2024-03-26T12:52:32Z",
      "side": 1,
      "message": "We need to ensure commands are flushed, for example if there\u0027s a pending WriteBuffer that hasn\u0027t been submitted yet.",
      "revId": "c77fd39a7749136902ad9bb2cea6686c5e86c2a4",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "25240273_3b1ce1a7",
        "filename": "src/dawn/native/SharedBufferMemory.cpp",
        "patchSetId": 10
      },
      "lineNbr": 286,
      "author": {
        "id": 1000248
      },
      "writtenOn": "2024-03-26T19:14:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7eb9a3a3_c64fdd6c",
      "revId": "c77fd39a7749136902ad9bb2cea6686c5e86c2a4",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ccda8413_12ad1f76",
        "filename": "src/dawn/native/SharedBufferMemory.h",
        "patchSetId": 10
      },
      "lineNbr": 103,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2024-03-26T12:52:32Z",
      "side": 1,
      "message": "Since we are copying code from SharedTextureMemory, can we also copy the useful comments with it? 😊",
      "revId": "c77fd39a7749136902ad9bb2cea6686c5e86c2a4",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0c4c0e2d_d2d434ff",
        "filename": "src/dawn/native/SharedBufferMemory.h",
        "patchSetId": 10
      },
      "lineNbr": 103,
      "author": {
        "id": 1000248
      },
      "writtenOn": "2024-03-26T19:14:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ccda8413_12ad1f76",
      "revId": "c77fd39a7749136902ad9bb2cea6686c5e86c2a4",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3f4683d9_b9a44017",
        "filename": "src/dawn/native/SharedBufferMemory.h",
        "patchSetId": 10
      },
      "lineNbr": 110,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2024-03-26T12:52:32Z",
      "side": 1,
      "message": "Can you update the STM version to be private? It doesn\u0027t seem to need to be public.",
      "revId": "c77fd39a7749136902ad9bb2cea6686c5e86c2a4",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "05aca67f_60da4baf",
        "filename": "src/dawn/native/SharedBufferMemory.h",
        "patchSetId": 10
      },
      "lineNbr": 110,
      "author": {
        "id": 1000248
      },
      "writtenOn": "2024-03-26T19:14:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3f4683d9_b9a44017",
      "revId": "c77fd39a7749136902ad9bb2cea6686c5e86c2a4",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3a4c3201_dc5c2374",
        "filename": "src/dawn/native/SharedBufferMemory.h",
        "patchSetId": 10
      },
      "lineNbr": 125,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2024-03-26T12:52:32Z",
      "side": 1,
      "message": "Ditto for the comment.",
      "revId": "c77fd39a7749136902ad9bb2cea6686c5e86c2a4",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "22056402_6e127567",
        "filename": "src/dawn/native/SharedBufferMemory.h",
        "patchSetId": 10
      },
      "lineNbr": 125,
      "author": {
        "id": 1000248
      },
      "writtenOn": "2024-03-26T19:14:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3a4c3201_dc5c2374",
      "revId": "c77fd39a7749136902ad9bb2cea6686c5e86c2a4",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c08be5ce_5b92ce3a",
        "filename": "src/dawn/native/SharedBufferMemory.h",
        "patchSetId": 10
      },
      "lineNbr": 134,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2024-03-26T12:52:32Z",
      "side": 1,
      "message": "I don\u0027t think that this is needed, because the buffer already stores the last usage serial and we can query it in EndAccess. So the SharedBufferMemoryContents would only contain the mPendingFences and the WeakRef.",
      "revId": "c77fd39a7749136902ad9bb2cea6686c5e86c2a4",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "00d8f9cf_1b5deaa4",
        "filename": "src/dawn/native/SharedBufferMemory.h",
        "patchSetId": 10
      },
      "lineNbr": 134,
      "author": {
        "id": 1000248
      },
      "writtenOn": "2024-03-26T19:14:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c08be5ce_5b92ce3a",
      "revId": "c77fd39a7749136902ad9bb2cea6686c5e86c2a4",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1be9e9bc_84be83c3",
        "filename": "src/dawn/native/SharedBufferMemory.h",
        "patchSetId": 10
      },
      "lineNbr": 134,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2024-03-27T13:06:55Z",
      "side": 1,
      "message": "Doesn\u0027t seem to be done.",
      "parentUuid": "00d8f9cf_1b5deaa4",
      "revId": "c77fd39a7749136902ad9bb2cea6686c5e86c2a4",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ec3d984f_eb1f5a19",
        "filename": "src/dawn/native/SharedBufferMemory.h",
        "patchSetId": 10
      },
      "lineNbr": 134,
      "author": {
        "id": 1000248
      },
      "writtenOn": "2024-03-27T23:12:45Z",
      "side": 1,
      "message": "My mistake. It\u0027s definitely done now.",
      "parentUuid": "1be9e9bc_84be83c3",
      "revId": "c77fd39a7749136902ad9bb2cea6686c5e86c2a4",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "65d8a8ba_4cb8f16d",
        "filename": "src/dawn/native/d3d12/SharedBufferMemoryD3D12.cpp",
        "patchSetId": 10
      },
      "lineNbr": 65,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2024-03-26T12:52:32Z",
      "side": 1,
      "message": "What about using a ComPtr instead of this manual memory management?",
      "revId": "c77fd39a7749136902ad9bb2cea6686c5e86c2a4",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c6b8f9fd_21d33b1a",
        "filename": "src/dawn/native/d3d12/SharedBufferMemoryD3D12.cpp",
        "patchSetId": 10
      },
      "lineNbr": 65,
      "author": {
        "id": 1000248
      },
      "writtenOn": "2024-03-26T19:14:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "65d8a8ba_4cb8f16d",
      "revId": "c77fd39a7749136902ad9bb2cea6686c5e86c2a4",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d767a87a_cd26bc04",
        "filename": "src/dawn/native/d3d12/SharedBufferMemoryD3D12.cpp",
        "patchSetId": 10
      },
      "lineNbr": 67,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2024-03-26T15:50:48Z",
      "side": 1,
      "message": "why can\u0027t we use ComPtr ?",
      "range": {
        "startLine": 65,
        "startChar": 0,
        "endLine": 67,
        "endChar": 0
      },
      "revId": "c77fd39a7749136902ad9bb2cea6686c5e86c2a4",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "62a19ccf_a9ab9b2e",
        "filename": "src/dawn/native/d3d12/SharedBufferMemoryD3D12.cpp",
        "patchSetId": 10
      },
      "lineNbr": 67,
      "author": {
        "id": 1000248
      },
      "writtenOn": "2024-03-26T19:14:34Z",
      "side": 1,
      "message": "We can. Fixed.",
      "parentUuid": "d767a87a_cd26bc04",
      "range": {
        "startLine": 65,
        "startChar": 0,
        "endLine": 67,
        "endChar": 0
      },
      "revId": "c77fd39a7749136902ad9bb2cea6686c5e86c2a4",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2c7c2271_fed5956b",
        "filename": "src/dawn/native/d3d12/SharedBufferMemoryD3D12.cpp",
        "patchSetId": 10
      },
      "lineNbr": 93,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2024-03-26T12:52:32Z",
      "side": 1,
      "message": "We could probably support Uniform here, and maybe even Vertex/Index/Undirect/QueryResolve",
      "revId": "c77fd39a7749136902ad9bb2cea6686c5e86c2a4",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2bb94bc6_2c1dd1ba",
        "filename": "src/dawn/native/d3d12/SharedBufferMemoryD3D12.cpp",
        "patchSetId": 10
      },
      "lineNbr": 93,
      "author": {
        "id": 1000248
      },
      "writtenOn": "2024-03-26T19:14:34Z",
      "side": 1,
      "message": "That works. We can add all the translated D3D12_RESOURCE_STATE_GENERIC_READ states.",
      "parentUuid": "2c7c2271_fed5956b",
      "revId": "c77fd39a7749136902ad9bb2cea6686c5e86c2a4",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7d7c6937_a91a48cf",
        "filename": "src/dawn/native/d3d12/SharedBufferMemoryD3D12.cpp",
        "patchSetId": 10
      },
      "lineNbr": 99,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2024-03-26T15:50:48Z",
      "side": 1,
      "message": "it can never be anything else, like \"D3D12_HEAP_TYPE_CUSTOM\" ?\n\nwe could validate it is not CUSTOM\n\nor, is it better to rely on D3D12_CPU_PAGE_PROPERTY / D3D12_MEMORY_POOL ?",
      "range": {
        "startLine": 98,
        "startChar": 8,
        "endLine": 99,
        "endChar": 31
      },
      "revId": "c77fd39a7749136902ad9bb2cea6686c5e86c2a4",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "eca9272b_42ed907d",
        "filename": "src/dawn/native/d3d12/SharedBufferMemoryD3D12.cpp",
        "patchSetId": 10
      },
      "lineNbr": 99,
      "author": {
        "id": 1000248
      },
      "writtenOn": "2024-03-26T19:14:34Z",
      "side": 1,
      "message": "I think we can just disallow CUSTOM. I\u0027m not aware of a usage for now.",
      "parentUuid": "7d7c6937_a91a48cf",
      "range": {
        "startLine": 98,
        "startChar": 8,
        "endLine": 99,
        "endChar": 31
      },
      "revId": "c77fd39a7749136902ad9bb2cea6686c5e86c2a4",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2afe040b_bb6978e0",
        "filename": "src/dawn/tests/white_box/SharedBufferMemoryTests.cpp",
        "patchSetId": 10
      },
      "lineNbr": 217,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2024-03-26T12:52:32Z",
      "side": 1,
      "message": "nit: Maybe we could test calling EndAccess on the incorrect buffer. And then calling EndAccess on the correct on would return the proper fences.",
      "revId": "c77fd39a7749136902ad9bb2cea6686c5e86c2a4",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "708bf6c6_2e5cd838",
        "filename": "src/dawn/tests/white_box/SharedBufferMemoryTests.cpp",
        "patchSetId": 10
      },
      "lineNbr": 217,
      "author": {
        "id": 1000248
      },
      "writtenOn": "2024-03-27T23:12:45Z",
      "side": 1,
      "message": "Added test EndAccessOnDifferentBuffer",
      "parentUuid": "2afe040b_bb6978e0",
      "revId": "c77fd39a7749136902ad9bb2cea6686c5e86c2a4",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "123414c3_448e38b5",
        "filename": "src/dawn/tests/white_box/SharedBufferMemoryTests.cpp",
        "patchSetId": 10
      },
      "lineNbr": 294,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2024-03-26T12:52:32Z",
      "side": 1,
      "message": "We could test usage of a buffer for storage / copySrc / copyDst and other potential usages.",
      "revId": "c77fd39a7749136902ad9bb2cea6686c5e86c2a4",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4535e3b2_aa101f90",
        "filename": "src/dawn/tests/white_box/SharedBufferMemoryTests.cpp",
        "patchSetId": 10
      },
      "lineNbr": 294,
      "author": {
        "id": 1000248
      },
      "writtenOn": "2024-03-28T20:14:32Z",
      "side": 1,
      "message": "Added more tests. We\u0027ve got coverage for CopySrc, CopyDst, MapWrite, MapRead, Storage and Uniform usages.",
      "parentUuid": "123414c3_448e38b5",
      "revId": "c77fd39a7749136902ad9bb2cea6686c5e86c2a4",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f2dbf743_9b361fe3",
        "filename": "src/dawn/tests/white_box/SharedBufferMemoryTests_win.cpp",
        "patchSetId": 10
      },
      "lineNbr": 204,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2024-03-26T12:52:32Z",
      "side": 1,
      "message": "Isn\u0027t the goal of the structure of the tests that most of these would be in the shared test file? See how SharedTextureMemory does it.",
      "revId": "c77fd39a7749136902ad9bb2cea6686c5e86c2a4",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8a586a25_91255965",
        "filename": "src/dawn/tests/white_box/SharedBufferMemoryTests_win.cpp",
        "patchSetId": 10
      },
      "lineNbr": 204,
      "author": {
        "id": 1000248
      },
      "writtenOn": "2024-03-26T19:14:34Z",
      "side": 1,
      "message": "That\u0027s fair. I\u0027ll try to move more tests into the shared file.",
      "parentUuid": "f2dbf743_9b361fe3",
      "revId": "c77fd39a7749136902ad9bb2cea6686c5e86c2a4",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2adc1a8e_dd4c5d2d",
        "filename": "src/dawn/tests/white_box/SharedBufferMemoryTests_win.cpp",
        "patchSetId": 10
      },
      "lineNbr": 204,
      "author": {
        "id": 1000248
      },
      "writtenOn": "2024-03-28T20:14:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8a586a25_91255965",
      "revId": "c77fd39a7749136902ad9bb2cea6686c5e86c2a4",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}