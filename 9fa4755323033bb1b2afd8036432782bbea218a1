{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "f03939b3_4e6552c6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-03-16T08:50:58Z",
      "side": 1,
      "message": "LGTM",
      "revId": "9fa4755323033bb1b2afd8036432782bbea218a1",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7d034090_b04a848d",
        "filename": "src/dawn/native/Toggles.cpp",
        "patchSetId": 5
      },
      "lineNbr": 395,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-03-16T08:50:58Z",
      "side": 1,
      "message": "This toggle name is very generic. Can we have something more precise? vulkan_clear_r8_texture_on_creation something like that? Here it sounds like all textures will be cleared on creation.\n\nDo we have an explanation of what the issue is? That could also help give a name:\n\nworkaround_mesa_incorrect_r8_ccs_with_early_clear? (I don\u0027t actually know if that\u0027s the issue)",
      "revId": "9fa4755323033bb1b2afd8036432782bbea218a1",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5d9f4c6e_443541c2",
        "filename": "src/dawn/native/Toggles.cpp",
        "patchSetId": 5
      },
      "lineNbr": 395,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2023-03-16T12:54:31Z",
      "side": 1,
      "message": "Unfortunately I also don\u0027t know what the issue is. I am pushing the mesa guys to prioritize the bug. Hopefully they will make some progress soon.\n\nMore interestingly, this extra texture clearing can also workaround another copyTextureToTexture cts bug(https://bugs.chromium.org/p/chromium/issues/detail?id\u003d1366205). However I am afraid it would be too costly to use this workaround.",
      "parentUuid": "7d034090_b04a848d",
      "revId": "9fa4755323033bb1b2afd8036432782bbea218a1",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "feee16e7_ca9887ef",
        "filename": "src/dawn/native/Toggles.cpp",
        "patchSetId": 5
      },
      "lineNbr": 395,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-03-20T15:46:35Z",
      "side": 1,
      "message": "can we name it something regarding \"ccs\", \"ambiguates\", and \"undefined layout\" now?",
      "parentUuid": "5d9f4c6e_443541c2",
      "revId": "9fa4755323033bb1b2afd8036432782bbea218a1",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "49589bd3_59b9e1c0",
        "filename": "src/dawn/native/Toggles.cpp",
        "patchSetId": 5
      },
      "lineNbr": 395,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2023-03-21T02:04:58Z",
      "side": 1,
      "message": "Thanks.\nMaybe `VulkanNoIntelGen12CCSAmbiguate`? \n`VulkanClearTextureOnCreation` seems to literally describe what the toogle does in Dawn. However, I just found this workaround, but still cannot explain clearly why it can work around that driver bug. Likely this same workaround can also work for other driver bugs. In this sense, we\u0027d better not make it too specific to a driver bug. I am okay either way, just kind of unsure.",
      "parentUuid": "feee16e7_ca9887ef",
      "revId": "9fa4755323033bb1b2afd8036432782bbea218a1",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8a5dc3e8_be616769",
        "filename": "src/dawn/native/vulkan/AdapterVk.cpp",
        "patchSetId": 5
      },
      "lineNbr": 457,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-03-16T08:50:58Z",
      "side": 1,
      "message": "nit: Maybe tag with an issue in a commit like done for Qualcomm.",
      "revId": "9fa4755323033bb1b2afd8036432782bbea218a1",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "411b183d_5b3449f9",
        "filename": "src/dawn/native/vulkan/AdapterVk.cpp",
        "patchSetId": 5
      },
      "lineNbr": 457,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2023-03-16T12:54:31Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "8a5dc3e8_be616769",
      "revId": "9fa4755323033bb1b2afd8036432782bbea218a1",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cd6e5c21_da017306",
        "filename": "src/dawn/native/vulkan/TextureVk.cpp",
        "patchSetId": 5
      },
      "lineNbr": 745,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-03-16T08:50:58Z",
      "side": 1,
      "message": "nit: All of these checks could be done inside a first if that checks if the workaround is enabled. It would avoid the cost of the checks in non-buggy HW+SW combination.",
      "revId": "9fa4755323033bb1b2afd8036432782bbea218a1",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "beb4f25a_76552a9b",
        "filename": "src/dawn/native/vulkan/TextureVk.cpp",
        "patchSetId": 5
      },
      "lineNbr": 745,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2023-03-16T12:54:31Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "cd6e5c21_da017306",
      "revId": "9fa4755323033bb1b2afd8036432782bbea218a1",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d13cd305_a408bce9",
        "filename": "src/dawn/native/vulkan/TextureVk.cpp",
        "patchSetId": 5
      },
      "lineNbr": 752,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-03-16T08:50:58Z",
      "side": 1,
      "message": "nit: textureIsBuggy (or ccsIncorrect? Or whatever). Also there are a lot of extra parenthesis for some reason?",
      "range": {
        "startLine": 752,
        "startChar": 4,
        "endLine": 752,
        "endChar": 20
      },
      "revId": "9fa4755323033bb1b2afd8036432782bbea218a1",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "71a51c29_ff7aa6bf",
        "filename": "src/dawn/native/vulkan/TextureVk.cpp",
        "patchSetId": 5
      },
      "lineNbr": 752,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2023-03-16T12:54:31Z",
      "side": 1,
      "message": "My bad taste of coding style. ðŸ˜Š",
      "parentUuid": "d13cd305_a408bce9",
      "range": {
        "startLine": 752,
        "startChar": 4,
        "endLine": 752,
        "endChar": 20
      },
      "revId": "9fa4755323033bb1b2afd8036432782bbea218a1",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}