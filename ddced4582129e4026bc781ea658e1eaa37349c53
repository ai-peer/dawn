{
  "comments": [
    {
      "key": {
        "uuid": "03abdb41_fa7b6a48",
        "filename": "src/dawn_native/Format.cpp",
        "patchSetId": 6
      },
      "lineNbr": 78,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2020-04-18T00:44:31Z",
      "side": 1,
      "message": "It\u0027s investigated here:\nhttps://github.com/gpuweb/gpuweb/issues/659\nThe only guaranteed-sampleable depth formats in Vulkan are depth32float and depth16unorm.\nThere are no sampleable DS formats, and even X8_D24 isn\u0027t sampleable so depth24plus isn\u0027t sampleable.\n\nSo, I think what you have here is already correct (until we add depth16unorm).",
      "revId": "ddced4582129e4026bc781ea658e1eaa37349c53",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "102ff5f3_9afff03e",
        "filename": "src/dawn_native/Format.cpp",
        "patchSetId": 6
      },
      "lineNbr": 78,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-04-20T09:11:15Z",
      "side": 1,
      "message": "In SPIRV there is a depth boolean on OpTypeImage. https://www.khronos.org/registry/spir-v/specs/unified1/SPIRV.html#OpTypeImage Maybe there should be a new componentType that\u0027s Depth instead?",
      "parentUuid": "03abdb41_fa7b6a48",
      "revId": "ddced4582129e4026bc781ea658e1eaa37349c53",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8bc1a83a_5d8e1929",
        "filename": "src/dawn_native/Format.cpp",
        "patchSetId": 6
      },
      "lineNbr": 78,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-04-20T16:52:11Z",
      "side": 1,
      "message": "Chapter 35 of the Vulkan spec says, \"The “Depth” operand of OpTypeImage is ignored.\" :P\n\nSince we can only sample depth formats, then we can change Depth32Float (and 16unorm when we have it) in the format table to be Type::Float instead of Type::Other, and remove this entire check",
      "parentUuid": "102ff5f3_9afff03e",
      "revId": "ddced4582129e4026bc781ea658e1eaa37349c53",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2481a4fa_28fdf5ab",
        "filename": "src/tests/end2end/ComparisonSamplerTests.cpp",
        "patchSetId": 6
      },
      "lineNbr": 152,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-04-20T09:11:15Z",
      "side": 1,
      "message": "Can we have a TODO here so we revisit it later?",
      "revId": "ddced4582129e4026bc781ea658e1eaa37349c53",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7bd41571_62542f6f",
        "filename": "src/tests/end2end/ComparisonSamplerTests.cpp",
        "patchSetId": 6
      },
      "lineNbr": 152,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-04-20T23:19:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2481a4fa_28fdf5ab",
      "revId": "ddced4582129e4026bc781ea658e1eaa37349c53",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    }
  ]
}