{
  "comments": [
    {
      "key": {
        "uuid": "359d01da_3a190079",
        "filename": "src/dawn_native/DawnNative.cpp",
        "patchSetId": 1
      },
      "lineNbr": 172,
      "author": {
        "id": 1000262
      },
      "writtenOn": "2020-03-04T02:56:01Z",
      "side": 1,
      "message": "Consider asserting or failing if WGPUDevice is not an external texture, OR renaming to IsTextureInitialized and having it succeed for all textures. I am partial to the latter but am curious what Corentin and Austin think.",
      "range": {
        "startLine": 170,
        "startChar": 0,
        "endLine": 172,
        "endChar": 59
      },
      "revId": "d3cc7efa3e3ce30feb6a68b1dba59c2c286bd31a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a103c017_d531b3f5",
        "filename": "src/dawn_native/DawnNative.cpp",
        "patchSetId": 1
      },
      "lineNbr": 172,
      "author": {
        "id": 1000308
      },
      "writtenOn": "2020-03-04T03:00:39Z",
      "side": 1,
      "message": "I thought about the first suggestion but I think the metal external texure is created with “owned internal”. not sure if metal has a reason for doing this?",
      "parentUuid": "359d01da_3a190079",
      "range": {
        "startLine": 170,
        "startChar": 0,
        "endLine": 172,
        "endChar": 59
      },
      "revId": "d3cc7efa3e3ce30feb6a68b1dba59c2c286bd31a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ae9345c0_8fc21cb1",
        "filename": "src/dawn_native/DawnNative.cpp",
        "patchSetId": 1
      },
      "lineNbr": 172,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-03-04T08:13:26Z",
      "side": 1,
      "message": "I\u0027d be fine just naming everything IsTextureInitialized. Don\u0027t see a strong reason to only allow checking external textures.\n\nMetal calls it OwnedInternal because on mac, IOSurfaces are used for sharing, and those are refcounted. Since Dawn holds a reference, Dawn effectively has ownership of the IOSurface.\n\nIn the other backends, on Destroy, we have to know whether to delete the resource depending on whether or not we own it.",
      "parentUuid": "a103c017_d531b3f5",
      "range": {
        "startLine": 170,
        "startChar": 0,
        "endLine": 172,
        "endChar": 59
      },
      "revId": "d3cc7efa3e3ce30feb6a68b1dba59c2c286bd31a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "74b3e5b6_0707403e",
        "filename": "src/dawn_native/DawnNative.cpp",
        "patchSetId": 1
      },
      "lineNbr": 172,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-03-04T09:38:46Z",
      "side": 1,
      "message": "Yep no need to restrict to external textures. And with the changes suggested in DawnNative.h, this could just be a call to texture-\u003eIsSubresourceContentInitialized()",
      "parentUuid": "ae9345c0_8fc21cb1",
      "range": {
        "startLine": 170,
        "startChar": 0,
        "endLine": 172,
        "endChar": 59
      },
      "revId": "d3cc7efa3e3ce30feb6a68b1dba59c2c286bd31a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "27b3a20b_bbc0cca8",
        "filename": "src/dawn_native/DawnNative.cpp",
        "patchSetId": 1
      },
      "lineNbr": 172,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-03-04T09:40:35Z",
      "side": 1,
      "message": "Also it will allow to use this function in testing of lazy-clears, something we should likely do in this CL to add coverage of this function.",
      "parentUuid": "74b3e5b6_0707403e",
      "range": {
        "startLine": 170,
        "startChar": 0,
        "endLine": 172,
        "endChar": 59
      },
      "revId": "d3cc7efa3e3ce30feb6a68b1dba59c2c286bd31a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "319ae154_e2b254a9",
        "filename": "src/dawn_native/DawnNative.cpp",
        "patchSetId": 1
      },
      "lineNbr": 172,
      "author": {
        "id": 1000308
      },
      "writtenOn": "2020-03-04T20:05:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "27b3a20b_bbc0cca8",
      "range": {
        "startLine": 170,
        "startChar": 0,
        "endLine": 172,
        "endChar": 59
      },
      "revId": "d3cc7efa3e3ce30feb6a68b1dba59c2c286bd31a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "eedce077_b14e295a",
        "filename": "src/dawn_native/Texture.cpp",
        "patchSetId": 1
      },
      "lineNbr": 432,
      "author": {
        "id": 1000262
      },
      "writtenOn": "2020-03-04T02:56:01Z",
      "side": 1,
      "message": "Can this be const?",
      "range": {
        "startLine": 432,
        "startChar": 9,
        "endLine": 432,
        "endChar": 52
      },
      "revId": "d3cc7efa3e3ce30feb6a68b1dba59c2c286bd31a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "60a8b7ba_e4acd396",
        "filename": "src/dawn_native/Texture.cpp",
        "patchSetId": 1
      },
      "lineNbr": 432,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-03-04T08:13:26Z",
      "side": 1,
      "message": "+1",
      "parentUuid": "eedce077_b14e295a",
      "range": {
        "startLine": 432,
        "startChar": 9,
        "endLine": 432,
        "endChar": 52
      },
      "revId": "d3cc7efa3e3ce30feb6a68b1dba59c2c286bd31a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "61c67bc6_01350a48",
        "filename": "src/dawn_native/Texture.cpp",
        "patchSetId": 1
      },
      "lineNbr": 432,
      "author": {
        "id": 1000308
      },
      "writtenOn": "2020-03-04T20:05:10Z",
      "side": 1,
      "message": "removed this function, just going to use IsSubresourceContentInitialized",
      "parentUuid": "60a8b7ba_e4acd396",
      "range": {
        "startLine": 432,
        "startChar": 9,
        "endLine": 432,
        "endChar": 52
      },
      "revId": "d3cc7efa3e3ce30feb6a68b1dba59c2c286bd31a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "515ccaa5_213d2d8d",
        "filename": "src/dawn_native/Texture.cpp",
        "patchSetId": 1
      },
      "lineNbr": 433,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-03-04T08:13:26Z",
      "side": 1,
      "message": "If we allow checking for both internal and external textures, this will have to include all mips and layers.",
      "range": {
        "startLine": 433,
        "startChar": 47,
        "endLine": 433,
        "endChar": 57
      },
      "revId": "d3cc7efa3e3ce30feb6a68b1dba59c2c286bd31a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1d7b8f75_554b803f",
        "filename": "src/dawn_native/Texture.cpp",
        "patchSetId": 1
      },
      "lineNbr": 433,
      "author": {
        "id": 1000308
      },
      "writtenOn": "2020-03-04T20:05:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "515ccaa5_213d2d8d",
      "range": {
        "startLine": 433,
        "startChar": 47,
        "endLine": 433,
        "endChar": 57
      },
      "revId": "d3cc7efa3e3ce30feb6a68b1dba59c2c286bd31a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c749ff26_fe047bf2",
        "filename": "src/include/dawn_native/DawnNative.h",
        "patchSetId": 1
      },
      "lineNbr": 178,
      "author": {
        "id": 1000262
      },
      "writtenOn": "2020-03-04T02:56:01Z",
      "side": 1,
      "message": "I wouldn\u0027t call this new function a \"backdoor\" like the \u0027ForTesting\u0027 one is.  I would simply say \"Query if external texture has been initialized\".",
      "range": {
        "startLine": 178,
        "startChar": 7,
        "endLine": 178,
        "endChar": 15
      },
      "revId": "d3cc7efa3e3ce30feb6a68b1dba59c2c286bd31a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "370f7beb_08753d0a",
        "filename": "src/include/dawn_native/DawnNative.h",
        "patchSetId": 1
      },
      "lineNbr": 178,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-03-04T09:38:46Z",
      "side": 1,
      "message": "+1, backdoor is the concept but it needn\u0027t appear in the function name.",
      "parentUuid": "c749ff26_fe047bf2",
      "range": {
        "startLine": 178,
        "startChar": 7,
        "endLine": 178,
        "endChar": 15
      },
      "revId": "d3cc7efa3e3ce30feb6a68b1dba59c2c286bd31a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e3da9365_c898d268",
        "filename": "src/include/dawn_native/DawnNative.h",
        "patchSetId": 1
      },
      "lineNbr": 178,
      "author": {
        "id": 1000308
      },
      "writtenOn": "2020-03-04T20:05:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "370f7beb_08753d0a",
      "range": {
        "startLine": 178,
        "startChar": 7,
        "endLine": 178,
        "endChar": 15
      },
      "revId": "d3cc7efa3e3ce30feb6a68b1dba59c2c286bd31a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "04c5b6a2_6ce518ab",
        "filename": "src/include/dawn_native/DawnNative.h",
        "patchSetId": 1
      },
      "lineNbr": 179,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-03-04T09:38:46Z",
      "side": 1,
      "message": "Can we have arguments for miplevel and array layer? It could be useful for example when we use 2d array textures for WebXR interop.",
      "revId": "d3cc7efa3e3ce30feb6a68b1dba59c2c286bd31a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7967c3b1_607c2eed",
        "filename": "src/include/dawn_native/DawnNative.h",
        "patchSetId": 1
      },
      "lineNbr": 179,
      "author": {
        "id": 1000308
      },
      "writtenOn": "2020-03-04T20:05:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "04c5b6a2_6ce518ab",
      "revId": "d3cc7efa3e3ce30feb6a68b1dba59c2c286bd31a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    }
  ]
}