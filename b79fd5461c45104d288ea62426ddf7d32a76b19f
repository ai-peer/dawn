{
  "comments": [
    {
      "key": {
        "uuid": "70b8675d_104ae44f",
        "filename": "src/dawn_native/d3d12/D3D12Error.cpp",
        "patchSetId": 4
      },
      "lineNbr": 35,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-06-09T21:09:20Z",
      "side": 1,
      "message": "nit: Or fake OOM",
      "range": {
        "startLine": 35,
        "startChar": 22,
        "endLine": 35,
        "endChar": 35
      },
      "revId": "b79fd5461c45104d288ea62426ddf7d32a76b19f",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3733bff7_bb8d86f5",
        "filename": "src/dawn_native/d3d12/D3D12Error.h",
        "patchSetId": 4
      },
      "lineNbr": 25,
      "author": {
        "id": 1000262
      },
      "writtenOn": "2020-06-10T17:04:55Z",
      "side": 1,
      "message": "Out of curiosity, where did you come up with the E_FAKE_ERROR_FOR_TESTING HRESULT?  Did you use an already existing one from somewhere? \n\nIf the goal is to have a unique error result specific for testing, I suggest using the MAKE_HRESULT macro with the FACILITY_ITF. So instead of what you have above, you would instead do:\n\n constexptr HRESULT E_FAKE_ERROR_FOR_TESTING \u003d MAKE_HRESULT(SEVERITY_ERROR, FACILITY_ITF, 1);\n\nhttps://docs.microsoft.com/en-us/windows/win32/com/structure-of-com-error-codes provides a breakdown of how all of the fields are divided up.",
      "range": {
        "startLine": 24,
        "startChar": 0,
        "endLine": 25,
        "endChar": 90
      },
      "revId": "b79fd5461c45104d288ea62426ddf7d32a76b19f",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f68c8d8a_92d4df56",
        "filename": "src/dawn_native/d3d12/D3D12Error.h",
        "patchSetId": 4
      },
      "lineNbr": 25,
      "author": {
        "id": 1000248
      },
      "writtenOn": "2020-06-10T17:17:31Z",
      "side": 1,
      "message": "To make E_FAKE_ERROR_FOR_TESTING HRESULT, I did use the link provided. 0x87FFFFFF corresponds to:\nSeverity \u003d 1 (error)\nReserved bits \u003d 0\nFacility \u003d all 1s (To ensure no overlap with existing or future facilities)\nCode \u003d all 1s (To ensure no overlap with existing or future error codes)\n\nBut yeah, I wasn\u0027t aware of the MAKE_HRESULT macro and using it would demystify this.",
      "parentUuid": "3733bff7_bb8d86f5",
      "range": {
        "startLine": 24,
        "startChar": 0,
        "endLine": 25,
        "endChar": 90
      },
      "revId": "b79fd5461c45104d288ea62426ddf7d32a76b19f",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f17a31cd_69792200",
        "filename": "src/dawn_native/d3d12/D3D12Error.h",
        "patchSetId": 4
      },
      "lineNbr": 38,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-06-09T21:09:20Z",
      "side": 1,
      "message": "nit: I think we should inject E_FAKE_ERROR_FOR_TESTING as well",
      "range": {
        "startLine": 38,
        "startChar": 37,
        "endLine": 38,
        "endChar": 38
      },
      "revId": "b79fd5461c45104d288ea62426ddf7d32a76b19f",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    }
  ]
}