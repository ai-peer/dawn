{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "7208bd16_67d79165",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1000024
      },
      "writtenOn": "2023-10-24T13:44:28Z",
      "side": 1,
      "message": "I appreciate you taking on this issue, but I\u0027d like to take a gain a more in-depth understanding of the problems this is attempting to solve before this lands. In general, we\u0027ve been trying to move as many transforms out of Dawn (ShaderModuleGL) and into Tint as possible, and this seems to be moving in the opposite direction. I\u0027ll set up a chat.",
      "revId": "5eade95fe399b160b5d9178560bca020903b1971",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c25cac61_90b25c24",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2023-10-24T14:15:21Z",
      "side": 1,
      "message": "Swapping myself for Dan, as Dan\u0027s been working on cleaning up the Dawn / Tint interface, and is a better person to understand how this fits with his work.",
      "revId": "5eade95fe399b160b5d9178560bca020903b1971",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a74db628_5cdfe73a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1000685
      },
      "writtenOn": "2023-10-24T16:54:49Z",
      "side": 1,
      "message": "(We can talk more in compat meeting)\nNo this CL is aiming to fix the CTS revealed bug about var naming `arrayLength` shadowing issue on GL backend.\n\nI believe the refactoring of dawn transform into tint should be in another CL",
      "parentUuid": "7208bd16_67d79165",
      "revId": "5eade95fe399b160b5d9178560bca020903b1971",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e303661f_552ab08e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2023-10-25T15:10:16Z",
      "side": 1,
      "message": "I\u0027m happy for this to move forward as it unblocks robustness for GLSL things. I didnt\u0027 realize the reading data back was an existing pattern. So keeping that and filling a bug for me to clean it up works for me.\n\nI\u0027m specifically refactoring how we pass binding remappings and external textures at the moment, so this won\u0027t impact what I\u0027m doing.",
      "revId": "5eade95fe399b160b5d9178560bca020903b1971",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8e448bd1_744715e8",
        "filename": "src/dawn/native/ShaderModule.cpp",
        "patchSetId": 6
      },
      "lineNbr": 339,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2023-10-24T15:30:34Z",
      "side": 1,
      "message": "This seems like it might be safer to update the inspector to return a second `variable_name` or something instead of attempting to undo the change that Tint did?",
      "revId": "5eade95fe399b160b5d9178560bca020903b1971",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6aa3bfa6_544e94c7",
        "filename": "src/dawn/native/opengl/ShaderModuleGL.cpp",
        "patchSetId": 6
      },
      "lineNbr": 311,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2023-10-24T15:30:34Z",
      "side": 1,
      "message": "I don\u0027t think this should get moved here (and it\u0027s going to be running the renamer twice at the moment isn\u0027t it since the Tint side also runs it?)\n\nThe remapping data should be passed through tintOptions to the backend writer which then provides it to the renammer.  We can change where the renamer runs in the backend.\n\nDoes it specifically need to be run before the override substitution?",
      "revId": "5eade95fe399b160b5d9178560bca020903b1971",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5af47677_09507a78",
        "filename": "src/dawn/native/opengl/ShaderModuleGL.cpp",
        "patchSetId": 6
      },
      "lineNbr": 311,
      "author": {
        "id": 1000685
      },
      "writtenOn": "2023-10-24T16:52:51Z",
      "side": 1,
      "message": "Ah I think I misunderstands in chat. I thought we are adding a seperate renamer on the client side because other backend runs renamer on dawn side. Adding one to GL will fix chrome issue and not impacting other client using tint.\n\nSeems like the overall plan is to move these transforms inside Tint. (Renamer added by dawn in other backend will be refactored into Tint IIUC)\n\nIn that case (keeping one renamer running in Tint glsl writer). Yeah I will change the input to be passed via tintOptions.",
      "parentUuid": "6aa3bfa6_544e94c7",
      "revId": "5eade95fe399b160b5d9178560bca020903b1971",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b8c1dd7b_70c55daf",
        "filename": "src/dawn/native/opengl/ShaderModuleGL.cpp",
        "patchSetId": 6
      },
      "lineNbr": 345,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2023-10-24T15:30:34Z",
      "side": 1,
      "message": "I thought the plan was to not pass any data back from the transform to Dawn? So, instead of reading this back, Dawn should be adding an entry for the entry point names and the new names that Dawn wants them called which the renamer honours.",
      "revId": "5eade95fe399b160b5d9178560bca020903b1971",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "664a3328_7396434d",
        "filename": "src/dawn/native/opengl/ShaderModuleGL.cpp",
        "patchSetId": 6
      },
      "lineNbr": 345,
      "author": {
        "id": 1000685
      },
      "writtenOn": "2023-10-24T16:52:51Z",
      "side": 1,
      "message": "Reading back the remappedEntryPoint from transform output is copying from other backend (e.g. https://source.chromium.org/chromium/chromium/src/+/main:third_party/dawn/src/dawn/native/d3d/ShaderUtils.cpp;l\u003d206;drc\u003dabbfc06e9b070c9ea64af2b233624646cef00252?q\u003dremappedEntrypoint%20f:dawn\u0026ss\u003dchromium)\n\nI think this refactor (dawn passes wanted entry point name, removing transform output) will be another CL. This CL aims to fix the arrayLength renaming/shadowing bug.",
      "parentUuid": "b8c1dd7b_70c55daf",
      "revId": "5eade95fe399b160b5d9178560bca020903b1971",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "43a72f81_547fbd71",
        "filename": "src/dawn/native/opengl/ShaderModuleGL.cpp",
        "patchSetId": 6
      },
      "lineNbr": 345,
      "author": {
        "id": 1000685
      },
      "writtenOn": "2023-10-24T18:00:02Z",
      "side": 1,
      "message": "If you are in the process of refactoring transforms out of dawn and into tint, I can just wait a bit and rebase later when you are done.",
      "parentUuid": "664a3328_7396434d",
      "revId": "5eade95fe399b160b5d9178560bca020903b1971",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dee2b953_ef4d410b",
        "filename": "src/dawn/native/opengl/ShaderModuleGL.cpp",
        "patchSetId": 6
      },
      "lineNbr": 345,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2023-10-25T15:10:16Z",
      "side": 1,
      "message": "Ok, if this is the existing pattern, copy it, and file a bug so I can look at fixing it up later?",
      "parentUuid": "43a72f81_547fbd71",
      "revId": "5eade95fe399b160b5d9178560bca020903b1971",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "586db6e3_a1483e14",
        "filename": "src/tint/lang/wgsl/ast/transform/renamer.cc",
        "patchSetId": 6
      },
      "lineNbr": 1402,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2023-10-24T15:30:34Z",
      "side": 1,
      "message": "Would this be safer as just `if (!cfg-\u003erename_map.empty())` instead of creating a pointer to the map?",
      "revId": "5eade95fe399b160b5d9178560bca020903b1971",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ae61641e_68f672e1",
        "filename": "src/tint/lang/wgsl/ast/transform/renamer.cc",
        "patchSetId": 6
      },
      "lineNbr": 1406,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2023-10-24T15:30:34Z",
      "side": 1,
      "message": "I wonder if we shoudl add a debug assert here to check that the requested name is not in the should_rename set?",
      "revId": "5eade95fe399b160b5d9178560bca020903b1971",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "03b740a0_5e6c5180",
        "filename": "src/tint/lang/wgsl/ast/transform/renamer.h",
        "patchSetId": 6
      },
      "lineNbr": 85,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2023-10-24T15:30:34Z",
      "side": 1,
      "message": "```suggestion\n        /// @param remappings requested old to new name map\n```",
      "revId": "5eade95fe399b160b5d9178560bca020903b1971",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "90b5b543_687f4aa5",
        "filename": "src/tint/lang/wgsl/ast/transform/renamer.h",
        "patchSetId": 6
      },
      "lineNbr": 101,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2023-10-24T15:30:34Z",
      "side": 1,
      "message": "```suggestion\n        const Remappings requested_names \u003d {};\n```\n\nMaybe a better name?",
      "revId": "5eade95fe399b160b5d9178560bca020903b1971",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}