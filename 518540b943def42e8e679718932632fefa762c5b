{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "9dd34466_5dc9cd23",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2023-07-28T22:10:12Z",
      "side": 1,
      "message": "This seems like it\u0027s more confusing then useful. Currently all test files are _test.* files. Otherwise, they don\u0027t end in `_test`. This makes it very obvious which files contain actual tests. Moving the test helpers to match that pattern makes it more confusing which files actually contain tests and which are just helper code.",
      "revId": "518540b943def42e8e679718932632fefa762c5b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "17ee880d_47e97d89",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2023-07-28T22:28:46Z",
      "side": 1,
      "message": "Your same argument extends to test helper code vs production code.\nI want a way to distinguish test code from production code. If you\u0027re opposed to a consistent file name pattern, what\u0027s your opinion on moving all the tests to a separate directory? e.g subdirectory or parallel tree?",
      "parentUuid": "9dd34466_5dc9cd23",
      "revId": "518540b943def42e8e679718932632fefa762c5b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "67f31b05_e04273f0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2023-07-30T01:33:13Z",
      "side": 1,
      "message": "It seems like the distinction between test and prod code is made by the `test_` in the filename? Files with `test` in the name are test related. Files ending in `_test` contain test code.",
      "parentUuid": "17ee880d_47e97d89",
      "revId": "518540b943def42e8e679718932632fefa762c5b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dbeccc2b_744fd4e7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2023-07-30T08:08:15Z",
      "side": 1,
      "message": "I considered trying to cover the existing set of names with multiple rules, but this adds more complexity, and is fragile.\nFor example, should `latest_version.h` be treated as test code?\n\n`_test.*` is essentially a \u0027soft\u0027 double file extension (similar to `blah.test.cc` - but isn\u0027t going to break toolchains that can\u0027t cope with double dots).\n\nI\u0027m not inventing this pattern. I\u0027m shamelessly stealing the pattern from Go: https://pkg.go.dev/cmd/go#hdr-Test_packages\n\nAs a compromise, how about I keep the `test_blah`, but add the `_test` suffixes to keep the rule simple? So:\n\n`test_helper.h` would be `test_helper_test.h`",
      "parentUuid": "67f31b05_e04273f0",
      "revId": "518540b943def42e8e679718932632fefa762c5b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}