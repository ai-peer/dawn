{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "bdd23ae4_ff9748df",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2022-01-17T13:12:01Z",
      "side": 1,
      "message": "PTAL",
      "revId": "7e25b34b68fe8497c5599d30f8effac9aad6df15",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7ccbe540_e7b0ef33",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-01-24T08:13:51Z",
      "side": 1,
      "message": "LGTM",
      "revId": "7e25b34b68fe8497c5599d30f8effac9aad6df15",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "38e903c3_fcde8843",
        "filename": "src/tests/white_box/VulkanImageWrappingTests_DmaBuf.cpp",
        "patchSetId": 2
      },
      "lineNbr": 41,
      "author": {
        "id": 1002831
      },
      "writtenOn": "2022-01-19T17:40:56Z",
      "side": 1,
      "message": "Not sure if it would make sense to try to de-deplicate this code. I assume different backends may handle it differently so maybe we can just leave as is for now and once we have all the backends implemented we can try to consolidate code if it\u0027s still similar.",
      "range": {
        "startLine": 24,
        "startChar": 4,
        "endLine": 41,
        "endChar": 6
      },
      "revId": "7e25b34b68fe8497c5599d30f8effac9aad6df15",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "934973a7_302bea5a",
        "filename": "src/tests/white_box/VulkanImageWrappingTests_DmaBuf.cpp",
        "patchSetId": 2
      },
      "lineNbr": 41,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2022-01-20T06:22:40Z",
      "side": 1,
      "message": "Sounds fair, thanks!",
      "parentUuid": "38e903c3_fcde8843",
      "range": {
        "startLine": 24,
        "startChar": 4,
        "endLine": 41,
        "endChar": 6
      },
      "revId": "7e25b34b68fe8497c5599d30f8effac9aad6df15",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ad11636b_102dce8c",
        "filename": "src/tests/white_box/VulkanImageWrappingTests_DmaBuf.cpp",
        "patchSetId": 2
      },
      "lineNbr": 108,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-01-24T08:13:51Z",
      "side": 1,
      "message": "optional nit: you can use the same trick as [1] to set multiple members at once.",
      "revId": "7e25b34b68fe8497c5599d30f8effac9aad6df15",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "19f2db6c_9bcad832",
        "filename": "src/tests/white_box/VulkanImageWrappingTests_DmaBuf.cpp",
        "patchSetId": 2
      },
      "lineNbr": 108,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2022-01-24T08:26:56Z",
      "side": 1,
      "message": "I intentionally avoided doing so as the ExternalImageDescriptorVkForTesting is hardcoded to be ExternalImageType::OpaqueFD type at https://source.chromium.org/chromium/chromium/src/+/main:third_party/dawn/src/tests/white_box/VulkanImageWrappingTests.cpp;l\u003d29",
      "parentUuid": "ad11636b_102dce8c",
      "revId": "7e25b34b68fe8497c5599d30f8effac9aad6df15",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "79af7e80_c6791b5c",
        "filename": "src/tests/white_box/VulkanImageWrappingTests_DmaBuf.cpp",
        "patchSetId": 2
      },
      "lineNbr": 108,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-01-24T08:29:47Z",
      "side": 1,
      "message": "Ah, I didn\u0027t realize that was going to overwrite the type in descriptorDmaBuf and that the OpaqueFD case just happens to work. Maybe the type could be passed as argument and coming from the VulkanImageWrappingTestBackend? I\u0027m not sure.",
      "parentUuid": "19f2db6c_9bcad832",
      "revId": "7e25b34b68fe8497c5599d30f8effac9aad6df15",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "51e776ee_2df19b8f",
        "filename": "src/tests/white_box/VulkanImageWrappingTests_DmaBuf.cpp",
        "patchSetId": 2
      },
      "lineNbr": 108,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2022-01-24T08:33:11Z",
      "side": 1,
      "message": "Sounds good, let me try to figure it out.",
      "parentUuid": "79af7e80_c6791b5c",
      "revId": "7e25b34b68fe8497c5599d30f8effac9aad6df15",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cc9f20de_b3cbbe6a",
        "filename": "src/tests/white_box/VulkanImageWrappingTests_DmaBuf.cpp",
        "patchSetId": 2
      },
      "lineNbr": 129,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-01-24T08:13:51Z",
      "side": 1,
      "message": "[1]",
      "revId": "7e25b34b68fe8497c5599d30f8effac9aad6df15",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}