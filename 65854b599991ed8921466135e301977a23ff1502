{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "14810bb2_33448868",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2021-10-21T15:15:07Z",
      "side": 1,
      "message": "PTAL - failures are because I forgot to skip the test if validation is disabled",
      "revId": "65854b599991ed8921466135e301977a23ff1502",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "25b451a2_c80d861e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2021-10-22T17:57:02Z",
      "side": 1,
      "message": "also: fully aware this implementation kinda sucks because every DispatchIndirect is transformed into a [SetPipeline, Dispatch, RW-RW barrier, SetPipeline, DispatchIndirect]. I\u0027m writing a doc about how we can make this better, but I\u0027d like to land this version first so we can get the base functionality in.",
      "revId": "65854b599991ed8921466135e301977a23ff1502",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4e33b2c5_8c71a9a3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-10-25T12:05:47Z",
      "side": 1,
      "message": "LGTM overall. We should eventually find a general framework to insert such commands \"in the past\" to try to maximize parallelism. Much later in the future though.",
      "revId": "65854b599991ed8921466135e301977a23ff1502",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a7c744b8_c2fd154f",
        "filename": "src/dawn_native/CommandBufferStateTracker.cpp",
        "patchSetId": 4
      },
      "lineNbr": 263,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-10-25T12:05:47Z",
      "side": 1,
      "message": "nit: Maybe have getters for GetLastCompute/RenderPipeline that assert their type.",
      "range": {
        "startLine": 263,
        "startChar": 24,
        "endLine": 263,
        "endChar": 71
      },
      "revId": "65854b599991ed8921466135e301977a23ff1502",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6d10f404_8f5abe9c",
        "filename": "src/dawn_native/CommandBufferStateTracker.cpp",
        "patchSetId": 4
      },
      "lineNbr": 263,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2021-10-28T01:35:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a7c744b8_c2fd154f",
      "range": {
        "startLine": 263,
        "startChar": 24,
        "endLine": 263,
        "endChar": 71
      },
      "revId": "65854b599991ed8921466135e301977a23ff1502",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d4e2a3ab_5503446f",
        "filename": "src/dawn_native/ComputePassEncoder.cpp",
        "patchSetId": 4
      },
      "lineNbr": 38,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-10-25T12:05:47Z",
      "side": 1,
      "message": "nit: maybe use an early out to dedent the rest of the code.",
      "revId": "65854b599991ed8921466135e301977a23ff1502",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "72b7c092_82fa4aaf",
        "filename": "src/dawn_native/ComputePassEncoder.cpp",
        "patchSetId": 4
      },
      "lineNbr": 38,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2021-10-28T01:35:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d4e2a3ab_5503446f",
      "revId": "65854b599991ed8921466135e301977a23ff1502",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "339e39e7_330f631b",
        "filename": "src/dawn_native/ComputePassEncoder.cpp",
        "patchSetId": 4
      },
      "lineNbr": 43,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-10-25T12:05:47Z",
      "side": 1,
      "message": "Slight preference for using a uniform buffer here for the offsets in params and the limit. It is slightly more verbose but it remove magic and will avoid hardcoding a limit for when we have a renderer vs. device concept.",
      "revId": "65854b599991ed8921466135e301977a23ff1502",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "24605837_bced57a6",
        "filename": "src/dawn_native/ComputePassEncoder.cpp",
        "patchSetId": 4
      },
      "lineNbr": 43,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2021-10-28T01:35:33Z",
      "side": 1,
      "message": "ok I made a uniform buffer, but if you diff patchsets 11 and 12, I can\u0027t understand why Patchset 11 is getting some weird failures. Maybe I\u0027m creating the buffer too early in the device creation phase and it\u0027s causing some wild behavior. Maybe I\u0027m missing something else obvious??\n\nPatchset 11 makes the buffer at the beginning of time. Patchset 12 makes one per dispatchIndirect.",
      "parentUuid": "339e39e7_330f631b",
      "revId": "65854b599991ed8921466135e301977a23ff1502",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c0905d47_25c74319",
        "filename": "src/dawn_native/ComputePassEncoder.cpp",
        "patchSetId": 4
      },
      "lineNbr": 43,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-10-28T14:33:10Z",
      "side": 1,
      "message": "I\u0027m not sure, I feel that it should be working. The only thing the D3D12 backend does is NextSerial() but I don\u0027t know how that would change things.",
      "parentUuid": "24605837_bced57a6",
      "revId": "65854b599991ed8921466135e301977a23ff1502",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "08e88323_33b4460f",
        "filename": "src/dawn_native/ComputePassEncoder.cpp",
        "patchSetId": 4
      },
      "lineNbr": 43,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2021-10-28T20:06:12Z",
      "side": 1,
      "message": "can\u0027t repo/debug this right now, so keeping the uniform buffer per dispatchIndirect for now",
      "parentUuid": "c0905d47_25c74319",
      "revId": "65854b599991ed8921466135e301977a23ff1502",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f7f59888_a88c9594",
        "filename": "src/dawn_native/ComputePassEncoder.cpp",
        "patchSetId": 4
      },
      "lineNbr": 43,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2021-10-29T01:21:02Z",
      "side": 1,
      "message": "Oh it\u0027s really unfortunate that we fail to reuse that buffer for all the dispatchIndirect calls.",
      "parentUuid": "08e88323_33b4460f",
      "revId": "65854b599991ed8921466135e301977a23ff1502",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "752c9c69_b1155e47",
        "filename": "src/dawn_native/ComputePassEncoder.cpp",
        "patchSetId": 4
      },
      "lineNbr": 43,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-10-29T12:17:55Z",
      "side": 1,
      "message": "It\u0027s ok, we can optimize to have some aggregate buffer for all such operations in the future. Or push constants ;)",
      "parentUuid": "f7f59888_a88c9594",
      "revId": "65854b599991ed8921466135e301977a23ff1502",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0fe216bc_b4adbb6d",
        "filename": "src/dawn_native/ComputePassEncoder.cpp",
        "patchSetId": 4
      },
      "lineNbr": 66,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2021-10-25T02:02:23Z",
      "side": 1,
      "message": "The comments are too long in one line.",
      "range": {
        "startLine": 63,
        "startChar": 24,
        "endLine": 66,
        "endChar": 104
      },
      "revId": "65854b599991ed8921466135e301977a23ff1502",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "de486ab3_15d75ccb",
        "filename": "src/dawn_native/ComputePassEncoder.cpp",
        "patchSetId": 4
      },
      "lineNbr": 66,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2021-10-28T01:35:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0fe216bc_b4adbb6d",
      "range": {
        "startLine": 63,
        "startChar": 24,
        "endLine": 66,
        "endChar": 104
      },
      "revId": "65854b599991ed8921466135e301977a23ff1502",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "90920c21_ca9a2fe6",
        "filename": "src/dawn_native/ComputePassEncoder.cpp",
        "patchSetId": 4
      },
      "lineNbr": 85,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-10-25T12:05:47Z",
      "side": 1,
      "message": "Maybe we should duplicate some of WGPUHelpers.h in dawn_native (the MakeBindGroupLayout and MakeBindGroup helpers in particular, maybe MakePipelineLayout). WDYT?",
      "revId": "65854b599991ed8921466135e301977a23ff1502",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1beb8aa9_a8be9cc1",
        "filename": "src/dawn_native/ComputePassEncoder.cpp",
        "patchSetId": 4
      },
      "lineNbr": 85,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2021-10-28T01:35:33Z",
      "side": 1,
      "message": "I don\u0027t think the verbosity is so so bad, so I don\u0027t feel strongly, but I can dup some helpers if you like. Mostly did not do it because I ran out of time today.",
      "parentUuid": "90920c21_ca9a2fe6",
      "revId": "65854b599991ed8921466135e301977a23ff1502",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b90a4e06_7d3d7ef7",
        "filename": "src/dawn_native/ComputePassEncoder.cpp",
        "patchSetId": 4
      },
      "lineNbr": 85,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-10-28T14:33:10Z",
      "side": 1,
      "message": "Sounds good, we can easily do it later.",
      "parentUuid": "1beb8aa9_a8be9cc1",
      "revId": "65854b599991ed8921466135e301977a23ff1502",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "585dee2d_f29cdff9",
        "filename": "src/dawn_native/ComputePassEncoder.cpp",
        "patchSetId": 4
      },
      "lineNbr": 85,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-10-28T14:33:10Z",
      "side": 1,
      "message": "Sounds good, we can easily do it later.",
      "parentUuid": "1beb8aa9_a8be9cc1",
      "revId": "65854b599991ed8921466135e301977a23ff1502",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "73e863f8_261d0bb6",
        "filename": "src/dawn_native/ComputePassEncoder.cpp",
        "patchSetId": 4
      },
      "lineNbr": 85,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-10-29T12:17:55Z",
      "side": 1,
      "message": "Actually if you don\u0027t mind, could we do it in a later CL? We Dawn reentrantly in 4 places at least right now and it would be nice to have the simplications.",
      "parentUuid": "b90a4e06_7d3d7ef7",
      "revId": "65854b599991ed8921466135e301977a23ff1502",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "716823b5_39d233b2",
        "filename": "src/dawn_native/ComputePassEncoder.cpp",
        "patchSetId": 4
      },
      "lineNbr": 85,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2021-10-29T16:35:02Z",
      "side": 1,
      "message": "Ok, will do.",
      "parentUuid": "73e863f8_261d0bb6",
      "revId": "65854b599991ed8921466135e301977a23ff1502",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c2c5374b_6a896219",
        "filename": "src/dawn_native/ComputePassEncoder.cpp",
        "patchSetId": 4
      },
      "lineNbr": 281,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-10-25T12:05:47Z",
      "side": 1,
      "message": "It seems this might be a good helper function and might even be merged with CreateIndirectDispatchValidationResources (there isn\u0027t much left after the addition of the uniform buffer and the MakeBindGroup). If the helper method modifies indirectBuffer and indirectOffset directly then we can reuse most of the code at [1]",
      "revId": "65854b599991ed8921466135e301977a23ff1502",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "603dc915_25af4274",
        "filename": "src/dawn_native/ComputePassEncoder.cpp",
        "patchSetId": 4
      },
      "lineNbr": 281,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2021-10-28T01:35:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c2c5374b_6a896219",
      "revId": "65854b599991ed8921466135e301977a23ff1502",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3ad126d6_363f5b1d",
        "filename": "src/dawn_native/ComputePassEncoder.cpp",
        "patchSetId": 4
      },
      "lineNbr": 308,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-10-25T12:05:47Z",
      "side": 1,
      "message": "What about indirect offsets? Should we store them in the CommandBufferStateTracker somewhere? (also a test please 😊)",
      "revId": "65854b599991ed8921466135e301977a23ff1502",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "745a497c_520a592a",
        "filename": "src/dawn_native/ComputePassEncoder.cpp",
        "patchSetId": 4
      },
      "lineNbr": 308,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2021-10-28T01:35:33Z",
      "side": 1,
      "message": "Made a new test suite for checking transformations to the command encoding stream",
      "parentUuid": "3ad126d6_363f5b1d",
      "revId": "65854b599991ed8921466135e301977a23ff1502",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e9e87df4_b8a25363",
        "filename": "src/dawn_native/ComputePassEncoder.cpp",
        "patchSetId": 4
      },
      "lineNbr": 310,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-10-25T12:05:47Z",
      "side": 1,
      "message": "nit: previous",
      "range": {
        "startLine": 310,
        "startChar": 63,
        "endLine": 310,
        "endChar": 70
      },
      "revId": "65854b599991ed8921466135e301977a23ff1502",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c35581f4_efad11d1",
        "filename": "src/dawn_native/ComputePassEncoder.cpp",
        "patchSetId": 4
      },
      "lineNbr": 310,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2021-10-28T01:35:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e9e87df4_b8a25363",
      "range": {
        "startLine": 310,
        "startChar": 63,
        "endLine": 310,
        "endChar": 70
      },
      "revId": "65854b599991ed8921466135e301977a23ff1502",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6be5855f_b49356cf",
        "filename": "src/dawn_native/ComputePassEncoder.cpp",
        "patchSetId": 4
      },
      "lineNbr": 329,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-10-25T12:05:47Z",
      "side": 1,
      "message": "[1]",
      "revId": "65854b599991ed8921466135e301977a23ff1502",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f78df03b_597de8c6",
        "filename": "src/dawn_native/ComputePassEncoder.cpp",
        "patchSetId": 4
      },
      "lineNbr": 329,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2021-10-28T01:35:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6be5855f_b49356cf",
      "revId": "65854b599991ed8921466135e301977a23ff1502",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d45745d4_2eb24fd3",
        "filename": "src/tests/end2end/ComputeDispatchTests.cpp",
        "patchSetId": 4
      },
      "lineNbr": 244,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2021-10-21T15:15:07Z",
      "side": 1,
      "message": "need to skip this and the next test if validation is disabled",
      "revId": "65854b599991ed8921466135e301977a23ff1502",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c8605009_c83e9881",
        "filename": "src/tests/end2end/ComputeDispatchTests.cpp",
        "patchSetId": 4
      },
      "lineNbr": 244,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2021-10-28T01:35:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d45745d4_2eb24fd3",
      "revId": "65854b599991ed8921466135e301977a23ff1502",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}