{
  "comments": [
    {
      "key": {
        "uuid": "15ae1de6_28013ce7",
        "filename": "src/dawn_native/ErrorScope.cpp",
        "patchSetId": 5
      },
      "lineNbr": 61,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2019-09-09T21:02:39Z",
      "side": 1,
      "message": "optional: Not sure if it would be better, but any reason to make this iterative instead of recursive? Seems like it might be a little clearer.",
      "revId": "12568b8af4233a7458c5ffdfbedbc14d0d73eb69",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1a9b62c5_d833179f",
        "filename": "src/dawn_native/ErrorScope.cpp",
        "patchSetId": 5
      },
      "lineNbr": 61,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2019-09-09T21:55:11Z",
      "side": 1,
      "message": "Recursive should be avoided if we can because it would be too easy for a JS app to do a stack overflow.",
      "parentUuid": "15ae1de6_28013ce7",
      "revId": "12568b8af4233a7458c5ffdfbedbc14d0d73eb69",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ef13bc2c_de61419f",
        "filename": "src/dawn_native/ErrorScope.cpp",
        "patchSetId": 5
      },
      "lineNbr": 61,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2019-09-09T22:35:52Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "1a9b62c5_d833179f",
      "revId": "12568b8af4233a7458c5ffdfbedbc14d0d73eb69",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "436cd573_9ecefee8",
        "filename": "src/dawn_native/ErrorScope.cpp",
        "patchSetId": 5
      },
      "lineNbr": 68,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2019-09-09T21:02:39Z",
      "side": 1,
      "message": "optional: Could merge with default case",
      "revId": "12568b8af4233a7458c5ffdfbedbc14d0d73eb69",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "67cc091d_f8de2aed",
        "filename": "src/dawn_native/ErrorScope.cpp",
        "patchSetId": 5
      },
      "lineNbr": 68,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2019-09-09T22:35:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "436cd573_9ecefee8",
      "revId": "12568b8af4233a7458c5ffdfbedbc14d0d73eb69",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0d3910be_348eb29a",
        "filename": "src/dawn_native/RefCounted.h",
        "patchSetId": 5
      },
      "lineNbr": 128,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2019-09-09T21:02:39Z",
      "side": 1,
      "message": "I think there are a few other places we should use this, e.g.\nhttps://dawn-review.googlesource.com/c/dawn/+/10820/5/src/dawn_native/opengl/TextureGL.cpp#253",
      "revId": "12568b8af4233a7458c5ffdfbedbc14d0d73eb69",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2eb8bbd2_64e16932",
        "filename": "src/dawn_native/RefCounted.h",
        "patchSetId": 5
      },
      "lineNbr": 128,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2019-09-09T22:35:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0d3910be_348eb29a",
      "revId": "12568b8af4233a7458c5ffdfbedbc14d0d73eb69",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "404dc57f_dfdea6a0",
        "filename": "src/tests/unittests/validation/ErrorScopeValidationTests.cpp",
        "patchSetId": 5
      },
      "lineNbr": 104,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2019-09-09T21:02:39Z",
      "side": 1,
      "message": "For these two tests, is it possible to also make sure it doesn\u0027t bubble to uncapturederror?",
      "revId": "12568b8af4233a7458c5ffdfbedbc14d0d73eb69",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c5681ad2_2f95c0f4",
        "filename": "src/tests/unittests/validation/ErrorScopeValidationTests.cpp",
        "patchSetId": 5
      },
      "lineNbr": 104,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2019-09-09T21:07:17Z",
      "side": 1,
      "message": "https://cs.chromium.org/chromium/src/third_party/dawn/src/tests/DawnTest.cpp?sq\u003dpackage:chromium\u0026g\u003d0\u0026l\u003d491 will handle that.",
      "parentUuid": "404dc57f_dfdea6a0",
      "revId": "12568b8af4233a7458c5ffdfbedbc14d0d73eb69",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0bf10a2c_21703eea",
        "filename": "src/tests/unittests/validation/ErrorScopeValidationTests.cpp",
        "patchSetId": 5
      },
      "lineNbr": 104,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2019-09-09T22:35:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c5681ad2_2f95c0f4",
      "revId": "12568b8af4233a7458c5ffdfbedbc14d0d73eb69",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3ac604d4_0bd1a8aa",
        "filename": "src/tests/unittests/validation/ErrorScopeValidationTests.cpp",
        "patchSetId": 5
      },
      "lineNbr": 117,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2019-09-09T21:02:39Z",
      "side": 1,
      "message": "And here that it does bubble to uncaptured error?",
      "revId": "12568b8af4233a7458c5ffdfbedbc14d0d73eb69",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "09b9ff3f_63741d89",
        "filename": "src/tests/unittests/validation/ErrorScopeValidationTests.cpp",
        "patchSetId": 5
      },
      "lineNbr": 117,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2019-09-09T21:07:17Z",
      "side": 1,
      "message": "https://cs.chromium.org/chromium/src/third_party/dawn/src/tests/DawnTest.cpp?sq\u003dpackage:chromium\u0026g\u003d0\u0026l\u003d491 will handle that.",
      "parentUuid": "3ac604d4_0bd1a8aa",
      "revId": "12568b8af4233a7458c5ffdfbedbc14d0d73eb69",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "41ec2a2a_2b23033d",
        "filename": "src/tests/unittests/validation/ErrorScopeValidationTests.cpp",
        "patchSetId": 5
      },
      "lineNbr": 117,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2019-09-09T22:35:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "09b9ff3f_63741d89",
      "revId": "12568b8af4233a7458c5ffdfbedbc14d0d73eb69",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4232d95a_190236e6",
        "filename": "src/tests/unittests/validation/ErrorScopeValidationTests.cpp",
        "patchSetId": 5
      },
      "lineNbr": 117,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2019-09-10T21:30:11Z",
      "side": 1,
      "message": "Seems like that only checks there isn\u0027t an error, but here we expect there is.",
      "parentUuid": "41ec2a2a_2b23033d",
      "revId": "12568b8af4233a7458c5ffdfbedbc14d0d73eb69",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "47d8690f_d734b777",
        "filename": "src/tests/unittests/validation/ErrorScopeValidationTests.cpp",
        "patchSetId": 5
      },
      "lineNbr": 117,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2019-09-10T21:55:28Z",
      "side": 1,
      "message": "Discussed offline that the uncaptured error callback does get called and is caught by the ASSERT_DEVICE_ERROR macro.",
      "parentUuid": "4232d95a_190236e6",
      "revId": "12568b8af4233a7458c5ffdfbedbc14d0d73eb69",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    }
  ]
}