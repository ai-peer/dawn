{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "28658674_5ca4089c",
        "filename": "src/tint/fuzzers/tint_ast_fuzzer/mutations/wrap_unary_operator.cc",
        "patchSetId": 6
      },
      "lineNbr": 103,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2022-07-19T15:40:37Z",
      "side": 1,
      "message": "Out of curiousity, does this cover vector\u003cAbstractInt\u003e? (Is that covered by _or_vector)?",
      "revId": "fca448c446824f975d8929783b8fbbd7bada7c96",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f1c1497b_98759220",
        "filename": "src/tint/resolver/const_eval.cc",
        "patchSetId": 6
      },
      "lineNbr": 75,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2022-07-19T15:34:23Z",
      "side": 1,
      "message": "Late comment, sorry, I forgot to look at this again.\nThis doesn\u0027t really gain anything by being templated with `TypesTuple` any more - could we not just have separate\n\n`aiu32Dispatch()`, `afi32f16Dispatch()` \n\nfunctions? Can be done as a followup.",
      "range": {
        "startLine": 55,
        "startChar": 0,
        "endLine": 75,
        "endChar": 1
      },
      "revId": "fca448c446824f975d8929783b8fbbd7bada7c96",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c36b6a99_442f190f",
        "filename": "src/tint/resolver/const_eval.cc",
        "patchSetId": 6
      },
      "lineNbr": 75,
      "author": {
        "id": 1002361
      },
      "writtenOn": "2022-07-19T15:40:06Z",
      "side": 1,
      "message": "The reason I did this is because I\u0027m still hoping we can eventually find a way to make the compiler generate the code for the types in the tuple. I was thinking along the lines of the `overloaded` utility often used for std::visit (see https://en.cppreference.com/w/cpp/utility/variant/visit). If we could create an overload set of callbacks and pass that to Switch, we\u0027d be able to generate these.\n\nIf it doesn\u0027t work out, then yeah, no problem with splitting this up into separate functions.",
      "parentUuid": "f1c1497b_98759220",
      "range": {
        "startLine": 55,
        "startChar": 0,
        "endLine": 75,
        "endChar": 1
      },
      "revId": "fca448c446824f975d8929783b8fbbd7bada7c96",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f29b6b53_4974f01a",
        "filename": "src/tint/resolver/const_eval_test.cc",
        "patchSetId": 6
      },
      "lineNbr": 2949,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2022-07-19T15:40:37Z",
      "side": 1,
      "message": "Does this need an f16 entry? Or a todo for one?",
      "revId": "fca448c446824f975d8929783b8fbbd7bada7c96",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}