{
  "comments": [
    {
      "key": {
        "uuid": "bd015da4_527a60db",
        "filename": "src/dawn_native/BindGroup.cpp",
        "patchSetId": 2
      },
      "lineNbr": 201,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-03-24T09:49:05Z",
      "side": 1,
      "message": "nit: // anonymous namespace",
      "revId": "82fef5e2f3855c1a5b8f23c2e4572accbe2f2588",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7cfdb7cf_923c8283",
        "filename": "src/dawn_native/vulkan/BindGroupVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 96,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-03-24T09:49:05Z",
      "side": 1,
      "message": "I think this should be VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL for readonly storage textures and GENERAL for writeonly.",
      "revId": "82fef5e2f3855c1a5b8f23c2e4572accbe2f2588",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8ea927fe_55c0bc3a",
        "filename": "src/dawn_native/vulkan/BindGroupVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 96,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2020-03-24T10:26:45Z",
      "side": 1,
      "message": "According to https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/VkImageLayout.html, for VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL, \"this layout is valid only for image subresources of images created with the VK_IMAGE_USAGE_SAMPLED_BIT or VK_IMAGE_USAGE_INPUT_ATTACHMENT_BIT usage bit enabled\". On Vulkan backend we can only ensure VK_IMAGE_USAGE_STORAGE_BIT is set for storage texture usage, so we cannot always set VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL for all storage textures on Vulkan.",
      "parentUuid": "7cfdb7cf_923c8283",
      "revId": "82fef5e2f3855c1a5b8f23c2e4572accbe2f2588",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "957ee5ea_da655c93",
        "filename": "src/dawn_native/vulkan/BindGroupVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 96,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-03-24T10:29:50Z",
      "side": 1,
      "message": "Thanks for the pointer, this makes sense. It also says that it\u0027s only allowed for sampled images. combined image and sampler, or input attachments. So not for non-sampled access.",
      "parentUuid": "8ea927fe_55c0bc3a",
      "revId": "82fef5e2f3855c1a5b8f23c2e4572accbe2f2588",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "23ac7308_88acdf96",
        "filename": "src/dawn_native/vulkan/BindGroupVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 96,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2020-03-24T18:02:41Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "957ee5ea_da655c93",
      "revId": "82fef5e2f3855c1a5b8f23c2e4572accbe2f2588",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b10f761d_82a47a5a",
        "filename": "src/tests/unittests/validation/StorageTextureValidationTests.cpp",
        "patchSetId": 2
      },
      "lineNbr": 660,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-03-24T09:49:05Z",
      "side": 1,
      "message": "nit: partial aggregate initialization is a bit confusing here because it\u0027s not clear what\u0027s defaulted and what\u0027s not. Consider doing the following:\n\n  wgpu::BindGroupLayoutBinding binding; // We can rely on the default values set here\n  binding.binding \u003d ...;\n  binding.type \u003d ...;\n  binding.visibility \u003d ...;\n  binding.storageTextureFormat \u003d ...;\n  binding.hasDynamicOffset \u003d true;",
      "revId": "82fef5e2f3855c1a5b8f23c2e4572accbe2f2588",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7bb5c5e6_ac4c04d0",
        "filename": "src/tests/unittests/validation/StorageTextureValidationTests.cpp",
        "patchSetId": 2
      },
      "lineNbr": 673,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2020-03-24T18:02:41Z",
      "side": 1,
      "message": "ditto on partial aggregate initializer",
      "revId": "82fef5e2f3855c1a5b8f23c2e4572accbe2f2588",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "960bd964_107a7bcb",
        "filename": "src/tests/unittests/validation/StorageTextureValidationTests.cpp",
        "patchSetId": 2
      },
      "lineNbr": 693,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-03-24T09:49:05Z",
      "side": 1,
      "message": "nit: can we have a control case with a texture?",
      "revId": "82fef5e2f3855c1a5b8f23c2e4572accbe2f2588",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a84bc452_00f446df",
        "filename": "src/tests/unittests/validation/StorageTextureValidationTests.cpp",
        "patchSetId": 2
      },
      "lineNbr": 708,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-03-24T09:49:05Z",
      "side": 1,
      "message": "ditto",
      "revId": "82fef5e2f3855c1a5b8f23c2e4572accbe2f2588",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4ddfb524_c78eb38c",
        "filename": "src/tests/unittests/validation/StorageTextureValidationTests.cpp",
        "patchSetId": 2
      },
      "lineNbr": 735,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-03-24T09:49:05Z",
      "side": 1,
      "message": "ditto",
      "revId": "82fef5e2f3855c1a5b8f23c2e4572accbe2f2588",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "61377e13_666302d7",
        "filename": "src/tests/unittests/validation/StorageTextureValidationTests.cpp",
        "patchSetId": 2
      },
      "lineNbr": 794,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-03-24T09:49:05Z",
      "side": 1,
      "message": "ditto",
      "revId": "82fef5e2f3855c1a5b8f23c2e4572accbe2f2588",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    }
  ]
}