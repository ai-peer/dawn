{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "3a8f1c44_5267b9df",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 19
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-12-09T08:30:26Z",
      "side": 1,
      "message": "Still LGTM, I think we should CQ+2 and I\u0027ll try to do some simplification that I\u0027m not sure are possible in a follow up. Jie, is there a simple way to run these tests on a Linux machine so I can make modifications and make sure I don\u0027t break ChromeOS? ^^",
      "revId": "51620165ffcfd484f65f822b28c58e97bfcd9b6b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "33201fe6_3964b412",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 19
      },
      "lineNbr": 0,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2021-12-09T08:44:23Z",
      "side": 1,
      "message": "The tests can only run on ChromeOS now. For Linux, probably I will need to do something similar in MemoryServiceOpaqueFD as I am doing in MemoryServiceDmaBuf. Then we could have a chance to support 0-copy import on Linux as well.",
      "parentUuid": "3a8f1c44_5267b9df",
      "revId": "51620165ffcfd484f65f822b28c58e97bfcd9b6b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8689a816_95b45b53",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 19
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-12-09T08:50:34Z",
      "side": 1,
      "message": "Ok, is there a Chromium CQ that the test run on? I could use that as a proxy to know if I break things.",
      "parentUuid": "33201fe6_3964b412",
      "revId": "51620165ffcfd484f65f822b28c58e97bfcd9b6b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a0392a2c_8e04d135",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 19
      },
      "lineNbr": 0,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2021-12-09T08:57:55Z",
      "side": 1,
      "message": "I afraid not, as we haven\u0027t done the corresponding CL in blink.",
      "parentUuid": "8689a816_95b45b53",
      "revId": "51620165ffcfd484f65f822b28c58e97bfcd9b6b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "405bd259_2983270d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 19
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-12-09T09:01:33Z",
      "side": 1,
      "message": "Even just the Dawn end2end tests? Ok, then I\u0027ll try my best to test compilation, and might ask you to review and test to see if I broke anything.",
      "parentUuid": "a0392a2c_8e04d135",
      "revId": "51620165ffcfd484f65f822b28c58e97bfcd9b6b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cd0f11c2_46b25864",
        "filename": "src/dawn_native/vulkan/external_memory/MemoryServiceDmaBuf.cpp",
        "patchSetId": 19
      },
      "lineNbr": 32,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-12-09T08:30:26Z",
      "side": 1,
      "message": "u-u-nit: usually we pass out arguments as pointers so it\u0027s clear in the caller that it will be modified.",
      "range": {
        "startLine": 32,
        "startChar": 36,
        "endLine": 32,
        "endChar": 68
      },
      "revId": "51620165ffcfd484f65f822b28c58e97bfcd9b6b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e9b5d89b_97648641",
        "filename": "src/dawn_native/vulkan/external_memory/MemoryServiceDmaBuf.cpp",
        "patchSetId": 19
      },
      "lineNbr": 32,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2021-12-09T08:57:55Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cd0f11c2_46b25864",
      "range": {
        "startLine": 32,
        "startChar": 36,
        "endLine": 32,
        "endChar": 68
      },
      "revId": "51620165ffcfd484f65f822b28c58e97bfcd9b6b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d51e7608_6f7cd863",
        "filename": "src/dawn_native/vulkan/external_memory/MemoryServiceDmaBuf.cpp",
        "patchSetId": 19
      },
      "lineNbr": 68,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-12-09T08:30:26Z",
      "side": 1,
      "message": "u-u-nit: just return directly?",
      "revId": "51620165ffcfd484f65f822b28c58e97bfcd9b6b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "177d72db_88da0f54",
        "filename": "src/dawn_native/vulkan/external_memory/MemoryServiceDmaBuf.cpp",
        "patchSetId": 19
      },
      "lineNbr": 68,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2021-12-09T08:57:55Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d51e7608_6f7cd863",
      "revId": "51620165ffcfd484f65f822b28c58e97bfcd9b6b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f552dcc9_68066fc5",
        "filename": "src/dawn_native/vulkan/external_memory/MemoryServiceDmaBuf.cpp",
        "patchSetId": 19
      },
      "lineNbr": 68,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2021-12-09T08:57:55Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d51e7608_6f7cd863",
      "revId": "51620165ffcfd484f65f822b28c58e97bfcd9b6b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}