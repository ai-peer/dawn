{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "a31143bf_a25c2410",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 12
      },
      "lineNbr": 0,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2022-08-04T03:29:28Z",
      "side": 1,
      "message": "LGTM overall",
      "revId": "b0b32fe4c80c0cb89c3a55d095dc8e4961aa707c",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "853f4504_8b7982db",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 12
      },
      "lineNbr": 0,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2022-08-04T08:28:54Z",
      "side": 1,
      "message": "Thanks for reviewing.",
      "parentUuid": "a31143bf_a25c2410",
      "revId": "b0b32fe4c80c0cb89c3a55d095dc8e4961aa707c",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "58d1ca93_ad301951",
        "filename": "src/dawn/native/vulkan/DeviceVk.cpp",
        "patchSetId": 12
      },
      "lineNbr": 267,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2022-08-04T03:29:28Z",
      "side": 1,
      "message": "I think we need to vkDestroySemaphore this after exporting the handles",
      "range": {
        "startLine": 267,
        "startChar": 24,
        "endLine": 267,
        "endChar": 39
      },
      "revId": "b0b32fe4c80c0cb89c3a55d095dc8e4961aa707c",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0ba66c56_2b5d796e",
        "filename": "src/dawn/native/vulkan/DeviceVk.cpp",
        "patchSetId": 12
      },
      "lineNbr": 267,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2022-08-04T08:28:54Z",
      "side": 1,
      "message": "We don\u0027t need to do that as exporting itself transfers the ownership of semaphore. Actually the handles become invalid in chromium if destroyed in Dawn. \n```\nEach call to vkGetSemaphoreFdKHR must create a new file descriptor and transfer ownership of it to the application. To avoid leaking resources, the application must release ownership of the file descriptor when it is no longer needed.\n```",
      "parentUuid": "58d1ca93_ad301951",
      "range": {
        "startLine": 267,
        "startChar": 24,
        "endLine": 267,
        "endChar": 39
      },
      "revId": "b0b32fe4c80c0cb89c3a55d095dc8e4961aa707c",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9a24a55f_a9b9aea5",
        "filename": "src/dawn/native/vulkan/DeviceVk.cpp",
        "patchSetId": 12
      },
      "lineNbr": 267,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2022-08-04T17:21:56Z",
      "side": 1,
      "message": "Ah, I was confused because I saw the calls to delete the semaphores were deleted in the old code and I didn\u0027t see them added.\nNow I see that the previous calls were handling cleanup in the error cases.\nI think we may need to do the same here - if any of the DAWN_TRYs below fail before the handle is stored in the textures in UpdateExternalSemaphoreHandle, then the semaphore will never be exported and it will leak.\n\nPerhaps we need to make a small scoped wrapper around the semaphore which will clean it up if it is not yet consumed by the export",
      "parentUuid": "0ba66c56_2b5d796e",
      "range": {
        "startLine": 267,
        "startChar": 24,
        "endLine": 267,
        "endChar": 39
      },
      "revId": "b0b32fe4c80c0cb89c3a55d095dc8e4961aa707c",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7a4caedf_d23c2559",
        "filename": "src/dawn/native/vulkan/DeviceVk.cpp",
        "patchSetId": 12
      },
      "lineNbr": 267,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2022-08-05T05:14:20Z",
      "side": 1,
      "message": "Good catching, done!",
      "parentUuid": "9a24a55f_a9b9aea5",
      "range": {
        "startLine": 267,
        "startChar": 24,
        "endLine": 267,
        "endChar": 39
      },
      "revId": "b0b32fe4c80c0cb89c3a55d095dc8e4961aa707c",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "947fc21e_3d198aed",
        "filename": "src/dawn/native/vulkan/DeviceVk.cpp",
        "patchSetId": 12
      },
      "lineNbr": 267,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-08-08T08:56:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7a4caedf_d23c2559",
      "range": {
        "startLine": 267,
        "startChar": 24,
        "endLine": 267,
        "endChar": 39
      },
      "revId": "b0b32fe4c80c0cb89c3a55d095dc8e4961aa707c",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0b3226eb_a135e90f",
        "filename": "src/dawn/native/vulkan/DeviceVk.h",
        "patchSetId": 12
      },
      "lineNbr": 185,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2022-08-04T03:29:28Z",
      "side": 1,
      "message": "do we need this to be shared_ptr?\nThe only other use of it in this CL is for Texture, in DestroyImpl where we are guaranteed to have a valid Device\n\nWe also don\u0027t need to pass it into Texture::CreateFromExternal. The Texture can just ask for the Semaphore service from the device.",
      "range": {
        "startLine": 185,
        "startChar": 0,
        "endLine": 185,
        "endChar": 75
      },
      "revId": "b0b32fe4c80c0cb89c3a55d095dc8e4961aa707c",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a80a4f7a_6d283d76",
        "filename": "src/dawn/native/vulkan/DeviceVk.h",
        "patchSetId": 12
      },
      "lineNbr": 185,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2022-08-04T08:28:54Z",
      "side": 1,
      "message": "Sounds good.",
      "parentUuid": "0b3226eb_a135e90f",
      "range": {
        "startLine": 185,
        "startChar": 0,
        "endLine": 185,
        "endChar": 75
      },
      "revId": "b0b32fe4c80c0cb89c3a55d095dc8e4961aa707c",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2814fca2_b67e9161",
        "filename": "src/dawn/native/vulkan/DeviceVk.h",
        "patchSetId": 12
      },
      "lineNbr": 185,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-08-08T08:56:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a80a4f7a_6d283d76",
      "range": {
        "startLine": 185,
        "startChar": 0,
        "endLine": 185,
        "endChar": 75
      },
      "revId": "b0b32fe4c80c0cb89c3a55d095dc8e4961aa707c",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "28b88af2_f118ebdc",
        "filename": "src/dawn/native/vulkan/TextureVk.cpp",
        "patchSetId": 12
      },
      "lineNbr": 620,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2022-08-04T03:29:28Z",
      "side": 1,
      "message": "nit: std::move",
      "range": {
        "startLine": 620,
        "startChar": 64,
        "endLine": 620,
        "endChar": 88
      },
      "revId": "b0b32fe4c80c0cb89c3a55d095dc8e4961aa707c",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "30f2fa51_e4bdaa02",
        "filename": "src/dawn/native/vulkan/TextureVk.cpp",
        "patchSetId": 12
      },
      "lineNbr": 620,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2022-08-04T08:28:54Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "28b88af2_f118ebdc",
      "range": {
        "startLine": 620,
        "startChar": 64,
        "endLine": 620,
        "endChar": 88
      },
      "revId": "b0b32fe4c80c0cb89c3a55d095dc8e4961aa707c",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "996d6d0d_2b555ed8",
        "filename": "src/dawn/native/vulkan/TextureVk.cpp",
        "patchSetId": 12
      },
      "lineNbr": 869,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2022-08-04T03:29:28Z",
      "side": 1,
      "message": "nit: prefer to write out VkLayout since it\u0027s short",
      "range": {
        "startLine": 869,
        "startChar": 4,
        "endLine": 869,
        "endChar": 8
      },
      "revId": "b0b32fe4c80c0cb89c3a55d095dc8e4961aa707c",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "835f49a6_d945b4e5",
        "filename": "src/dawn/native/vulkan/TextureVk.cpp",
        "patchSetId": 12
      },
      "lineNbr": 869,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2022-08-04T08:28:54Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "996d6d0d_2b555ed8",
      "range": {
        "startLine": 869,
        "startChar": 4,
        "endLine": 869,
        "endChar": 8
      },
      "revId": "b0b32fe4c80c0cb89c3a55d095dc8e4961aa707c",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6df7acd4_39759130",
        "filename": "src/dawn/tests/white_box/VulkanImageWrappingTests.cpp",
        "patchSetId": 12
      },
      "lineNbr": 308,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2022-08-04T03:29:28Z",
      "side": 1,
      "message": "could all these tests be enabled if we pass UNDEFINED for the layout to mBackend-\u003eExportImage?",
      "revId": "b0b32fe4c80c0cb89c3a55d095dc8e4961aa707c",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1cb22d88_2c973d6c",
        "filename": "src/dawn/tests/white_box/VulkanImageWrappingTests.cpp",
        "patchSetId": 12
      },
      "lineNbr": 308,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2022-08-04T08:28:54Z",
      "side": 1,
      "message": "Some tests would fail.\nI tried that in this CL: https://dawn-review.googlesource.com/c/dawn/+/98048\nThere were some bots failures.",
      "parentUuid": "6df7acd4_39759130",
      "revId": "b0b32fe4c80c0cb89c3a55d095dc8e4961aa707c",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "92db4b7f_74f11437",
        "filename": "src/dawn/tests/white_box/VulkanImageWrappingTests.cpp",
        "patchSetId": 12
      },
      "lineNbr": 308,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2022-08-04T17:21:56Z",
      "side": 1,
      "message": "Ideally we should get these tests running to have more coverage.\n\nLooks like there\u0027s a VVL error since the layouts are wrong which indicates we have the transitions incorrectly.\n\n\u003e Validation Error: [ SYNC-HAZARD-READ_AFTER_WRITE ] Object 0: handle \u003d 0xacc9b00000acc9b, name \u003d DawnDbg\u003d3488;Dawn_ExternalTexture, type \u003d VK_OBJECT_TYPE_IMAGE; | MessageID \u003d 0x4cb75b2d | vkCmdCopyImageToBuffer: Hazard READ_AFTER_WRITE for srcImage VkImage 0xacc9b00000acc9b[DawnDbg\u003d3488;Dawn_ExternalTexture], region 0. Access info (usage: SYNC_COPY_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).",
      "parentUuid": "1cb22d88_2c973d6c",
      "revId": "b0b32fe4c80c0cb89c3a55d095dc8e4961aa707c",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "66844db3_da6ef6ca",
        "filename": "src/dawn/tests/white_box/VulkanImageWrappingTests.cpp",
        "patchSetId": 12
      },
      "lineNbr": 308,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2022-08-05T05:14:20Z",
      "side": 1,
      "message": "If the desired layout for export is not VK_IMAGE_LAYOUT_UNDEFINED, we can fallback to forcing an extra submit. This way I have gotten these tests back.",
      "parentUuid": "92db4b7f_74f11437",
      "revId": "b0b32fe4c80c0cb89c3a55d095dc8e4961aa707c",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "313dfc5c_e59c57df",
        "filename": "src/dawn/tests/white_box/VulkanImageWrappingTests.cpp",
        "patchSetId": 12
      },
      "lineNbr": 308,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-08-08T08:56:37Z",
      "side": 1,
      "message": "Do we have any test that doesn\u0027t export with VK_IMAGE_LAYOUT_UNDEFINED so we have coverage of the new code path that doesn\u0027t do an additional submit?",
      "parentUuid": "66844db3_da6ef6ca",
      "revId": "b0b32fe4c80c0cb89c3a55d095dc8e4961aa707c",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f19f288b_39673680",
        "filename": "src/dawn/tests/white_box/VulkanImageWrappingTests.cpp",
        "patchSetId": 12
      },
      "lineNbr": 308,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2022-08-08T09:16:58Z",
      "side": 1,
      "message": "Yes, there are quite some such cases like [this](https://source.chromium.org/chromium/chromium/src/+/main:third_party/dawn/src/dawn/tests/white_box/VulkanImageWrappingTests.cpp;drc\u003d825b95b7c1ddaefe139c0892ecbe7f7b506b9f92;l\u003d343). Some of them failed previously on CQ and then got passed with the additional submit fixing CL.",
      "parentUuid": "313dfc5c_e59c57df",
      "revId": "b0b32fe4c80c0cb89c3a55d095dc8e4961aa707c",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "40fa9e78_aef010a4",
        "filename": "src/dawn/tests/white_box/VulkanImageWrappingTests.cpp",
        "patchSetId": 12
      },
      "lineNbr": 308,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2022-08-08T22:13:23Z",
      "side": 1,
      "message": "optional: we would get a bit more coverage in all the cases if we parameterize the test with DAWN_INSTANTIATE_TEST_P to use the provided layout, or to use undefined",
      "parentUuid": "f19f288b_39673680",
      "revId": "b0b32fe4c80c0cb89c3a55d095dc8e4961aa707c",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}