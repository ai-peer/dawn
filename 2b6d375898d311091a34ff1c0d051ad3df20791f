{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "b7db57f5_20afa123",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2023-06-30T21:06:10Z",
      "side": 1,
      "message": "This change has a few additional fixes for IR terminators in unit tests. PTAL",
      "revId": "2b6d375898d311091a34ff1c0d051ad3df20791f",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dfb3ed8f_87cffdb4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1002241
      },
      "writtenOn": "2023-06-30T21:13:30Z",
      "side": 1,
      "message": "LGTM with a question about `continue` without `Continuing`. The SPIR-V backend currently assumes there\u0027s a continuing block if there are any `continue` statements.",
      "revId": "2b6d375898d311091a34ff1c0d051ad3df20791f",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "50bbdd74_0dfb6a3a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2023-06-30T21:22:14Z",
      "side": 1,
      "message": "I have been assuming that no continuing block is essentially the same as a block with a `NextInstruction` in it. It seems odd to have to change the body block if you add an instruction to the continuing.",
      "parentUuid": "dfb3ed8f_87cffdb4",
      "revId": "2b6d375898d311091a34ff1c0d051ad3df20791f",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "50fd6079_3642a4cf",
        "filename": "src/tint/ir/to_program_test.cc",
        "patchSetId": 2
      },
      "lineNbr": 2124,
      "author": {
        "id": 1002241
      },
      "writtenOn": "2023-06-30T21:13:30Z",
      "side": 1,
      "message": "If there\u0027s a `continue`, does there need to be a `Continuing` block? Or are we assuming it\u0027s just an implicit `NextIteration` when not present?",
      "revId": "2b6d375898d311091a34ff1c0d051ad3df20791f",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3a5dd2ed_69155cf2",
        "filename": "src/tint/ir/to_program_test.cc",
        "patchSetId": 2
      },
      "lineNbr": 2124,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2023-06-30T21:22:14Z",
      "side": 1,
      "message": "I\u0027ve been assuming the latter, but we need to actual specify all of this.",
      "parentUuid": "50fd6079_3642a4cf",
      "revId": "2b6d375898d311091a34ff1c0d051ad3df20791f",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "2b6d375898d311091a34ff1c0d051ad3df20791f",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Kokoro",
        "description": {
          "value": "A maximum vote is required for the Kokoro label. A minimum vote is blocking."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Kokoro\u003dMAX AND -label:Kokoro\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "uploader:dawn-autoroll@skia-public.iam.gserviceaccount.com"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Kokoro=MAX AND -label:Kokoro=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Kokoro=MAX"],"failingAtoms":["label:Kokoro=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"uploader:dawn-autoroll@skia-public.iam.gserviceaccount.com"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["uploader:dawn-autoroll@skia-public.iam.gserviceaccount.com"]}
      },
      "patchSetCommitId": "2b6d375898d311091a34ff1c0d051ad3df20791f",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "2b6d375898d311091a34ff1c0d051ad3df20791f",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    }
  ]
}