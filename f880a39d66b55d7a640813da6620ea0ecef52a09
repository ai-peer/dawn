{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "7a8d4709_36c20c9c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2024-01-16T19:13:24Z",
      "side": 1,
      "message": "The change to introduce RefCountedWithExternalCountBase\u003cT\u003e can be in a separate smaller CL.\n\nI don\u0027t understand. Why do we need to make it so that RefCountedWithExternalCount starts at 0? The previous scheme where it starts at 1 and we return it detached works OK.",
      "revId": "f880a39d66b55d7a640813da6620ea0ecef52a09",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4fdba39f_0e446b61",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2024-01-16T19:38:11Z",
      "side": 1,
      "message": "RefCountedWithExternalCountBase\u0027s ref count is still starting from 1. However the mExternalRefCount in RefCountedWithExternalCountBase is starting from 0. Since a new created object has not been returned to API, the external ref should be 0, and a new created object could be used internally too instead for external usage.\n\nAnd because the CL will always use ReturnToAPI() before returning an object to API. it will add the external ref if the object\u0027s base class is RefCountedWithExternalCountBase.",
      "parentUuid": "7a8d4709_36c20c9c",
      "revId": "f880a39d66b55d7a640813da6620ea0ecef52a09",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "57f4f3a5_59e1719e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2024-01-16T21:13:35Z",
      "side": 1,
      "message": "I understand how it works, but why was the prior version not sufficient?\n\nit seems a lot more complex now with two different templated types of RefCount, etc.",
      "parentUuid": "4fdba39f_0e446b61",
      "revId": "f880a39d66b55d7a640813da6620ea0ecef52a09",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d9001c22_76a0a269",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2024-01-16T22:03:50Z",
      "side": 1,
      "message": "This CL was split from an ALL IN ONE CL by Corentin\u0027s comment https://dawn-review.googlesource.com/c/dawn/+/169580/2/src/dawn/native/ObjectBase.h#158 .\nIn that CL, `RefCountedWithExternalCountBase` will be used as base class for ShaderModuleBase. The previous version is not always ok for all the cases. For example, if ShaderModuleBase is created and for some reason it is not returned to API. If dawn doesn\u0027t call APIRelease() explicitly, the object will be released with `mExternalRefCount \u003d\u003d 1`. IMHO, with this approach, everything is well defined. For a new created object, refcount will be 1 because it is referenced internally, the external refcount will be 0. Before returning it to API, dawn will always call ReturnToAPI() to increase API reference explicitly, and expect APIRelease() when it is not used by API anymore.",
      "parentUuid": "57f4f3a5_59e1719e",
      "revId": "f880a39d66b55d7a640813da6620ea0ecef52a09",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a0d582f2_1d1b3554",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2024-01-16T22:19:30Z",
      "side": 1,
      "message": "do we need the template to accomplish this? Can\u0027t you use a constructor arg to default the external count to 0?\n\nsecondly, manually defining ReturnToAPI whenever we need it seems not ideal. \n\nCan\u0027t we have two definitions, one for when std::is_base_of\u003cT, RefCountedWithExternalCountBase\u003e and when it is not?",
      "parentUuid": "d9001c22_76a0a269",
      "revId": "f880a39d66b55d7a640813da6620ea0ecef52a09",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6ab9e745_e3da41fa",
        "filename": "src/dawn/common/RefCounted.h",
        "patchSetId": 6
      },
      "lineNbr": 51,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2024-01-16T22:19:30Z",
      "side": 1,
      "message": "I don\u0027t see the return value used",
      "range": {
        "startLine": 50,
        "startChar": 35,
        "endLine": 51,
        "endChar": 8
      },
      "revId": "f880a39d66b55d7a640813da6620ea0ecef52a09",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5f91e855_9f5db542",
        "filename": "src/dawn/common/RefCounted.h",
        "patchSetId": 6
      },
      "lineNbr": 51,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2024-01-16T23:55:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6ab9e745_e3da41fa",
      "range": {
        "startLine": 50,
        "startChar": 35,
        "endLine": 51,
        "endChar": 8
      },
      "revId": "f880a39d66b55d7a640813da6620ea0ecef52a09",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "36a85842_8d815ff4",
        "filename": "src/dawn/native/Device.h",
        "patchSetId": 6
      },
      "lineNbr": 650,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2024-01-16T22:19:30Z",
      "side": 1,
      "message": "the argument could be \u0026\u0026 so that we require to always call it by move to avoid making unnecessary ref+release",
      "range": {
        "startLine": 650,
        "startChar": 43,
        "endLine": 650,
        "endChar": 65
      },
      "revId": "f880a39d66b55d7a640813da6620ea0ecef52a09",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ac9c2d1e_cf2676ee",
        "filename": "src/dawn/native/Device.h",
        "patchSetId": 6
      },
      "lineNbr": 650,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2024-01-16T23:55:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "36a85842_8d815ff4",
      "range": {
        "startLine": 650,
        "startChar": 43,
        "endLine": 650,
        "endChar": 65
      },
      "revId": "f880a39d66b55d7a640813da6620ea0ecef52a09",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ad73b666_01921851",
        "filename": "src/dawn/native/Device.h",
        "patchSetId": 6
      },
      "lineNbr": 652,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2024-01-16T22:19:30Z",
      "side": 1,
      "message": "it\u0027s weird that this function drops the original `device`, in favor of the new reference added here.\n\nWhy not add a new method like Externalize() which bumps only the external refcount by 1, then return `device.Detach()` ?",
      "range": {
        "startLine": 652,
        "startChar": 0,
        "endLine": 652,
        "endChar": 31
      },
      "revId": "f880a39d66b55d7a640813da6620ea0ecef52a09",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6a6249f4_cca61853",
        "filename": "src/dawn/native/Device.h",
        "patchSetId": 6
      },
      "lineNbr": 652,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2024-01-16T23:55:44Z",
      "side": 1,
      "message": "I feel it is a little bit over optimization, especially it needs add a new method `Externalize()` in RefcountedWithExternalCount. And method name is not well self explain.",
      "parentUuid": "ad73b666_01921851",
      "range": {
        "startLine": 652,
        "startChar": 0,
        "endLine": 652,
        "endChar": 31
      },
      "revId": "f880a39d66b55d7a640813da6620ea0ecef52a09",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}