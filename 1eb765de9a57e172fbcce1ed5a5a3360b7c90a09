{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "ff887a1c_1f3c25b8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2023-06-05T17:58:54Z",
      "side": 1,
      "message": "PTAL.",
      "revId": "1eb765de9a57e172fbcce1ed5a5a3360b7c90a09",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "49f63cc8_2a1659b4",
        "filename": "src/tint/ir/validate.cc",
        "patchSetId": 1
      },
      "lineNbr": 112,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2023-06-05T18:33:41Z",
      "side": 1,
      "message": "Given that this is the validator that should catch All The Bad Things, we should probably check for nullptrs before each of the `Switch()`s, or in the `Default` cases, before dereferencing for `TypeInfo()`.",
      "revId": "1eb765de9a57e172fbcce1ed5a5a3360b7c90a09",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a2724d2c_7e2eb4f0",
        "filename": "src/tint/ir/validate.cc",
        "patchSetId": 1
      },
      "lineNbr": 112,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2023-06-05T18:50:52Z",
      "side": 1,
      "message": "Yea, those will probably be needed in each of these methods. Holding off for now so we can add tests with the checks. This is specifically just getting the bits in place so we can start calling into the validator without hitting the default unhandled cases at the moment.",
      "parentUuid": "49f63cc8_2a1659b4",
      "revId": "1eb765de9a57e172fbcce1ed5a5a3360b7c90a09",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "92e9c4ae_81ec3281",
        "filename": "src/tint/ir/validate.cc",
        "patchSetId": 1
      },
      "lineNbr": 112,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2023-06-05T18:57:06Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "a2724d2c_7e2eb4f0",
      "revId": "1eb765de9a57e172fbcce1ed5a5a3360b7c90a09",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "1eb765de9a57e172fbcce1ed5a5a3360b7c90a09",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Kokoro",
        "description": {
          "value": "A maximum vote is required for the Kokoro label. A minimum vote is blocking."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Kokoro\u003dMAX AND -label:Kokoro\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "uploader:dawn-autoroll@skia-public.iam.gserviceaccount.com"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Kokoro=MAX AND -label:Kokoro=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Kokoro=MAX"],"failingAtoms":["label:Kokoro=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"uploader:dawn-autoroll@skia-public.iam.gserviceaccount.com"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["uploader:dawn-autoroll@skia-public.iam.gserviceaccount.com"]}
      },
      "patchSetCommitId": "1eb765de9a57e172fbcce1ed5a5a3360b7c90a09",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "1eb765de9a57e172fbcce1ed5a5a3360b7c90a09",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    }
  ]
}