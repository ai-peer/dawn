{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "dda41281_d5f715da",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000248
      },
      "writtenOn": "2023-06-22T18:02:46Z",
      "side": 1,
      "message": "PTAL. The implementation here allows the user to put the @index attribute directly as a return type, which I was unsure about. The extension seems useless if @index is being used in this way, but I also wasn\u0027t sure if it was correct to disallow this. Normally I would expect the user to put the two indexes in a struct, then return the struct. Lmk what you think.",
      "revId": "c4bade423a8e6e17b313cd2c1e024590304e06c9",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "de8cf10f_c05624f3",
        "filename": "src/tint/resolver/attribute_validation_test.cc",
        "patchSetId": 1
      },
      "lineNbr": 81,
      "author": {
        "id": 1000248
      },
      "writtenOn": "2023-06-22T18:02:46Z",
      "side": 1,
      "message": "I made the unusual choice of adding this function to enable the needed extension instead of enabling via a constructor or SetUp() because there are future tests that inherit from TestWithParams that do not use params (which are not allowed to call GetParams()). I would need to change all those tests to inherit from ResolverTest instead if I wanted to enable the extension in the test constructor.",
      "revId": "c4bade423a8e6e17b313cd2c1e024590304e06c9",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}