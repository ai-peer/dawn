{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "f9445b7a_485a319c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000268
      },
      "writtenOn": "2020-10-22T19:24:15Z",
      "side": 1,
      "message": "I\u0027m surprised this worked on my 5+ yr old NV GPU.",
      "revId": "0b2800d00157c9f02552cb7c2e3387c0c9114868",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ef8cca33_0f8362b3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-10-22T20:08:02Z",
      "side": 1,
      "message": "Woa that\u0027s pretty crazy! But the general approach would work. I\u0027m not sure how to do per-plane GPUTexture for WebCodec with this, because it would need to be imported twice but force the view to a different plane?",
      "revId": "0b2800d00157c9f02552cb7c2e3387c0c9114868",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f1c02c04_f7cc0c25",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2020-10-23T03:16:02Z",
      "side": 1,
      "message": "Cool.\nI have a question about where this multi-plane texture come from. Currently, as you mentioned, chromium decodes video into seperate d3d textures. Is there anyway d3d can combine several textures into one NV12 format texture or do you think video decoder could directly generate it.(That will be great because I think ChromeOS/Android(maybe) can do this).\n\nBecause if we have a chance to make VideoFrame contains this type texture only, the import path will be quite easier when we accept HTMLVideoElement as input.\n",
      "revId": "0b2800d00157c9f02552cb7c2e3387c0c9114868",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "96338b18_e0512204",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-10-23T08:52:33Z",
      "side": 1,
      "message": "In Chromium we decode each plane in a separate texture? That would be pretty convenient for WebCodec interop.",
      "parentUuid": "f1c02c04_f7cc0c25",
      "revId": "0b2800d00157c9f02552cb7c2e3387c0c9114868",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8d1c1178_c5ebb755",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000268
      },
      "writtenOn": "2020-10-23T23:13:53Z",
      "side": 1,
      "message": "Chromium decodes into a single NV12 texture then has to binds each plane using two separate GL textures because ANGLE cannot import the NV12 texture directly.\n\nDoes WebCodec expect this as well?",
      "parentUuid": "96338b18_e0512204",
      "revId": "0b2800d00157c9f02552cb7c2e3387c0c9114868",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7126bdea_10a90165",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2020-10-25T02:34:45Z",
      "side": 1,
      "message": "That surprise me. Because I always need to handle seperate textures from VideoFrame(https://source.chromium.org/chromium/chromium/src/+/master:media/renderers/video_frame_yuv_converter.cc;l\u003d512;drc\u003d70a3423e3bedbbca0f74c6b62cc6a3def9239f80). So I thought it is decoded in seperate textures on Windows. But I searched and find the code here (https://source.chromium.org/chromium/chromium/src/+/master:media/gpu/windows/d3d11_texture_selector.cc;l\u003d56;bpv\u003d0;bpt\u003d0) Is this the place where the decoder provide the back resource for D3D11?",
      "parentUuid": "8d1c1178_c5ebb755",
      "revId": "0b2800d00157c9f02552cb7c2e3387c0c9114868",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c165ccbc_79e5857c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-10-26T14:16:42Z",
      "side": 1,
      "message": "IDK, I\u0027ll ask around.",
      "parentUuid": "7126bdea_10a90165",
      "revId": "0b2800d00157c9f02552cb7c2e3387c0c9114868",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4d1d9fb2_674e1c12",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000268
      },
      "writtenOn": "2020-10-26T16:35:20Z",
      "side": 1,
      "message": "@Shaobo, me too. d3d11_video_decoder.cc is where the underlying D3D11 resource gets created. The decoder outputs a single 2D texture array where the slice is bound to separate GL texture.\n\nI know this because in order to move the decoded DX11 texture into shared image, I had to figure out exactly what it was.",
      "parentUuid": "c165ccbc_79e5857c",
      "revId": "0b2800d00157c9f02552cb7c2e3387c0c9114868",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b00c2541_b8774d98",
        "filename": "src/dawn_native/CommandEncoder.cpp",
        "patchSetId": 2
      },
      "lineNbr": 132,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-10-22T20:08:02Z",
      "side": 1,
      "message": "Not even copying from? :(",
      "revId": "0b2800d00157c9f02552cb7c2e3387c0c9114868",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}