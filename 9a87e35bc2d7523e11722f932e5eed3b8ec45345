{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "9dfac64a_f41aaa30",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-08-18T08:31:38Z",
      "side": 1,
      "message": "LGTM!",
      "revId": "9a87e35bc2d7523e11722f932e5eed3b8ec45345",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cd94939d_921492f0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2023-08-18T13:41:53Z",
      "side": 1,
      "message": "LGTM with on nit.",
      "revId": "9a87e35bc2d7523e11722f932e5eed3b8ec45345",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "39846e5e_594256f7",
        "filename": "src/dawn/native/Format.cpp",
        "patchSetId": 6
      },
      "lineNbr": 459,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2023-08-18T13:41:53Z",
      "side": 1,
      "message": "nit:\nAdd those color formats with different caps based on `Feature::Norm16TextureFormats`?",
      "range": {
        "startLine": 459,
        "startChar": 8,
        "endLine": 459,
        "endChar": 31
      },
      "revId": "9a87e35bc2d7523e11722f932e5eed3b8ec45345",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "af41beb5_5809992f",
        "filename": "src/dawn/native/Format.cpp",
        "patchSetId": 6
      },
      "lineNbr": 459,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2023-08-18T14:23:11Z",
      "side": 1,
      "message": "Currently the caps are all same for the formats. What do you mean by \"different caps\"?",
      "parentUuid": "39846e5e_594256f7",
      "range": {
        "startLine": 459,
        "startChar": 8,
        "endLine": 459,
        "endChar": 31
      },
      "revId": "9a87e35bc2d7523e11722f932e5eed3b8ec45345",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f0666e26_b408b3f8",
        "filename": "src/dawn/native/Format.cpp",
        "patchSetId": 6
      },
      "lineNbr": 459,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2023-08-18T14:49:57Z",
      "side": 1,
      "message": "See line 442 for example.",
      "parentUuid": "af41beb5_5809992f",
      "range": {
        "startLine": 459,
        "startChar": 8,
        "endLine": 459,
        "endChar": 31
      },
      "revId": "9a87e35bc2d7523e11722f932e5eed3b8ec45345",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f87defee_12d8d7de",
        "filename": "src/dawn/native/Format.cpp",
        "patchSetId": 6
      },
      "lineNbr": 459,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2023-08-19T09:34:01Z",
      "side": 1,
      "message": "Good point, thanks!",
      "parentUuid": "f0666e26_b408b3f8",
      "range": {
        "startLine": 459,
        "startChar": 8,
        "endLine": 459,
        "endChar": 31
      },
      "revId": "9a87e35bc2d7523e11722f932e5eed3b8ec45345",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2c835c56_7cd4004d",
        "filename": "src/dawn/native/Format.cpp",
        "patchSetId": 6
      },
      "lineNbr": 459,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2023-08-19T11:41:16Z",
      "side": 1,
      "message": "Unfortunately this broke the case [MultisampledRenderPassDescriptorValidationTest.ResolveTargetFormat](https://source.chromium.org/chromium/chromium/src/+/main:third_party/dawn/src/dawn/tests/unittests/validation/RenderPassDescriptorValidationTests.cpp;drc\u003d44fc9da6f3a178b50feb434f2725083f10748659;l\u003d933).\n\nIt seems if we use this changeable format caps, the test utils like [utils::TextureFormatSupportsResolveTarget](https://source.chromium.org/chromium/chromium/src/+/main:third_party/dawn/src/dawn/utils/TextureUtils.cpp;drc\u003d48290eaa6a80203b317bff0b5e6cf91005602c41;l\u003d176) should be aware of the availability of the feature as well. However the formats are hard-coded in the test utils now. Could you please propose how to proceed?",
      "parentUuid": "f87defee_12d8d7de",
      "range": {
        "startLine": 459,
        "startChar": 8,
        "endLine": 459,
        "endChar": 31
      },
      "revId": "9a87e35bc2d7523e11722f932e5eed3b8ec45345",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0a42feb0_1664070f",
        "filename": "src/dawn/native/Format.cpp",
        "patchSetId": 6
      },
      "lineNbr": 459,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2023-08-19T13:11:37Z",
      "side": 1,
      "message": "How about adding a method `bool utils::IsTextureFormatSupported(device, format)`, and use this method in the test to skip unsupported formats?",
      "parentUuid": "2c835c56_7cd4004d",
      "range": {
        "startLine": 459,
        "startChar": 8,
        "endLine": 459,
        "endChar": 31
      },
      "revId": "9a87e35bc2d7523e11722f932e5eed3b8ec45345",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e314a1be_8365a32e",
        "filename": "src/dawn/native/Format.cpp",
        "patchSetId": 6
      },
      "lineNbr": 459,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2023-08-20T11:15:25Z",
      "side": 1,
      "message": "How about adding `bool hasNorm16TextureFormats` to `TextureFormatSupportsResolveTarget`, just like `bool isCompatibilityMode` in\n```bool TextureFormatSupportsStorageTexture(wgpu::TextureFormat format, bool isCompatibilityMode);\n```?\n\n@cwallez@chromium.org, I would appreciate your view on this!",
      "parentUuid": "0a42feb0_1664070f",
      "range": {
        "startLine": 459,
        "startChar": 8,
        "endLine": 459,
        "endChar": 31
      },
      "revId": "9a87e35bc2d7523e11722f932e5eed3b8ec45345",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8d4d5c2c_05794d3f",
        "filename": "src/dawn/native/Format.cpp",
        "patchSetId": 6
      },
      "lineNbr": 459,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-08-20T15:03:39Z",
      "side": 1,
      "message": "Sounds good with the little comment I put in that file. Also optional nit, it could the order of arguments could be device, format, that\u0027s what we do in most places (put the device at the start of the argument list as it is some kind of \"context\").",
      "parentUuid": "e314a1be_8365a32e",
      "range": {
        "startLine": 459,
        "startChar": 8,
        "endLine": 459,
        "endChar": 31
      },
      "revId": "9a87e35bc2d7523e11722f932e5eed3b8ec45345",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "69abdfbe_72819808",
        "filename": "src/dawn/native/opengl/GLFormat.cpp",
        "patchSetId": 6
      },
      "lineNbr": 53,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2023-08-18T13:41:53Z",
      "side": 1,
      "message": "Looks like this table could be defined as static const table.\n\nHowever, it is not related to the change. No action is needed.",
      "range": {
        "startLine": 53,
        "startChar": 8,
        "endLine": 53,
        "endChar": 17
      },
      "revId": "9a87e35bc2d7523e11722f932e5eed3b8ec45345",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}