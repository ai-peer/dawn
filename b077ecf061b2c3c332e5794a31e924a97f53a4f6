{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "a45025ad_07646ce1",
        "filename": "src/dawn/dawn.json",
        "patchSetId": 2
      },
      "lineNbr": 2417,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2024-05-02T22:24:31Z",
      "side": 1,
      "message": "I think we only want to reserve 0, not define a name for it. Any particular reason we need it?",
      "revId": "b077ecf061b2c3c332e5794a31e924a97f53a4f6",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "047f510b_997f7394",
        "filename": "src/dawn/dawn.json",
        "patchSetId": 2
      },
      "lineNbr": 2417,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2024-05-03T18:41:04Z",
      "side": 1,
      "message": "if you must have undefined, I think you can say \"valid: false\", and use the autogen\u0027ed ValidateCallbackMode function from ValidationUtils_autogen.h",
      "parentUuid": "a45025ad_07646ce1",
      "revId": "b077ecf061b2c3c332e5794a31e924a97f53a4f6",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ded18318_922b5987",
        "filename": "src/dawn/dawn.json",
        "patchSetId": 2
      },
      "lineNbr": 2417,
      "author": {
        "id": 1002831
      },
      "writtenOn": "2024-05-06T15:43:24Z",
      "side": 1,
      "message": "Done. Note that I actually wanted to use `ValidationUtils_autogen.h` also, but it\u0027s actually under `native` only so I don\u0027t think the wire-side has easy access to it, hence adding the function in `common/FutureUtils` for now. Maybe we could move the validation into common in the future?",
      "parentUuid": "047f510b_997f7394",
      "revId": "b077ecf061b2c3c332e5794a31e924a97f53a4f6",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d1acb56b_23484e05",
        "filename": "src/dawn/dawn.json",
        "patchSetId": 2
      },
      "lineNbr": 2417,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2024-05-06T16:49:50Z",
      "side": 1,
      "message": "oh I see. Sounds reasonable to make it common eventually - not critical for now",
      "parentUuid": "ded18318_922b5987",
      "revId": "b077ecf061b2c3c332e5794a31e924a97f53a4f6",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ec4a15c3_e0a95994",
        "filename": "src/dawn/native/EventManager.cpp",
        "patchSetId": 2
      },
      "lineNbr": 348,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2024-05-02T22:24:31Z",
      "side": 1,
      "message": "DAWN_ASSERT tells the compiler this will be unreachable so in release may completely skip this check. Normally for this I\u0027d say use DAWN_CHECK, except...\n\nI think we are supposed to fail gracefully in this case by always returning kNullFutureID. There should be \"implementation-defined logging\" in this case too. (If that\u0027s not really possible right now, add a TODO)",
      "revId": "b077ecf061b2c3c332e5794a31e924a97f53a4f6",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b632591e_85418519",
        "filename": "src/dawn/native/EventManager.cpp",
        "patchSetId": 2
      },
      "lineNbr": 348,
      "author": {
        "id": 1002831
      },
      "writtenOn": "2024-05-06T15:43:24Z",
      "side": 1,
      "message": "Yea, the intention is that in release it should just skip and return `kNullFutureID`. Added TODOs for logging though.",
      "parentUuid": "ec4a15c3_e0a95994",
      "revId": "b077ecf061b2c3c332e5794a31e924a97f53a4f6",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e0eacd00_3bf85d94",
        "filename": "src/dawn/native/EventManager.cpp",
        "patchSetId": 2
      },
      "lineNbr": 348,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2024-05-06T22:30:50Z",
      "side": 1,
      "message": "DAWN_ASSERT may also prevent release builds from returning kNullFutureID though. DAWN_ASSERT(false) in release tells the compiler it can assume this code is never executed so it could optimize out the entire if-block.\n\nI think we have to remove the assert entirely (or add a new thing which I\u0027d call `DAWN_DCHECK` and use that).",
      "parentUuid": "b632591e_85418519",
      "revId": "b077ecf061b2c3c332e5794a31e924a97f53a4f6",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f93c015c_a7ad246a",
        "filename": "src/dawn/wire/client/EventManager.cpp",
        "patchSetId": 2
      },
      "lineNbr": 73,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2024-05-02T22:24:31Z",
      "side": 1,
      "message": "Same comment here about implementation defined logging",
      "revId": "b077ecf061b2c3c332e5794a31e924a97f53a4f6",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ec3ac476_0665b617",
        "filename": "src/dawn/wire/client/EventManager.cpp",
        "patchSetId": 2
      },
      "lineNbr": 73,
      "author": {
        "id": 1002831
      },
      "writtenOn": "2024-05-06T15:43:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f93c015c_a7ad246a",
      "revId": "b077ecf061b2c3c332e5794a31e924a97f53a4f6",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}