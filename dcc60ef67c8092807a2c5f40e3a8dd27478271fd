{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "375292fe_f3537dce",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2023-08-04T03:04:05Z",
      "side": 1,
      "message": "Oh, right:\n\n```\nAssertionError: 1 !\u003d 0 : Error parsing expectations.txt:\n\t566: The tag group contains tags that are part of the same tag set\n  - Tags mac and win are part of the same tag set\n```\n\nThat\u0027s fine, you can just remove the tags entirely. Since the upstream tests are wrong there\u0027s no reason to have tags. If they conflict with other expectations on the same file, just comment those out.",
      "revId": "dcc60ef67c8092807a2c5f40e3a8dd27478271fd",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a646ac98_1d66b053",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1003066
      },
      "writtenOn": "2023-08-04T09:07:55Z",
      "side": 1,
      "message": "We have [this line](https://source.chromium.org/chromium/chromium/src/+/main:third_party/dawn/webgpu-cts/expectations.txt;l\u003d78;drc\u003d08dea3b61076c6b753b29f4b4aa94812d1115bdb) which reads:\n```\n################################################################################\n# copyToTexture failures on Linux\n# Skipped instead of just Crash because of the number of failures\n# KEEP\n################################################################################\ncrbug.com/1236130 [ linux ] webgpu:web_platform,canvas,readbackFromWebGPUCanvas:* [ Skip ]\n```\n\nAnd so if I do anything that affects those tests on linux, then I get the presubmit error:\n```\nCommand \u0027[...]/dawn/tools/bin/cts validate\u0027 returned non-zero exit status 1 in [...]dawn\n[...]dawn/webgpu-cts/expectations.txt:78 expectation collides with expectation on line 571\n```\n\nWhat exactly is wrong with having this \"collision\"? There are two reasons why those two sets of tests (that happen to have an intersection) are disabled.\n\nI honestly just don\u0027t know how I\u0027m supposed to accomplish my goal of \"temporarily ignore failures in just this small subset of tests\".",
      "parentUuid": "375292fe_f3537dce",
      "revId": "dcc60ef67c8092807a2c5f40e3a8dd27478271fd",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "be19386f_29f3a52a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1003066
      },
      "writtenOn": "2023-08-04T10:06:01Z",
      "side": 1,
      "message": "I can\u0027t seem to update this CR anymore, so I\u0027m migrating over to\nhttps://dawn-review.googlesource.com/c/dawn/+/144900",
      "revId": "dcc60ef67c8092807a2c5f40e3a8dd27478271fd",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "dcc60ef67c8092807a2c5f40e3a8dd27478271fd",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Kokoro",
        "description": {
          "value": "A maximum vote is required for the Kokoro label. A minimum vote is blocking."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Kokoro\u003dMAX AND -label:Kokoro\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "uploader:dawn-autoroll@skia-public.iam.gserviceaccount.com OR uploader:chrome-automated-expectation@chops-service-accounts.iam.gserviceaccount.com"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Kokoro=MAX AND -label:Kokoro=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Kokoro=MAX"],"failingAtoms":["label:Kokoro=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"uploader:dawn-autoroll@skia-public.iam.gserviceaccount.com OR uploader:chrome-automated-expectation@chops-service-accounts.iam.gserviceaccount.com"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["uploader:dawn-autoroll@skia-public.iam.gserviceaccount.com","uploader:chrome-automated-expectation@chops-service-accounts.iam.gserviceaccount.com"]}
      },
      "patchSetCommitId": "dcc60ef67c8092807a2c5f40e3a8dd27478271fd",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforced_gerrit"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "dcc60ef67c8092807a2c5f40e3a8dd27478271fd",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}