{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "39042574_7b5377c7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2022-10-17T16:01:59Z",
      "side": 1,
      "message": "have you looked into whether or not we should be doing emulate_store_and_msaa_resolve as well? If there\u0027s more than one workaround, we\u0027re going to want the recursive patching mechanism Corentin originally implemented for Metal. Could be better to move it wholesale to the frontend if possible",
      "revId": "7e1b24312d8897ccd5b2fc47eff467d4cec95cca",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4c8cbc9c_89a9c363",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2022-11-17T21:56:38Z",
      "side": 1,
      "message": "bump on this - it\u0027s probably best if possible if we can port the whole render pass workaround mechanism to the frontend that way we don\u0027t have it implemented in two places. And also so we don\u0027t have a problem where the frontend implements workaround A, the backend implements workaround B but in such a way that we need workaround A again",
      "parentUuid": "39042574_7b5377c7",
      "revId": "7e1b24312d8897ccd5b2fc47eff467d4cec95cca",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8e98aa4d_d525422d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1001591
      },
      "writtenOn": "2022-12-16T19:54:43Z",
      "side": 1,
      "message": "While the latest patchset makes it easier to implement recursive workarounds like the Metal backend has, I\u0027m going to suggest that porting the remaining workarounds be a follow up CL, simply because they\u0027re complex enough to warrant their own reviews.\n\nFortunately this workaround just so happened to be the first one applied in the Metal backend previously, so the order of operations is preserved!",
      "parentUuid": "4c8cbc9c_89a9c363",
      "revId": "7e1b24312d8897ccd5b2fc47eff467d4cec95cca",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "afc923a2_6635abbd",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2022-12-16T21:10:27Z",
      "side": 1,
      "message": "SGTM. I\u0027ve realized we need to be careful anyway - the lazy clearing code in Metal sometimes uses `EncodeMetalRenderPass`. So, if we moved all the workarounds to the frontend, then we might drop some workarounds which used to support lazy clear.\n\nFor this workaround, I\u0027ve checked its not the case since we don\u0027t use the resolve operation to clear textures.",
      "parentUuid": "8e98aa4d_d525422d",
      "revId": "7e1b24312d8897ccd5b2fc47eff467d4cec95cca",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e2c4ddb0_8f25c239",
        "filename": "src/dawn/native/vulkan/DeviceVk.cpp",
        "patchSetId": 3
      },
      "lineNbr": 626,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2022-10-17T16:01:59Z",
      "side": 1,
      "message": "for both of these, I realized we should use \"SetToggle\" not ForceSetToggle.\n\nSetToggle sets the default if there is no user-provided input. We still want the user to be able to override to turn of the workaround (for testing against improved driver versions, or etc.).\n\nForceSetToggle should be used when it wouldn\u0027t work at all. Like below, setting d32 vs d24 format based on what the system is capable of.",
      "range": {
        "startLine": 620,
        "startChar": 8,
        "endLine": 626,
        "endChar": 22
      },
      "revId": "7e1b24312d8897ccd5b2fc47eff467d4cec95cca",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5cef9850_92dcd2dc",
        "filename": "src/dawn/native/vulkan/DeviceVk.cpp",
        "patchSetId": 3
      },
      "lineNbr": 626,
      "author": {
        "id": 1001591
      },
      "writtenOn": "2022-11-15T00:17:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e2c4ddb0_8f25c239",
      "range": {
        "startLine": 620,
        "startChar": 8,
        "endLine": 626,
        "endChar": 22
      },
      "revId": "7e1b24312d8897ccd5b2fc47eff467d4cec95cca",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}