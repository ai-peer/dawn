{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "bd944b86_5417fb4b",
        "filename": "src/dawn/native/CommandEncoder.cpp",
        "patchSetId": 3
      },
      "lineNbr": 416,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2022-03-03T23:24:29Z",
      "side": 1,
      "message": "`timestampWriteCount \u003e 0 \u0026\u0026 timestampWrites \u003d\u003d nullptr` is a problem and shouldn\u0027t be silently ignored IMO. I don\u0027t know what we do in other similar cases, but my intuition is this should just say:\n\n```\nif (descriptor-\u003etimestampWriteCount \u003e 0) {\n  DAWN_ASSERT(descriptor-\u003etimestampWrites !\u003d nullptr);\n```\n\n(Not a validation error because this is just a sanity check - we can\u0027t validate that the timestampWrites pointer is actually valid.)",
      "revId": "2f14d5b632fd2243efc976e8deeb6a68e83b02db",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a5798714_20b008d2",
        "filename": "src/dawn/native/CommandEncoder.cpp",
        "patchSetId": 3
      },
      "lineNbr": 421,
      "author": {
        "id": 1000030
      },
      "writtenOn": "2022-03-04T09:40:00Z",
      "side": 1,
      "message": "[1]",
      "revId": "2f14d5b632fd2243efc976e8deeb6a68e83b02db",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dff0f58b_6b0780ca",
        "filename": "src/dawn/native/CommandEncoder.cpp",
        "patchSetId": 3
      },
      "lineNbr": 437,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2022-03-03T23:24:29Z",
      "side": 1,
      "message": "Is this validation missing from the spec? I didn\u0027t see it (but I didn\u0027t look very hard).",
      "revId": "2f14d5b632fd2243efc976e8deeb6a68e83b02db",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4b08f6f0_6f6a6525",
        "filename": "src/dawn/native/CommandEncoder.cpp",
        "patchSetId": 3
      },
      "lineNbr": 437,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2022-03-04T00:55:32Z",
      "side": 1,
      "message": "Oops, I saw your PR https://github.com/gpuweb/gpuweb/pull/2627\nI looked for a PR before but somehow missed it.",
      "parentUuid": "dff0f58b_6b0780ca",
      "revId": "2f14d5b632fd2243efc976e8deeb6a68e83b02db",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b553c713_27b6b945",
        "filename": "src/dawn/native/CommandEncoder.cpp",
        "patchSetId": 3
      },
      "lineNbr": 459,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2022-03-03T23:24:29Z",
      "side": 1,
      "message": "Why don\u0027t we need a QueryAvailabilityMap here? Explain in a comment?",
      "revId": "2f14d5b632fd2243efc976e8deeb6a68e83b02db",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "61037697_3ab50397",
        "filename": "src/dawn/native/CommandEncoder.cpp",
        "patchSetId": 3
      },
      "lineNbr": 459,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2022-03-03T23:24:29Z",
      "side": 1,
      "message": "same",
      "revId": "2f14d5b632fd2243efc976e8deeb6a68e83b02db",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "34eade91_27af8eaf",
        "filename": "src/dawn/native/CommandEncoder.cpp",
        "patchSetId": 3
      },
      "lineNbr": 459,
      "author": {
        "id": 1000030
      },
      "writtenOn": "2022-03-04T09:40:00Z",
      "side": 1,
      "message": "I don\u0027t think we need that here which is only useful on render pass. See [1]",
      "parentUuid": "b553c713_27b6b945",
      "revId": "2f14d5b632fd2243efc976e8deeb6a68e83b02db",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3e5289e4_5e5d6f04",
        "filename": "src/dawn/native/CommandEncoder.cpp",
        "patchSetId": 3
      },
      "lineNbr": 699,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2022-03-04T05:59:19Z",
      "side": 1,
      "message": "std::move",
      "range": {
        "startLine": 699,
        "startChar": 61,
        "endLine": 699,
        "endChar": 81
      },
      "revId": "2f14d5b632fd2243efc976e8deeb6a68e83b02db",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "57498442_0841b0a0",
        "filename": "src/dawn/tests/unittests/validation/QueryValidationTests.cpp",
        "patchSetId": 3
      },
      "lineNbr": 327,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2022-03-03T23:24:29Z",
      "side": 1,
      "message": "nit: Form -\u003e From",
      "range": {
        "startLine": 327,
        "startChar": 31,
        "endLine": 327,
        "endChar": 35
      },
      "revId": "2f14d5b632fd2243efc976e8deeb6a68e83b02db",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "da659838_e8e98f95",
        "filename": "src/dawn/tests/unittests/validation/QueryValidationTests.cpp",
        "patchSetId": 3
      },
      "lineNbr": 362,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2022-03-03T23:24:29Z",
      "side": 1,
      "message": "nit: destoryed -\u003e destroyed",
      "range": {
        "startLine": 362,
        "startChar": 37,
        "endLine": 362,
        "endChar": 46
      },
      "revId": "2f14d5b632fd2243efc976e8deeb6a68e83b02db",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7ac4eba6_0e75baad",
        "filename": "src/dawn/tests/unittests/validation/QueryValidationTests.cpp",
        "patchSetId": 3
      },
      "lineNbr": 440,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2022-03-03T23:24:29Z",
      "side": 1,
      "message": "Need to test this for compute passes too (regardless of whether it\u0027s valid or invalid).",
      "revId": "2f14d5b632fd2243efc976e8deeb6a68e83b02db",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "04bd39f5_e4233288",
        "filename": "src/dawn/tests/unittests/validation/QueryValidationTests.cpp",
        "patchSetId": 3
      },
      "lineNbr": 459,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2022-03-03T23:24:29Z",
      "side": 1,
      "message": "nit: destoryed -\u003e destroyed",
      "range": {
        "startLine": 459,
        "startChar": 37,
        "endLine": 459,
        "endChar": 46
      },
      "revId": "2f14d5b632fd2243efc976e8deeb6a68e83b02db",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}