{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "3d6373c9_7738d3dc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1004191
      },
      "writtenOn": "2024-06-10T17:18:11Z",
      "side": 1,
      "message": "This fully fixes `bundle_libraries` to traverse both private and public dependencies.",
      "revId": "c35e6b6f090bfd527bbef495d1eb1fb95ef45dca",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0780faae_f09e3404",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2024-06-10T18:13:54Z",
      "side": 1,
      "message": "Great fix! LGTM. Jim PTAL",
      "revId": "c35e6b6f090bfd527bbef495d1eb1fb95ef45dca",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "280a0d4b_e9561b05",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1004846
      },
      "writtenOn": "2024-06-10T19:06:09Z",
      "side": 1,
      "message": "Are the missing symbols only happening since https://dawn-review.googlesource.com/c/dawn/+/192561 ?\n\nWhen I tried this approach it nearly doubled the number of object files included in the bundle, many of which were not practically required.\n\nCan you measure the number of files in the bundle before and after these pairs of CLs?",
      "revId": "c35e6b6f090bfd527bbef495d1eb1fb95ef45dca",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5e887489_6b6a3ac8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1004846
      },
      "writtenOn": "2024-06-10T19:13:14Z",
      "side": 1,
      "message": "LINK_LIBRARIES should be sufficient as the network is traversed recursively. I think this only fixes the absl::raw_hash_set issue as a side-effect, and the cost is many unnecessary other files going into the bundle.",
      "revId": "c35e6b6f090bfd527bbef495d1eb1fb95ef45dca",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "452a0434_d65e3282",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1004191
      },
      "writtenOn": "2024-06-10T19:25:44Z",
      "side": 1,
      "message": "The symbols from raw_hash_set were missing even before that. `raw_hash_set` was forcefully added on the link list. About the other extra symbols, they never turned up most likely because they don\u0027t have external linkage.\n\nHere\u0027s the diff -\n```\ndiff no-interface-link.list interface-link.list \n1c1\n\u003c webgpu_c_bundled depends on 88 objects\n---\n\u003e webgpu_c_bundled depends on 116 objects\n2a3,4\n\u003e absl_bad_optional_access\n\u003e absl_bad_variant_access\n3a6,22\n\u003e absl_city\n\u003e absl_civil_time\n\u003e absl_cord\n\u003e absl_cord_internal\n\u003e absl_cordz_functions\n\u003e absl_cordz_handle\n\u003e absl_cordz_info\n\u003e absl_crc_cord_state\n\u003e absl_crc_cpu_detect\n\u003e absl_crc_internal\n\u003e absl_crc32c\n\u003e absl_debugging_internal\n\u003e absl_demangle_internal\n\u003e absl_exponential_biased\n\u003e absl_graphcycles_internal\n\u003e absl_hash\n\u003e absl_hashtablez_sampler\n4a24\n\u003e absl_kernel_timeout_internal\n5a26,28\n\u003e absl_low_level_hash\n\u003e absl_malloc_internal\n\u003e absl_raw_hash_set\n7a31,32\n\u003e absl_stacktrace\n\u003e absl_str_format_internal\n10a36,37\n\u003e absl_symbolize\n\u003e absl_synchronization\n11a39,40\n\u003e absl_time\n\u003e absl_time_zone\n```\n\nYou can repro by using this snippet before adding the objects to the bundle in `BundleLibraries.cmake`\n\n```\n  message(STATUS \"${output_target} depends on ${number_of_objects} objects\")\n  foreach(object IN LISTS all_objects)\n    set(FILTER_STRING \"${object}\")\n    string(REGEX MATCH \"\\\\$\u003cTARGET_OBJECTS:([^\u003e]+)\u003e\" OBJECT_NAME ${FILTER_STRING})\n    if (CMAKE_MATCH_1)\n      message(STATUS \"${CMAKE_MATCH_1}\")\n    endif()\n  endforeach()\n```",
      "parentUuid": "280a0d4b_e9561b05",
      "revId": "c35e6b6f090bfd527bbef495d1eb1fb95ef45dca",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "487600f2_d55d4971",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1004846
      },
      "writtenOn": "2024-06-10T19:30:13Z",
      "side": 1,
      "message": "absl_hash ought to be included without traversing INTERFACE_LINK_LIBRARIES, and these other symbols are not required in our library. We don\u0027t want the transitory links in the bundle. This isn\u0027t the right fix for the absl_hash issue sadly.",
      "parentUuid": "452a0434_d65e3282",
      "revId": "c35e6b6f090bfd527bbef495d1eb1fb95ef45dca",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}