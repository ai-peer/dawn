{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "cb936807_d329d743",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000685
      },
      "writtenOn": "2022-09-27T23:04:58Z",
      "side": 1,
      "message": "Q: Do we have a backend based limit test? (There\u0027s a LimitsTests but is in dawn_unittests)",
      "revId": "f5e7f7b300ff1a0909befc2b21520197871d0b13",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f4fa950e_fa972236",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2022-09-27T23:17:16Z",
      "side": 1,
      "message": "still need to modify",
      "revId": "f5e7f7b300ff1a0909befc2b21520197871d0b13",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b726b3f3_ec6736e1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2022-09-27T23:17:54Z",
      "side": 1,
      "message": "still need to modify CreateBuffer validation to disallow buffers larger than the limit - or emit a deprecation warning (See other comment)",
      "parentUuid": "f4fa950e_fa972236",
      "revId": "f5e7f7b300ff1a0909befc2b21520197871d0b13",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "50a5ef70_169a53b1",
        "filename": "dawn.json",
        "patchSetId": 3
      },
      "lineNbr": 1277,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-09-28T12:45:42Z",
      "side": 1,
      "message": "maxBufferSize is a GPUSize64 so it should be uint64_t (and the limit modified)",
      "range": {
        "startLine": 1277,
        "startChar": 49,
        "endLine": 1277,
        "endChar": 57
      },
      "revId": "f5e7f7b300ff1a0909befc2b21520197871d0b13",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "211d59d8_83e2ef2d",
        "filename": "src/dawn/common/Constants.h",
        "patchSetId": 3
      },
      "lineNbr": 30,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-09-28T12:45:42Z",
      "side": 1,
      "message": "This is not the default max buffer size, maybe kAssumedMaxBufferSize?",
      "revId": "f5e7f7b300ff1a0909befc2b21520197871d0b13",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "209cafb4_bef28f26",
        "filename": "src/dawn/native/Limits.cpp",
        "patchSetId": 3
      },
      "lineNbr": 63,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2022-09-27T23:17:16Z",
      "side": 1,
      "message": "this should be 256Mb, 256Mb which is the base limit for maxBufferSize in the spec\n\nI suspect existing apps may run up against this limit. Perhaps we can make a separate limit group (see workgroup storage and storage buffer binding size) which goes 256Mb, 1Gb, 2Gb.\n\nThen, in the device.CreateBuffer, we emit a deprecation warning for now if you exceed the max buffer size. That way, existing apps don\u0027t break and they know that if they want bigger buffers, they need to request it.",
      "range": {
        "startLine": 63,
        "startChar": 41,
        "endLine": 63,
        "endChar": 71
      },
      "revId": "f5e7f7b300ff1a0909befc2b21520197871d0b13",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c79198eb_c4b155fa",
        "filename": "src/dawn/native/Limits.cpp",
        "patchSetId": 3
      },
      "lineNbr": 63,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-09-28T12:45:42Z",
      "side": 1,
      "message": "That, and can we have tests added to DeprecatedAPITests for it?",
      "parentUuid": "209cafb4_bef28f26",
      "range": {
        "startLine": 63,
        "startChar": 41,
        "endLine": 63,
        "endChar": 71
      },
      "revId": "f5e7f7b300ff1a0909befc2b21520197871d0b13",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "879ad920_c842d86e",
        "filename": "src/dawn/native/vulkan/VulkanExtensions.cpp",
        "patchSetId": 3
      },
      "lineNbr": 214,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-09-28T12:45:42Z",
      "side": 1,
      "message": "It actually requires VK_KHR_get_physical_device_properties2, see https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VK_KHR_maintenance3.html",
      "revId": "f5e7f7b300ff1a0909befc2b21520197871d0b13",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "19ff8682_a027583a",
        "filename": "src/dawn/native/vulkan/VulkanExtensions.h",
        "patchSetId": 3
      },
      "lineNbr": 79,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-09-28T12:45:42Z",
      "side": 1,
      "message": "Could we add Maintenance2 as well while we\u0027re at it? It will be useful one day for sure.",
      "revId": "f5e7f7b300ff1a0909befc2b21520197871d0b13",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}