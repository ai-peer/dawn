{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "1ebda609_79100322",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000033
      },
      "writtenOn": "2023-03-06T23:04:04Z",
      "side": 1,
      "message": "There\u0027s a dumb case that doesn\u0027t work with this version of the code.\nNot clear to me if we should fix now or in a followup.",
      "revId": "140bf0dbd8e43a3f441d51050e5440f3d5284f9b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5fd7103b_96dae689",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2023-03-06T23:29:03Z",
      "side": 1,
      "message": "also, not sure why clang can\u0027t find the absl header when gcc and msvc can...",
      "revId": "140bf0dbd8e43a3f441d51050e5440f3d5284f9b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "da923224_064082d7",
        "filename": "src/tint/reader/wgsl/lexer.cc",
        "patchSetId": 2
      },
      "lineNbr": 403,
      "author": {
        "id": 1000033
      },
      "writtenOn": "2023-03-06T23:04:04Z",
      "side": 1,
      "message": "Consider\n\n0. 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000\n0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000\n0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000 0000000000\n0000000000 0000000000 1 e+0\n\nThis should underflow, but doesn\u0027t have a negative exponent.\nYou want to count the number of insignificant zeros past the decimal point, and subtract that from the implied or explicit exponent.",
      "revId": "140bf0dbd8e43a3f441d51050e5440f3d5284f9b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dcde507d_2ea59859",
        "filename": "src/tint/reader/wgsl/lexer.cc",
        "patchSetId": 2
      },
      "lineNbr": 403,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2023-03-06T23:28:17Z",
      "side": 1,
      "message": "Sigh, that means I\u0027m going to have to actually parse the exponent. Right now I just look for the negative. Since, if this was the set of zeros with a `+302` it would be valid, it\u0027s only because the value goes negative. So, I have to count the spots to the first significant, parse the exponent and then subtract the two.",
      "parentUuid": "da923224_064082d7",
      "revId": "140bf0dbd8e43a3f441d51050e5440f3d5284f9b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b5f7e6b0_9c4fc122",
        "filename": "src/tint/reader/wgsl/lexer.cc",
        "patchSetId": 2
      },
      "lineNbr": 403,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2023-03-07T15:08:54Z",
      "side": 1,
      "message": "This is a bug, but lets land the rest to fix float parsing in general and will followup looking at this case.",
      "parentUuid": "dcde507d_2ea59859",
      "revId": "140bf0dbd8e43a3f441d51050e5440f3d5284f9b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ff2d22b8_e332c295",
        "filename": "src/tint/reader/wgsl/lexer.cc",
        "patchSetId": 2
      },
      "lineNbr": 403,
      "author": {
        "id": 1000033
      },
      "writtenOn": "2023-03-07T15:17:17Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "b5f7e6b0_9c4fc122",
      "revId": "140bf0dbd8e43a3f441d51050e5440f3d5284f9b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}