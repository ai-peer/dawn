{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "16afebff_1db069e1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 22
      },
      "lineNbr": 0,
      "author": {
        "id": 1000248
      },
      "writtenOn": "2022-02-03T18:41:50Z",
      "side": 1,
      "message": "This CL isn\u0027t entirely ready, but Corentin expressed interest in starting review early.\n\nThe main outstanding issue is a failure on CTS tests on Mac. There appears to be interference between my transform and one of the other transforms being invoked in the same block.",
      "revId": "19e8d3cac79a4574a38e6fb29de6e11eb4467927",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ecae4c6d_adaec4b8",
        "filename": "src/common/Constants.h",
        "patchSetId": 22
      },
      "lineNbr": 66,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-02-04T09:24:43Z",
      "side": 1,
      "message": "nit: this will only be used in the BGL so we can put it in there?",
      "revId": "19e8d3cac79a4574a38e6fb29de6e11eb4467927",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a9591f10_e1f1a28a",
        "filename": "src/common/Constants.h",
        "patchSetId": 22
      },
      "lineNbr": 66,
      "author": {
        "id": 1000248
      },
      "writtenOn": "2022-02-04T20:14:16Z",
      "side": 1,
      "message": "No longer needed.",
      "parentUuid": "ecae4c6d_adaec4b8",
      "revId": "19e8d3cac79a4574a38e6fb29de6e11eb4467927",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9231519e_01ebc6f6",
        "filename": "src/dawn_native/BindGroup.cpp",
        "patchSetId": 22
      },
      "lineNbr": 273,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-02-04T09:24:43Z",
      "side": 1,
      "message": "Maybe we could precompute this in the layout and have \"GetUnexpandedBindingCount\"? (in the spirit of reducing the amount of work done in the hot path)",
      "revId": "19e8d3cac79a4574a38e6fb29de6e11eb4467927",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8c9d46ca_21e09a32",
        "filename": "src/dawn_native/BindGroup.cpp",
        "patchSetId": 22
      },
      "lineNbr": 273,
      "author": {
        "id": 1000248
      },
      "writtenOn": "2022-02-04T20:14:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9231519e_01ebc6f6",
      "revId": "19e8d3cac79a4574a38e6fb29de6e11eb4467927",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0dc56c11_dd2aefff",
        "filename": "src/dawn_native/BindGroup.cpp",
        "patchSetId": 22
      },
      "lineNbr": 301,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-02-04T09:24:43Z",
      "side": 1,
      "message": "ditto a TODO to reoptimize I guess.\n\nWe can use a \"continue\" in the if to dedent the rest.",
      "revId": "19e8d3cac79a4574a38e6fb29de6e11eb4467927",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "98aae357_7cf00e4e",
        "filename": "src/dawn_native/BindGroup.cpp",
        "patchSetId": 22
      },
      "lineNbr": 303,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-02-04T09:24:43Z",
      "side": 1,
      "message": "Can we have a comment explaining that external texture is special cased because the BGL contains already transformed data?",
      "revId": "19e8d3cac79a4574a38e6fb29de6e11eb4467927",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "525f09f9_20aed985",
        "filename": "src/dawn_native/BindGroup.cpp",
        "patchSetId": 22
      },
      "lineNbr": 337,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-02-04T09:24:43Z",
      "side": 1,
      "message": "ditto",
      "revId": "19e8d3cac79a4574a38e6fb29de6e11eb4467927",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "791cbef7_fc35bfed",
        "filename": "src/dawn_native/BindGroup.cpp",
        "patchSetId": 22
      },
      "lineNbr": 337,
      "author": {
        "id": 1000248
      },
      "writtenOn": "2022-02-04T20:14:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "525f09f9_20aed985",
      "revId": "19e8d3cac79a4574a38e6fb29de6e11eb4467927",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "477d90a4_548cf89a",
        "filename": "src/dawn_native/BindGroup.cpp",
        "patchSetId": 22
      },
      "lineNbr": 392,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-02-04T09:24:43Z",
      "side": 1,
      "message": "nit: Maybe add a comment that explains what\u0027s happening here.",
      "revId": "19e8d3cac79a4574a38e6fb29de6e11eb4467927",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "721e26f2_642bbd9b",
        "filename": "src/dawn_native/BindGroup.cpp",
        "patchSetId": 22
      },
      "lineNbr": 392,
      "author": {
        "id": 1000248
      },
      "writtenOn": "2022-02-04T20:14:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "477d90a4_548cf89a",
      "revId": "19e8d3cac79a4574a38e6fb29de6e11eb4467927",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "53ebabfd_40eb1463",
        "filename": "src/dawn_native/BindGroup.h",
        "patchSetId": 22
      },
      "lineNbr": 89,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-02-04T09:24:43Z",
      "side": 1,
      "message": "BindGroups are fairly hot code. Would it be possible to put the external textures in BindGroupLayoutBase::BindingDataPointers::bindings? To know what range they are in, we can ask the layout. They would be after all the \"actual\" bindings.\n\nMaybe we can just have a TODO to reoptimize since it might be tricky and delay this CL.",
      "revId": "19e8d3cac79a4574a38e6fb29de6e11eb4467927",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e2710c9f_9daa7f51",
        "filename": "src/dawn_native/BindGroupLayout.cpp",
        "patchSetId": 22
      },
      "lineNbr": 393,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-02-04T09:24:43Z",
      "side": 1,
      "message": "Maybe hide that in a helper function?",
      "revId": "19e8d3cac79a4574a38e6fb29de6e11eb4467927",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a8730794_4a23ef59",
        "filename": "src/dawn_native/BindGroupLayout.cpp",
        "patchSetId": 22
      },
      "lineNbr": 414,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-02-04T09:24:43Z",
      "side": 1,
      "message": "Shouldn\u0027t we add 2 since we have two planes that we add?",
      "revId": "19e8d3cac79a4574a38e6fb29de6e11eb4467927",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e7eea9d2_58c69e76",
        "filename": "src/dawn_native/BindGroupLayout.cpp",
        "patchSetId": 22
      },
      "lineNbr": 414,
      "author": {
        "id": 1000248
      },
      "writtenOn": "2022-02-04T20:14:16Z",
      "side": 1,
      "message": "The associated constant was outdated from the spec. +1\u0027d here and there.",
      "parentUuid": "a8730794_4a23ef59",
      "revId": "19e8d3cac79a4574a38e6fb29de6e11eb4467927",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5e2337ea_0518b31f",
        "filename": "src/dawn_native/BindGroupLayout.cpp",
        "patchSetId": 22
      },
      "lineNbr": 436,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-02-04T09:24:43Z",
      "side": 1,
      "message": "nit: .count() !\u003d 0, but also we could create valid unused binding numbers easily with https://dawn-review.googlesource.com/c/dawn/+/79260 by adding offsets that are multiples of kMaxBindingNumber. This way we can fold the two loops into a single one.",
      "revId": "19e8d3cac79a4574a38e6fb29de6e11eb4467927",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e319a5b1_3b266ffb",
        "filename": "src/dawn_native/BindGroupLayout.cpp",
        "patchSetId": 22
      },
      "lineNbr": 436,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-02-07T12:30:32Z",
      "side": 1,
      "message": "It landed, I think the loops could be made much simpler with this and [1].",
      "parentUuid": "5e2337ea_0518b31f",
      "revId": "19e8d3cac79a4574a38e6fb29de6e11eb4467927",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "648e056b_9867157d",
        "filename": "src/dawn_native/BindGroupLayout.cpp",
        "patchSetId": 22
      },
      "lineNbr": 441,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-02-04T09:24:43Z",
      "side": 1,
      "message": "Where do we add plane 0?",
      "revId": "19e8d3cac79a4574a38e6fb29de6e11eb4467927",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f3253a31_05e758a0",
        "filename": "src/dawn_native/BindGroupLayout.cpp",
        "patchSetId": 22
      },
      "lineNbr": 441,
      "author": {
        "id": 1000248
      },
      "writtenOn": "2022-02-04T20:21:10Z",
      "side": 1,
      "message": "Not sure what you mean. All operations for plane0 are done in the preceding lines. We don\u0027t need to add plane0 into BindingNumberSet because we reuse the binding location of the old ExternalTexture binding.",
      "parentUuid": "648e056b_9867157d",
      "revId": "19e8d3cac79a4574a38e6fb29de6e11eb4467927",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2bf17336_a0e4ebae",
        "filename": "src/dawn_native/BindGroupLayout.cpp",
        "patchSetId": 22
      },
      "lineNbr": 461,
      "author": {
        "id": 1000248
      },
      "writtenOn": "2022-02-03T18:49:14Z",
      "side": 1,
      "message": "Change no longer necessary. Needs revert.",
      "revId": "19e8d3cac79a4574a38e6fb29de6e11eb4467927",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f51f2ab9_992d05a2",
        "filename": "src/dawn_native/BindGroupLayout.cpp",
        "patchSetId": 22
      },
      "lineNbr": 461,
      "author": {
        "id": 1000248
      },
      "writtenOn": "2022-02-04T20:14:16Z",
      "side": 1,
      "message": "Nevermind. This code needs to stay since I\u0027m using sortedBindings.size() now.",
      "parentUuid": "2bf17336_a0e4ebae",
      "revId": "19e8d3cac79a4574a38e6fb29de6e11eb4467927",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2aa31032_f668dfd8",
        "filename": "src/dawn_native/BindGroupLayout.h",
        "patchSetId": 22
      },
      "lineNbr": 96,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-02-04T09:24:43Z",
      "side": 1,
      "message": "nit: we could have typedef for this.",
      "range": {
        "startLine": 96,
        "startChar": 8,
        "endLine": 96,
        "endChar": 64
      },
      "revId": "19e8d3cac79a4574a38e6fb29de6e11eb4467927",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5741012d_a6525544",
        "filename": "src/dawn_native/BindGroupLayout.h",
        "patchSetId": 22
      },
      "lineNbr": 96,
      "author": {
        "id": 1000248
      },
      "writtenOn": "2022-02-07T21:45:02Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2aa31032_f668dfd8",
      "range": {
        "startLine": 96,
        "startChar": 8,
        "endLine": 96,
        "endChar": 64
      },
      "revId": "19e8d3cac79a4574a38e6fb29de6e11eb4467927",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2658289e_a6ff46af",
        "filename": "src/dawn_native/PassResourceUsageTracker.cpp",
        "patchSetId": 22
      },
      "lineNbr": 190,
      "author": {
        "id": 1000248
      },
      "writtenOn": "2022-02-03T18:49:14Z",
      "side": 1,
      "message": "nit: delete newline",
      "revId": "19e8d3cac79a4574a38e6fb29de6e11eb4467927",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f2c10f02_b1ad507c",
        "filename": "src/dawn_native/PassResourceUsageTracker.cpp",
        "patchSetId": 22
      },
      "lineNbr": 190,
      "author": {
        "id": 1000248
      },
      "writtenOn": "2022-02-04T20:14:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2658289e_a6ff46af",
      "revId": "19e8d3cac79a4574a38e6fb29de6e11eb4467927",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "72d93164_520dab35",
        "filename": "src/dawn_native/ShaderModule.cpp",
        "patchSetId": 22
      },
      "lineNbr": 479,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-02-04T09:24:43Z",
      "side": 1,
      "message": "That\u0027s also another reason why I think we can separate the frontend and backend data in the layout. But could just be a TODO for now.",
      "revId": "19e8d3cac79a4574a38e6fb29de6e11eb4467927",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4e73c063_3b317907",
        "filename": "src/dawn_native/ShaderModule.cpp",
        "patchSetId": 22
      },
      "lineNbr": 553,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-02-04T09:24:43Z",
      "side": 1,
      "message": "ditto",
      "revId": "19e8d3cac79a4574a38e6fb29de6e11eb4467927",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0223b018_a845e10d",
        "filename": "src/dawn_native/ShaderModule.cpp",
        "patchSetId": 22
      },
      "lineNbr": 553,
      "author": {
        "id": 1000248
      },
      "writtenOn": "2022-02-04T20:14:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4e73c063_3b317907",
      "revId": "19e8d3cac79a4574a38e6fb29de6e11eb4467927",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "987fac96_7a90a5bb",
        "filename": "src/dawn_native/ShaderModule.cpp",
        "patchSetId": 22
      },
      "lineNbr": 572,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-02-04T09:24:43Z",
      "side": 1,
      "message": "nit: can you reflow this string?",
      "revId": "19e8d3cac79a4574a38e6fb29de6e11eb4467927",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "10975f9c_b885d7bc",
        "filename": "src/dawn_native/ShaderModule.cpp",
        "patchSetId": 22
      },
      "lineNbr": 572,
      "author": {
        "id": 1000248
      },
      "writtenOn": "2022-02-04T20:14:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "987fac96_7a90a5bb",
      "revId": "19e8d3cac79a4574a38e6fb29de6e11eb4467927",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "df3ed37f_75443adc",
        "filename": "src/dawn_native/d3d12/ShaderModuleD3D12.cpp",
        "patchSetId": 22
      },
      "lineNbr": 774,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-02-04T09:24:43Z",
      "side": 1,
      "message": "This seems to be the same code on all backends. Can it be moved to the frontend? That\u0027s where the transform is for the BGL as well so I think it could work.",
      "revId": "19e8d3cac79a4574a38e6fb29de6e11eb4467927",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "03b82b1c_258aeb22",
        "filename": "src/dawn_native/d3d12/ShaderModuleD3D12.cpp",
        "patchSetId": 22
      },
      "lineNbr": 774,
      "author": {
        "id": 1000248
      },
      "writtenOn": "2022-02-04T20:14:16Z",
      "side": 1,
      "message": "Still to do. I think this is doable, but it gets a little tricky when done alongside the BindingRemapper transform. I think I can make this common code for D3D,GL,and Metal in this CL - but will defer the Vk change for a follow up.",
      "parentUuid": "df3ed37f_75443adc",
      "revId": "19e8d3cac79a4574a38e6fb29de6e11eb4467927",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c70e314d_5066a2a6",
        "filename": "src/dawn_native/d3d12/ShaderModuleD3D12.cpp",
        "patchSetId": 22
      },
      "lineNbr": 774,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-02-07T12:30:32Z",
      "side": 1,
      "message": "What is the difficulty with the BindingRemapper?",
      "parentUuid": "03b82b1c_258aeb22",
      "revId": "19e8d3cac79a4574a38e6fb29de6e11eb4467927",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "58640e91_b5ac12af",
        "filename": "src/dawn_native/d3d12/ShaderModuleD3D12.cpp",
        "patchSetId": 22
      },
      "lineNbr": 785,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-02-04T09:24:43Z",
      "side": 1,
      "message": "nit: we can use for (const auto\u0026 expansions : bgl-\u003eGetExternalTextureBindingExpansions()) {stuff} This takes care both of the iteration and of doing nothing when expansions is empty.",
      "revId": "19e8d3cac79a4574a38e6fb29de6e11eb4467927",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e95c0b7b_1b8aed80",
        "filename": "src/dawn_native/d3d12/ShaderModuleD3D12.cpp",
        "patchSetId": 22
      },
      "lineNbr": 797,
      "author": {
        "id": 1000248
      },
      "writtenOn": "2022-02-03T18:49:14Z",
      "side": 1,
      "message": "RunTransforms should be invoked once, not in the loop.",
      "revId": "19e8d3cac79a4574a38e6fb29de6e11eb4467927",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6a19d1da_262ffbe9",
        "filename": "src/dawn_native/d3d12/ShaderModuleD3D12.cpp",
        "patchSetId": 22
      },
      "lineNbr": 797,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-02-04T09:24:43Z",
      "side": 1,
      "message": "Also I think the transform can be added only once, just the binding map that needs to be filled in the loop.",
      "parentUuid": "e95c0b7b_1b8aed80",
      "revId": "19e8d3cac79a4574a38e6fb29de6e11eb4467927",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "13477363_6e9c9c7d",
        "filename": "src/dawn_native/d3d12/ShaderModuleD3D12.cpp",
        "patchSetId": 22
      },
      "lineNbr": 797,
      "author": {
        "id": 1000248
      },
      "writtenOn": "2022-02-04T20:14:16Z",
      "side": 1,
      "message": "Done, but also planning to replace this block with something in ShaderModuleBase.",
      "parentUuid": "6a19d1da_262ffbe9",
      "revId": "19e8d3cac79a4574a38e6fb29de6e11eb4467927",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "83ca6db7_73f9ea77",
        "filename": "src/dawn_native/metal/ShaderModuleMTL.mm",
        "patchSetId": 22
      },
      "lineNbr": 136,
      "author": {
        "id": 1000248
      },
      "writtenOn": "2022-02-03T18:49:14Z",
      "side": 1,
      "message": "I see symbol collisions on ImportExternalTexture Compute CTS tests on MacOS. Still trying to figure it out.",
      "revId": "19e8d3cac79a4574a38e6fb29de6e11eb4467927",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dd2d606c_7e963764",
        "filename": "src/dawn_native/metal/ShaderModuleMTL.mm",
        "patchSetId": 22
      },
      "lineNbr": 136,
      "author": {
        "id": 1000248
      },
      "writtenOn": "2022-02-04T20:14:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "83ca6db7_73f9ea77",
      "revId": "19e8d3cac79a4574a38e6fb29de6e11eb4467927",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9f80163e_9e1d7d00",
        "filename": "src/tests/end2end/ExternalTextureTests.cpp",
        "patchSetId": 22
      },
      "lineNbr": 151,
      "author": {
        "id": 1000248
      },
      "writtenOn": "2022-02-03T18:49:14Z",
      "side": 1,
      "message": "There\u0027s an issue with compiling the transfromed Tint output on OpenGL. Disabling for now but need to root cause and file bug.",
      "revId": "19e8d3cac79a4574a38e6fb29de6e11eb4467927",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e19f8bc1_813d7fe7",
        "filename": "src/tests/end2end/ExternalTextureTests.cpp",
        "patchSetId": 22
      },
      "lineNbr": 151,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-02-07T12:30:32Z",
      "side": 1,
      "message": "OpenGL is still using mixed-mode Tint+SPIRV-Cross, but we\u0027ll replace it with a full Tint path soon, so let\u0027s not worry about it for now and come back to this when we polish the GL backend.",
      "parentUuid": "9f80163e_9e1d7d00",
      "revId": "19e8d3cac79a4574a38e6fb29de6e11eb4467927",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}