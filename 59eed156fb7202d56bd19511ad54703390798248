{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "39f16503_0fea3007",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-09-30T14:03:07Z",
      "side": 1,
      "message": "LGTM",
      "revId": "59eed156fb7202d56bd19511ad54703390798248",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d5eb66ba_28820bc2",
        "filename": "src/dawn_node/CMakeLists.txt",
        "patchSetId": 1
      },
      "lineNbr": 85,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-09-30T14:03:07Z",
      "side": 1,
      "message": "Do the weak symbols work ok on Linux?",
      "revId": "59eed156fb7202d56bd19511ad54703390798248",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "14d4dc2a_94170a8f",
        "filename": "src/dawn_node/CMakeLists.txt",
        "patchSetId": 1
      },
      "lineNbr": 85,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2021-09-30T14:30:40Z",
      "side": 1,
      "message": "99% sure. Will double check.",
      "parentUuid": "d5eb66ba_28820bc2",
      "revId": "59eed156fb7202d56bd19511ad54703390798248",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8cfcb1c7_cdb44298",
        "filename": "src/dawn_node/CMakeLists.txt",
        "patchSetId": 1
      },
      "lineNbr": 85,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2021-09-30T16:10:19Z",
      "side": 1,
      "message": "Yup. Works.",
      "parentUuid": "14d4dc2a_94170a8f",
      "revId": "59eed156fb7202d56bd19511ad54703390798248",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "39a9b558_496b258d",
        "filename": "src/dawn_node/CMakeLists.txt",
        "patchSetId": 1
      },
      "lineNbr": 98,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-09-30T14:03:07Z",
      "side": 1,
      "message": "Does this need to be dawn.node or does it need to be node.exe?",
      "range": {
        "startLine": 98,
        "startChar": 40,
        "endLine": 98,
        "endChar": 49
      },
      "revId": "59eed156fb7202d56bd19511ad54703390798248",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "60dfc5fc_45537d25",
        "filename": "src/dawn_node/CMakeLists.txt",
        "patchSetId": 1
      },
      "lineNbr": 98,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2021-09-30T14:30:40Z",
      "side": 1,
      "message": "It has to be node.exe, as that\u0027s the \u0027library\u0027 we\u0027re pretending to be. Node (the executable) implements the symbols here.",
      "parentUuid": "39a9b558_496b258d",
      "range": {
        "startLine": 98,
        "startChar": 40,
        "endLine": 98,
        "endChar": 49
      },
      "revId": "59eed156fb7202d56bd19511ad54703390798248",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "023a7a74_fcc793eb",
        "filename": "src/dawn_node/CMakeLists.txt",
        "patchSetId": 1
      },
      "lineNbr": 114,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-09-30T14:03:07Z",
      "side": 1,
      "message": "Doesn\u0027t CMake natively understand .def files? We could just add NAPI_SYMBOLS_DEF to the dawn_node sources.",
      "range": {
        "startLine": 104,
        "startChar": 0,
        "endLine": 114,
        "endChar": 44
      },
      "revId": "59eed156fb7202d56bd19511ad54703390798248",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "23315236_baf53096",
        "filename": "src/dawn_node/CMakeLists.txt",
        "patchSetId": 1
      },
      "lineNbr": 114,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-09-30T14:03:07Z",
      "side": 1,
      "message": "Doesn\u0027t CMake natively understand .def files? We could just add",
      "range": {
        "startLine": 104,
        "startChar": 0,
        "endLine": 114,
        "endChar": 44
      },
      "revId": "59eed156fb7202d56bd19511ad54703390798248",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "64a2f255_6ccc42a0",
        "filename": "src/dawn_node/CMakeLists.txt",
        "patchSetId": 1
      },
      "lineNbr": 114,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2021-09-30T14:30:40Z",
      "side": 1,
      "message": "It natively understands they can be used for linking. The issue here is that we\u0027re generating them on the fly, so we need to hook up the build dependency information.",
      "parentUuid": "23315236_baf53096",
      "range": {
        "startLine": 104,
        "startChar": 0,
        "endLine": 114,
        "endChar": 44
      },
      "revId": "59eed156fb7202d56bd19511ad54703390798248",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "74d33b01_00e541d6",
        "filename": "src/dawn_node/CMakeLists.txt",
        "patchSetId": 1
      },
      "lineNbr": 114,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2021-09-30T16:10:19Z",
      "side": 1,
      "message": "See other reply.",
      "parentUuid": "64a2f255_6ccc42a0",
      "range": {
        "startLine": 104,
        "startChar": 0,
        "endLine": 114,
        "endChar": 44
      },
      "revId": "59eed156fb7202d56bd19511ad54703390798248",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c2ff9133_8e7dbbb5",
        "filename": "src/dawn_node/CMakeLists.txt",
        "patchSetId": 1
      },
      "lineNbr": 114,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2021-09-30T16:10:19Z",
      "side": 1,
      "message": "I now see the rest of the message was posted here.\nNo I don\u0027t think CMake can use .def files the way we want. If CMake can consume them, then it would expect the .def to define a library\u0027s *exports*, but that\u0027s not what we\u0027re doing here. We\u0027re taking a list of symbols and producing a .lib that is used as an *import* list.\n\nWhen you build a DLL with a bunch of exports, you get a .dll and a .lib. The .lib is used by other libraries to know what symbols are exported.\n\nIn our situation, we just have the napi headers, and we\u0027re trying to synthesise the .lib, for the node binary.",
      "parentUuid": "023a7a74_fcc793eb",
      "range": {
        "startLine": 104,
        "startChar": 0,
        "endLine": 114,
        "endChar": 44
      },
      "revId": "59eed156fb7202d56bd19511ad54703390798248",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "07c38222_a900757a",
        "filename": "src/dawn_node/CMakeLists.txt",
        "patchSetId": 1
      },
      "lineNbr": 123,
      "author": {
        "id": 1002241
      },
      "writtenOn": "2021-09-30T13:41:50Z",
      "side": 1,
      "message": "I get \"target_sources called with invalid arguments\" on this line. I think it needs an `INTERFACE|PRIVATE|PUBLIC` keyword.",
      "revId": "59eed156fb7202d56bd19511ad54703390798248",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d1347844_d3e04ec7",
        "filename": "src/dawn_node/CMakeLists.txt",
        "patchSetId": 1
      },
      "lineNbr": 123,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2021-09-30T13:53:21Z",
      "side": 1,
      "message": "I made this change without checking Mac / Linux again. Might need to spend the sources to a list and then pass it once to the target. \nAs you\u0027re clearly building on something non-windows, try the parent change",
      "parentUuid": "07c38222_a900757a",
      "revId": "59eed156fb7202d56bd19511ad54703390798248",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2eb4f82e_6a75fbb3",
        "filename": "src/dawn_node/CMakeLists.txt",
        "patchSetId": 1
      },
      "lineNbr": 123,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2021-09-30T13:53:54Z",
      "side": 1,
      "message": "s/spend/append",
      "parentUuid": "d1347844_d3e04ec7",
      "revId": "59eed156fb7202d56bd19511ad54703390798248",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6e1b07a4_2e15b6b0",
        "filename": "src/dawn_node/CMakeLists.txt",
        "patchSetId": 1
      },
      "lineNbr": 123,
      "author": {
        "id": 1002361
      },
      "writtenOn": "2021-09-30T14:05:43Z",
      "side": 1,
      "message": "The parent change didn\u0027t use target_sources, it looks like. The documentation for target_sources does indeed require INTERFACE|PRIVATE|PUBLIC",
      "parentUuid": "2eb4f82e_6a75fbb3",
      "revId": "59eed156fb7202d56bd19511ad54703390798248",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7fe95edf_4a5da658",
        "filename": "src/dawn_node/CMakeLists.txt",
        "patchSetId": 1
      },
      "lineNbr": 123,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2021-09-30T14:30:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6e1b07a4_2e15b6b0",
      "revId": "59eed156fb7202d56bd19511ad54703390798248",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}