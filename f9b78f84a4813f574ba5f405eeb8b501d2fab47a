{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "96783a0b_9f4325db",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000685
      },
      "writtenOn": "2022-04-19T22:54:50Z",
      "side": 1,
      "message": "Hmm I made a test CL at https://dawn-review.googlesource.com/c/dawn/+/87305\nBut that one passed linux-dawn-rel. Not sure if it\u0027s a good example (cuz there\u0027s no ts_sources change after all)\nI\u0027m not sure if simply adding DEPS to the action input is enough\n(I was looking at some how to write gn template doc)",
      "revId": "f9b78f84a4813f574ba5f405eeb8b501d2fab47a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "399b2717_6b9398da",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2022-04-19T23:13:05Z",
      "side": 1,
      "message": "if future revisions have no new files - could we roll back to before some files were added (so ts_sources.txt would be dirty since it should have deletions)",
      "revId": "f9b78f84a4813f574ba5f405eeb8b501d2fab47a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "02e7385c_e1ca4159",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000685
      },
      "writtenOn": "2022-04-19T23:32:17Z",
      "side": 1,
      "message": "The patchset 1 is rolled back to some commit before addition in ts_source.txt\nhttps://logs.chromium.org/logs/chromium/buildbucket/cr-buildbucket/8816426020706272145/+/u/compile__with_patch_/stdout\n\nBuild fails. So this indicate it didn\u0027t actually get refresh?",
      "parentUuid": "399b2717_6b9398da",
      "revId": "f9b78f84a4813f574ba5f405eeb8b501d2fab47a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0ef5ab7a_d20b2e7e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2022-04-19T23:37:09Z",
      "side": 1,
      "message": "ah. it\u0027s because ts_sources.txt tells it to depends on those sources. but since the file doesn\u0027t exist, it doesn\u0027t actually work and fails for a different reason.\n\nWe would need to actually create a new file upstream.\nLGTM since this is incrementally better than what we had before. I think it\u0027ll probably work and we can verify it in the future?",
      "parentUuid": "02e7385c_e1ca4159",
      "revId": "f9b78f84a4813f574ba5f405eeb8b501d2fab47a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1"]}
      },
      "patchSetCommitId": "f9b78f84a4813f574ba5f405eeb8b501d2fab47a",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforced_gerrit"]}
      },
      "submittabilityExpressionResult": {},
      "overrideExpressionResult": {},
      "patchSetCommitId": "f9b78f84a4813f574ba5f405eeb8b501d2fab47a",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}