{
  "comments": [
    {
      "key": {
        "uuid": "65ca7852_6f35b3bc",
        "filename": "src/tests/perf_tests/BufferUploadPerf.cpp",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2019-10-09T00:46:25Z",
      "side": 1,
      "message": "instead of kBufferSize, we can use GetParam().bufferSize everywhere. (or cache that in a member variable).",
      "range": {
        "startLine": 23,
        "startChar": 23,
        "endLine": 23,
        "endChar": 34
      },
      "revId": "102cf06d2edccc80d805aa032fb4d93efe86cdca",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e7ab1df0_2749869f",
        "filename": "src/tests/perf_tests/BufferUploadPerf.cpp",
        "patchSetId": 1
      },
      "lineNbr": 31,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2019-10-09T00:46:25Z",
      "side": 1,
      "message": "The lists at [1] are combinatorialy applied to the param struct constructor.\n\nSo this would get an extra uint64_t bufferSize argument in the constructor which you could assign to a member variable.",
      "range": {
        "startLine": 31,
        "startChar": 7,
        "endLine": 31,
        "endChar": 81
      },
      "revId": "102cf06d2edccc80d805aa032fb4d93efe86cdca",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2c4c3448_b63f4f5a",
        "filename": "src/tests/perf_tests/BufferUploadPerf.cpp",
        "patchSetId": 1
      },
      "lineNbr": 31,
      "author": {
        "id": 1000268
      },
      "writtenOn": "2019-10-09T18:55:40Z",
      "side": 1,
      "message": "I see. The gtest harness seems to expect these to be named parameter types. I went back and followed `UploadMethod` and got the same result. Does this look correct?",
      "parentUuid": "e7ab1df0_2749869f",
      "range": {
        "startLine": 31,
        "startChar": 7,
        "endLine": 31,
        "endChar": 81
      },
      "revId": "102cf06d2edccc80d805aa032fb4d93efe86cdca",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "29afa5dc_0e8e4df5",
        "filename": "src/tests/perf_tests/BufferUploadPerf.cpp",
        "patchSetId": 1
      },
      "lineNbr": 142,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2019-10-09T00:46:25Z",
      "side": 1,
      "message": "[1] You can add another line after this like:\n\n{1 * 1024, 64 * 1024, 4 * 1024 * 1024, 16 * 1024 * 1024}",
      "range": {
        "startLine": 142,
        "startChar": 35,
        "endLine": 142,
        "endChar": 95
      },
      "revId": "102cf06d2edccc80d805aa032fb4d93efe86cdca",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    }
  ]
}