{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "ae80483a_81dc5751",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000268
      },
      "writtenOn": "2021-08-12T18:04:05Z",
      "side": 1,
      "message": "PTAL",
      "revId": "b3588f4e4e0766c316e920b65e55e3f00ab858ea",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e5e82276_98ef8eb4",
        "filename": "src/dawn_native/d3d12/StagingBufferD3D12.cpp",
        "patchSetId": 1
      },
      "lineNbr": 49,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2021-08-12T18:11:35Z",
      "side": 1,
      "message": "LGTM, but can\u0027t this also fail, and then we\u0027ll call Unlock in the destructor when it was never successfully locked?\n\nWe\u0027re only not catching it now because ResidencyManager::MakeAllocationsResident isn\u0027t written in a way that\u0027s fuzz-able",
      "range": {
        "startLine": 47,
        "startChar": 0,
        "endLine": 49,
        "endChar": 0
      },
      "revId": "b3588f4e4e0766c316e920b65e55e3f00ab858ea",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}