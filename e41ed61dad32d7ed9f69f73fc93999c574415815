{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "97337f73_19efd58f",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 9,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2023-10-26T12:08:28Z",
      "side": 1,
      "message": "nit: `write`",
      "range": {
        "startLine": 9,
        "startChar": 36,
        "endLine": 9,
        "endChar": 40
      },
      "revId": "e41ed61dad32d7ed9f69f73fc93999c574415815",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "da79052f_7e16e1c1",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 9,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-10-26T13:44:12Z",
      "side": 1,
      "message": "typo: write",
      "range": {
        "startLine": 9,
        "startChar": 36,
        "endLine": 9,
        "endChar": 40
      },
      "revId": "e41ed61dad32d7ed9f69f73fc93999c574415815",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2238e97a_c79387a8",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 11,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2023-10-26T12:08:28Z",
      "side": 1,
      "message": "I\u0027m not sure it\u0027s really necessary. I see no usages of this internally or [in the chromium source tree](https://source.chromium.org/search?q\u003dchromium_experimental_read_write_storage_texture%20-third_party%2Fdawn).",
      "range": {
        "startLine": 10,
        "startChar": 3,
        "endLine": 11,
        "endChar": 62
      },
      "revId": "e41ed61dad32d7ed9f69f73fc93999c574415815",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3c30c305_717ff51b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2023-10-26T08:54:02Z",
      "side": 1,
      "message": "PTAL, thanks!",
      "revId": "e41ed61dad32d7ed9f69f73fc93999c574415815",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "074b5f52_ed6facf9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2023-10-26T12:08:28Z",
      "side": 1,
      "message": "LGTM. Adding James as a secondary tint reviewer.",
      "revId": "e41ed61dad32d7ed9f69f73fc93999c574415815",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "30d04ce8_a8e6e553",
        "filename": "src/dawn/tests/end2end/StorageTextureTests.cpp",
        "patchSetId": 5
      },
      "lineNbr": 1335,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-10-26T13:44:12Z",
      "side": 1,
      "message": "We shouldn\u0027t need this, IIRC all tests run with UnsafeAPIs by default. However we should have a test in UnsafeAPIsTests.cpp (I think that\u0027s the name?) that checks in \"safe api mode\" we don\u0027t expose RW / RO storage textures.\n\nAh you have it in the StorageTextureValidationTests.cpp. That works too, especially since we want to reuse some helper functions.",
      "range": {
        "startLine": 1329,
        "startChar": 0,
        "endLine": 1335,
        "endChar": 0
      },
      "revId": "e41ed61dad32d7ed9f69f73fc93999c574415815",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "130e3cde_cf8b332f",
        "filename": "src/dawn/tests/unittests/validation/StorageTextureValidationTests.cpp",
        "patchSetId": 5
      },
      "lineNbr": 1194,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-10-26T13:44:12Z",
      "side": 1,
      "message": "We should just test shader module compilation, not pipeline compilation: right now the test fails because the creation of the default bind group layout ends up running into the unsafe validation. But the shadermodule is created successfully, which means this CL enables RW/RO storage textures in WGSL without any flag.\n\nWe need a mechanism to either have Tint report that the module used RW/RO storage textures so that Dawn can validate that, or a flag passed to the wgsl reader to tell it we\u0027re in unsafe vs. safe mode. (or something else, Ben can you advise?)\n\nAlso we\u0027re going to need to figure out how to implement https://gpuweb.github.io/gpuweb/wgsl/#language-extension but since everything is behind unsafe api we don\u0027t need to do it in this CL immediately.",
      "revId": "e41ed61dad32d7ed9f69f73fc93999c574415815",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "23483e7c_0bcf7349",
        "filename": "src/tint/lang/wgsl/writer/ir_to_program/ir_to_program.cc",
        "patchSetId": 5
      },
      "lineNbr": 614,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2023-10-26T12:08:28Z",
      "side": 1,
      "message": "remove",
      "range": {
        "startLine": 613,
        "startChar": 0,
        "endLine": 614,
        "endChar": 30
      },
      "revId": "e41ed61dad32d7ed9f69f73fc93999c574415815",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}