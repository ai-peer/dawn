{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "f0b348c4_062dbfe0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 9
      },
      "lineNbr": 0,
      "author": {
        "id": 1002561
      },
      "writtenOn": "2024-05-10T09:58:12Z",
      "side": 1,
      "message": "PTAL\nWe are trying to fix a regression with MotionMark.\nhttps://pinpoint-dot-chromeperf.appspot.com/job/12c5571a010000\nBy counting the time raw_ptr ref count manipulation occurs in the benchmarks we identified the hotspots.\nhttps://docs.google.com/spreadsheets/d/1gZYdSd_rnmQVNS6rujxwNz0ujpYT2Ty3WEQ6GR8hwiI/edit\nAnd this CL excludes them from raw_ptr.",
      "revId": "ea3323361c556fc20358d788adfa87f14410413c",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c14e72fe_2244ff08",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 9
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2024-05-11T15:43:23Z",
      "side": 1,
      "message": "It\u0027s good to know that all these pointers are \"hot\" when running MotionMark, but what gains do we get rewriting this? Dawn is pretty security-sensitive so it would be great to keep the raw_ptr. We could also try to optimize the hotspots another way potentially.",
      "revId": "ea3323361c556fc20358d788adfa87f14410413c",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9ee0fd2b_fabfe91b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 9
      },
      "lineNbr": 0,
      "author": {
        "id": 1002561
      },
      "writtenOn": "2024-05-13T03:04:07Z",
      "side": 1,
      "message": "We would like as much BRP coverage as possible but we are currently blocked launching BRP to the renderer process for benchmark performance. And so we are currently kind of doing whatever we can that might help the benchmark.\n\nIs there ones that you think are important we keep raw_ptr?\n\nThese ones are definite hot spots so I would like to unrewrite them.\nGuard::mObj\nCommandAllocator::mCurrentPtr\nLinkedListIterator::current_\nLinkedListIterator::next_",
      "parentUuid": "c14e72fe_2244ff08",
      "revId": "ea3323361c556fc20358d788adfa87f14410413c",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "106f27ed_eafa6293",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 9
      },
      "lineNbr": 0,
      "author": {
        "id": 1003911
      },
      "writtenOn": "2024-05-13T07:21:30Z",
      "side": 1,
      "message": "Yes, we\u0027d love to protect as many pointers as we can, but it\u0027s not like we have too much choice here. Metrics owners (incl. benchmark owners) put their foot down to ensure that the performance overhead is minimal. The rule that we, MiraclePtr team, have been always following is \"rewrite everything (on heap) unless it degrades perf\" and this CL follows the spirit of that rule.",
      "parentUuid": "9ee0fd2b_fabfe91b",
      "revId": "ea3323361c556fc20358d788adfa87f14410413c",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}