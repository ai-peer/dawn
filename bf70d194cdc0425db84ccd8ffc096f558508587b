{
  "comments": [
    {
      "key": {
        "uuid": "6a35c79b_a71bee23",
        "filename": "src/dawn_native/vulkan/UtilsVulkan.h",
        "patchSetId": 1
      },
      "lineNbr": 30,
      "author": {
        "id": 1000024
      },
      "writtenOn": "2020-06-15T20:58:40Z",
      "side": 1,
      "message": "Nit: everytime -\u003e every time\n\nNit: maybe Add(vk_struct) -\u003e Add(\u0026vk_struct) or Add(vk_struct_ptr) to indicate that it\u0027s by reference, not by value.",
      "revId": "bf70d194cdc0425db84ccd8ffc096f558508587b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a99de1c7_c840d012",
        "filename": "src/dawn_native/vulkan/UtilsVulkan.h",
        "patchSetId": 1
      },
      "lineNbr": 30,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-06-16T06:56:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6a35c79b_a71bee23",
      "revId": "bf70d194cdc0425db84ccd8ffc096f558508587b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e014eab5_d320d566",
        "filename": "src/dawn_native/vulkan/UtilsVulkan.h",
        "patchSetId": 1
      },
      "lineNbr": 34,
      "author": {
        "id": 1000024
      },
      "writtenOn": "2020-06-15T20:58:40Z",
      "side": 1,
      "message": "Nit: VkStructeType -\u003e VkStructureType?",
      "revId": "bf70d194cdc0425db84ccd8ffc096f558508587b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e507963b_398f7eea",
        "filename": "src/dawn_native/vulkan/UtilsVulkan.h",
        "patchSetId": 1
      },
      "lineNbr": 34,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-06-16T06:56:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e014eab5_d320d566",
      "revId": "bf70d194cdc0425db84ccd8ffc096f558508587b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "034a6a4a_453c2d02",
        "filename": "src/dawn_native/vulkan/UtilsVulkan.h",
        "patchSetId": 1
      },
      "lineNbr": 52,
      "author": {
        "id": 1000024
      },
      "writtenOn": "2020-06-15T20:58:40Z",
      "side": 1,
      "message": "Nit: VK_STRUCT_TYPE -\u003e VK_STRUCT_TYPEs?\n\nAlso, why not just cast the pNext itself, rather than the containing struct? It looks a little less dubious IMHO. Might be able to do a static_cast rather than a reinterpret_cast too.",
      "revId": "bf70d194cdc0425db84ccd8ffc096f558508587b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "602cd8a1_abc4f8c3",
        "filename": "src/dawn_native/vulkan/UtilsVulkan.h",
        "patchSetId": 1
      },
      "lineNbr": 52,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-06-16T06:56:48Z",
      "side": 1,
      "message": "It would cast between void* and const void* so it\u0027s static_cast is not valid. AFAIK the VkBaseOutStructure cast is how Vulkan is meant to be used.\nDone",
      "parentUuid": "034a6a4a_453c2d02",
      "revId": "bf70d194cdc0425db84ccd8ffc096f558508587b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1cace4a7_d8da00ee",
        "filename": "src/dawn_native/vulkan/UtilsVulkan.h",
        "patchSetId": 1
      },
      "lineNbr": 52,
      "author": {
        "id": 1000024
      },
      "writtenOn": "2020-06-16T16:58:28Z",
      "side": 1,
      "message": "const_cast?",
      "parentUuid": "602cd8a1_abc4f8c3",
      "revId": "bf70d194cdc0425db84ccd8ffc096f558508587b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "709f9bed_37289582",
        "filename": "src/dawn_native/vulkan/UtilsVulkan.h",
        "patchSetId": 1
      },
      "lineNbr": 52,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-06-18T15:18:27Z",
      "side": 1,
      "message": "I tried but the const_cast\u003cvoid*\u003e is not sufficient because void* cannot implicitly convert to a void** so a reinterpret_cast is needed in all cases.",
      "parentUuid": "1cace4a7_d8da00ee",
      "revId": "bf70d194cdc0425db84ccd8ffc096f558508587b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3410e22a_060319cc",
        "filename": "src/dawn_native/vulkan/UtilsVulkan.h",
        "patchSetId": 1
      },
      "lineNbr": 52,
      "author": {
        "id": 1000024
      },
      "writtenOn": "2020-06-18T20:04:41Z",
      "side": 1,
      "message": "Maybe I misunderstood. Are you saying that pNext is sometimes a const void*, and sometimes a void**? If so, yeah, that\u0027s ugly and will need an ugly cast.\n\nBut if it\u0027s either a const void* or Foo*, then \u0026const_cast\u003cvoid*\u003e(head-\u003epNext) should work, no? Or failing that, \u0026const_cast\u003cvoid*\u003e(static_cast\u003cconst void*\u003e(head-\u003epNext)) ?\n\n(Ugly, but I\u0027m of the \"don\u0027t use reinterpret_cast unless absolutely necessary\" school.)",
      "parentUuid": "709f9bed_37289582",
      "revId": "bf70d194cdc0425db84ccd8ffc096f558508587b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1d48a9bc_7fbbe449",
        "filename": "src/dawn_native/vulkan/UtilsVulkan.h",
        "patchSetId": 1
      },
      "lineNbr": 52,
      "author": {
        "id": 1000024
      },
      "writtenOn": "2020-06-18T20:10:29Z",
      "side": 1,
      "message": "(I\u0027m assuming that every VK_STRUCT_TYPE has a pNext in it, but maybe that\u0027s an incorrect assumption.)",
      "parentUuid": "3410e22a_060319cc",
      "revId": "bf70d194cdc0425db84ccd8ffc096f558508587b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1b1328d7_df054e74",
        "filename": "src/dawn_native/vulkan/UtilsVulkan.h",
        "patchSetId": 1
      },
      "lineNbr": 52,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-06-19T11:53:28Z",
      "side": 1,
      "message": "The problem is that the cast makes the thing an rvalue:\n\n../../src/dawn_native/vulkan/UtilsVulkan.h:56:24: error: cannot take the address of an rvalue of type \u0027void *\u0027\n            : mTailPtr(\u0026const_cast\u003cvoid*\u003e(head-\u003epNext)) {\n                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~",
      "parentUuid": "1d48a9bc_7fbbe449",
      "revId": "bf70d194cdc0425db84ccd8ffc096f558508587b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9eea3984_19821eb7",
        "filename": "src/dawn_native/vulkan/VulkanInfo.cpp",
        "patchSetId": 1
      },
      "lineNbr": 257,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-06-15T17:00:20Z",
      "side": 1,
      "message": "EnsureDependencies doesn\u0027t check for GetPhysicalDeviceProperties2, probably because GetPhysicalDeviceProperties2 was promoted in 1.1? Maybe we should still check or add a comment to be clear.",
      "range": {
        "startLine": 254,
        "startChar": 8,
        "endLine": 257,
        "endChar": 0
      },
      "revId": "bf70d194cdc0425db84ccd8ffc096f558508587b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "61daf6b4_4b960779",
        "filename": "src/dawn_native/vulkan/VulkanInfo.cpp",
        "patchSetId": 1
      },
      "lineNbr": 257,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-06-16T06:56:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9eea3984_19821eb7",
      "range": {
        "startLine": 254,
        "startChar": 8,
        "endLine": 257,
        "endChar": 0
      },
      "revId": "bf70d194cdc0425db84ccd8ffc096f558508587b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    }
  ]
}