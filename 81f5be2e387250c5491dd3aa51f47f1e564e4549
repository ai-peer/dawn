{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "c718c0e7_c2b9a3dc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2022-05-16T10:55:43Z",
      "side": 1,
      "message": "PTAL, thanks!",
      "revId": "81f5be2e387250c5491dd3aa51f47f1e564e4549",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8e313e5d_2e41d5ee",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-05-16T11:35:50Z",
      "side": 1,
      "message": "Overall logic looks good, except that I think we could add a wgpu::FeatureName in dawn.json that\u0027s ChromiumExperimentalDP4A and just gate behind !DisallowUnsafeAPIs. This would simplify code a bunch because on the device side we would know that the extension is to be enabled only if the DeviceDescriptor requests it (and that descriptor is also validated against the features exposed by the adapter.)\n\nIs there a reason why this is using a new toggle instead?",
      "revId": "81f5be2e387250c5491dd3aa51f47f1e564e4549",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7cdb71aa_a3993722",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2022-05-17T00:27:09Z",
      "side": 1,
      "message": "no additional comments",
      "revId": "81f5be2e387250c5491dd3aa51f47f1e564e4549",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d1c945a2_7afada6b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2022-05-17T00:49:42Z",
      "side": 1,
      "message": "I just don\u0027t want to always expose this \"feature\" by the adapter.getProperties() without any optional flags guarded.\n\n\"DisallowUnsafeAPIs\" is a toggle and can only be set when creating devices, so DP4a can still be queried by adapter.getProperties().\n\nI found this issue when I met the failures of FeatureTests/GetEnabledFeatures:\nhttps://source.chromium.org/chromium/chromium/src/+/main:third_party/dawn/src/dawn/tests/unittests/FeatureTests.cpp;l\u003d69\n\nThis test will fail if I don\u0027t filter out the DP4a \"feature\" in the test because DP4a \"feature\" cannot be used in the creation of device without an optional flag (DisallowUnsafeAPIs or EnableDP4a or some other things).\n\n\nInstead I think a \"toggle\" may be more suitable for DP4a as DP4a behind a toggle won\u0027t be available by any WebGPU APIs unless we explicitly set that toggle, while it seems \"features\" are something that is always available on the adapter.",
      "parentUuid": "8e313e5d_2e41d5ee",
      "revId": "81f5be2e387250c5491dd3aa51f47f1e564e4549",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "79138394_0f564208",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2022-05-17T00:56:30Z",
      "side": 1,
      "message": "See CL that will be re-landing once Dawn rolls into chromium.\nhttps://chromium-review.googlesource.com/c/chromium/src/+/3650935\n\nthere\u0027s an include list of allowed features, so it won\u0027t be visible to Javascript.\nIt\u0027s also guarded here https://source.chromium.org/chromium/chromium/src/+/main:third_party/blink/renderer/modules/webgpu/gpu_adapter.cc;l\u003d127",
      "parentUuid": "d1c945a2_7afada6b",
      "revId": "81f5be2e387250c5491dd3aa51f47f1e564e4549",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "18785811_c953ce7c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2022-05-17T01:02:06Z",
      "side": 1,
      "message": "Thanks Austin. Then in chromium we can filter the non-official features to make them invisible to Javascript.\n\nBut in Dawn I see we still assume if a \"feature\" is supported by adapter, we can always use it when creating devices. Do you mean we should introduce a concept that some \"features\" are \"optional\" and can only be available with a toggle? (like DisallowUnsafeAPIs or some other things)",
      "parentUuid": "79138394_0f564208",
      "revId": "81f5be2e387250c5491dd3aa51f47f1e564e4549",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "294a8fbc_d4b9eada",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2022-05-17T01:05:22Z",
      "side": 1,
      "message": "Instead I feel that guarding DP4a behind a toggle seems more reasonable as a toggle is always optional and cannot be available if the toggle is disabled, while it seems we never say a \"feature\" is optional right now.",
      "parentUuid": "18785811_c953ce7c",
      "revId": "81f5be2e387250c5491dd3aa51f47f1e564e4549",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "918905af_72275ca8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2022-05-17T01:25:39Z",
      "side": 1,
      "message": "\u003e in Dawn I see we still assume if a \"feature\" is supported by adapter, we can always use it when creating devices\n\nyes, and for native applications, I think this should be OK because unlike JS, I don\u0027t think we need to \"hide\" things from the developer.\n\nI do see what you mean about DisallowUnsafeAPIs though - it\u0027s almost as if that should be a toggle that is present on the Adapter instead of the Device. Perhaps we should move it there eventually, but not necessary now.",
      "parentUuid": "294a8fbc_d4b9eada",
      "revId": "81f5be2e387250c5491dd3aa51f47f1e564e4549",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "26a81775_f358d389",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-05-17T08:12:25Z",
      "side": 1,
      "message": "Maybe we can just not have it behind a toggle and use Chromium\u0027s filtering of extensions to make it not visible to the renderer process. Other native users would be warned that it is unsafe because there\u0027s \"experimental\" in the name?",
      "parentUuid": "918905af_72275ca8",
      "revId": "81f5be2e387250c5491dd3aa51f47f1e564e4549",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4dbf4b09_dd264006",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2022-05-17T08:21:22Z",
      "side": 1,
      "message": "So you think I should also modify the test FeatureTests/GetEnabledFeatures to filter the DP4a \"feature\" in the test?\n\nhttps://source.chromium.org/chromium/chromium/src/+/main:third_party/dawn/src/dawn/tests/unittests/FeatureTests.cpp;l\u003d69",
      "parentUuid": "26a81775_f358d389",
      "revId": "81f5be2e387250c5491dd3aa51f47f1e564e4549",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6b5ceb18_96b22288",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-05-17T08:25:02Z",
      "side": 1,
      "message": "I don\u0027t think so, the filtering should be done in Chromium. Dawn just exposes everything and Chromium does the filter. Did I miss something?",
      "parentUuid": "4dbf4b09_dd264006",
      "revId": "81f5be2e387250c5491dd3aa51f47f1e564e4549",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0a4e38b3_0b18fbb8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2022-05-17T08:28:19Z",
      "side": 1,
      "message": "Now that we decide to expose DP4a as a feature of adapter. This test tries to create a device with DP4a extension, then the test fail because we can only use DP4a with another toggle \"UnsafeAPI\" or some other things.",
      "parentUuid": "6b5ceb18_96b22288",
      "revId": "81f5be2e387250c5491dd3aa51f47f1e564e4549",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "296e1f24_462b2c4b",
        "filename": "src/dawn/native/Toggles.cpp",
        "patchSetId": 3
      },
      "lineNbr": 271,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-05-16T11:35:50Z",
      "side": 1,
      "message": "Why a new toggle and not just behind !DisallowUnsafeAPIs?",
      "revId": "81f5be2e387250c5491dd3aa51f47f1e564e4549",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "580ef2e8_02ff6c23",
        "filename": "src/dawn/native/d3d12/D3D12Info.cpp",
        "patchSetId": 3
      },
      "lineNbr": 78,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-05-16T11:35:50Z",
      "side": 1,
      "message": "nit: 6.3 doesn\u0027t exist?",
      "revId": "81f5be2e387250c5491dd3aa51f47f1e564e4549",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9751ef4e_d329deea",
        "filename": "src/dawn/native/d3d12/D3D12Info.cpp",
        "patchSetId": 3
      },
      "lineNbr": 78,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2022-05-17T00:51:26Z",
      "side": 1,
      "message": "6.3 (that supports DirectX Ray Tracing) is not useful in Dawn right now. Shall we add it later when we need it?",
      "parentUuid": "580ef2e8_02ff6c23",
      "revId": "81f5be2e387250c5491dd3aa51f47f1e564e4549",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "14cb1d72_be363839",
        "filename": "src/dawn/native/d3d12/D3D12Info.cpp",
        "patchSetId": 3
      },
      "lineNbr": 78,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-05-17T08:12:25Z",
      "side": 1,
      "message": "IMHO we might as well do it now, there\u0027s basically no cost to that and we\u0027re just updating the list of known shader models in this CL. As you wish.",
      "parentUuid": "9751ef4e_d329deea",
      "revId": "81f5be2e387250c5491dd3aa51f47f1e564e4549",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}