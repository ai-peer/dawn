{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "24d573f6_90b15ae6",
        "filename": "src/tint/transform/promote_side_effects_to_decl.cc",
        "patchSetId": 1
      },
      "lineNbr": 368,
      "author": {
        "id": 1002361
      },
      "writtenOn": "2023-03-08T15:07:44Z",
      "side": 0,
      "message": "This was the special-case code I was referring to yesterday wrt evaluating rhs before lhs. I _think_ the simplified version you\u0027re replacing this with is sufficient, that is:\n\n```\ntint::utils::Vector\u003cconst ast::Expression*, 8\u003e maybe_hoist;\nProcessExpression(s-\u003elhs, maybe_hoist);\nProcessExpression(s-\u003erhs, maybe_hoist);\n```\n\nThe only thing I\u0027m unclear on is why, exactly, I was adding `rhs` to `maybe_hoist` if `ProcessExpression` returned true. The details are fuzzy as it\u0027s been a while since I wrote this, but I think it\u0027s something like the top-level expression `rhs` is not automatically added to `maybe_hoist`, so I had to do so for the `ProcessExpression(lhs, maybe_hoist)` below. This is probably related to the `Flush` call in between.\n\nI\u0027m really not sure, but looking at the diffs in the unit tests, it _looks_ like we\u0027re doing the right thing. And the old and new flow control CTS tests should help clarify if this is valid.",
      "range": {
        "startLine": 355,
        "startChar": 8,
        "endLine": 368,
        "endChar": 9
      },
      "revId": "eebbdef81a2a112126c6eb66e21be9dd3c5d5b1e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e802f82f_c4f5209d",
        "filename": "src/tint/transform/promote_side_effects_to_decl.cc",
        "patchSetId": 1
      },
      "lineNbr": 368,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2023-03-08T17:14:17Z",
      "side": 0,
      "message": "I believe you pushed RHS as you needed to ensure that a RHS reference was snapshotted before the LHS side effects could change the referenced value? Something like:\n\n```\nvar\u003cprivate\u003e v : i32;\n\nfn modify_v() {\n  v++;\n}\n\nfn f() {\n  lhs[modify_v()] \u003d v;\n}\n```\n\nI don\u0027t think this is an issue with evaluating LHS first. James will probably correct me.",
      "parentUuid": "24d573f6_90b15ae6",
      "range": {
        "startLine": 355,
        "startChar": 8,
        "endLine": 368,
        "endChar": 9
      },
      "revId": "eebbdef81a2a112126c6eb66e21be9dd3c5d5b1e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cbf00806_a677990f",
        "filename": "src/tint/transform/promote_side_effects_to_decl.cc",
        "patchSetId": 1
      },
      "lineNbr": 368,
      "author": {
        "id": 1002241
      },
      "writtenOn": "2023-03-08T17:43:06Z",
      "side": 0,
      "message": "Yeah, I don\u0027t think there\u0027s any issues like that now.",
      "parentUuid": "e802f82f_c4f5209d",
      "range": {
        "startLine": 355,
        "startChar": 8,
        "endLine": 368,
        "endChar": 9
      },
      "revId": "eebbdef81a2a112126c6eb66e21be9dd3c5d5b1e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "85aace56_51fd9825",
        "filename": "src/tint/transform/promote_side_effects_to_decl.cc",
        "patchSetId": 1
      },
      "lineNbr": 368,
      "author": {
        "id": 1002421
      },
      "writtenOn": "2023-03-08T18:14:20Z",
      "side": 0,
      "message": "Acknowledged",
      "parentUuid": "cbf00806_a677990f",
      "range": {
        "startLine": 355,
        "startChar": 8,
        "endLine": 368,
        "endChar": 9
      },
      "revId": "eebbdef81a2a112126c6eb66e21be9dd3c5d5b1e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}