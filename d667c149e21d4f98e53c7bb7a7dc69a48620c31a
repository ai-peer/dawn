{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "8e118d5d_9b9dd87c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2021-08-09T20:42:57Z",
      "side": 1,
      "message": "LGTM with some comments",
      "revId": "d667c149e21d4f98e53c7bb7a7dc69a48620c31a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c07c9708_1b8a4afb",
        "filename": "src/dawn_native/ShaderModule.cpp",
        "patchSetId": 4
      },
      "lineNbr": 537,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2021-08-09T20:42:57Z",
      "side": 1,
      "message": "I think we can remove this entirely. GLSL now always goes through Tint\u0027s spirv output which has its own robustness pass",
      "revId": "d667c149e21d4f98e53c7bb7a7dc69a48620c31a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "aa780ea4_c4e25a42",
        "filename": "src/dawn_native/ShaderModule.cpp",
        "patchSetId": 4
      },
      "lineNbr": 537,
      "author": {
        "id": 1000024
      },
      "writtenOn": "2021-08-10T12:42:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c07c9708_1b8a4afb",
      "revId": "d667c149e21d4f98e53c7bb7a7dc69a48620c31a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "69665947_0b7351c0",
        "filename": "src/dawn_native/ShaderModule.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1649,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2021-08-09T20:42:57Z",
      "side": 1,
      "message": "I think this #else branch is the only one we need.\nWe should also be able to remove mSpirv and ShaderModuleParseResult::spirv.\n\nEverything should first get parsed into a Tint program and reflected using Tint.\n\nFor GLSL, we\u0027ll produce spirv and reflect again with ReflectShaderUsingSPIRVCross because we need to match the binding info that SPIRV cross is reflecting for the spirv cross translation. This is the mGLEntryPoints thing you already have in the previous patch. See also the comment in third_party/dawn/src/dawn_native/opengl/ShaderModuleGL.cpp\n\n        // When the use_tint_generator toggle is on, Tint is used for the reflection of bindings\n        // for the implicit pipeline layout and pipeline/layout validation, but bindingInfo is set\n        // to mGLEntryPoints which is the SPIRV-Cross reflection. Tint reflects bindings used more\n        // precisely than SPIRV-Cross so some bindings in bindingInfo might not exist in the layout\n        // and querying the layout for them would cause an ASSERT. That\u0027s why we defensively check\n        // that bindings are in the layout before modifying them. This slight hack is ok because in\n        // the long term we will use Tint to produce GLSL.",
      "range": {
        "startLine": 1649,
        "startChar": 0,
        "endLine": 1649,
        "endChar": 95
      },
      "revId": "d667c149e21d4f98e53c7bb7a7dc69a48620c31a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f2ed5788_fd4f0df9",
        "filename": "src/dawn_native/ShaderModule.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1649,
      "author": {
        "id": 1000024
      },
      "writtenOn": "2021-08-09T21:47:11Z",
      "side": 1,
      "message": "This all sounds good, and I\u0027ll give it a shot, but perhaps a medium-sized change like that could wait until after the branch point?",
      "parentUuid": "69665947_0b7351c0",
      "range": {
        "startLine": 1649,
        "startChar": 0,
        "endLine": 1649,
        "endChar": 95
      },
      "revId": "d667c149e21d4f98e53c7bb7a7dc69a48620c31a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "acb0b95f_af1e637b",
        "filename": "src/dawn_native/ShaderModule.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1649,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2021-08-09T23:40:24Z",
      "side": 1,
      "message": "If it doesn\u0027t work out, it can wait, but I\u0027m pretty sure all that\u0027s required here is to keep only line 1649",
      "parentUuid": "f2ed5788_fd4f0df9",
      "range": {
        "startLine": 1649,
        "startChar": 0,
        "endLine": 1649,
        "endChar": 95
      },
      "revId": "d667c149e21d4f98e53c7bb7a7dc69a48620c31a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1ad4c8dd_2f8876f3",
        "filename": "src/dawn_native/ShaderModule.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1649,
      "author": {
        "id": 1000024
      },
      "writtenOn": "2021-08-10T12:42:38Z",
      "side": 1,
      "message": "Sorry, my reply was meant to apply to another comment. Done.",
      "parentUuid": "acb0b95f_af1e637b",
      "range": {
        "startLine": 1649,
        "startChar": 0,
        "endLine": 1649,
        "endChar": 95
      },
      "revId": "d667c149e21d4f98e53c7bb7a7dc69a48620c31a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ecfac9ea_c0d1008f",
        "filename": "src/dawn_native/ShaderModule.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1655,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2021-08-09T20:42:57Z",
      "side": 1,
      "message": "would be cool if we can move this inside ShaderModuleGL.cpp\n\nAlso take a look at mGLEntryPoints and what data we reflect from it. We can probably move ExtractSpirvInfo into ShaderModuleGL.cpp as well and slim it down to contain only what we need.",
      "range": {
        "startLine": 1655,
        "startChar": 61,
        "endLine": 1655,
        "endChar": 89
      },
      "revId": "d667c149e21d4f98e53c7bb7a7dc69a48620c31a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8b280163_63efcd16",
        "filename": "src/dawn_native/ShaderModule.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1655,
      "author": {
        "id": 1000024
      },
      "writtenOn": "2021-08-09T21:47:11Z",
      "side": 1,
      "message": "Ack (but see above).",
      "parentUuid": "ecfac9ea_c0d1008f",
      "range": {
        "startLine": 1655,
        "startChar": 61,
        "endLine": 1655,
        "endChar": 89
      },
      "revId": "d667c149e21d4f98e53c7bb7a7dc69a48620c31a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f27e1aac_b10c92cc",
        "filename": "src/dawn_native/ShaderModule.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1655,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2021-08-09T23:40:24Z",
      "side": 1,
      "message": "Sure we can wait to simplify it",
      "parentUuid": "8b280163_63efcd16",
      "range": {
        "startLine": 1655,
        "startChar": 61,
        "endLine": 1655,
        "endChar": 89
      },
      "revId": "d667c149e21d4f98e53c7bb7a7dc69a48620c31a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8ea105d1_61669618",
        "filename": "src/dawn_native/ShaderModule.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1655,
      "author": {
        "id": 1000024
      },
      "writtenOn": "2021-08-10T12:42:38Z",
      "side": 1,
      "message": "kk",
      "parentUuid": "f27e1aac_b10c92cc",
      "range": {
        "startLine": 1655,
        "startChar": 61,
        "endLine": 1655,
        "endChar": 89
      },
      "revId": "d667c149e21d4f98e53c7bb7a7dc69a48620c31a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}