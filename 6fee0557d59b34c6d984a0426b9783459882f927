{
  "comments": [
    {
      "key": {
        "uuid": "deed7022_82aa8895",
        "filename": "src/dawn_native/Buffer.cpp",
        "patchSetId": 5
      },
      "lineNbr": 209,
      "author": {
        "id": 1000262
      },
      "writtenOn": "2020-01-22T21:17:56Z",
      "side": 1,
      "message": "Since this code is shared with CallMapWriteCallback, consider putting it into a helper function.",
      "range": {
        "startLine": 202,
        "startChar": 0,
        "endLine": 209,
        "endChar": 11
      },
      "revId": "6fee0557d59b34c6d984a0426b9783459882f927",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fb93797a_2fe9c844",
        "filename": "src/dawn_native/Buffer.cpp",
        "patchSetId": 5
      },
      "lineNbr": 209,
      "author": {
        "id": 1000308
      },
      "writtenOn": "2020-01-22T21:50:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "deed7022_82aa8895",
      "range": {
        "startLine": 202,
        "startChar": 0,
        "endLine": 209,
        "endChar": 11
      },
      "revId": "6fee0557d59b34c6d984a0426b9783459882f927",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a6d35ba7_b60ef6e3",
        "filename": "src/dawn_native/Buffer.cpp",
        "patchSetId": 5
      },
      "lineNbr": 443,
      "author": {
        "id": 1000262
      },
      "writtenOn": "2020-01-22T21:17:56Z",
      "side": 1,
      "message": "Don\u0027t you need to pass `validateMapError` into ConsumedError instead of `errorData`?",
      "range": {
        "startLine": 443,
        "startChar": 39,
        "endLine": 443,
        "endChar": 59
      },
      "revId": "6fee0557d59b34c6d984a0426b9783459882f927",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2e85f09b_9d49f502",
        "filename": "src/dawn_native/Buffer.cpp",
        "patchSetId": 5
      },
      "lineNbr": 443,
      "author": {
        "id": 1000308
      },
      "writtenOn": "2020-01-22T21:50:03Z",
      "side": 1,
      "message": "After acquire error validateMapError becomes null",
      "parentUuid": "a6d35ba7_b60ef6e3",
      "range": {
        "startLine": 443,
        "startChar": 39,
        "endLine": 443,
        "endChar": 59
      },
      "revId": "6fee0557d59b34c6d984a0426b9783459882f927",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7ba4f4b7_4dc9cbc7",
        "filename": "src/dawn_native/Buffer.cpp",
        "patchSetId": 5
      },
      "lineNbr": 443,
      "author": {
        "id": 1000308
      },
      "writtenOn": "2020-01-24T00:14:27Z",
      "side": 1,
      "message": "Result has a constructor that takes an ErrorData.",
      "parentUuid": "2e85f09b_9d49f502",
      "range": {
        "startLine": 443,
        "startChar": 39,
        "endLine": 443,
        "endChar": 59
      },
      "revId": "6fee0557d59b34c6d984a0426b9783459882f927",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "19177536_31a39cea",
        "filename": "src/dawn_native/Buffer.cpp",
        "patchSetId": 5
      },
      "lineNbr": 446,
      "author": {
        "id": 1000262
      },
      "writtenOn": "2020-01-22T21:17:56Z",
      "side": 1,
      "message": "I would have expected us to return WGPUBufferMapAsyncStatus_Success in the non-error case.",
      "range": {
        "startLine": 446,
        "startChar": 15,
        "endLine": 446,
        "endChar": 47
      },
      "revId": "6fee0557d59b34c6d984a0426b9783459882f927",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8d5416fe_d94780a3",
        "filename": "src/dawn_native/Buffer.cpp",
        "patchSetId": 5
      },
      "lineNbr": 446,
      "author": {
        "id": 1000308
      },
      "writtenOn": "2020-01-22T21:50:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "19177536_31a39cea",
      "range": {
        "startLine": 446,
        "startChar": 15,
        "endLine": 446,
        "endChar": 47
      },
      "revId": "6fee0557d59b34c6d984a0426b9783459882f927",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c1976c7e_79028acd",
        "filename": "src/dawn_native/d3d12/DeviceD3D12.cpp",
        "patchSetId": 5
      },
      "lineNbr": 113,
      "author": {
        "id": 1000262
      },
      "writtenOn": "2020-01-22T21:17:56Z",
      "side": 1,
      "message": "Why is this code not at the end of Destroy?",
      "range": {
        "startLine": 110,
        "startChar": 0,
        "endLine": 113,
        "endChar": 0
      },
      "revId": "6fee0557d59b34c6d984a0426b9783459882f927",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8d2027a5_19d06362",
        "filename": "src/dawn_native/d3d12/DeviceD3D12.cpp",
        "patchSetId": 5
      },
      "lineNbr": 113,
      "author": {
        "id": 1000308
      },
      "writtenOn": "2020-01-22T21:50:03Z",
      "side": 1,
      "message": "because destroy happens when device is lost, but like in vulkan, the child objects will be destroyed when they go out of scope, and need to be cleaned up after they are destroyed. and we know device will be destructed last. destroy will not be called twice, so base destructor will see that device is already lost and skip everything, but we still need to clean up these",
      "parentUuid": "c1976c7e_79028acd",
      "range": {
        "startLine": 110,
        "startChar": 0,
        "endLine": 113,
        "endChar": 0
      },
      "revId": "6fee0557d59b34c6d984a0426b9783459882f927",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "74ac6c29_91a2d395",
        "filename": "src/dawn_native/d3d12/DeviceD3D12.cpp",
        "patchSetId": 5
      },
      "lineNbr": 113,
      "author": {
        "id": 1000262
      },
      "writtenOn": "2020-01-23T23:16:45Z",
      "side": 1,
      "message": "I understand we may need this for Vulkan. Why do we need it for D3D12?",
      "parentUuid": "8d2027a5_19d06362",
      "range": {
        "startLine": 110,
        "startChar": 0,
        "endLine": 113,
        "endChar": 0
      },
      "revId": "6fee0557d59b34c6d984a0426b9783459882f927",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2158ee26_242afd57",
        "filename": "src/dawn_native/d3d12/DeviceD3D12.cpp",
        "patchSetId": 5
      },
      "lineNbr": 113,
      "author": {
        "id": 1000308
      },
      "writtenOn": "2020-01-24T00:14:27Z",
      "side": 1,
      "message": "I think this was needed before for me because I wrote my test wrong. It\u0027s no longer failing without this so I removed it.",
      "parentUuid": "74ac6c29_91a2d395",
      "range": {
        "startLine": 110,
        "startChar": 0,
        "endLine": 113,
        "endChar": 0
      },
      "revId": "6fee0557d59b34c6d984a0426b9783459882f927",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e39ad9d2_cf1fe269",
        "filename": "src/tests/end2end/DeviceLostTests.cpp",
        "patchSetId": 5
      },
      "lineNbr": 339,
      "author": {
        "id": 1000262
      },
      "writtenOn": "2020-01-22T21:17:56Z",
      "side": 1,
      "message": "Please give BufferMapReadAsyncBeforeLossFails the same std::array treatment.",
      "range": {
        "startLine": 339,
        "startChar": 0,
        "endLine": 339,
        "endChar": 38
      },
      "revId": "6fee0557d59b34c6d984a0426b9783459882f927",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9d881d4b_78643c52",
        "filename": "src/tests/end2end/DeviceLostTests.cpp",
        "patchSetId": 5
      },
      "lineNbr": 339,
      "author": {
        "id": 1000308
      },
      "writtenOn": "2020-01-22T21:50:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e39ad9d2_cf1fe269",
      "range": {
        "startLine": 339,
        "startChar": 0,
        "endLine": 339,
        "endChar": 38
      },
      "revId": "6fee0557d59b34c6d984a0426b9783459882f927",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    }
  ]
}