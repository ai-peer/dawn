{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "688c1b5c_8cf6f100",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 1002421
      },
      "writtenOn": "2022-08-22T10:54:35Z",
      "side": 1,
      "message": "I thought you were going to use the `AddSpirvBlockAttribute` for this?\nWas there an issue with using this transform?",
      "revId": "0541865251969d284bbad192bd4843ea9b280b25",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8f78f433_245a8024",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 1000024
      },
      "writtenOn": "2022-08-22T18:47:40Z",
      "side": 1,
      "message": "I looked at it, but TBH I don\u0027t understand the need for special handling of nested structs. I\u0027m probably missing something, but this simple CL handles all the test cases. Are there cases not covered by existing tests?",
      "parentUuid": "688c1b5c_8cf6f100",
      "revId": "0541865251969d284bbad192bd4843ea9b280b25",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ed7d11bb_b8b29192",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2022-08-22T19:11:49Z",
      "side": 1,
      "message": "The handling is to only split the structure if it is needed. If there\u0027s no other use of the structure, aside from direct use from storage, uniform or pushconstant, then it isn\u0027t split.\n\n\u003e Are there cases not covered by existing tests?\n\nPush constants. Everything else appears to work - however, I\u0027d rather we unified this logic (by using the existing transform) instead of adding a complexity to one backend, and having two solutions to maintain.",
      "parentUuid": "8f78f433_245a8024",
      "revId": "0541865251969d284bbad192bd4843ea9b280b25",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "50aedf4f_52340441",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 1000024
      },
      "writtenOn": "2022-08-22T22:40:27Z",
      "side": 1,
      "message": "OK, so it turns out James already added the AddSpirvBlockAttribute transform to the GLSL backend here: https://dawn-review.googlesource.com/c/tint/+/76164, in order to turn wrap all non-struct interface variables in structs.\n\nAFAICT, the only actual use of SpirvBlockAttribute in the SPIR-V backend is to decorate structs used as memory buffers with SpvDecorationBlock. I suppose I could use it determine when to emit an interface block, but I don\u0027t see how that helps.",
      "parentUuid": "ed7d11bb_b8b29192",
      "revId": "0541865251969d284bbad192bd4843ea9b280b25",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}