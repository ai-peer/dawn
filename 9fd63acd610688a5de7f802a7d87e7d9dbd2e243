{
  "comments": [
    {
      "key": {
        "uuid": "585274d9_c777dde3",
        "filename": "src/dawn_native/d3d12/TextureD3D12.cpp",
        "patchSetId": 17
      },
      "lineNbr": 572,
      "author": {
        "id": 1000262
      },
      "writtenOn": "2020-06-03T22:46:23Z",
      "side": 1,
      "message": "The word \"full\" confused me at first because I thought it meant that you were going to set all of the usage bits on every subresource. Perhaps a better name would be TrackAllResourceUsageAndTransitionNow.",
      "range": {
        "startLine": 572,
        "startChar": 23,
        "endLine": 572,
        "endChar": 27
      },
      "revId": "9fd63acd610688a5de7f802a7d87e7d9dbd2e243",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e1bc0398_d1dc2fb4",
        "filename": "src/dawn_native/d3d12/TextureD3D12.cpp",
        "patchSetId": 17
      },
      "lineNbr": 572,
      "author": {
        "id": 1000017
      },
      "writtenOn": "2020-06-04T00:02:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "585274d9_c777dde3",
      "range": {
        "startLine": 572,
        "startChar": 23,
        "endLine": 572,
        "endChar": 27
      },
      "revId": "9fd63acd610688a5de7f802a7d87e7d9dbd2e243",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e2bdf65a_7027b919",
        "filename": "src/dawn_native/d3d12/TextureD3D12.cpp",
        "patchSetId": 17
      },
      "lineNbr": 706,
      "author": {
        "id": 1000262
      },
      "writtenOn": "2020-06-03T22:46:23Z",
      "side": 1,
      "message": "Please use the formula documented in MSDN for going from miplevel/arrayslice/planeslice to subresource index and incorporate it into GetSubResourceIndex itself so that it\u0027s all in one place. \n\nFrom: https://docs.microsoft.com/en-us/windows/win32/direct3d12/subresources\n inline UINT D3D12CalcSubresource( UINT MipSlice, UINT ArraySlice, UINT PlaneSlice, UINT \nMipLevels, UINT ArraySize )\n { \n     return MipSlice + (ArraySlice * MipLevels) + (PlaneSlice * MipLevels * ArraySize); \n }\n\nSince TransitionSingleSubResource needs to do offsetting on account of the stencil/depth issue, you should pass the mipslice/arrayslice/miplevels/arraysize to TransitionSingleSubResource and let it call D3D12CalcSubResourceDirectly.",
      "range": {
        "startLine": 706,
        "startChar": 20,
        "endLine": 706,
        "endChar": 93
      },
      "revId": "9fd63acd610688a5de7f802a7d87e7d9dbd2e243",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "de2176b4_c2a324bb",
        "filename": "src/dawn_native/d3d12/TextureD3D12.cpp",
        "patchSetId": 17
      },
      "lineNbr": 706,
      "author": {
        "id": 1000017
      },
      "writtenOn": "2020-06-04T00:02:48Z",
      "side": 1,
      "message": "Yeah, you are correct. However, as the discussion in previous patch set, we haven\u0027t handle the planar slice stuff. And that is a broader problem in Dawn implementation. Let\u0027s revisit this later with a standalone patch (like correct the function of GetSubresourceIndex()) when we implement depth/stencil planes, and don\u0027t make this patch more complex. :)",
      "parentUuid": "e2bdf65a_7027b919",
      "range": {
        "startLine": 706,
        "startChar": 20,
        "endLine": 706,
        "endChar": 93
      },
      "revId": "9fd63acd610688a5de7f802a7d87e7d9dbd2e243",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "97fb5b30_8884b869",
        "filename": "src/dawn_native/d3d12/TextureD3D12.h",
        "patchSetId": 17
      },
      "lineNbr": 66,
      "author": {
        "id": 1000262
      },
      "writtenOn": "2020-06-03T22:46:23Z",
      "side": 1,
      "message": "Please either use std::move in the caller of TrackUsageAndGetResourceBarrierForPass or pass this parameter by const reference.",
      "range": {
        "startLine": 66,
        "startChar": 12,
        "endLine": 66,
        "endChar": 61
      },
      "revId": "9fd63acd610688a5de7f802a7d87e7d9dbd2e243",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b55bfed9_90d57519",
        "filename": "src/dawn_native/d3d12/TextureD3D12.h",
        "patchSetId": 17
      },
      "lineNbr": 66,
      "author": {
        "id": 1000017
      },
      "writtenOn": "2020-06-04T00:02:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "97fb5b30_8884b869",
      "range": {
        "startLine": 66,
        "startChar": 12,
        "endLine": 66,
        "endChar": 61
      },
      "revId": "9fd63acd610688a5de7f802a7d87e7d9dbd2e243",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    }
  ]
}