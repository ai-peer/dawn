{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "61652033_b370e754",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2020-12-21T08:40:10Z",
      "side": 1,
      "message": "The main concern is about each dst format will need a pipeline object. In future, I\u0027d like to expand this internal pipeline to support all renderable texture format as dst texture format. And this means we\u0027ll have lots of pipeline object been cached.",
      "revId": "4125b84a2c8abc16c0de1ba7898bd6dbe94fbd1c",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d149c4ef_45ae6250",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-12-21T21:28:07Z",
      "side": 1,
      "message": "Can we just have a map of texture format to Ref\u003cRenderPipelineBase\u003e to simplify the implementation? I\u0027m not sure if it\u0027s so significant of a problem to have lots of cached objects. If the shaders are identical, the driver implementation should be able to deduplicate the state differences in pipelines when we add the backend pipeline caches.\n^ If you want, we could measure this if we add a vkPipelineCache, and then check the serialized size after storing one pipeline, and then check again after storing many of different dst format.\n\nIf it\u0027s a problem, in the future, I think we could always implement some heuristics to prune the cache if it grows too large (like if an internal pipeline hasn\u0027t been used recently).\n\nAs a side note: I\u0027m also curious what the cost of Dawn\u0027s frontend pipeline deduplication is. We already have a way to hash the descriptor and return a ref to an existing pipeline if there already is one. It would simplify things (slightly) to rely on that mechanism instead of having our own cache inside InternalPipelineStore. The main benefit though would be that if we added last-recently-used heuristics, we just need a simple LRU cache of Ref\u003cRenderPipelineBase\u003e and not care about the mapping of dstFormat-\u003eRenderPipelineBase",
      "parentUuid": "61652033_b370e754",
      "revId": "4125b84a2c8abc16c0de1ba7898bd6dbe94fbd1c",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d38551c8_cdd16364",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2020-12-22T01:29:25Z",
      "side": 1,
      "message": "Thanks for replying:\n1. Mapping could be a good option for code clean but also agree with that we don\u0027t know the impact of having so many pipeline objects.\n2. side notes is quite interesting. I\u0027ll look into the hash descriptor to see whether it could support the internal pipeline.",
      "parentUuid": "d149c4ef_45ae6250",
      "revId": "4125b84a2c8abc16c0de1ba7898bd6dbe94fbd1c",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f4a5257b_3333c941",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-12-22T18:48:59Z",
      "side": 1,
      "message": "the hashing is certainly less optimal than looking up in a simple map. This was just a side thought. I think we should just do the map for now since we need to store all of the pipelines in some data structure anyway.\n\nIf the parameterization becomes more complex and we have a complex multikey of [dst format, num channels, ... , etc.] \u003d\u003e pipeline mapping, then we should just rely on the frontend caching and store a simple std::vector\u003cRef\u003cRenderPipelineBase\u003e\u003e here.\n\ntbh I don\u0027t think there\u0027s a significant problem with having multiple pipelines. A typical app would probably have more pipelines than we have here.",
      "parentUuid": "d38551c8_cdd16364",
      "revId": "4125b84a2c8abc16c0de1ba7898bd6dbe94fbd1c",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}