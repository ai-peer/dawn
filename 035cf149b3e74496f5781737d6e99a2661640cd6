{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "32e4d29c_7d84e964",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 7,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-10-25T16:33:20Z",
      "side": 1,
      "message": "This CL seems to be doing more than this: it also adds the scoping of state etc.",
      "revId": "035cf149b3e74496f5781737d6e99a2661640cd6",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "536d1552_f31f50dd",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 7,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2023-10-25T16:49:02Z",
      "side": 1,
      "message": "Add more detail in the comment for this change",
      "parentUuid": "32e4d29c_7d84e964",
      "revId": "035cf149b3e74496f5781737d6e99a2661640cd6",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "39e2b240_57a7e6be",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2023-10-25T14:51:15Z",
      "side": 1,
      "message": "Hi Corentin and Austin, PTAL. Thanks",
      "revId": "035cf149b3e74496f5781737d6e99a2661640cd6",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "137ab2fd_b2e49490",
        "filename": "src/dawn/native/d3d11/DeviceD3D11.cpp",
        "patchSetId": 2
      },
      "lineNbr": 122,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-10-25T16:33:20Z",
      "side": 1,
      "message": "Shouldn\u0027t this be done at the PhysicalDeviceD3D11 Initialization? Instead of calling CreateD3D11Device it would just use the externalDevice and proceed as normal.",
      "revId": "035cf149b3e74496f5781737d6e99a2661640cd6",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6a63d8b0_7ce71d69",
        "filename": "src/dawn/native/d3d11/DeviceD3D11.cpp",
        "patchSetId": 2
      },
      "lineNbr": 122,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2023-10-25T16:49:02Z",
      "side": 1,
      "message": "Do you mean chrome passing the external d3d11 device in with `DiscoverPhysicalDevices()`? But `PhysicalDevice::CreateDevice()` can be called more than once. How do we handle it?",
      "parentUuid": "137ab2fd_b2e49490",
      "revId": "035cf149b3e74496f5781737d6e99a2661640cd6",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a91c91a1_7ab8f255",
        "filename": "src/dawn/native/d3d11/DeviceD3D11.cpp",
        "patchSetId": 2
      },
      "lineNbr": 122,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-10-25T16:50:10Z",
      "side": 1,
      "message": "Why is it a problem is CreateDevice is called more than once as long as each device uses its own context state?",
      "parentUuid": "6a63d8b0_7ce71d69",
      "revId": "035cf149b3e74496f5781737d6e99a2661640cd6",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fa6ab31c_c81fb016",
        "filename": "src/dawn/native/d3d11/DeviceD3D11.cpp",
        "patchSetId": 2
      },
      "lineNbr": 122,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2023-10-25T19:45:02Z",
      "side": 1,
      "message": "Adapter and PhysicalDevice are representations for the physical GPU. So I feel calling `DiscoverPhysicalDevices()` or `EnumerateAdapters()` with a d3d11 device object is little bit weird.  However passing an external d3d11 device to `CreateDevice()` is more straightforward.  And it is also flexible. API users can create 2gpu::Device with or without an external device. WDYT?",
      "parentUuid": "a91c91a1_7ab8f255",
      "revId": "035cf149b3e74496f5781737d6e99a2661640cd6",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "31a8aed1_2f43c8f6",
        "filename": "src/dawn/native/d3d11/DeviceD3D11.cpp",
        "patchSetId": 2
      },
      "lineNbr": 122,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-10-25T20:42:22Z",
      "side": 1,
      "message": "IMHO it\u0027s ok to create a physical device on a D3D11 device, because that\u0027s essentially what a physical device is in D3D11. But also right now it looks like you could do adapterForDiscreteGPU-\u003eCreateDevice(d3d11DeviceForIntegratedGPU).\n\nAnd this would allow reusing all the feature discovery etc that\u0027s present in the PhysicalDevice initialization.\n\nAre there architectural difficulties in Chromium / Skia with going the PhysicalDevice route?",
      "parentUuid": "fa6ab31c_c81fb016",
      "revId": "035cf149b3e74496f5781737d6e99a2661640cd6",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b7d87fb7_90e1f5bd",
        "filename": "src/dawn/native/d3d11/DeviceD3D11.cpp",
        "patchSetId": 2
      },
      "lineNbr": 122,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-10-26T02:31:02Z",
      "side": 1,
      "message": "agree with passing this at EnumerateAdapters time.\n\nWe\u0027re telling Dawn, please give me an adapter using *this* device that I\u0027ve already made\n\nsecondly:\n - does this mean we no longer need the feature D3D11MultithreadProtected? Instead, Dawn can validate that the device you pass it has multithread protected enabled on it (otherwise it will be racy to swap the device context state)\n - we should also make sure we do  mD3D11Multithread-\u003eEnter(); and Leave while we have the device context state swapped",
      "parentUuid": "31a8aed1_2f43c8f6",
      "revId": "035cf149b3e74496f5781737d6e99a2661640cd6",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b69e947a_4504049e",
        "filename": "src/dawn/native/d3d11/QueueD3D11.cpp",
        "patchSetId": 2
      },
      "lineNbr": 40,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-10-25T16:33:20Z",
      "side": 1,
      "message": "There might be other places where we use the device context, for example WriteBuffer. Can we make d3d11::Device only allow access to the device context through a NonMovable RAII helper like this one? This way we\u0027d be sure that we never forget to swap the context.",
      "revId": "035cf149b3e74496f5781737d6e99a2661640cd6",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8915a13b_febb5b9e",
        "filename": "src/dawn/native/d3d11/QueueD3D11.cpp",
        "patchSetId": 2
      },
      "lineNbr": 40,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2023-10-25T19:45:02Z",
      "side": 1,
      "message": "I checked other places which use DeviceContext, I think those places will not change the state in the DeviceContext. (Most usages are updating resource content, or mapping a buffer) So calling `SwapDeviceContextState()` is not really necessary.",
      "parentUuid": "b69e947a_4504049e",
      "revId": "035cf149b3e74496f5781737d6e99a2661640cd6",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c07bb40e_d683623b",
        "filename": "src/dawn/native/d3d11/QueueD3D11.cpp",
        "patchSetId": 2
      },
      "lineNbr": 40,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-10-25T20:42:22Z",
      "side": 1,
      "message": "What about in the future when we might add code that might change state? Is there a way to separate the state-setting API from the rest somehow to make uses without ScopedSwapDeviceContextState not able to use state setting APIs?\n\nIn general if we\u0027re adding a guardrail here I feel that we should try to ensure any future code doesn\u0027t forget to use the guardrail.",
      "parentUuid": "8915a13b_febb5b9e",
      "revId": "035cf149b3e74496f5781737d6e99a2661640cd6",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}