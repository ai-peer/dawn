{
  "comments": [
    {
      "key": {
        "uuid": "e67b33d0_f5ad2d26",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-07-14T22:29:33Z",
      "side": 1,
      "message": "WDYT? the jumps between powers of two are kinda big so maybe we could use fibonnaci numbers (one of Corentin\u0027s ideas) or just evenly distribute over |k| allocators where |k| is something like 32. Not sure whether or not the driver already allocates power-of-two blocks and if it\u0027ll make a difference.",
      "revId": "dc4e289ce3e5171e948b2d9e227be88f1a3d746b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e94078e8_31fb106b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000268
      },
      "writtenOn": "2020-07-15T01:51:03Z",
      "side": 1,
      "message": "LGTM. Bummer we can\u0027t re-use NextPowerOfTwo/Log2 due to constexpr.",
      "revId": "dc4e289ce3e5171e948b2d9e227be88f1a3d746b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ce73c3a6_88dd4d3e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-07-15T08:56:20Z",
      "side": 1,
      "message": "LGTM",
      "revId": "dc4e289ce3e5171e948b2d9e227be88f1a3d746b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "743bb985_10bff043",
        "filename": "src/common/Math.h",
        "patchSetId": 2
      },
      "lineNbr": 34,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-07-15T08:56:20Z",
      "side": 1,
      "message": "No need for a template:\n\n constexpr uint32_t ConstexprLog2(uint64_t v) {\n     return v \u003c\u003d 1? 0 : ConstexprLog2(v/2) + 1;\n }",
      "revId": "dc4e289ce3e5171e948b2d9e227be88f1a3d746b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "069e493d_2f9e8335",
        "filename": "src/common/Math.h",
        "patchSetId": 2
      },
      "lineNbr": 34,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-07-15T18:47:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "743bb985_10bff043",
      "revId": "dc4e289ce3e5171e948b2d9e227be88f1a3d746b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3ba98495_b18f320f",
        "filename": "src/dawn_native/d3d12/DeviceD3D12.cpp",
        "patchSetId": 2
      },
      "lineNbr": 561,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-07-15T08:57:43Z",
      "side": 1,
      "message": "Maybe allocators could be sized for the max value that has a log2 of N: so 1, 3, 7, ... this way we only need to compute Log2 here.",
      "revId": "dc4e289ce3e5171e948b2d9e227be88f1a3d746b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c6844668_aa8331ff",
        "filename": "src/dawn_native/d3d12/DeviceD3D12.h",
        "patchSetId": 2
      },
      "lineNbr": 203,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-07-15T08:56:20Z",
      "side": 1,
      "message": "It took me 30 seconds to understand that this was to compute the log2 of the next power of two. Maybe add a comment about it or make a helper constexpr method?",
      "range": {
        "startLine": 203,
        "startChar": 12,
        "endLine": 203,
        "endChar": 69
      },
      "revId": "dc4e289ce3e5171e948b2d9e227be88f1a3d746b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0428dc8e_eacf58ce",
        "filename": "src/dawn_native/d3d12/DeviceD3D12.h",
        "patchSetId": 2
      },
      "lineNbr": 203,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-07-15T18:47:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c6844668_aa8331ff",
      "range": {
        "startLine": 203,
        "startChar": 12,
        "endLine": 203,
        "endChar": 69
      },
      "revId": "dc4e289ce3e5171e948b2d9e227be88f1a3d746b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e09c47dd_51c76c30",
        "filename": "src/dawn_native/d3d12/DeviceD3D12.h",
        "patchSetId": 2
      },
      "lineNbr": 208,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-07-14T22:29:33Z",
      "side": 1,
      "message": "Log2Ceil(descriptorCount) where descriptorCount is in the range [0, kMaxSamplerDescriptorsPerBindGroup]",
      "range": {
        "startLine": 207,
        "startChar": 32,
        "endLine": 208,
        "endChar": 47
      },
      "revId": "dc4e289ce3e5171e948b2d9e227be88f1a3d746b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cec249b5_7a3fe1ba",
        "filename": "src/dawn_native/d3d12/DeviceD3D12.h",
        "patchSetId": 2
      },
      "lineNbr": 208,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-07-15T18:47:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e09c47dd_51c76c30",
      "range": {
        "startLine": 207,
        "startChar": 32,
        "endLine": 208,
        "endChar": 47
      },
      "revId": "dc4e289ce3e5171e948b2d9e227be88f1a3d746b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    }
  ]
}