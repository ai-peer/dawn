{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "6d84dac0_308e0bd5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1000017
      },
      "writtenOn": "2022-04-19T05:58:57Z",
      "side": 1,
      "message": "Thanks for your review, Corentin, Austin and Rafael. Please take another look.",
      "revId": "1b8ed2d57d3c7bac49865b94d1af5ec30735260b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "97b250e1_a0fb3a71",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-04-19T07:56:54Z",
      "side": 1,
      "message": "LGTM",
      "revId": "1b8ed2d57d3c7bac49865b94d1af5ec30735260b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8c78374b_fa128580",
        "filename": "src/dawn/native/d3d12/UtilsD3D12.cpp",
        "patchSetId": 5
      },
      "lineNbr": 348,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-04-19T07:56:54Z",
      "side": 1,
      "message": "I think we might need to move this logic in RecordBufferTextureCopyWithBufferHandle because IIRC it is used directly in the WriteTexture case.\n\nAlso slight nit to first handle the special case by calling recursively, then handle the normal case.",
      "revId": "1b8ed2d57d3c7bac49865b94d1af5ec30735260b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3411d06e_658bfe88",
        "filename": "src/dawn/native/d3d12/UtilsD3D12.cpp",
        "patchSetId": 5
      },
      "lineNbr": 348,
      "author": {
        "id": 1000017
      },
      "writtenOn": "2022-04-20T06:53:14Z",
      "side": 1,
      "message": "WriteTexture is always correct. If there are rowsPerImage paddings, writeTexture actually compacts the data and removes the pure padding rows in order to save staging buffer. The call stack is WriteTextureImpl -\u003e UploadTextureDataAligningBytesPerRowAndOffset -\u003e CopyTextureData. So there are no rowsPerImage paddings for WriteTexture\u0027s buffer to texture copy (from Staging buffer to texture), and it works fine on D3D12.\n\nIn CTS tests, a lot WriteTexture calls are followed by T2BCopy in order to verify the data in texture. It is the T2BCopy lead to failures on D3D12, not WriteTexture itself. \n\nSo, I feel like we should keep the workaround code here? \n\nWhat do you mean call it recursively, do we still need to do this after the fact I explained above? Any examples if it is still needed?",
      "parentUuid": "8c78374b_fa128580",
      "revId": "1b8ed2d57d3c7bac49865b94d1af5ec30735260b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7ba8875d_4291c334",
        "filename": "src/dawn/native/d3d12/UtilsD3D12.cpp",
        "patchSetId": 5
      },
      "lineNbr": 348,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-04-20T11:31:16Z",
      "side": 1,
      "message": "Gotcha I forgot that WriteTexture compacts stuff. Ok to keep the code like this because RecordBufferTextureCopyWithBufferHandle\u0027s other caller in zero init does packed copies.\n\nStylistically I have a slight preference for doing\n\n```\n void DoStuff() {\n \n    // Handle the special case that blah blah\n    if (special case) {\n      mess with the arguments\n      DoStuff();\n      return;\n    }\n \n    // regular case\n }\n```\n\nThis makes things more clear when adding more workarounds in the future [1], and removes mental context as you go along the function. But since the rest of the CL is good, happy to land this way.\n\n[1] for example https://source.chromium.org/chromium/chromium/src/+/main:third_party/dawn/src/dawn/native/metal/CommandBufferMTL.mm;drc\u003de1f2dcd3b356eaa20bc1aaa977ca670838ec28c0;l\u003d1195",
      "parentUuid": "3411d06e_658bfe88",
      "revId": "1b8ed2d57d3c7bac49865b94d1af5ec30735260b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c8b18d52_63c87e03",
        "filename": "src/dawn/native/d3d12/UtilsD3D12.cpp",
        "patchSetId": 5
      },
      "lineNbr": 348,
      "author": {
        "id": 1000017
      },
      "writtenOn": "2022-04-20T14:36:03Z",
      "side": 1,
      "message": "Ack. It is more clear to put special case(s) in front of regular case. Otherwise, if regular case is at first, it might be too complicated (too many ifs) in order to filter out all special cases. I didn\u0027t think about that. Thanks. \n\nIt\u0027s done.",
      "parentUuid": "7ba8875d_4291c334",
      "revId": "1b8ed2d57d3c7bac49865b94d1af5ec30735260b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}