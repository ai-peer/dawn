{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "13891588_f9301f39",
        "filename": "src/dawn/native/Buffer.cpp",
        "patchSetId": 3
      },
      "lineNbr": 495,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2023-11-04T01:56:37Z",
      "side": 1,
      "message": "nit: Use DAWN_CHECK(false) for unimplemented things, I think",
      "revId": "3ddee3cf2771a16b4d8b6b064544335ffbcb3736",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e07312f1_2dd649f8",
        "filename": "src/dawn/tests/unittests/wire/WireBufferMappingTests.cpp",
        "patchSetId": 3
      },
      "lineNbr": 37,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-11-01T23:59:53Z",
      "side": 1,
      "message": "tbh probably the better thing is to use a dawn::SerializeForTesting(os, param) instead of operator\u003c\u003c throughout - that way we don\u0027t need to put things in global scope.\n\nit\u0027s ok to do this in a follow-up, but we should do it or we can risk ODR violation if operator\u003c\u003c is defined by someone else\n\nmaybe it\u0027s not a problem though since you have to link against this test to get the ODR violation",
      "revId": "3ddee3cf2771a16b4d8b6b064544335ffbcb3736",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9ae22cdd_f288bbe7",
        "filename": "src/dawn/tests/unittests/wire/WireBufferMappingTests.cpp",
        "patchSetId": 3
      },
      "lineNbr": 37,
      "author": {
        "id": 1002831
      },
      "writtenOn": "2023-11-03T22:00:42Z",
      "side": 1,
      "message": "Ack! Created a bug for it for now.",
      "parentUuid": "e07312f1_2dd649f8",
      "revId": "3ddee3cf2771a16b4d8b6b064544335ffbcb3736",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "27f0a07c_8ba36bd9",
        "filename": "src/dawn/tests/unittests/wire/WireBufferMappingTests.cpp",
        "patchSetId": 3
      },
      "lineNbr": 790,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-11-01T23:59:53Z",
      "side": 1,
      "message": "check the state inside the callback? this way we are sure the state changes as soon as the application is notified\n\ne.g.\n```\nEXPECT_CALL(mockCb, Call(WGPUBufferMapAsyncStatus_Success, _)).WillOnce(... []() {\n  // check map state\n})\n```",
      "range": {
        "startLine": 789,
        "startChar": 6,
        "endLine": 790,
        "endChar": 76
      },
      "revId": "3ddee3cf2771a16b4d8b6b064544335ffbcb3736",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "410a1961_5d26d56d",
        "filename": "src/dawn/tests/unittests/wire/WireBufferMappingTests.cpp",
        "patchSetId": 3
      },
      "lineNbr": 790,
      "author": {
        "id": 1002831
      },
      "writtenOn": "2023-11-03T22:00:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "27f0a07c_8ba36bd9",
      "range": {
        "startLine": 789,
        "startChar": 6,
        "endLine": 790,
        "endChar": 76
      },
      "revId": "3ddee3cf2771a16b4d8b6b064544335ffbcb3736",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "05bf7d04_655f031e",
        "filename": "src/dawn/tests/unittests/wire/WireBufferMappingTests.cpp",
        "patchSetId": 3
      },
      "lineNbr": 825,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-11-01T23:59:53Z",
      "side": 1,
      "message": "ditto - check state inside callback",
      "revId": "3ddee3cf2771a16b4d8b6b064544335ffbcb3736",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c68c4d1e_bb9e4f1d",
        "filename": "src/dawn/tests/unittests/wire/WireBufferMappingTests.cpp",
        "patchSetId": 3
      },
      "lineNbr": 825,
      "author": {
        "id": 1002831
      },
      "writtenOn": "2023-11-03T22:00:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "05bf7d04_655f031e",
      "revId": "3ddee3cf2771a16b4d8b6b064544335ffbcb3736",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}