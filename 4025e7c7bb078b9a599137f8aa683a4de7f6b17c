{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "b0b51ef9_e6585e20",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 1000685
      },
      "writtenOn": "2022-05-26T00:56:38Z",
      "side": 1,
      "message": "Did the new Cachedblob refactor. Good for review now",
      "revId": "4025e7c7bb078b9a599137f8aa683a4de7f6b17c",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1b2f272a_bef87644",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2022-05-26T01:17:54Z",
      "side": 1,
      "message": "LGTM overall, but a suggestion for further simplification. feel free to just come back to this after the long weekend!",
      "revId": "4025e7c7bb078b9a599137f8aa683a4de7f6b17c",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "61326d6b_407d29a2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 1002831
      },
      "writtenOn": "2022-05-26T05:36:32Z",
      "side": 1,
      "message": "Will do another more thorough review next week after the initial batch of comments are resolved!",
      "revId": "4025e7c7bb078b9a599137f8aa683a4de7f6b17c",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "41c223c4_304d4452",
        "filename": "src/dawn/native/BlobCache.h",
        "patchSetId": 11
      },
      "lineNbr": 37,
      "author": {
        "id": 1000685
      },
      "writtenOn": "2022-05-26T01:23:59Z",
      "side": 1,
      "message": "Oops, struggling with the platform specific forward declaration here. Will fix it next week...",
      "revId": "4025e7c7bb078b9a599137f8aa683a4de7f6b17c",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f99f493c_25631b87",
        "filename": "src/dawn/native/BlobCache.h",
        "patchSetId": 11
      },
      "lineNbr": 38,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2022-05-26T01:17:54Z",
      "side": 1,
      "message": "you\u0027ll need to forward declare these templates and classes, and then in the cpp file, only include d3d12_platform if that backend is enabled. Or - put it in a separate cpp file that\u0027s only included in the build on windows",
      "revId": "4025e7c7bb078b9a599137f8aa683a4de7f6b17c",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fe9d2285_ca2cc68c",
        "filename": "src/dawn/native/BlobCache.h",
        "patchSetId": 11
      },
      "lineNbr": 43,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2022-05-26T01:17:54Z",
      "side": 1,
      "message": "nit: declare these here, but put the `\u003d default` in the cpp file",
      "revId": "4025e7c7bb078b9a599137f8aa683a4de7f6b17c",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f75f4501_a47d923e",
        "filename": "src/dawn/native/d3d12/RenderPipelineD3D12.cpp",
        "patchSetId": 11
      },
      "lineNbr": 447,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2022-05-26T01:17:54Z",
      "side": 1,
      "message": "mmm... looking at this again, it\u0027s awkward to need to set this just to perform the flush. feels like the frontend PipelineCache interface is not the best fit for what we\u0027re doing for D3D12. could we just load from the cache directly here and use it to set the blob data in the descriptor?\n\nI think this would be both a lot less code, and simpler and easier to understand.",
      "revId": "4025e7c7bb078b9a599137f8aa683a4de7f6b17c",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "77411262_e3bafe39",
        "filename": "src/dawn/tests/end2end/PipelineCachingTests.cpp",
        "patchSetId": 11
      },
      "lineNbr": 36,
      "author": {
        "id": 1002831
      },
      "writtenOn": "2022-05-26T05:36:32Z",
      "side": 1,
      "message": "nit. maybe call the kComputeShaderMultipleEntryPoints and rename the simple one to kComputeShaderDefault?\n\nIdeally I wanted to move these to a central location/file for testing purposes in general. I haven\u0027t figured out a nice way to do it yet so this is fine!",
      "range": {
        "startLine": 33,
        "startChar": 0,
        "endLine": 36,
        "endChar": 7
      },
      "revId": "4025e7c7bb078b9a599137f8aa683a4de7f6b17c",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7ec7c568_fd8f1df3",
        "filename": "src/dawn/tests/end2end/PipelineCachingTests.cpp",
        "patchSetId": 11
      },
      "lineNbr": 352,
      "author": {
        "id": 1002831
      },
      "writtenOn": "2022-05-26T05:36:32Z",
      "side": 1,
      "message": "nit. These all look shader related so maybe adding shader somewhere in the name?",
      "range": {
        "startLine": 352,
        "startChar": 35,
        "endLine": 352,
        "endChar": 71
      },
      "revId": "4025e7c7bb078b9a599137f8aa683a4de7f6b17c",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}