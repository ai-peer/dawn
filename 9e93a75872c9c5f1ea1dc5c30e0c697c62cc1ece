{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "8786058b_544b61e4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2023-08-04T00:52:11Z",
      "side": 1,
      "message": "lgtm, still not completely sure this is worth the complexity, but probably.",
      "revId": "9e93a75872c9c5f1ea1dc5c30e0c697c62cc1ece",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "07ffa079_d6756b59",
        "filename": "generator/templates/api_cpp.h",
        "patchSetId": 7
      },
      "lineNbr": 78,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2023-08-04T00:52:11Z",
      "side": 1,
      "message": "Can you just use `implicit` instead of suppressing the lint?",
      "revId": "9e93a75872c9c5f1ea1dc5c30e0c697c62cc1ece",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c6e3e224_4b9d1ba7",
        "filename": "generator/templates/api_cpp.h",
        "patchSetId": 7
      },
      "lineNbr": 78,
      "author": {
        "id": 1002831
      },
      "writtenOn": "2023-08-04T21:20:58Z",
      "side": 1,
      "message": "I don\u0027t think `implicit` exists. It\u0027s just either with `explicit` or not.",
      "parentUuid": "07ffa079_d6756b59",
      "revId": "9e93a75872c9c5f1ea1dc5c30e0c697c62cc1ece",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "292cb5b7_07d7afe0",
        "filename": "generator/templates/api_cpp.h",
        "patchSetId": 7
      },
      "lineNbr": 289,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2023-08-04T00:52:11Z",
      "side": 1,
      "message": "I feel like other similar situations may come up with other STL items. I guess we just make a best effort, and the user has to use a cast for other cases?",
      "revId": "9e93a75872c9c5f1ea1dc5c30e0c697c62cc1ece",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "928d9d8e_e0141b20",
        "filename": "generator/templates/api_cpp.h",
        "patchSetId": 7
      },
      "lineNbr": 289,
      "author": {
        "id": 1002831
      },
      "writtenOn": "2023-08-04T21:20:58Z",
      "side": 1,
      "message": "Yea, for now they would have to do a cast, or implement their own specialization in their code.",
      "parentUuid": "292cb5b7_07d7afe0",
      "revId": "9e93a75872c9c5f1ea1dc5c30e0c697c62cc1ece",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "9e93a75872c9c5f1ea1dc5c30e0c697c62cc1ece",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Kokoro",
        "description": {
          "value": "A maximum vote is required for the Kokoro label. A minimum vote is blocking."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Kokoro\u003dMAX AND -label:Kokoro\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "uploader:dawn-autoroll@skia-public.iam.gserviceaccount.com OR uploader:chrome-automated-expectation@chops-service-accounts.iam.gserviceaccount.com"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Kokoro=MAX AND -label:Kokoro=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Kokoro=MAX"],"failingAtoms":["label:Kokoro=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"uploader:dawn-autoroll@skia-public.iam.gserviceaccount.com OR uploader:chrome-automated-expectation@chops-service-accounts.iam.gserviceaccount.com"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["uploader:dawn-autoroll@skia-public.iam.gserviceaccount.com","uploader:chrome-automated-expectation@chops-service-accounts.iam.gserviceaccount.com"]}
      },
      "patchSetCommitId": "9e93a75872c9c5f1ea1dc5c30e0c697c62cc1ece",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "patchSetCommitId": "9e93a75872c9c5f1ea1dc5c30e0c697c62cc1ece",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    }
  ]
}