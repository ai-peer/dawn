{
  "comments": [
    {
      "key": {
        "uuid": "846545e4_bd1bce36",
        "filename": "src/dawn_native/BindGroup.cpp",
        "patchSetId": 5
      },
      "lineNbr": 152,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-03-25T10:19:11Z",
      "side": 1,
      "message": "nit: this type could probably be put in the dawn_native namespace directly given how prevalent it is.",
      "range": {
        "startLine": 152,
        "startChar": 18,
        "endLine": 152,
        "endChar": 50
      },
      "revId": "46d127c63593a42a23e6a1cf78d27d8e9113cf03",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a0ef4d24_d3d01188",
        "filename": "src/dawn_native/BindGroup.cpp",
        "patchSetId": 5
      },
      "lineNbr": 152,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-03-26T02:44:54Z",
      "side": 1,
      "message": "Hm, I think if we do that we should merge it with the ShaderModuleBase::BindingInfo.\nIf we merge them, I think that\u0027ll be a separate CL to avoid changing too much at once.\nBut.. I don\u0027t think we should actually merge them because this BGL::BindingInfo has |visibility| and |hasDynamicOffset| which isn\u0027t relevant for SM::BindingInfo. Feels sort of confusing to have meaningless members around.\n\nWDYT?",
      "parentUuid": "846545e4_bd1bce36",
      "range": {
        "startLine": 152,
        "startChar": 18,
        "endLine": 152,
        "endChar": 50
      },
      "revId": "46d127c63593a42a23e6a1cf78d27d8e9113cf03",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ebca7312_7b1a94f7",
        "filename": "src/dawn_native/BindGroup.cpp",
        "patchSetId": 5
      },
      "lineNbr": 152,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-03-26T09:31:23Z",
      "side": 1,
      "message": "Also the ShaderModule needs to keep some SPIR-V IDs around. IMHO it\u0027s ok to merge the two types, and keeping the SPIRV IDs in a side-table. In a way the BindingInfo in the BindGroupLayout is more important than the one deduced in the shader, because that one is only used for validating compatibility and GetBindGroupLayout. I don\u0027t mind the unused members too much because it makes sense that the ShaderModule can\u0027t know about the dynamic offset or the visibility.",
      "parentUuid": "a0ef4d24_d3d01188",
      "range": {
        "startLine": 152,
        "startChar": 18,
        "endLine": 152,
        "endChar": 50
      },
      "revId": "46d127c63593a42a23e6a1cf78d27d8e9113cf03",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7a0a845a_f965c2d2",
        "filename": "src/dawn_native/BindGroup.cpp",
        "patchSetId": 5
      },
      "lineNbr": 152,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-03-26T16:39:54Z",
      "side": 1,
      "message": "Okay, I\u0027ll try it out in a follow-up",
      "parentUuid": "ebca7312_7b1a94f7",
      "range": {
        "startLine": 152,
        "startChar": 18,
        "endLine": 152,
        "endChar": 50
      },
      "revId": "46d127c63593a42a23e6a1cf78d27d8e9113cf03",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a3ff18c9_a222c4e4",
        "filename": "src/dawn_native/BindGroup.cpp",
        "patchSetId": 5
      },
      "lineNbr": 165,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-03-25T10:19:11Z",
      "side": 1,
      "message": "nit: the binding info could be passed to that function directly instead of extracting a ton of members just to pass them.",
      "revId": "46d127c63593a42a23e6a1cf78d27d8e9113cf03",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0a46e20b_2fb7b01a",
        "filename": "src/dawn_native/BindGroup.cpp",
        "patchSetId": 5
      },
      "lineNbr": 165,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-03-26T02:44:54Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a3ff18c9_a222c4e4",
      "revId": "46d127c63593a42a23e6a1cf78d27d8e9113cf03",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8dcaa65b_78904e5a",
        "filename": "src/dawn_native/BindGroup.cpp",
        "patchSetId": 5
      },
      "lineNbr": 177,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-03-25T10:19:11Z",
      "side": 1,
      "message": "ditto",
      "revId": "46d127c63593a42a23e6a1cf78d27d8e9113cf03",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9ab2a996_26c4fe64",
        "filename": "src/dawn_native/BindGroup.cpp",
        "patchSetId": 5
      },
      "lineNbr": 177,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-03-26T02:44:54Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8dcaa65b_78904e5a",
      "revId": "46d127c63593a42a23e6a1cf78d27d8e9113cf03",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a13dc2a_47e14d59",
        "filename": "src/dawn_native/BindGroupLayout.h",
        "patchSetId": 5
      },
      "lineNbr": 67,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-03-25T10:19:11Z",
      "side": 1,
      "message": "I assume this is inlined because it is a hot function and inlining gives perf gains?",
      "revId": "46d127c63593a42a23e6a1cf78d27d8e9113cf03",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e4b9f4a7_28ea0a30",
        "filename": "src/dawn_native/BindGroupLayout.h",
        "patchSetId": 5
      },
      "lineNbr": 67,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-03-25T17:35:34Z",
      "side": 1,
      "message": "Rather not inlining is a perf regression (don\u0027t remember exactly how much). Previously code grabbed a reference to the whole object and operator[] indexing was inlined.",
      "parentUuid": "7a13dc2a_47e14d59",
      "revId": "46d127c63593a42a23e6a1cf78d27d8e9113cf03",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0de6707d_12ec5494",
        "filename": "src/dawn_native/BindGroupLayout.h",
        "patchSetId": 5
      },
      "lineNbr": 67,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-03-25T18:03:50Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "e4b9f4a7_28ea0a30",
      "revId": "46d127c63593a42a23e6a1cf78d27d8e9113cf03",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4ff4c337_1c252966",
        "filename": "src/dawn_native/d3d12/CommandBufferD3D12.cpp",
        "patchSetId": 5
      },
      "lineNbr": 204,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2020-03-25T19:27:48Z",
      "side": 1,
      "message": "Equivalent to bindingIndex now?",
      "revId": "46d127c63593a42a23e6a1cf78d27d8e9113cf03",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e30439a0_c01d4d41",
        "filename": "src/dawn_native/d3d12/CommandBufferD3D12.cpp",
        "patchSetId": 5
      },
      "lineNbr": 204,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-03-26T02:44:54Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4ff4c337_1c252966",
      "revId": "46d127c63593a42a23e6a1cf78d27d8e9113cf03",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    }
  ]
}