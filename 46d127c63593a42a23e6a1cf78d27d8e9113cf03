{
  "comments": [
    {
      "key": {
        "uuid": "846545e4_bd1bce36",
        "filename": "src/dawn_native/BindGroup.cpp",
        "patchSetId": 5
      },
      "lineNbr": 152,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-03-25T10:19:11Z",
      "side": 1,
      "message": "nit: this type could probably be put in the dawn_native namespace directly given how prevalent it is.",
      "range": {
        "startLine": 152,
        "startChar": 18,
        "endLine": 152,
        "endChar": 50
      },
      "revId": "46d127c63593a42a23e6a1cf78d27d8e9113cf03",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a3ff18c9_a222c4e4",
        "filename": "src/dawn_native/BindGroup.cpp",
        "patchSetId": 5
      },
      "lineNbr": 165,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-03-25T10:19:11Z",
      "side": 1,
      "message": "nit: the binding info could be passed to that function directly instead of extracting a ton of members just to pass them.",
      "revId": "46d127c63593a42a23e6a1cf78d27d8e9113cf03",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8dcaa65b_78904e5a",
        "filename": "src/dawn_native/BindGroup.cpp",
        "patchSetId": 5
      },
      "lineNbr": 177,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-03-25T10:19:11Z",
      "side": 1,
      "message": "ditto",
      "revId": "46d127c63593a42a23e6a1cf78d27d8e9113cf03",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7a13dc2a_47e14d59",
        "filename": "src/dawn_native/BindGroupLayout.h",
        "patchSetId": 5
      },
      "lineNbr": 67,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-03-25T10:19:11Z",
      "side": 1,
      "message": "I assume this is inlined because it is a hot function and inlining gives perf gains?",
      "revId": "46d127c63593a42a23e6a1cf78d27d8e9113cf03",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e4b9f4a7_28ea0a30",
        "filename": "src/dawn_native/BindGroupLayout.h",
        "patchSetId": 5
      },
      "lineNbr": 67,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-03-25T17:35:34Z",
      "side": 1,
      "message": "Rather not inlining is a perf regression (don\u0027t remember exactly how much). Previously code grabbed a reference to the whole object and operator[] indexing was inlined.",
      "parentUuid": "7a13dc2a_47e14d59",
      "revId": "46d127c63593a42a23e6a1cf78d27d8e9113cf03",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0de6707d_12ec5494",
        "filename": "src/dawn_native/BindGroupLayout.h",
        "patchSetId": 5
      },
      "lineNbr": 67,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-03-25T18:03:50Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "e4b9f4a7_28ea0a30",
      "revId": "46d127c63593a42a23e6a1cf78d27d8e9113cf03",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4ff4c337_1c252966",
        "filename": "src/dawn_native/d3d12/CommandBufferD3D12.cpp",
        "patchSetId": 5
      },
      "lineNbr": 204,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2020-03-25T19:27:48Z",
      "side": 1,
      "message": "Equivalent to bindingIndex now?",
      "revId": "46d127c63593a42a23e6a1cf78d27d8e9113cf03",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    }
  ]
}