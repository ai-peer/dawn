{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "0669945c_23268cb9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000685
      },
      "writtenOn": "2023-08-09T17:31:29Z",
      "side": 1,
      "message": "Thanks for the thorough review. I have posted some questions.",
      "revId": "2fe4bf3d84c677bd27e820d622ce1faf4b5fe30b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c37829c1_408acbc9",
        "filename": "include/tint/texture_builtins_from_uniform_options.h",
        "patchSetId": 3
      },
      "lineNbr": 28,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2023-08-09T11:23:31Z",
      "side": 1,
      "message": "nit: I don\u0027t think this belongs here - it doesn\u0027t add anything to this class. Suggest removing, and creating a TODO issue.",
      "range": {
        "startLine": 27,
        "startChar": 0,
        "endLine": 28,
        "endChar": 60
      },
      "revId": "2fe4bf3d84c677bd27e820d622ce1faf4b5fe30b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "64e6d8a8_aba997bd",
        "filename": "include/tint/texture_builtins_from_uniform_options.h",
        "patchSetId": 3
      },
      "lineNbr": 28,
      "author": {
        "id": 1000685
      },
      "writtenOn": "2023-08-09T17:31:29Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c37829c1_408acbc9",
      "range": {
        "startLine": 27,
        "startChar": 0,
        "endLine": 28,
        "endChar": 60
      },
      "revId": "2fe4bf3d84c677bd27e820d622ce1faf4b5fe30b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c7e379a9_6a6e02c4",
        "filename": "include/tint/texture_builtins_from_uniform_options.h",
        "patchSetId": 3
      },
      "lineNbr": 30,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2023-08-09T11:23:31Z",
      "side": 1,
      "message": "needs a comment",
      "revId": "2fe4bf3d84c677bd27e820d622ce1faf4b5fe30b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f0053ae0_58405848",
        "filename": "include/tint/texture_builtins_from_uniform_options.h",
        "patchSetId": 3
      },
      "lineNbr": 30,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2023-08-09T11:23:31Z",
      "side": 1,
      "message": "This doesn\u0027t strike me as a data type, but more of a field of data?\nSuggest `Field`, but there might be better names.",
      "range": {
        "startLine": 30,
        "startChar": 15,
        "endLine": 30,
        "endChar": 23
      },
      "revId": "2fe4bf3d84c677bd27e820d622ce1faf4b5fe30b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3bf910ba_8a4cdacc",
        "filename": "include/tint/texture_builtins_from_uniform_options.h",
        "patchSetId": 3
      },
      "lineNbr": 30,
      "author": {
        "id": 1000685
      },
      "writtenOn": "2023-08-09T23:33:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f0053ae0_58405848",
      "range": {
        "startLine": 30,
        "startChar": 15,
        "endLine": 30,
        "endChar": 23
      },
      "revId": "2fe4bf3d84c677bd27e820d622ce1faf4b5fe30b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ca70a859_782fb342",
        "filename": "include/tint/texture_builtins_from_uniform_options.h",
        "patchSetId": 3
      },
      "lineNbr": 30,
      "author": {
        "id": 1000685
      },
      "writtenOn": "2023-08-09T23:33:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c7e379a9_6a6e02c4",
      "revId": "2fe4bf3d84c677bd27e820d622ce1faf4b5fe30b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "31eea76f_419c241f",
        "filename": "include/tint/texture_builtins_from_uniform_options.h",
        "patchSetId": 3
      },
      "lineNbr": 36,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2023-08-09T11:23:31Z",
      "side": 1,
      "message": "These need comments. Please describe what the `uint32_t` represents.",
      "range": {
        "startLine": 35,
        "startChar": 0,
        "endLine": 36,
        "endChar": 77
      },
      "revId": "2fe4bf3d84c677bd27e820d622ce1faf4b5fe30b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f544908c_228a5777",
        "filename": "include/tint/texture_builtins_from_uniform_options.h",
        "patchSetId": 3
      },
      "lineNbr": 36,
      "author": {
        "id": 1000685
      },
      "writtenOn": "2023-08-09T23:33:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "31eea76f_419c241f",
      "range": {
        "startLine": 35,
        "startChar": 0,
        "endLine": 36,
        "endChar": 77
      },
      "revId": "2fe4bf3d84c677bd27e820d622ce1faf4b5fe30b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "02a9e3fb_a959355e",
        "filename": "include/tint/texture_builtins_from_uniform_options.h",
        "patchSetId": 3
      },
      "lineNbr": 39,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2023-08-09T11:23:31Z",
      "side": 1,
      "message": "This is a Dawn-specific detail. It\u0027s not something that makes sense for other clients, and if Dawn used the default, then it\u0027s likely to eventually go out of sync.\n\nSuggest using `{}` for the initializer, and let Dawn provide the value.",
      "range": {
        "startLine": 39,
        "startChar": 22,
        "endLine": 39,
        "endChar": 68
      },
      "revId": "2fe4bf3d84c677bd27e820d622ce1faf4b5fe30b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5e7ab975_d445b8ed",
        "filename": "include/tint/texture_builtins_from_uniform_options.h",
        "patchSetId": 3
      },
      "lineNbr": 39,
      "author": {
        "id": 1000685
      },
      "writtenOn": "2023-08-09T17:31:29Z",
      "side": 1,
      "message": "I added a default value here because if it defaults to {0, 0} when not specified it failed the GlslGeneratorBuiltinTextureTest because {0, 0} colliding with some texture binding and it emitted glsl corresponding builtin function (existing only 4**+)\n\nSo looks like when dawn is not the client, tint will need to be able to choose whether to use this option (replace with uniform value), or not (replace with glsl builtin function)\n\nI\u0027m thinking about using a `std::optional\u003cTextureBuiltinsFromUniformOptions\u003e` in `tint::glsl::writer::Options`. If the field is empty, then tint still emits glsl builtin function.\n\nWhat do you think is the best way to change this?",
      "parentUuid": "02a9e3fb_a959355e",
      "range": {
        "startLine": 39,
        "startChar": 22,
        "endLine": 39,
        "endChar": 68
      },
      "revId": "2fe4bf3d84c677bd27e820d622ce1faf4b5fe30b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ef28312b_f25d413d",
        "filename": "include/tint/texture_builtins_from_uniform_options.h",
        "patchSetId": 3
      },
      "lineNbr": 39,
      "author": {
        "id": 1000685
      },
      "writtenOn": "2023-08-11T01:33:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5e7ab975_d445b8ed",
      "range": {
        "startLine": 39,
        "startChar": 22,
        "endLine": 39,
        "endChar": 68
      },
      "revId": "2fe4bf3d84c677bd27e820d622ce1faf4b5fe30b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e49cb5eb_e3ec9d44",
        "filename": "include/tint/texture_builtins_from_uniform_options.h",
        "patchSetId": 3
      },
      "lineNbr": 43,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2023-08-09T11:23:31Z",
      "side": 1,
      "message": "`#include \"src/tint/utils/reflection/reflection.h\"`",
      "range": {
        "startLine": 43,
        "startChar": 4,
        "endLine": 43,
        "endChar": 16
      },
      "revId": "2fe4bf3d84c677bd27e820d622ce1faf4b5fe30b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "53ff8716_1c2c693a",
        "filename": "include/tint/texture_builtins_from_uniform_options.h",
        "patchSetId": 3
      },
      "lineNbr": 43,
      "author": {
        "id": 1000685
      },
      "writtenOn": "2023-08-09T23:33:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e49cb5eb_e3ec9d44",
      "range": {
        "startLine": 43,
        "startChar": 4,
        "endLine": 43,
        "endChar": 16
      },
      "revId": "2fe4bf3d84c677bd27e820d622ce1faf4b5fe30b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "25a908d1_a091744c",
        "filename": "src/tint/lang/glsl/writer/ast_printer/ast_printer.h",
        "patchSetId": 3
      },
      "lineNbr": 60,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2023-08-09T11:23:31Z",
      "side": 1,
      "message": "likewise. Belongs in a bug, not here.",
      "range": {
        "startLine": 60,
        "startChar": 0,
        "endLine": 60,
        "endChar": 99
      },
      "revId": "2fe4bf3d84c677bd27e820d622ce1faf4b5fe30b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "19231a53_b641faa0",
        "filename": "src/tint/lang/glsl/writer/ast_printer/ast_printer.h",
        "patchSetId": 3
      },
      "lineNbr": 60,
      "author": {
        "id": 1000685
      },
      "writtenOn": "2023-08-09T23:33:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "25a908d1_a091744c",
      "range": {
        "startLine": 60,
        "startChar": 0,
        "endLine": 60,
        "endChar": 99
      },
      "revId": "2fe4bf3d84c677bd27e820d622ce1faf4b5fe30b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "41a92383_ef7e817a",
        "filename": "src/tint/lang/glsl/writer/common/options.h",
        "patchSetId": 3
      },
      "lineNbr": 70,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2023-08-09T11:23:31Z",
      "side": 1,
      "message": "Needs a comment",
      "revId": "2fe4bf3d84c677bd27e820d622ce1faf4b5fe30b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e063364d_3621fb16",
        "filename": "src/tint/lang/glsl/writer/common/options.h",
        "patchSetId": 3
      },
      "lineNbr": 70,
      "author": {
        "id": 1000685
      },
      "writtenOn": "2023-08-09T23:33:30Z",
      "side": 1,
      "message": "Done. Changed to std::optional.",
      "parentUuid": "41a92383_ef7e817a",
      "revId": "2fe4bf3d84c677bd27e820d622ce1faf4b5fe30b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "779240bb_1658d28f",
        "filename": "src/tint/lang/glsl/writer/output.h",
        "patchSetId": 3
      },
      "lineNbr": 46,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2023-08-09T11:23:31Z",
      "side": 1,
      "message": "both need comments",
      "range": {
        "startLine": 43,
        "startChar": 0,
        "endLine": 46,
        "endChar": 78
      },
      "revId": "2fe4bf3d84c677bd27e820d622ce1faf4b5fe30b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "48eebe7a_31dd5024",
        "filename": "src/tint/lang/glsl/writer/output.h",
        "patchSetId": 3
      },
      "lineNbr": 46,
      "author": {
        "id": 1000685
      },
      "writtenOn": "2023-08-09T23:33:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "779240bb_1658d28f",
      "range": {
        "startLine": 43,
        "startChar": 0,
        "endLine": 46,
        "endChar": 78
      },
      "revId": "2fe4bf3d84c677bd27e820d622ce1faf4b5fe30b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8154310b_f2beb7b7",
        "filename": "src/tint/lang/wgsl/ast/transform/manager.cc",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2023-08-09T11:23:31Z",
      "side": 1,
      "message": "Please extract to a separate change.",
      "revId": "2fe4bf3d84c677bd27e820d622ce1faf4b5fe30b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "397e65ea_cfe50f9d",
        "filename": "src/tint/lang/wgsl/ast/transform/manager.cc",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000685
      },
      "writtenOn": "2023-08-09T17:31:29Z",
      "side": 1,
      "message": "https://dawn-review.googlesource.com/c/dawn/+/143220",
      "parentUuid": "8154310b_f2beb7b7",
      "revId": "2fe4bf3d84c677bd27e820d622ce1faf4b5fe30b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9772f41c_8d73f68c",
        "filename": "src/tint/lang/wgsl/ast/transform/texture_builtins_from_uniform.cc",
        "patchSetId": 3
      },
      "lineNbr": 93,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2023-08-09T11:23:31Z",
      "side": 1,
      "message": "Please zero-initialize these fields. Uninitialized variable bugs are a security issue, and the initializers are zero-cost when the structure is initialized with values.",
      "revId": "2fe4bf3d84c677bd27e820d622ce1faf4b5fe30b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "862d9315_de7ef634",
        "filename": "src/tint/lang/wgsl/ast/transform/texture_builtins_from_uniform.cc",
        "patchSetId": 3
      },
      "lineNbr": 93,
      "author": {
        "id": 1000685
      },
      "writtenOn": "2023-08-09T23:33:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9772f41c_8d73f68c",
      "revId": "2fe4bf3d84c677bd27e820d622ce1faf4b5fe30b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4a5bb820_7912eb1b",
        "filename": "src/tint/lang/wgsl/ast/transform/texture_builtins_from_uniform.cc",
        "patchSetId": 3
      },
      "lineNbr": 111,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2023-08-09T11:23:31Z",
      "side": 1,
      "message": "Use tint\u0027s `Hashmap`. It can avoid heap allocations.",
      "range": {
        "startLine": 111,
        "startChar": 8,
        "endLine": 111,
        "endChar": 26
      },
      "revId": "2fe4bf3d84c677bd27e820d622ce1faf4b5fe30b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e0e939a8_92c2cd4b",
        "filename": "src/tint/lang/wgsl/ast/transform/texture_builtins_from_uniform.cc",
        "patchSetId": 3
      },
      "lineNbr": 111,
      "author": {
        "id": 1000685
      },
      "writtenOn": "2023-08-09T23:33:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4a5bb820_7912eb1b",
      "range": {
        "startLine": 111,
        "startChar": 8,
        "endLine": 111,
        "endChar": 26
      },
      "revId": "2fe4bf3d84c677bd27e820d622ce1faf4b5fe30b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d657e306_ee24514b",
        "filename": "src/tint/lang/wgsl/ast/transform/texture_builtins_from_uniform.cc",
        "patchSetId": 3
      },
      "lineNbr": 113,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2023-08-09T11:23:31Z",
      "side": 1,
      "message": "How does this handle functions that use `textureNumLevels` and `textureNumSamples` with the same texture?",
      "range": {
        "startLine": 113,
        "startChar": 12,
        "endLine": 113,
        "endChar": 22
      },
      "revId": "2fe4bf3d84c677bd27e820d622ce1faf4b5fe30b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d90e7d7e_445c755d",
        "filename": "src/tint/lang/wgsl/ast/transform/texture_builtins_from_uniform.cc",
        "patchSetId": 3
      },
      "lineNbr": 113,
      "author": {
        "id": 1000685
      },
      "writtenOn": "2023-08-09T17:31:29Z",
      "side": 1,
      "message": "I find in wgsl spec that `textureNumLevels(t:T)` takes texture type:\n\nT is texture_1d\u003cST\u003e, texture_2d\u003cST\u003e, texture_2d_array\u003cST\u003e, texture_3d\u003cST\u003e, texture_cube\u003cST\u003e, texture_cube_array\u003cST\u003e, texture_depth_2d, texture_depth_2d_array, texture_depth_cube, or texture_depth_cube_array\n\nwhile `textureNumSamples(t:T)` takes texture type:\n\nT is texture_multisampled_2d\u003cST\u003e or texture_depth_multisampled_2d\n\nCan they still share a same texture variable?\n\nIf that\u0027s true, I put a comment later to describe this. Maybe I should move it here.",
      "parentUuid": "d657e306_ee24514b",
      "range": {
        "startLine": 113,
        "startChar": 12,
        "endLine": 113,
        "endChar": 22
      },
      "revId": "2fe4bf3d84c677bd27e820d622ce1faf4b5fe30b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "680743d2_71ae6f5e",
        "filename": "src/tint/lang/wgsl/ast/transform/texture_builtins_from_uniform.cc",
        "patchSetId": 3
      },
      "lineNbr": 113,
      "author": {
        "id": 1000685
      },
      "writtenOn": "2023-08-09T23:33:30Z",
      "side": 1,
      "message": "[1]",
      "parentUuid": "d90e7d7e_445c755d",
      "range": {
        "startLine": 113,
        "startChar": 12,
        "endLine": 113,
        "endChar": 22
      },
      "revId": "2fe4bf3d84c677bd27e820d622ce1faf4b5fe30b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bcc7455d_1d38cfc3",
        "filename": "src/tint/lang/wgsl/ast/transform/texture_builtins_from_uniform.cc",
        "patchSetId": 3
      },
      "lineNbr": 113,
      "author": {
        "id": 1000685
      },
      "writtenOn": "2023-08-11T01:33:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "680743d2_71ae6f5e",
      "range": {
        "startLine": 113,
        "startChar": 12,
        "endLine": 113,
        "endChar": 22
      },
      "revId": "2fe4bf3d84c677bd27e820d622ce1faf4b5fe30b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "539ba20d_9f3b9612",
        "filename": "src/tint/lang/wgsl/ast/transform/texture_builtins_from_uniform.cc",
        "patchSetId": 3
      },
      "lineNbr": 115,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2023-08-09T11:23:31Z",
      "side": 1,
      "message": "If these are mutually exclusive then I\u0027d recommend `std::variant\u003cBindingPoint, const ast::Parameter*\u003e`",
      "range": {
        "startLine": 115,
        "startChar": 8,
        "endLine": 115,
        "endChar": 28
      },
      "revId": "2fe4bf3d84c677bd27e820d622ce1faf4b5fe30b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "53f2b5a8_502fdc82",
        "filename": "src/tint/lang/wgsl/ast/transform/texture_builtins_from_uniform.cc",
        "patchSetId": 3
      },
      "lineNbr": 115,
      "author": {
        "id": 1000685
      },
      "writtenOn": "2023-08-09T23:33:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "539ba20d_9f3b9612",
      "range": {
        "startLine": 115,
        "startChar": 8,
        "endLine": 115,
        "endChar": 28
      },
      "revId": "2fe4bf3d84c677bd27e820d622ce1faf4b5fe30b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a951c7bf_f1628047",
        "filename": "src/tint/lang/wgsl/ast/transform/texture_builtins_from_uniform.cc",
        "patchSetId": 3
      },
      "lineNbr": 135,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2023-08-09T11:23:31Z",
      "side": 1,
      "message": "I feel this algorithm is more complex than it needs to be.\n\nFor bubbling up the parameters, I think you only need:\n\n```\n// Describes a new parameter added to a function.\nstruct NewParameter {\n  // The texture parameter index that this new parameter relates to.\n  uint32_t texture_param_idx \u003d 0;\n  // The kind of texture information this parameter holds.\n  TextureBuiltinsFromUniformOptions::DataType field \u003d something;\n  // You could also store a Symbol here to record the name of the new parameter.\n  // This could be used to reuse a new parameter if a texture parameter is used\n  // more than once, instead of creating yet more parameters.\n};\n\n// A list of NewParameter\nusing NewParameters \u003d tint::Vector\u003cNewParameter, 4\u003e;\n\n// A map of function to new parameters added by the transform\nHashmap\u003cconst sem::Function*, NewParameters, 8\u003e new_params;\n```\n\nThen:\n\n* Walk the global declarations in dependency order using `tint::sem::Module::DependencyOrderedDeclarations()`. For each function, examine each of the calls made by walking `sem::Function::DirectCalls()`:\n * If the call is to a texture builtin of interest, and the texture is a module-scope var, then immediately apply the transformation to the call expression using `ctx.Replace()`. Done.\n * If the call is to a texture builtin of interest, and the texture is a parameter, append the new parameter to the function with `ctx.InsertBack()`, record the new parameter in `new_params` and replace the expression with this parameter\u0027s identifier.\n * If the call is to a user function, then check `new_params` to see if new parameters need to handled. Use the `texture_param_idx` to lookup the texture argument, and then either add new parameters to this function, or fetch from the UBO.",
      "revId": "2fe4bf3d84c677bd27e820d622ce1faf4b5fe30b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4b9a6bb7_8beb2eb0",
        "filename": "src/tint/lang/wgsl/ast/transform/texture_builtins_from_uniform.cc",
        "patchSetId": 3
      },
      "lineNbr": 135,
      "author": {
        "id": 1000685
      },
      "writtenOn": "2023-08-09T23:33:30Z",
      "side": 1,
      "message": "I wasn\u0027t aware of `tint::sem::Module::DependencyOrderedDeclarations()`, that might be the thing to help reduce complexity.\n\nI read through this and what this simplified version trying to do is that iterate all direct calls of all functions once\n\n```\nforeach fn\n foreach fn-\u003eDirectCalls\n   // process\n end\nend\n```\n\nwhere user functions directly calling texture_builtins comes first in vector, and then depth\u003d2 user functions, ...\n\ninstead of what is for now: iterating all interested texture builtin calls -\u003e bubble up to function -\u003e bubble up to function callsites.\n\ne.g.\n\n```\nfn f1(t: texture_type) {\n  _ \u003d texture_builtin(t);\n}\n\nfn f2(t: texture_type) {\n  _ \u003d f1(t);\n}\n\n@group(0) @binding(0) var tex1: texture_type;\n\nfn main() {\n  f2(tex1);\n}\n```\n\nDependencyOrderedDeclarations returns vector \u003d {f1, f2, main}\n\n\nprocess f1, for all direct_calls \u003d {texture_builtin}, add a(f1, {new_param_1, 0}) to new_params\n\nprocess f2. for all direct_calls \u003d {f1}, find {new_param_1, 0}, add a (f2, {new_param_2, 0}\n\nprocess main. for all direct_calls \u003d {f2}, tex1 is module scope, directly replace\n\n\nPlease let me know if I understand this correctly.\n\n------------\n\nAnd one thing I\u0027m unsure: I need to know how many module-scope texture var are ever passed in into the texture builtins, to decide the array size of the uniform buffer. So two parses of the texture builtin calls seem inevitable to me. First parse: count how many of them; Second parse: replace with uniform array index access. (Otherwise it would end in out-of-bounds error in the middle?). So still 2 passes on the texture_builtin calls are needed, `ctx.Replace` still needs to happen on the second pass?",
      "parentUuid": "a951c7bf_f1628047",
      "revId": "2fe4bf3d84c677bd27e820d622ce1faf4b5fe30b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0017b8b5_7adda30c",
        "filename": "src/tint/lang/wgsl/ast/transform/texture_builtins_from_uniform.cc",
        "patchSetId": 3
      },
      "lineNbr": 135,
      "author": {
        "id": 1000685
      },
      "writtenOn": "2023-08-11T01:33:33Z",
      "side": 1,
      "message": "Done. Using `DependencyOrderedDeclarations`",
      "parentUuid": "4b9a6bb7_8beb2eb0",
      "revId": "2fe4bf3d84c677bd27e820d622ce1faf4b5fe30b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ff3b0b18_fb65ec8b",
        "filename": "src/tint/lang/wgsl/ast/transform/texture_builtins_from_uniform.cc",
        "patchSetId": 3
      },
      "lineNbr": 141,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2023-08-09T11:23:31Z",
      "side": 1,
      "message": "Use tint\u0027s `Vector`",
      "range": {
        "startLine": 141,
        "startChar": 12,
        "endLine": 141,
        "endChar": 23
      },
      "revId": "2fe4bf3d84c677bd27e820d622ce1faf4b5fe30b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "69ac3fae_1abb8dd3",
        "filename": "src/tint/lang/wgsl/ast/transform/texture_builtins_from_uniform.cc",
        "patchSetId": 3
      },
      "lineNbr": 141,
      "author": {
        "id": 1000685
      },
      "writtenOn": "2023-08-09T23:33:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ff3b0b18_fb65ec8b",
      "range": {
        "startLine": 141,
        "startChar": 12,
        "endLine": 141,
        "endChar": 23
      },
      "revId": "2fe4bf3d84c677bd27e820d622ce1faf4b5fe30b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "51d8a257_055c51e8",
        "filename": "src/tint/lang/wgsl/ast/transform/texture_builtins_from_uniform.cc",
        "patchSetId": 3
      },
      "lineNbr": 267,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2023-08-09T11:23:31Z",
      "side": 1,
      "message": "I think this can be moved to a member function",
      "range": {
        "startLine": 267,
        "startChar": 8,
        "endLine": 267,
        "endChar": 32
      },
      "revId": "2fe4bf3d84c677bd27e820d622ce1faf4b5fe30b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "04738186_9c06b61f",
        "filename": "src/tint/lang/wgsl/ast/transform/texture_builtins_from_uniform.cc",
        "patchSetId": 3
      },
      "lineNbr": 267,
      "author": {
        "id": 1000685
      },
      "writtenOn": "2023-08-09T23:33:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "51d8a257_055c51e8",
      "range": {
        "startLine": 267,
        "startChar": 8,
        "endLine": 267,
        "endChar": 32
      },
      "revId": "2fe4bf3d84c677bd27e820d622ce1faf4b5fe30b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1d9687e0_404401b4",
        "filename": "src/tint/lang/wgsl/ast/transform/texture_builtins_from_uniform.cc",
        "patchSetId": 3
      },
      "lineNbr": 271,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2023-08-09T11:23:31Z",
      "side": 1,
      "message": "Why use an array? You can create scalar fields that aren\u0027t 16 byte aligned, and name them with `b.Symbols().New()` so that the output is more readable.",
      "range": {
        "startLine": 269,
        "startChar": 0,
        "endLine": 271,
        "endChar": 27
      },
      "revId": "2fe4bf3d84c677bd27e820d622ce1faf4b5fe30b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7b17f70b_40fa101e",
        "filename": "src/tint/lang/wgsl/ast/transform/texture_builtins_from_uniform.cc",
        "patchSetId": 3
      },
      "lineNbr": 271,
      "author": {
        "id": 1000685
      },
      "writtenOn": "2023-08-09T17:31:29Z",
      "side": 1,
      "message": "I follow these steps from arrayLengthFromUniform. Looks like the CL is: https://dawn-review.googlesource.com/c/tint/+/57921\n\nDoes this restriction still apply anymore now?",
      "parentUuid": "1d9687e0_404401b4",
      "range": {
        "startLine": 269,
        "startChar": 0,
        "endLine": 271,
        "endChar": 27
      },
      "revId": "2fe4bf3d84c677bd27e820d622ce1faf4b5fe30b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8c0210c4_be6b7134",
        "filename": "src/tint/lang/wgsl/ast/transform/texture_builtins_from_uniform.cc",
        "patchSetId": 3
      },
      "lineNbr": 307,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2023-08-09T11:23:31Z",
      "side": 1,
      "message": "Why not `ctx.InsertAfter()` or `ctx.InsertBack()` on the member vector?",
      "range": {
        "startLine": 303,
        "startChar": 0,
        "endLine": 307,
        "endChar": 96
      },
      "revId": "2fe4bf3d84c677bd27e820d622ce1faf4b5fe30b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "312c670f_29cb138b",
        "filename": "src/tint/lang/wgsl/ast/transform/texture_builtins_from_uniform.cc",
        "patchSetId": 3
      },
      "lineNbr": 307,
      "author": {
        "id": 1000685
      },
      "writtenOn": "2023-08-09T23:33:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8c0210c4_be6b7134",
      "range": {
        "startLine": 303,
        "startChar": 0,
        "endLine": 307,
        "endChar": 96
      },
      "revId": "2fe4bf3d84c677bd27e820d622ce1faf4b5fe30b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "abd81f84_8df71db3",
        "filename": "src/tint/lang/wgsl/ast/transform/texture_builtins_from_uniform.cc",
        "patchSetId": 3
      },
      "lineNbr": 325,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2023-08-09T11:23:31Z",
      "side": 1,
      "message": "I think this can also be moved to a member function",
      "range": {
        "startLine": 325,
        "startChar": 13,
        "endLine": 325,
        "endChar": 30
      },
      "revId": "2fe4bf3d84c677bd27e820d622ce1faf4b5fe30b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c90d00f3_894b09f9",
        "filename": "src/tint/lang/wgsl/ast/transform/texture_builtins_from_uniform.cc",
        "patchSetId": 3
      },
      "lineNbr": 325,
      "author": {
        "id": 1000685
      },
      "writtenOn": "2023-08-09T23:33:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "abd81f84_8df71db3",
      "range": {
        "startLine": 325,
        "startChar": 13,
        "endLine": 325,
        "endChar": 30
      },
      "revId": "2fe4bf3d84c677bd27e820d622ce1faf4b5fe30b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d1081525_3cfbdca2",
        "filename": "src/tint/lang/wgsl/ast/transform/texture_builtins_from_uniform.h",
        "patchSetId": 3
      },
      "lineNbr": 82,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2023-08-09T11:23:31Z",
      "side": 1,
      "message": "need comments",
      "range": {
        "startLine": 81,
        "startChar": 0,
        "endLine": 82,
        "endChar": 93
      },
      "revId": "2fe4bf3d84c677bd27e820d622ce1faf4b5fe30b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "946853fe_9453c330",
        "filename": "src/tint/lang/wgsl/ast/transform/texture_builtins_from_uniform.h",
        "patchSetId": 3
      },
      "lineNbr": 82,
      "author": {
        "id": 1000685
      },
      "writtenOn": "2023-08-09T23:33:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d1081525_3cfbdca2",
      "range": {
        "startLine": 81,
        "startChar": 0,
        "endLine": 82,
        "endChar": 93
      },
      "revId": "2fe4bf3d84c677bd27e820d622ce1faf4b5fe30b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "233c21fe_e8b7362e",
        "filename": "src/tint/lang/wgsl/ast/transform/texture_builtins_from_uniform_test.cc",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2023-08-09T11:23:31Z",
      "side": 1,
      "message": "Please add tests for:\n* Using both `textureNumLevels()` and `textureNumSamples()` on the same module-scope texture.\n* Using both `textureNumLevels()` and `textureNumSamples()` on the same texture parameter.\n* Using `textureNumLevels()` more than once with the same texture parameter.\n* Using `textureNumSamples()` more than once with the same texture parameter.\n* An inner function using `textureNumLevels()` on two texture parameters, called by a function that uses the same texture parameter for both arguments, called by main.",
      "revId": "2fe4bf3d84c677bd27e820d622ce1faf4b5fe30b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "07425987_878fb3f7",
        "filename": "src/tint/lang/wgsl/ast/transform/texture_builtins_from_uniform_test.cc",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000685
      },
      "writtenOn": "2023-08-09T23:33:30Z",
      "side": 1,
      "message": "Added tests for 4.\nIf statement at [1] is true, then we don\u0027t need tests for 1 and 2.\nI believe 3 is already covered by SameBuiltinCalledMultipleTimes and 5 by TextureAsFunctionParameterMixed?",
      "parentUuid": "233c21fe_e8b7362e",
      "revId": "2fe4bf3d84c677bd27e820d622ce1faf4b5fe30b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cfb7cef9_0f59d3ed",
        "filename": "src/tint/lang/wgsl/ast/transform/texture_builtins_from_uniform_test.cc",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000685
      },
      "writtenOn": "2023-08-11T01:33:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "07425987_878fb3f7",
      "revId": "2fe4bf3d84c677bd27e820d622ce1faf4b5fe30b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}