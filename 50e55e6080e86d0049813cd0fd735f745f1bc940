{
  "comments": [
    {
      "key": {
        "uuid": "f40c7cf9_e7926542",
        "filename": "src/dawn_native/opengl/CommandBufferGL.cpp",
        "patchSetId": 9
      },
      "lineNbr": 329,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2019-03-27T13:39:14Z",
      "side": 1,
      "message": "nit: !\u003d nullptr",
      "range": {
        "startLine": 329,
        "startChar": 19,
        "endLine": 329,
        "endChar": 29
      },
      "revId": "50e55e6080e86d0049813cd0fd735f745f1bc940",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "711d0b2d_9c2758ba",
        "filename": "src/dawn_native/opengl/CommandBufferGL.cpp",
        "patchSetId": 9
      },
      "lineNbr": 329,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2019-03-28T07:17:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f40c7cf9_e7926542",
      "range": {
        "startLine": 329,
        "startChar": 19,
        "endLine": 329,
        "endChar": 29
      },
      "revId": "50e55e6080e86d0049813cd0fd735f745f1bc940",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7356e018_c70b36fd",
        "filename": "src/dawn_native/opengl/CommandBufferGL.cpp",
        "patchSetId": 9
      },
      "lineNbr": 340,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2019-03-27T13:39:14Z",
      "side": 1,
      "message": "nit: having two fbos called read and write would be more clear than indexing in the array. I think it\u0027s ok to call glGenFbo and glDeleteFbo twice.",
      "range": {
        "startLine": 337,
        "startChar": 0,
        "endLine": 340,
        "endChar": 21
      },
      "revId": "50e55e6080e86d0049813cd0fd735f745f1bc940",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "21fe0ae5_163da7b7",
        "filename": "src/dawn_native/opengl/CommandBufferGL.cpp",
        "patchSetId": 9
      },
      "lineNbr": 340,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2019-03-28T07:17:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7356e018_c70b36fd",
      "range": {
        "startLine": 337,
        "startChar": 0,
        "endLine": 340,
        "endChar": 21
      },
      "revId": "50e55e6080e86d0049813cd0fd735f745f1bc940",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9571edae_a03b28f7",
        "filename": "src/dawn_native/opengl/CommandBufferGL.cpp",
        "patchSetId": 9
      },
      "lineNbr": 344,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2019-03-27T13:39:14Z",
      "side": 1,
      "message": "nit: for readability can we have all the asserts together so the prechecks and the actual code are easier to distinguish?",
      "revId": "50e55e6080e86d0049813cd0fd735f745f1bc940",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dc0660ac_d1f9a939",
        "filename": "src/dawn_native/opengl/CommandBufferGL.cpp",
        "patchSetId": 9
      },
      "lineNbr": 344,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2019-03-28T07:17:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9571edae_a03b28f7",
      "revId": "50e55e6080e86d0049813cd0fd735f745f1bc940",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4be5122c_160ad545",
        "filename": "src/dawn_native/opengl/CommandBufferGL.cpp",
        "patchSetId": 9
      },
      "lineNbr": 348,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2019-03-27T22:50:17Z",
      "side": 1,
      "message": "if you use GL_READ_FRAMEBUFFER here... [1]",
      "range": {
        "startLine": 348,
        "startChar": 38,
        "endLine": 348,
        "endChar": 52
      },
      "revId": "50e55e6080e86d0049813cd0fd735f745f1bc940",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5290887f_2f1f008e",
        "filename": "src/dawn_native/opengl/CommandBufferGL.cpp",
        "patchSetId": 9
      },
      "lineNbr": 348,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2019-03-28T07:17:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4be5122c_160ad545",
      "range": {
        "startLine": 348,
        "startChar": 38,
        "endLine": 348,
        "endChar": 52
      },
      "revId": "50e55e6080e86d0049813cd0fd735f745f1bc940",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0cc89936_745dd1fe",
        "filename": "src/dawn_native/opengl/CommandBufferGL.cpp",
        "patchSetId": 9
      },
      "lineNbr": 356,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2019-03-27T22:50:17Z",
      "side": 1,
      "message": "[1] ... and GL_WRITE_FRAMEBUFFER here, then... [2]",
      "revId": "50e55e6080e86d0049813cd0fd735f745f1bc940",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b1388877_fdb8c3da",
        "filename": "src/dawn_native/opengl/CommandBufferGL.cpp",
        "patchSetId": 9
      },
      "lineNbr": 356,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2019-03-28T07:17:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0cc89936_745dd1fe",
      "revId": "50e55e6080e86d0049813cd0fd735f745f1bc940",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1e2684f9_ad3e6bee",
        "filename": "src/dawn_native/opengl/CommandBufferGL.cpp",
        "patchSetId": 9
      },
      "lineNbr": 357,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2019-03-27T13:39:14Z",
      "side": 1,
      "message": "Can\u0027t we just always use glFramebufferTextureLayer?",
      "revId": "50e55e6080e86d0049813cd0fd735f745f1bc940",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b7840c14_631c846f",
        "filename": "src/dawn_native/opengl/CommandBufferGL.cpp",
        "patchSetId": 9
      },
      "lineNbr": 357,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2019-03-28T07:17:01Z",
      "side": 1,
      "message": "No. glFramebufferTextureLayer requires the texture must be three-dimensional, two-dimensional multisample array, one- or two-dimensional array, cube map, or cube map array texture. We cannot use 2D non-array texture with this function.\n\nhttps://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glFramebufferTextureLayer.xhtml",
      "parentUuid": "1e2684f9_ad3e6bee",
      "revId": "50e55e6080e86d0049813cd0fd735f745f1bc940",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "df58e80a_bcedad36",
        "filename": "src/dawn_native/opengl/CommandBufferGL.cpp",
        "patchSetId": 9
      },
      "lineNbr": 372,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2019-03-27T22:50:17Z",
      "side": 1,
      "message": "[2] ... you should be able to avoid these two extra glBindFramebuffer calls.",
      "revId": "50e55e6080e86d0049813cd0fd735f745f1bc940",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8f919d8c_e093e8f2",
        "filename": "src/dawn_native/opengl/CommandBufferGL.cpp",
        "patchSetId": 9
      },
      "lineNbr": 372,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2019-03-28T07:17:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "df58e80a_bcedad36",
      "revId": "50e55e6080e86d0049813cd0fd735f745f1bc940",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f67cebc5_e0b98ca1",
        "filename": "src/dawn_native/opengl/RenderPipelineGL.cpp",
        "patchSetId": 9
      },
      "lineNbr": 204,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2019-03-27T13:39:14Z",
      "side": 1,
      "message": "I think in Dawn we\u0027ll always have multisampled rendering on because either both the pipeline and attachments are multisampled or none of them are. We should enable it when we create the device.",
      "revId": "50e55e6080e86d0049813cd0fd735f745f1bc940",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "28d3925a_6c751d28",
        "filename": "src/dawn_native/opengl/RenderPipelineGL.cpp",
        "patchSetId": 9
      },
      "lineNbr": 204,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2019-03-28T07:17:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f67cebc5_e0b98ca1",
      "revId": "50e55e6080e86d0049813cd0fd735f745f1bc940",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "aadb25aa_6127f91b",
        "filename": "src/dawn_native/opengl/TextureGL.cpp",
        "patchSetId": 9
      },
      "lineNbr": 32,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2019-03-27T13:39:14Z",
      "side": 1,
      "message": "I don\u0027t think we need to talk about the metal backend in the OpenGL backend, this comment would be better fit next to the relevant validation.",
      "range": {
        "startLine": 30,
        "startChar": 58,
        "endLine": 32,
        "endChar": 75
      },
      "revId": "50e55e6080e86d0049813cd0fd735f745f1bc940",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "998ff395_60890a1b",
        "filename": "src/dawn_native/opengl/TextureGL.cpp",
        "patchSetId": 9
      },
      "lineNbr": 32,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2019-03-28T07:17:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "aadb25aa_6127f91b",
      "range": {
        "startLine": 30,
        "startChar": 58,
        "endLine": 32,
        "endChar": 75
      },
      "revId": "50e55e6080e86d0049813cd0fd735f745f1bc940",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "92a9ffe2_7ab612ab",
        "filename": "src/dawn_native/opengl/TextureGL.cpp",
        "patchSetId": 9
      },
      "lineNbr": 55,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2019-03-27T13:39:14Z",
      "side": 1,
      "message": "ditto",
      "revId": "50e55e6080e86d0049813cd0fd735f745f1bc940",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "da334110_6d109618",
        "filename": "src/dawn_native/opengl/TextureGL.cpp",
        "patchSetId": 9
      },
      "lineNbr": 55,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2019-03-28T07:17:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "92a9ffe2_7ab612ab",
      "revId": "50e55e6080e86d0049813cd0fd735f745f1bc940",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5474916e_b760fe51",
        "filename": "src/dawn_native/opengl/TextureGL.cpp",
        "patchSetId": 9
      },
      "lineNbr": 154,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2019-03-27T13:39:14Z",
      "side": 1,
      "message": "ditto.",
      "revId": "50e55e6080e86d0049813cd0fd735f745f1bc940",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "437f61d5_475b82d4",
        "filename": "src/dawn_native/opengl/TextureGL.cpp",
        "patchSetId": 9
      },
      "lineNbr": 154,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2019-03-28T07:17:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5474916e_b760fe51",
      "revId": "50e55e6080e86d0049813cd0fd735f745f1bc940",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d2e70232_61b4f006",
        "filename": "src/tests/end2end/MultisampledRenderingTests.cpp",
        "patchSetId": 9
      },
      "lineNbr": 113,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2019-03-27T22:50:17Z",
      "side": 1,
      "message": "It seems like resolveTargetViews could also be std::initializer_list, like colorViews.",
      "revId": "50e55e6080e86d0049813cd0fd735f745f1bc940",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "22319766_05290678",
        "filename": "src/tests/end2end/MultisampledRenderingTests.cpp",
        "patchSetId": 9
      },
      "lineNbr": 113,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2019-03-28T07:17:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d2e70232_61b4f006",
      "revId": "50e55e6080e86d0049813cd0fd735f745f1bc940",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "01816d5e_9a448dc4",
        "filename": "src/tests/end2end/MultisampledRenderingTests.cpp",
        "patchSetId": 9
      },
      "lineNbr": 142,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2019-03-27T13:39:14Z",
      "side": 1,
      "message": "nit: top",
      "range": {
        "startLine": 142,
        "startChar": 49,
        "endLine": 142,
        "endChar": 53
      },
      "revId": "50e55e6080e86d0049813cd0fd735f745f1bc940",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8bf60277_31dcc125",
        "filename": "src/tests/end2end/MultisampledRenderingTests.cpp",
        "patchSetId": 9
      },
      "lineNbr": 142,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2019-03-28T07:17:01Z",
      "side": 1,
      "message": "No it is a dawn-right triangle. I have verified it by replacing the vertex shader in CHelloTriangle.cpp with this one.",
      "parentUuid": "01816d5e_9a448dc4",
      "range": {
        "startLine": 142,
        "startChar": 49,
        "endLine": 142,
        "endChar": 53
      },
      "revId": "50e55e6080e86d0049813cd0fd735f745f1bc940",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "46a76e0b_f86460a2",
        "filename": "src/tests/end2end/MultisampledRenderingTests.cpp",
        "patchSetId": 9
      },
      "lineNbr": 142,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2019-03-28T09:18:23Z",
      "side": 1,
      "message": "Ah, then fix the typo so that it is \"down\" and not \"dawn\" ^^ (actually we\u0027d usually say bottom instead of down here because down is a direction while bottom is a location)",
      "parentUuid": "8bf60277_31dcc125",
      "range": {
        "startLine": 142,
        "startChar": 49,
        "endLine": 142,
        "endChar": 53
      },
      "revId": "50e55e6080e86d0049813cd0fd735f745f1bc940",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3be191a7_99351730",
        "filename": "src/tests/end2end/MultisampledRenderingTests.cpp",
        "patchSetId": 9
      },
      "lineNbr": 148,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2019-03-27T13:39:14Z",
      "side": 1,
      "message": "Mmmmh can we explain very clearly that in the standard MSAA pattern this will only touch two samples of the pixel in the middle?",
      "revId": "50e55e6080e86d0049813cd0fd735f745f1bc940",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9df15081_b5732f0b",
        "filename": "src/tests/end2end/MultisampledRenderingTests.cpp",
        "patchSetId": 9
      },
      "lineNbr": 148,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2019-03-28T07:17:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3be191a7_99351730",
      "revId": "50e55e6080e86d0049813cd0fd735f745f1bc940",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0eb06843_a8cc7364",
        "filename": "src/tests/end2end/MultisampledRenderingTests.cpp",
        "patchSetId": 9
      },
      "lineNbr": 170,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2019-03-27T13:39:14Z",
      "side": 1,
      "message": "nit: no need for the parenthesis",
      "range": {
        "startLine": 170,
        "startChar": 48,
        "endLine": 170,
        "endChar": 87
      },
      "revId": "50e55e6080e86d0049813cd0fd735f745f1bc940",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ff03a736_4372820c",
        "filename": "src/tests/end2end/MultisampledRenderingTests.cpp",
        "patchSetId": 9
      },
      "lineNbr": 170,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2019-03-28T07:17:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0eb06843_a8cc7364",
      "range": {
        "startLine": 170,
        "startChar": 48,
        "endLine": 170,
        "endChar": 87
      },
      "revId": "50e55e6080e86d0049813cd0fd735f745f1bc940",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e596c01a_e7b7223c",
        "filename": "src/tests/end2end/MultisampledRenderingTests.cpp",
        "patchSetId": 9
      },
      "lineNbr": 184,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2019-03-27T13:39:14Z",
      "side": 1,
      "message": "This is also testing that depth works in multisampled mode. Can we split testing depth in its own test?",
      "revId": "50e55e6080e86d0049813cd0fd735f745f1bc940",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a546d2ff_16f8c7dd",
        "filename": "src/tests/end2end/MultisampledRenderingTests.cpp",
        "patchSetId": 9
      },
      "lineNbr": 184,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2019-03-28T07:17:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e596c01a_e7b7223c",
      "revId": "50e55e6080e86d0049813cd0fd735f745f1bc940",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e8cbd4fd_7edd4de8",
        "filename": "src/tests/end2end/MultisampledRenderingTests.cpp",
        "patchSetId": 9
      },
      "lineNbr": 195,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2019-03-27T13:39:14Z",
      "side": 1,
      "message": "nit: EncodeRenderPassForTest",
      "range": {
        "startLine": 195,
        "startChar": 8,
        "endLine": 195,
        "endChar": 32
      },
      "revId": "50e55e6080e86d0049813cd0fd735f745f1bc940",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "44e2f39f_5b12b44c",
        "filename": "src/tests/end2end/MultisampledRenderingTests.cpp",
        "patchSetId": 9
      },
      "lineNbr": 195,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2019-03-28T07:17:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e8cbd4fd_7edd4de8",
      "range": {
        "startLine": 195,
        "startChar": 8,
        "endLine": 195,
        "endChar": 32
      },
      "revId": "50e55e6080e86d0049813cd0fd735f745f1bc940",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e2a7aa23_d3ac0d83",
        "filename": "src/tests/end2end/MultisampledRenderingTests.cpp",
        "patchSetId": 9
      },
      "lineNbr": 199,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2019-03-27T13:39:14Z",
      "side": 1,
      "message": "nit: because",
      "range": {
        "startLine": 199,
        "startChar": 49,
        "endLine": 199,
        "endChar": 56
      },
      "revId": "50e55e6080e86d0049813cd0fd735f745f1bc940",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "836250d2_7b2c94c1",
        "filename": "src/tests/end2end/MultisampledRenderingTests.cpp",
        "patchSetId": 9
      },
      "lineNbr": 199,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2019-03-28T07:17:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e2a7aa23_d3ac0d83",
      "range": {
        "startLine": 199,
        "startChar": 49,
        "endLine": 199,
        "endChar": 56
      },
      "revId": "50e55e6080e86d0049813cd0fd735f745f1bc940",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d424c437_caf5143a",
        "filename": "src/tests/end2end/MultisampledRenderingTests.cpp",
        "patchSetId": 9
      },
      "lineNbr": 216,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2019-03-27T13:39:14Z",
      "side": 1,
      "message": "nit: explain because samples default to black and we rendered two samples to green. Also it would be nice to not just drop the constant 102 but compute it from the clear color.",
      "revId": "50e55e6080e86d0049813cd0fd735f745f1bc940",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "18006e96_d1bfe068",
        "filename": "src/tests/end2end/MultisampledRenderingTests.cpp",
        "patchSetId": 9
      },
      "lineNbr": 216,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2019-03-27T22:50:17Z",
      "side": 1,
      "message": "+1 to computing (or at least explaining) 102.\n\nThese comments pretty much just describe the same thing the next line says - a reader could understand it by reading just the EXPECT_ line.\n\nI\u0027d make these more compact, like \"// Middle pixel should be 102 \u003d 255 * 0.8 * 0.5.\"",
      "revId": "50e55e6080e86d0049813cd0fd735f745f1bc940",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "76349fb4_a926965b",
        "filename": "src/tests/end2end/MultisampledRenderingTests.cpp",
        "patchSetId": 9
      },
      "lineNbr": 216,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2019-03-28T07:17:01Z",
      "side": 1,
      "message": "Done\nI have moved the verification into VerifyResolveTarget().",
      "parentUuid": "d424c437_caf5143a",
      "revId": "50e55e6080e86d0049813cd0fd735f745f1bc940",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c41852e5_c09b631f",
        "filename": "src/tests/end2end/MultisampledRenderingTests.cpp",
        "patchSetId": 9
      },
      "lineNbr": 216,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2019-03-28T07:17:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "18006e96_d1bfe068",
      "revId": "50e55e6080e86d0049813cd0fd735f745f1bc940",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "673bb32b_3d3ebcc6",
        "filename": "src/tests/end2end/MultisampledRenderingTests.cpp",
        "patchSetId": 9
      },
      "lineNbr": 283,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2019-03-27T13:39:14Z",
      "side": 1,
      "message": "nit: middle",
      "range": {
        "startLine": 283,
        "startChar": 39,
        "endLine": 283,
        "endChar": 46
      },
      "revId": "50e55e6080e86d0049813cd0fd735f745f1bc940",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "754edfec_528f1629",
        "filename": "src/tests/end2end/MultisampledRenderingTests.cpp",
        "patchSetId": 9
      },
      "lineNbr": 283,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2019-03-28T07:17:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "673bb32b_3d3ebcc6",
      "range": {
        "startLine": 283,
        "startChar": 39,
        "endLine": 283,
        "endChar": 46
      },
      "revId": "50e55e6080e86d0049813cd0fd735f745f1bc940",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    }
  ]
}