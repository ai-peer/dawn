{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "c961dc64_0c88bfb7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1001591
      },
      "writtenOn": "2022-05-25T22:12:57Z",
      "side": 1,
      "message": "PTAL! Main focus of this change in the GPUInfo generation, but since adding the vendor/architecture to AdapterProperties was pretty trivial I\u0027ve thrown that in here too. I think we may want to eventually refactor those out into something that more closely matches the web-facing GPUAdapterInfo, but for now this will give us the data that we need on the Blink side using an existing mechanism.",
      "revId": "072edf1a44859dd20137e3460cca40d4570c8adc",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4dfa069c_4c114180",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2022-05-26T15:09:54Z",
      "side": 1,
      "message": "LGTM",
      "revId": "072edf1a44859dd20137e3460cca40d4570c8adc",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cb73b709_1913fbc6",
        "filename": "generator/dawn_gpu_info_generator.py",
        "patchSetId": 8
      },
      "lineNbr": 22,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-05-26T07:29:42Z",
      "side": 1,
      "message": "nit: Could this be moved to a file shared between generators?",
      "revId": "072edf1a44859dd20137e3460cca40d4570c8adc",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a71a818d_d108163c",
        "filename": "generator/dawn_gpu_info_generator.py",
        "patchSetId": 8
      },
      "lineNbr": 22,
      "author": {
        "id": 1001591
      },
      "writtenOn": "2022-05-26T22:40:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cb73b709_1913fbc6",
      "revId": "072edf1a44859dd20137e3460cca40d4570c8adc",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "62841b31_ac15d593",
        "filename": "generator/dawn_gpu_info_generator.py",
        "patchSetId": 8
      },
      "lineNbr": 76,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-05-26T07:29:42Z",
      "side": 1,
      "message": "nit: You can do self.deviceMask \u003d json_data.get(\u0027deviceMask\u0027, None) to have a default value of None.\n\nAlso maybe we could assert that the device IDs all have the bits outside of the deviceMask to 0.",
      "revId": "072edf1a44859dd20137e3460cca40d4570c8adc",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "df1f04bc_ed8e5f16",
        "filename": "generator/dawn_gpu_info_generator.py",
        "patchSetId": 8
      },
      "lineNbr": 76,
      "author": {
        "id": 1001591
      },
      "writtenOn": "2022-05-26T22:40:59Z",
      "side": 1,
      "message": "This is a great idea! I\u0027ve added asserts to the generator to check for bits being set outside the mask value and duplicate values.",
      "parentUuid": "62841b31_ac15d593",
      "revId": "072edf1a44859dd20137e3460cca40d4570c8adc",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bc8775d7_b296d703",
        "filename": "generator/templates/dawn/common/GPUInfo.cpp",
        "patchSetId": 8
      },
      "lineNbr": 28,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-05-26T07:29:42Z",
      "side": 1,
      "message": "optional: IMHO the enum class like that is better than the current interface of gpu_info. We could change the interface in a follow up if that\u0027s interesting to you.",
      "revId": "072edf1a44859dd20137e3460cca40d4570c8adc",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f7166cdd_73c89cb2",
        "filename": "generator/templates/dawn/common/GPUInfo.cpp",
        "patchSetId": 8
      },
      "lineNbr": 28,
      "author": {
        "id": 1001591
      },
      "writtenOn": "2022-05-26T22:43:28Z",
      "side": 1,
      "message": "Took me a moment to understand what you\u0027re saying here, but I understand it to mean you\u0027d like to replace any current uses of `gpu_info::IsSomeArchitecture()` with `gpu_info::GetArchitecture() \u003d\u003d gpu_info::Architecture::SomeArchitecture`? If so, I agree that it would be a nice simplification but I would want to leave that for a follow-up.",
      "parentUuid": "bc8775d7_b296d703",
      "revId": "072edf1a44859dd20137e3460cca40d4570c8adc",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "898561e9_108cb8e4",
        "filename": "generator/templates/dawn/common/GPUInfo.h",
        "patchSetId": 8
      },
      "lineNbr": 49,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2022-05-26T15:09:54Z",
      "side": 1,
      "message": "unit: these return strings that are compile-time constants - so I think we could have it return const char* to save an allocation",
      "range": {
        "startLine": 48,
        "startChar": 0,
        "endLine": 49,
        "endChar": 76
      },
      "revId": "072edf1a44859dd20137e3460cca40d4570c8adc",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cc69c9f6_d96ac8ae",
        "filename": "generator/templates/dawn/common/GPUInfo.h",
        "patchSetId": 8
      },
      "lineNbr": 49,
      "author": {
        "id": 1001591
      },
      "writtenOn": "2022-05-26T22:40:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "898561e9_108cb8e4",
      "range": {
        "startLine": 48,
        "startChar": 0,
        "endLine": 49,
        "endChar": 76
      },
      "revId": "072edf1a44859dd20137e3460cca40d4570c8adc",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "532030c2_8439d979",
        "filename": "gpu_info.json",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-05-26T07:29:42Z",
      "side": 1,
      "message": "nit: I\u0027ve been thinking we should move dawn.json in src/dawn at some point. Maybe we can do this directly for gpu_info.json?",
      "revId": "072edf1a44859dd20137e3460cca40d4570c8adc",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ecab4ad2_77d72a1a",
        "filename": "gpu_info.json",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1001591
      },
      "writtenOn": "2022-05-26T22:40:59Z",
      "side": 1,
      "message": "Done! Though I\u0027ll point out that my end goal is still to have it pulled in as an external dependency from a more public repo.",
      "parentUuid": "532030c2_8439d979",
      "revId": "072edf1a44859dd20137e3460cca40d4570c8adc",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d98eb570_dfaca63a",
        "filename": "gpu_info.json",
        "patchSetId": 8
      },
      "lineNbr": 21,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-05-26T07:29:42Z",
      "side": 1,
      "message": "Aren\u0027t hex numbers supported without strings in JSON?",
      "range": {
        "startLine": 21,
        "startChar": 13,
        "endLine": 21,
        "endChar": 19
      },
      "revId": "072edf1a44859dd20137e3460cca40d4570c8adc",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9f187b1c_3a483876",
        "filename": "gpu_info.json",
        "patchSetId": 8
      },
      "lineNbr": 21,
      "author": {
        "id": 1001591
      },
      "writtenOn": "2022-05-26T22:40:59Z",
      "side": 1,
      "message": "No, and I will never not be mad about that! ðŸ˜¡\n\nJSON5, which we use in Chromium, supports it. I was thinking about advocating for using it in Dawn for our JSON files. https://json5.org/",
      "parentUuid": "d98eb570_dfaca63a",
      "range": {
        "startLine": 21,
        "startChar": 13,
        "endLine": 21,
        "endChar": 19
      },
      "revId": "072edf1a44859dd20137e3460cca40d4570c8adc",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d33ebe39_a70dd431",
        "filename": "gpu_info.json",
        "patchSetId": 8
      },
      "lineNbr": 23,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2022-05-26T01:11:12Z",
      "side": 1,
      "message": "I know this doesn\u0027t need to be futureproof yet, but at some point I can imagine we might end up needing different device masks for different ranges of ids. I wonder if it might make sense to just build the masks into the values, like \"660?\", \"661?\", etc.? Unfortunately it makes the code generation for GetArchitecture harder.",
      "revId": "072edf1a44859dd20137e3460cca40d4570c8adc",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "39807ba7_d8d05914",
        "filename": "gpu_info.json",
        "patchSetId": 8
      },
      "lineNbr": 23,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-05-26T07:29:42Z",
      "side": 1,
      "message": "I imagine that the logic for device IDs will become more complicated over time, but we can figure out what that happens.",
      "parentUuid": "d33ebe39_a70dd431",
      "revId": "072edf1a44859dd20137e3460cca40d4570c8adc",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f1026a27_1eca1fd0",
        "filename": "gpu_info.json",
        "patchSetId": 8
      },
      "lineNbr": 23,
      "author": {
        "id": 1001591
      },
      "writtenOn": "2022-05-26T22:40:59Z",
      "side": 1,
      "message": "Right now this pattern covers all the devices I\u0027ve seen and does so without too much complexity. I\u0027m inclined to not make it more complicated till we see that it needs it.",
      "parentUuid": "39807ba7_d8d05914",
      "revId": "072edf1a44859dd20137e3460cca40d4570c8adc",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cd542936_7f5aba0a",
        "filename": "gpu_info.json",
        "patchSetId": 8
      },
      "lineNbr": 31,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-05-26T07:29:42Z",
      "side": 1,
      "message": "I\u0027ve been wondering if we should have hierarchical architectures, here all generations of GCN are very similar so it could make sense. But probably overkill for now.",
      "revId": "072edf1a44859dd20137e3460cca40d4570c8adc",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}