{
  "comments": [
    {
      "key": {
        "uuid": "e1e4d33d_cf4b65e8",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 7,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-04-27T12:10:41Z",
      "side": 1,
      "message": "nit: Fixes for MSVC compilation.\n\nDescribe fix 1, describe fix2\n\nPlease also add \"Bug: dawn:394\" at the end so that the CL is referenced in the https://bugs.chromium.org/p/dawn/issues/detail?id\u003d394 issue I just created.",
      "revId": "f50656dd4c64403b2f6df5cde5563d1097cd4072",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8dd55349_5891ecec",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 7,
      "author": {
        "id": 1000536
      },
      "writtenOn": "2020-04-27T18:26:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e1e4d33d_cf4b65e8",
      "revId": "f50656dd4c64403b2f6df5cde5563d1097cd4072",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2bcf861d_450f0ccc",
        "filename": "src/tests/perf_tests/DawnPerfTestPlatform.h",
        "patchSetId": 2
      },
      "lineNbr": 25,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-04-27T12:10:41Z",
      "side": 1,
      "message": "nit: alphabetical order. You can run `git cl format` to automatically format all the code files. Why is this included needed in the file? I can\u0027t find it.",
      "revId": "f50656dd4c64403b2f6df5cde5563d1097cd4072",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "99e4969d_73a3c32e",
        "filename": "src/tests/perf_tests/DawnPerfTestPlatform.h",
        "patchSetId": 2
      },
      "lineNbr": 25,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-04-27T16:29:35Z",
      "side": 1,
      "message": "The part about the include not being needed hasn\u0027t been addressed. If possible can we move it to the .cpp file?",
      "parentUuid": "2bcf861d_450f0ccc",
      "revId": "f50656dd4c64403b2f6df5cde5563d1097cd4072",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "beff9763_95be6de6",
        "filename": "src/tests/perf_tests/DawnPerfTestPlatform.h",
        "patchSetId": 2
      },
      "lineNbr": 25,
      "author": {
        "id": 1000536
      },
      "writtenOn": "2020-04-27T18:26:15Z",
      "side": 1,
      "message": "Oh that\u0027s really good to know. In DawnPerfTestPlatform - AcquireTraceEventBuffer, there is a std::transform used.",
      "parentUuid": "2bcf861d_450f0ccc",
      "revId": "f50656dd4c64403b2f6df5cde5563d1097cd4072",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a561de78_bd3f17d8",
        "filename": "src/tests/perf_tests/DawnPerfTestPlatform.h",
        "patchSetId": 2
      },
      "lineNbr": 25,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-04-27T18:28:28Z",
      "side": 1,
      "message": "But that\u0027s only in the .cpp file, so we could move the #include there I think",
      "parentUuid": "beff9763_95be6de6",
      "revId": "f50656dd4c64403b2f6df5cde5563d1097cd4072",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5ff65f23_de21cc26",
        "filename": "src/tests/perf_tests/DawnPerfTestPlatform.h",
        "patchSetId": 2
      },
      "lineNbr": 25,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-04-27T18:29:17Z",
      "side": 1,
      "message": "Yep, so the include should be in the .cpp file so as to minimize the contagiousness of includes.",
      "parentUuid": "beff9763_95be6de6",
      "revId": "f50656dd4c64403b2f6df5cde5563d1097cd4072",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "388022b5_94344b43",
        "filename": "src/tests/unittests/validation/StorageTextureValidationTests.cpp",
        "patchSetId": 2
      },
      "lineNbr": 884,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-04-27T12:10:41Z",
      "side": 1,
      "message": "For bind group layouts we try to keep it as a single aggregate structure similar to:\n\n  utils::MakeBindGroupLayout(device, {{0, wgpu::ShaderStage::Fragment, storageTextureType, kFormat}});\n\nbut there might be missing values in the initializer above.\n\nSame comment everywhere else in this file.",
      "revId": "f50656dd4c64403b2f6df5cde5563d1097cd4072",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d52b0ac7_cc0f0a47",
        "filename": "src/tests/unittests/validation/StorageTextureValidationTests.cpp",
        "patchSetId": 2
      },
      "lineNbr": 884,
      "author": {
        "id": 1000536
      },
      "writtenOn": "2020-04-27T18:26:15Z",
      "side": 1,
      "message": "Do you mean like this?\n {0, wgpu::ShaderStage::Fragment, storageTextureType, false, false, wgpu::TextureViewDimension::Undefined, wgpu::TextureViewDimension::Undefined, wgpu::TextureComponentType::Float, kFormat}",
      "parentUuid": "388022b5_94344b43",
      "revId": "f50656dd4c64403b2f6df5cde5563d1097cd4072",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    }
  ]
}