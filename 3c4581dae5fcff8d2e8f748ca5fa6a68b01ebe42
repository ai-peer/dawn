{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "e08ad42a_f7e995b7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1001591
      },
      "writtenOn": "2024-03-04T16:43:00Z",
      "side": 1,
      "message": "PTAL! Also, suggestions on other identifiers that could be added to other objects like the format for the texture object are welcome. A lot of the ones that I thought of (like buffer size) felt like they would add noise without actively aiding in identifying the object, and errors that have to do with the attribute in question will typically include it.",
      "revId": "3c4581dae5fcff8d2e8f748ca5fa6a68b01ebe42",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c7ececee_204fcd9b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2024-03-04T16:45:09Z",
      "side": 1,
      "message": "LGTM!",
      "revId": "3c4581dae5fcff8d2e8f748ca5fa6a68b01ebe42",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a78f71dd_d0c8842b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2024-03-04T21:18:46Z",
      "side": 1,
      "message": "LGTM but tests need updates",
      "revId": "3c4581dae5fcff8d2e8f748ca5fa6a68b01ebe42",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e68dc337_aa41b0fc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1001591
      },
      "writtenOn": "2024-03-05T18:52:34Z",
      "side": 1,
      "message": "Tests updated",
      "parentUuid": "a78f71dd_d0c8842b",
      "revId": "3c4581dae5fcff8d2e8f748ca5fa6a68b01ebe42",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e199ea6f_258c4d49",
        "filename": "src/dawn/native/Queue.cpp",
        "patchSetId": 1
      },
      "lineNbr": 275,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2024-03-04T21:18:46Z",
      "side": 1,
      "message": "assorted thoughts: We could also show something like `[default Queue of [Device \"devicelabel\"]]` but I\u0027m guessing that wouldn\u0027t be very useful since device labels probably aren\u0027t very widely used.\n\nWhat is the printing implementation for devices? It doesn\u0027t inherit ObjectBase so I\u0027m guessing we don\u0027t print `[Device (unlabeled)]` with this CL. I don\u0027t think very many messages print the device at all? One I can think of is device-mismatch errors probably, where it could be useful to encourage labeling. Though the most common case of that error will probably be reinitializing a device and using old resources, in which case the label will probably be the same on the new and old devices... which would be a little extra confusing.",
      "revId": "3c4581dae5fcff8d2e8f748ca5fa6a68b01ebe42",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b768c24a_f8188148",
        "filename": "src/dawn/native/Queue.cpp",
        "patchSetId": 1
      },
      "lineNbr": 275,
      "author": {
        "id": 1001591
      },
      "writtenOn": "2024-03-05T18:52:34Z",
      "side": 1,
      "message": "We don\u0027t print `[Device (unlabeled)]`, no, but I think that\u0027s probably not a big deal for the reasons you cite. I\u0027m also not sure that updating the Queue label much will make a big difference, again for the reasons you talked about.\n\nOne thing I\u0027ve always wanted to consider, though it would be outside the scope of this CL, is to give unlabeled objects an arbitrary ID (explicitly not a pointer address) so that you get at least some basic differentiation for things like `[Texture \"Foo\"] from [Device (#02)] is not compatible with [Device (#4C)]` or something similar.",
      "parentUuid": "e199ea6f_258c4d49",
      "revId": "3c4581dae5fcff8d2e8f748ca5fa6a68b01ebe42",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fee324ac_dae8b479",
        "filename": "src/dawn/native/Queue.cpp",
        "patchSetId": 1
      },
      "lineNbr": 275,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2024-03-06T00:08:35Z",
      "side": 1,
      "message": "I was thinking the same thing. That would be nice. We might even already have a bug for it, not sure.",
      "parentUuid": "b768c24a_f8188148",
      "revId": "3c4581dae5fcff8d2e8f748ca5fa6a68b01ebe42",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "53264cb0_92170b9b",
        "filename": "src/dawn/native/Texture.cpp",
        "patchSetId": 1
      },
      "lineNbr": 842,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2024-03-04T16:45:09Z",
      "side": 1,
      "message": "nit: Maybe we could put the size as well.",
      "revId": "3c4581dae5fcff8d2e8f748ca5fa6a68b01ebe42",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d8e736ff_866061a4",
        "filename": "src/dawn/native/Texture.cpp",
        "patchSetId": 1
      },
      "lineNbr": 842,
      "author": {
        "id": 1001591
      },
      "writtenOn": "2024-03-05T18:52:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "53264cb0_92170b9b",
      "revId": "3c4581dae5fcff8d2e8f748ca5fa6a68b01ebe42",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}