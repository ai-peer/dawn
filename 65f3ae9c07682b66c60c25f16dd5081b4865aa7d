{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "cbd88f24_2b6b65a6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 1003611
      },
      "writtenOn": "2024-01-09T08:22:35Z",
      "side": 1,
      "message": "(I\u0027ll remove the test CMakeLists once I\u0027m done with testing no worry!)",
      "revId": "65f3ae9c07682b66c60c25f16dd5081b4865aa7d",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5dbe3978_71f3135b",
        "filename": "src/dawn/native/Surface.cpp",
        "patchSetId": 10
      },
      "lineNbr": 225,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2024-01-08T14:10:34Z",
      "side": 1,
      "message": "nit: %s, for Surface and Adapter so that the labels show up in error message ;)",
      "range": {
        "startLine": 225,
        "startChar": 41,
        "endLine": 225,
        "endChar": 50
      },
      "revId": "65f3ae9c07682b66c60c25f16dd5081b4865aa7d",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "38d0c66b_6046c6ad",
        "filename": "src/dawn/native/Surface.cpp",
        "patchSetId": 10
      },
      "lineNbr": 225,
      "author": {
        "id": 1003611
      },
      "writtenOn": "2024-01-08T22:32:04Z",
      "side": 1,
      "message": "Except I don\u0027t have access to the surface nor the adapter at this point!",
      "parentUuid": "5dbe3978_71f3135b",
      "range": {
        "startLine": 225,
        "startChar": 41,
        "endLine": 225,
        "endChar": 50
      },
      "revId": "65f3ae9c07682b66c60c25f16dd5081b4865aa7d",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "76543ba8_6ad901b1",
        "filename": "src/dawn/native/Surface.cpp",
        "patchSetId": 10
      },
      "lineNbr": 225,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2024-01-09T12:19:53Z",
      "side": 1,
      "message": "AH gotcha, that\u0027s why we have contexts in ConsumedError or DAWN_TRY macros, we could do things like [1] for all entrypoints and have simpler error messages here like \"The format (%s) is not supported for this configuration.\" or something like that.",
      "parentUuid": "38d0c66b_6046c6ad",
      "range": {
        "startLine": 225,
        "startChar": 41,
        "endLine": 225,
        "endChar": 50
      },
      "revId": "65f3ae9c07682b66c60c25f16dd5081b4865aa7d",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9f4bfc71_5f0d8af1",
        "filename": "src/dawn/native/Surface.cpp",
        "patchSetId": 10
      },
      "lineNbr": 225,
      "author": {
        "id": 1003611
      },
      "writtenOn": "2024-01-26T22:02:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "76543ba8_6ad901b1",
      "range": {
        "startLine": 225,
        "startChar": 41,
        "endLine": 225,
        "endChar": 50
      },
      "revId": "65f3ae9c07682b66c60c25f16dd5081b4865aa7d",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a170b251_87be8036",
        "filename": "src/dawn/tests/CMakeLists.txt",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2024-01-08T14:10:34Z",
      "side": 1,
      "message": "OMG I never expected that you\u0027d try to tackle adding CMake support for the tests. We usually just run them using the GN build. Maybe you could split that CL off and let one of use look at adding this support? As you might have found it will be a massive amount of work!",
      "revId": "65f3ae9c07682b66c60c25f16dd5081b4865aa7d",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5838cad0_097f0959",
        "filename": "src/dawn/tests/CMakeLists.txt",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 1003611
      },
      "writtenOn": "2024-01-26T22:02:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a170b251_87be8036",
      "revId": "65f3ae9c07682b66c60c25f16dd5081b4865aa7d",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "231d374c_714172e7",
        "filename": "src/dawn/utils/CMakeLists.txt",
        "patchSetId": 10
      },
      "lineNbr": 64,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2024-01-08T14:10:34Z",
      "side": 1,
      "message": "nit: only SPV reader is needed?",
      "revId": "65f3ae9c07682b66c60c25f16dd5081b4865aa7d",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "662a282a_3842ac94",
        "filename": "src/dawn/utils/CMakeLists.txt",
        "patchSetId": 10
      },
      "lineNbr": 64,
      "author": {
        "id": 1003611
      },
      "writtenOn": "2024-01-08T22:32:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "231d374c_714172e7",
      "revId": "65f3ae9c07682b66c60c25f16dd5081b4865aa7d",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "139f26ec_2fccb074",
        "filename": "src/dawn/wire/client/Surface.h",
        "patchSetId": 10
      },
      "lineNbr": 34,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2024-01-08T14:10:34Z",
      "side": 1,
      "message": "If you want I could take care of the wire. In this CL we just need it to compile and error out \"nicely\" (return FatalError if needed for example) when the new swapcahin APIs are used.",
      "revId": "65f3ae9c07682b66c60c25f16dd5081b4865aa7d",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8b951548_75741763",
        "filename": "src/dawn/wire/client/Surface.h",
        "patchSetId": 10
      },
      "lineNbr": 34,
      "author": {
        "id": 1003611
      },
      "writtenOn": "2024-01-09T08:22:35Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "139f26ec_2fccb074",
      "revId": "65f3ae9c07682b66c60c25f16dd5081b4865aa7d",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}