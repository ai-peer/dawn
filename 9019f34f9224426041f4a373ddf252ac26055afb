{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "0449d27c_4b9dab4e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-11-19T17:38:44Z",
      "side": 1,
      "message": "LGTM",
      "revId": "9019f34f9224426041f4a373ddf252ac26055afb",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4eadac01_71e3cf4a",
        "filename": "src/dawn_native/d3d12/DeviceD3D12.cpp",
        "patchSetId": 5
      },
      "lineNbr": 200,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-11-19T17:38:44Z",
      "side": 1,
      "message": "unit: the newline here feels a bit odd. Maybe have it as \"} else if {\" and put the comment inside the if-block.",
      "revId": "9019f34f9224426041f4a373ddf252ac26055afb",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d9d41f4c_d12a8ea0",
        "filename": "src/dawn_native/d3d12/DeviceD3D12.cpp",
        "patchSetId": 5
      },
      "lineNbr": 200,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2020-11-20T03:57:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4eadac01_71e3cf4a",
      "revId": "9019f34f9224426041f4a373ddf252ac26055afb",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7b2ea078_cd276706",
        "filename": "src/dawn_native/d3d12/PlatformFunctions.cpp",
        "patchSetId": 5
      },
      "lineNbr": 31,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-11-19T17:38:44Z",
      "side": 1,
      "message": "nit: would prefer these constants to be:\n - constexpr char kPrefix[] \u003d \"10.0.\";\n - constexpr uint32_t kPrefixLen \u003d sizeof(kPrefix) - 1;",
      "range": {
        "startLine": 27,
        "startChar": 12,
        "endLine": 31,
        "endChar": 58
      },
      "revId": "9019f34f9224426041f4a373ddf252ac26055afb",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3094720e_0b1d9a85",
        "filename": "src/dawn_native/d3d12/PlatformFunctions.cpp",
        "patchSetId": 5
      },
      "lineNbr": 31,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2020-11-20T03:57:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7b2ea078_cd276706",
      "range": {
        "startLine": 27,
        "startChar": 12,
        "endLine": 31,
        "endChar": 58
      },
      "revId": "9019f34f9224426041f4a373ddf252ac26055afb",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a021abe5_a66ad345",
        "filename": "src/dawn_native/d3d12/PlatformFunctions.cpp",
        "patchSetId": 5
      },
      "lineNbr": 32,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-11-19T17:38:44Z",
      "side": 1,
      "message": "nit: this one isn\u0027t a constant, so it should not be prefixed with \"k\"",
      "range": {
        "startLine": 32,
        "startChar": 27,
        "endLine": 32,
        "endChar": 44
      },
      "revId": "9019f34f9224426041f4a373ddf252ac26055afb",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9c1c9e2f_6de85d96",
        "filename": "src/dawn_native/d3d12/PlatformFunctions.cpp",
        "patchSetId": 5
      },
      "lineNbr": 32,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2020-11-20T03:57:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a021abe5_a66ad345",
      "range": {
        "startLine": 32,
        "startChar": 27,
        "endLine": 32,
        "endChar": 44
      },
      "revId": "9019f34f9224426041f4a373ddf252ac26055afb",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1790882a_cae05ce6",
        "filename": "src/dawn_native/d3d12/PlatformFunctions.cpp",
        "patchSetId": 5
      },
      "lineNbr": 60,
      "author": {
        "id": 1000262
      },
      "writtenOn": "2020-11-19T18:27:29Z",
      "side": 1,
      "message": "Per the MSDN docs, handle needs to be closed with FindClose. I recommend using an RAII class like base::win::GenericScopedHandle so that you can early return out of the function without leaking file system objects.",
      "range": {
        "startLine": 57,
        "startChar": 1,
        "endLine": 60,
        "endChar": 13
      },
      "revId": "9019f34f9224426041f4a373ddf252ac26055afb",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f0d0aff7_cd21dc1f",
        "filename": "src/dawn_native/d3d12/PlatformFunctions.cpp",
        "patchSetId": 5
      },
      "lineNbr": 60,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2020-11-20T03:57:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1790882a_cae05ce6",
      "range": {
        "startLine": 57,
        "startChar": 1,
        "endLine": 60,
        "endChar": 13
      },
      "revId": "9019f34f9224426041f4a373ddf252ac26055afb",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "57fcc14b_35f668c5",
        "filename": "src/dawn_native/d3d12/PlatformFunctions.cpp",
        "patchSetId": 5
      },
      "lineNbr": 158,
      "author": {
        "id": 1000262
      },
      "writtenOn": "2020-11-19T18:27:29Z",
      "side": 1,
      "message": "If the Open call fails, there shouldn\u0027t be a need to close mDXILLib. In fact, you should be able to assert that mDXILLib is not valid.",
      "range": {
        "startLine": 158,
        "startChar": 0,
        "endLine": 158,
        "endChar": 25
      },
      "revId": "9019f34f9224426041f4a373ddf252ac26055afb",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2ca1f9b8_2b04f1ed",
        "filename": "src/dawn_native/d3d12/PlatformFunctions.cpp",
        "patchSetId": 5
      },
      "lineNbr": 158,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2020-11-20T03:57:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "57fcc14b_35f668c5",
      "range": {
        "startLine": 158,
        "startChar": 0,
        "endLine": 158,
        "endChar": 25
      },
      "revId": "9019f34f9224426041f4a373ddf252ac26055afb",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d2b71741_327af51b",
        "filename": "src/dawn_native/d3d12/PlatformFunctions.cpp",
        "patchSetId": 5
      },
      "lineNbr": 181,
      "author": {
        "id": 1000262
      },
      "writtenOn": "2020-11-19T18:27:29Z",
      "side": 1,
      "message": "If dxCompilerLib fails to load, we should be able to close mDXILLib since we no longer need it.",
      "range": {
        "startLine": 178,
        "startChar": 0,
        "endLine": 181,
        "endChar": 9
      },
      "revId": "9019f34f9224426041f4a373ddf252ac26055afb",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ac60bdb2_8f0a8b66",
        "filename": "src/dawn_native/d3d12/PlatformFunctions.cpp",
        "patchSetId": 5
      },
      "lineNbr": 181,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2020-11-20T03:57:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d2b71741_327af51b",
      "range": {
        "startLine": 178,
        "startChar": 0,
        "endLine": 181,
        "endChar": 9
      },
      "revId": "9019f34f9224426041f4a373ddf252ac26055afb",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}