{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "6c69b632_d939b1f9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2024-03-13T11:54:25Z",
      "side": 1,
      "message": "Still LGTM, thanks!",
      "revId": "ef4b6610ff37fa1348026d423730b14574ad13e5",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ff8130b2_690427c1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2024-03-14T01:46:51Z",
      "side": 1,
      "message": "LGTM!",
      "revId": "ef4b6610ff37fa1348026d423730b14574ad13e5",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "43c06115_7c1d8e37",
        "filename": "src/dawn/native/d3d11/BufferD3D11.cpp",
        "patchSetId": 8
      },
      "lineNbr": 300,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2024-03-13T14:27:15Z",
      "side": 1,
      "message": "nit: Is this `mMapReadySerial` really needed? Can we just use `mLastUsageSerial`?",
      "range": {
        "startLine": 300,
        "startChar": 4,
        "endLine": 300,
        "endChar": 20
      },
      "revId": "ef4b6610ff37fa1348026d423730b14574ad13e5",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "57c051cc_8823f70f",
        "filename": "src/dawn/native/d3d11/BufferD3D11.cpp",
        "patchSetId": 8
      },
      "lineNbr": 300,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2024-03-14T00:47:24Z",
      "side": 1,
      "message": "Without `mMapReadySerial`, Could we change [2] to   `mLastUsageSerial \u003d kMaxExecutionSerial;`? It seems not correct.",
      "parentUuid": "43c06115_7c1d8e37",
      "range": {
        "startLine": 300,
        "startChar": 4,
        "endLine": 300,
        "endChar": 20
      },
      "revId": "ef4b6610ff37fa1348026d423730b14574ad13e5",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4fcb53ee_a2cf1fbd",
        "filename": "src/dawn/native/d3d11/BufferD3D11.cpp",
        "patchSetId": 8
      },
      "lineNbr": 300,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2024-03-14T01:03:44Z",
      "side": 1,
      "message": "Why we need to reset `mMapReadySerial` or `mLastUsageSerial`?",
      "parentUuid": "57c051cc_8823f70f",
      "range": {
        "startLine": 300,
        "startChar": 4,
        "endLine": 300,
        "endChar": 20
      },
      "revId": "ef4b6610ff37fa1348026d423730b14574ad13e5",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9428f4e7_3320c10f",
        "filename": "src/dawn/native/d3d11/BufferD3D11.cpp",
        "patchSetId": 8
      },
      "lineNbr": 300,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2024-03-14T01:27:49Z",
      "side": 1,
      "message": "For early unmap like this,\n```\nMapBufferAsync(buffer, callback);\nUnmap(buffer);\n```\nthe callback shouldn\u0027t have a chance to be called, so the actual d3d11 map is not needed at all in this situation.",
      "parentUuid": "4fcb53ee_a2cf1fbd",
      "range": {
        "startLine": 300,
        "startChar": 4,
        "endLine": 300,
        "endChar": 20
      },
      "revId": "ef4b6610ff37fa1348026d423730b14574ad13e5",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c1575e39_9e24db81",
        "filename": "src/dawn/native/d3d11/BufferD3D11.cpp",
        "patchSetId": 8
      },
      "lineNbr": 300,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2024-03-14T01:33:18Z",
      "side": 1,
      "message": "Sorry. I didn\u0027t follow. I though you can just always use `mLastUsageSerial` directly at where `mMapReadySerial` is currently used, and remove `mMapReadySerial \u003d kMaxExecutionSerial` at [1], right?",
      "parentUuid": "9428f4e7_3320c10f",
      "range": {
        "startLine": 300,
        "startChar": 4,
        "endLine": 300,
        "endChar": 20
      },
      "revId": "ef4b6610ff37fa1348026d423730b14574ad13e5",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0d308a78_4fb5c3ec",
        "filename": "src/dawn/native/d3d11/BufferD3D11.cpp",
        "patchSetId": 8
      },
      "lineNbr": 300,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2024-03-14T01:40:32Z",
      "side": 1,
      "message": "if you unmap immediately after map, like:\n\nMapBufferAsync(buffer, callback);\nUnmap(buffer);\n\n\nThen, I think we don\u0027t want to actually map the buffer. We want to cancel so the map never occurs.",
      "parentUuid": "c1575e39_9e24db81",
      "range": {
        "startLine": 300,
        "startChar": 4,
        "endLine": 300,
        "endChar": 20
      },
      "revId": "ef4b6610ff37fa1348026d423730b14574ad13e5",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "493a0989_b4d6dd02",
        "filename": "src/dawn/native/d3d11/BufferD3D11.cpp",
        "patchSetId": 8
      },
      "lineNbr": 300,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2024-03-14T01:44:52Z",
      "side": 1,
      "message": "Ack. I though dawn validation will catch it, and this `UnmapImpl()` will not be reached for this case.",
      "parentUuid": "0d308a78_4fb5c3ec",
      "range": {
        "startLine": 300,
        "startChar": 4,
        "endLine": 300,
        "endChar": 20
      },
      "revId": "ef4b6610ff37fa1348026d423730b14574ad13e5",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a2c4aaa4_5ce1f6c9",
        "filename": "src/dawn/native/d3d11/BufferD3D11.cpp",
        "patchSetId": 8
      },
      "lineNbr": 331,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2024-03-14T00:47:24Z",
      "side": 1,
      "message": "[2]",
      "range": {
        "startLine": 331,
        "startChar": 0,
        "endLine": 331,
        "endChar": 42
      },
      "revId": "ef4b6610ff37fa1348026d423730b14574ad13e5",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "ef4b6610ff37fa1348026d423730b14574ad13e5",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Kokoro",
        "description": {
          "value": "A maximum vote is required for the Kokoro label. A minimum vote is blocking."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Kokoro\u003dMAX AND -label:Kokoro\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "uploader:dawn-autoroll@skia-public.iam.gserviceaccount.com OR uploader:chrome-automated-expectation@chops-service-accounts.iam.gserviceaccount.com OR uploader:chrome-branch-day@chops-service-accounts.iam.gserviceaccount.com"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Kokoro=MAX AND -label:Kokoro=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Kokoro=MAX"],"failingAtoms":["label:Kokoro=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"uploader:dawn-autoroll@skia-public.iam.gserviceaccount.com OR uploader:chrome-automated-expectation@chops-service-accounts.iam.gserviceaccount.com OR uploader:chrome-branch-day@chops-service-accounts.iam.gserviceaccount.com"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["uploader:dawn-autoroll@skia-public.iam.gserviceaccount.com","uploader:chrome-automated-expectation@chops-service-accounts.iam.gserviceaccount.com","uploader:chrome-branch-day@chops-service-accounts.iam.gserviceaccount.com"]}
      },
      "patchSetCommitId": "ef4b6610ff37fa1348026d423730b14574ad13e5",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "patchSetCommitId": "ef4b6610ff37fa1348026d423730b14574ad13e5",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    }
  ]
}