{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "8449ea57_50a11a4d",
        "filename": "src/tint/lang/spirv/writer/common/helper_test.h",
        "patchSetId": 10
      },
      "lineNbr": 117,
      "author": {
        "id": 1002241
      },
      "writtenOn": "2023-10-26T13:47:31Z",
      "side": 1,
      "message": "`Options` already contains the `zero_init_workgroup_memory` flag, so this is now kinda weird.\n\nNow that you\u0027ve changed the unit tests for types and constants to emit full IR modules, I think we might as well just make all tests use the top level `Generate()` function instead of manually running `Raise()` and `Print()` separately. We don\u0027t really need `DumpTypes()`, so we can also get rid of `PrintModule()`.\n\nI\u0027m happy to do all of this as a follow-up though.",
      "revId": "935d550ff9e97555cb858f6703528571a4f005d8",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f5ae7e49_059848b8",
        "filename": "src/tint/lang/spirv/writer/common/helper_test.h",
        "patchSetId": 10
      },
      "lineNbr": 117,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2023-10-26T14:07:14Z",
      "side": 1,
      "message": "\u003e `Options` already contains the `zero_init_workgroup_memory` flag, so this is now kinda weird.\n\nI looked through the options, but I didn\u0027t see anything that exactly matched. Maybe I was just being blind / misunderstanding slightly different names.\n\n\u003e Now that you\u0027ve changed the unit tests for types and constants to emit full IR modules, I think we might as well just make all tests use the top level `Generate()` function instead of manually running `Raise()` and `Print()` separately. \n\nYou have no desire to create unit tests that use the SPIR-V dialect IR?\n\n\u003e We don\u0027t really need `DumpTypes()`, so we can also get rid of `PrintModule()`.\n\nSGTM\n\n\u003e I\u0027m happy to do all of this as a follow-up though.\n\nI don\u0027t expect you to have to take this all on. I\u0027m happy to chip in where / when I can.",
      "parentUuid": "8449ea57_50a11a4d",
      "revId": "935d550ff9e97555cb858f6703528571a4f005d8",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "935d550ff9e97555cb858f6703528571a4f005d8",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Kokoro",
        "description": {
          "value": "A maximum vote is required for the Kokoro label. A minimum vote is blocking."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Kokoro\u003dMAX AND -label:Kokoro\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "uploader:dawn-autoroll@skia-public.iam.gserviceaccount.com OR uploader:chrome-automated-expectation@chops-service-accounts.iam.gserviceaccount.com OR uploader:chrome-branch-day@chops-service-accounts.iam.gserviceaccount.com"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Kokoro=MAX AND -label:Kokoro=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Kokoro=MAX"],"failingAtoms":["label:Kokoro=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"uploader:dawn-autoroll@skia-public.iam.gserviceaccount.com OR uploader:chrome-automated-expectation@chops-service-accounts.iam.gserviceaccount.com OR uploader:chrome-branch-day@chops-service-accounts.iam.gserviceaccount.com"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["uploader:dawn-autoroll@skia-public.iam.gserviceaccount.com","uploader:chrome-automated-expectation@chops-service-accounts.iam.gserviceaccount.com","uploader:chrome-branch-day@chops-service-accounts.iam.gserviceaccount.com"]}
      },
      "patchSetCommitId": "935d550ff9e97555cb858f6703528571a4f005d8",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "935d550ff9e97555cb858f6703528571a4f005d8",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    }
  ]
}