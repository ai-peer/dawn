{
  "comments": [
    {
      "key": {
        "uuid": "2b609391_ca5ea206",
        "filename": "src/common/Constants.h",
        "patchSetId": 6
      },
      "lineNbr": 26,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2019-02-22T10:18:25Z",
      "side": 1,
      "message": "nit: might be",
      "range": {
        "startLine": 26,
        "startChar": 31,
        "endLine": 26,
        "endChar": 37
      },
      "revId": "9c6918027c0813801a51f1aa23f3cc2db7c9a9dd",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5da52a92_ba068f51",
        "filename": "src/common/Constants.h",
        "patchSetId": 6
      },
      "lineNbr": 26,
      "author": {
        "id": 1000017
      },
      "writtenOn": "2019-02-22T12:50:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2b609391_ca5ea206",
      "range": {
        "startLine": 26,
        "startChar": 31,
        "endLine": 26,
        "endChar": 37
      },
      "revId": "9c6918027c0813801a51f1aa23f3cc2db7c9a9dd",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e576051e_cf43ecd8",
        "filename": "src/dawn_native/InputState.cpp",
        "patchSetId": 6
      },
      "lineNbr": 138,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2019-02-22T10:18:25Z",
      "side": 1,
      "message": "To avoid integer overflows if someone passes an offset with UINT_MAX value, we should check that attribute-\u003eoffset \u003c kMaxVertexAttributeEnd too.",
      "revId": "9c6918027c0813801a51f1aa23f3cc2db7c9a9dd",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3463ee63_fa9a089d",
        "filename": "src/dawn_native/InputState.cpp",
        "patchSetId": 6
      },
      "lineNbr": 138,
      "author": {
        "id": 1000017
      },
      "writtenOn": "2019-02-22T12:50:51Z",
      "side": 1,
      "message": "If attribute-\u003eoffset \u003e\u003d kMaxVertexAttributeEnd, then attribute-\u003eoffset + VertexFormatSize (vertex-\u003eformat) is definitely greater than kMaxVertexAttributeEnd. So that situation should be 100% caught by the validation code here.",
      "parentUuid": "e576051e_cf43ecd8",
      "revId": "9c6918027c0813801a51f1aa23f3cc2db7c9a9dd",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "118bc080_d1b9ae0d",
        "filename": "src/dawn_native/InputState.cpp",
        "patchSetId": 6
      },
      "lineNbr": 138,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2019-02-22T13:24:06Z",
      "side": 1,
      "message": "Sorry I didn\u0027t explain this clearly enough. If offset is 0xFFFFFFFF and VertexFormatSize is say 4, then the some of the two is actually the number 3, which would pass validation even if the offset is way too large. We need to check for integer overflow here.\n\nThe new test passes right now because you VertexFormatSize returns size_t and you are compiling in 64bit. It would fail when compiled with 32bits.",
      "parentUuid": "3463ee63_fa9a089d",
      "revId": "9c6918027c0813801a51f1aa23f3cc2db7c9a9dd",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f86bd6ef_a5193707",
        "filename": "src/dawn_native/InputState.cpp",
        "patchSetId": 6
      },
      "lineNbr": 138,
      "author": {
        "id": 1000017
      },
      "writtenOn": "2019-02-22T14:38:51Z",
      "side": 1,
      "message": "Done. \nSorry. I misunderstood you.",
      "parentUuid": "118bc080_d1b9ae0d",
      "revId": "9c6918027c0813801a51f1aa23f3cc2db7c9a9dd",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0dc9b2f6_38cbc3b2",
        "filename": "src/dawn_native/InputState.cpp",
        "patchSetId": 6
      },
      "lineNbr": 139,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2019-02-22T10:18:25Z",
      "side": 1,
      "message": "nit: out of bounds",
      "range": {
        "startLine": 139,
        "startChar": 50,
        "endLine": 139,
        "endChar": 58
      },
      "revId": "9c6918027c0813801a51f1aa23f3cc2db7c9a9dd",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "80f237dd_afc0d728",
        "filename": "src/dawn_native/InputState.cpp",
        "patchSetId": 6
      },
      "lineNbr": 139,
      "author": {
        "id": 1000017
      },
      "writtenOn": "2019-02-22T12:50:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0dc9b2f6_38cbc3b2",
      "range": {
        "startLine": 139,
        "startChar": 50,
        "endLine": 139,
        "endChar": 58
      },
      "revId": "9c6918027c0813801a51f1aa23f3cc2db7c9a9dd",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "07b3301e_1014f851",
        "filename": "src/tests/unittests/validation/InputStateValidationTests.cpp",
        "patchSetId": 6
      },
      "lineNbr": 223,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2019-02-22T10:18:25Z",
      "side": 1,
      "message": "nit: OutOfBounds. We need to make the distinction between OOB where the value is too big, and overflow where arithmetic operations in the validation could have integer overflow, leading validation to wrongly pass.",
      "range": {
        "startLine": 223,
        "startChar": 41,
        "endLine": 223,
        "endChar": 48
      },
      "revId": "9c6918027c0813801a51f1aa23f3cc2db7c9a9dd",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a0f780e9_edf38b72",
        "filename": "src/tests/unittests/validation/InputStateValidationTests.cpp",
        "patchSetId": 6
      },
      "lineNbr": 223,
      "author": {
        "id": 1000017
      },
      "writtenOn": "2019-02-22T12:50:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "07b3301e_1014f851",
      "range": {
        "startLine": 223,
        "startChar": 41,
        "endLine": 223,
        "endChar": 48
      },
      "revId": "9c6918027c0813801a51f1aa23f3cc2db7c9a9dd",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "81376828_c123c975",
        "filename": "src/tests/unittests/validation/InputStateValidationTests.cpp",
        "patchSetId": 6
      },
      "lineNbr": 242,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2019-02-22T10:18:25Z",
      "side": 1,
      "message": "Optionally we could have a test case for offset overflow where it has value std::numeric_limits\u003cuint32_t\u003e::max();",
      "revId": "9c6918027c0813801a51f1aa23f3cc2db7c9a9dd",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a79570da_26ca34e0",
        "filename": "src/tests/unittests/validation/InputStateValidationTests.cpp",
        "patchSetId": 6
      },
      "lineNbr": 242,
      "author": {
        "id": 1000017
      },
      "writtenOn": "2019-02-22T12:50:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "81376828_c123c975",
      "revId": "9c6918027c0813801a51f1aa23f3cc2db7c9a9dd",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    }
  ]
}