{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "04f777ff_bec12b7e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1001591
      },
      "writtenOn": "2021-01-22T23:19:50Z",
      "side": 1,
      "message": "This needs tests, but I wanted to float the code past you really quick to see if there\u0027s any concerns about going this direction.\n\ncwallez@, I know you had said previously that we could split this into a \"createRenderPipeline2\" for simplicity, but honestly this seems to be a far easier change than the BindGroupLayoutEntry update simply because this particular structure can\u0027t reasonably be constructed with an initializer list. As such it seems like having the two layouts live side-by-side in the same structure for a while won\u0027t be very disruptive.",
      "revId": "05e15ed8902359ef1779c568392db13653804165",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f0c96f05_cab729c5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2021-01-23T01:57:35Z",
      "side": 1,
      "message": "Reviewed only dawn.json so far",
      "revId": "05e15ed8902359ef1779c568392db13653804165",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3d0e7b86_5d9e7cd6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-01-25T09:31:57Z",
      "side": 1,
      "message": "Looks good overall. You might want to run this through webgpu-native to gets Dzmitry\u0027s opinion on the new structures etc. You can make your own copy of https://dawn-review.googlesource.com/c/dawn/+/31572 with these changes (and removals of deprecated things), then ninja -C out/Debug dawn_headers and copy out/Debug/gen/src/incude/dawn/webgpu.h to webgpu-native/webgpu.h (not this in-flight PR I just made https://github.com/webgpu-native/webgpu-headers/pull/76 )",
      "revId": "05e15ed8902359ef1779c568392db13653804165",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "50a9674d_ca0b249d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1001591
      },
      "writtenOn": "2021-02-05T23:36:03Z",
      "side": 1,
      "message": "Updated but still a WIP. Had a question about the BlendState",
      "revId": "05e15ed8902359ef1779c568392db13653804165",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5982cc87_b9d5cade",
        "filename": "dawn.json",
        "patchSetId": 1
      },
      "lineNbr": 1499,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2021-01-23T01:57:35Z",
      "side": 1,
      "message": "Should be \"buffer count\"/\"buffers\" according to the latest spec (but we should confirm everyone likes that naming before we settle on it here)",
      "range": {
        "startLine": 1499,
        "startChar": 22,
        "endLine": 1499,
        "endChar": 34
      },
      "revId": "05e15ed8902359ef1779c568392db13653804165",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "66bf6048_d2120667",
        "filename": "dawn.json",
        "patchSetId": 1
      },
      "lineNbr": 1499,
      "author": {
        "id": 1001591
      },
      "writtenOn": "2021-02-05T23:36:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5982cc87_b9d5cade",
      "range": {
        "startLine": 1499,
        "startChar": 22,
        "endLine": 1499,
        "endChar": 34
      },
      "revId": "05e15ed8902359ef1779c568392db13653804165",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "593d801b_fba82be0",
        "filename": "dawn.json",
        "patchSetId": 1
      },
      "lineNbr": 1500,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2021-01-23T01:57:35Z",
      "side": 1,
      "message": "The JS spec allows this array to have holes, but I don\u0027t think it\u0027s possible in the (old or new) C API. Now seems like the time to do something about this. Some options:\n\n- Array of pointers (gross)\n- Don\u0027t make it sparse, instead add a \"slot\" field to VertexBufferLayout (like BindGroupLayoutDescriptor.entries)\n- Use the default-initialized VertexBufferLayout value to indicate an unused vertex buffer (by checking attributeCount\u003d\u003d0 and/or stepMode\u003d\u003dUndefined)",
      "revId": "05e15ed8902359ef1779c568392db13653804165",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "11a59b6b_40d543ca",
        "filename": "dawn.json",
        "patchSetId": 1
      },
      "lineNbr": 1500,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2021-01-23T01:57:35Z",
      "side": 1,
      "message": "Is this meant to be just \"vertex buffer layout\"?",
      "range": {
        "startLine": 1500,
        "startChar": 47,
        "endLine": 1500,
        "endChar": 78
      },
      "revId": "05e15ed8902359ef1779c568392db13653804165",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "98b28dfe_fb432ce2",
        "filename": "dawn.json",
        "patchSetId": 1
      },
      "lineNbr": 1500,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-01-25T09:31:57Z",
      "side": 1,
      "message": "The latter seems the most practical one.",
      "parentUuid": "593d801b_fba82be0",
      "revId": "05e15ed8902359ef1779c568392db13653804165",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "32c943dd_72cabb71",
        "filename": "dawn.json",
        "patchSetId": 1
      },
      "lineNbr": 1500,
      "author": {
        "id": 1001591
      },
      "writtenOn": "2021-02-05T23:36:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "11a59b6b_40d543ca",
      "range": {
        "startLine": 1500,
        "startChar": 47,
        "endLine": 1500,
        "endChar": 78
      },
      "revId": "05e15ed8902359ef1779c568392db13653804165",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4f3354c9_adb8f53a",
        "filename": "dawn.json",
        "patchSetId": 1
      },
      "lineNbr": 1503,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-01-25T09:31:57Z",
      "side": 1,
      "message": "nit: we could just rename \"vertex buffer layout descriptor\" and add typedefs in the headers.",
      "revId": "05e15ed8902359ef1779c568392db13653804165",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "af1c7bbc_1376d036",
        "filename": "dawn.json",
        "patchSetId": 1
      },
      "lineNbr": 1503,
      "author": {
        "id": 1001591
      },
      "writtenOn": "2021-02-05T23:36:03Z",
      "side": 1,
      "message": "Done in https://dawn-review.googlesource.com/c/dawn/+/40581",
      "parentUuid": "4f3354c9_adb8f53a",
      "revId": "05e15ed8902359ef1779c568392db13653804165",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b430c0cf_a388f748",
        "filename": "dawn.json",
        "patchSetId": 1
      },
      "lineNbr": 1510,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2021-01-23T01:57:35Z",
      "side": 1,
      "message": "just \"vertex attribute\"?",
      "range": {
        "startLine": 1510,
        "startChar": 44,
        "endLine": 1510,
        "endChar": 71
      },
      "revId": "05e15ed8902359ef1779c568392db13653804165",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8d98f89d_1d593712",
        "filename": "dawn.json",
        "patchSetId": 1
      },
      "lineNbr": 1510,
      "author": {
        "id": 1001591
      },
      "writtenOn": "2021-02-05T23:36:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b430c0cf_a388f748",
      "range": {
        "startLine": 1510,
        "startChar": 44,
        "endLine": 1510,
        "endChar": 71
      },
      "revId": "05e15ed8902359ef1779c568392db13653804165",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "270f3135_6d21fd8e",
        "filename": "dawn.json",
        "patchSetId": 1
      },
      "lineNbr": 1513,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-01-25T09:31:57Z",
      "side": 1,
      "message": "ditto for rename + typedefs.",
      "revId": "05e15ed8902359ef1779c568392db13653804165",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "453702ed_98a6e162",
        "filename": "dawn.json",
        "patchSetId": 1
      },
      "lineNbr": 1513,
      "author": {
        "id": 1001591
      },
      "writtenOn": "2021-02-05T23:36:03Z",
      "side": 1,
      "message": "Done in https://dawn-review.googlesource.com/c/dawn/+/40581",
      "parentUuid": "270f3135_6d21fd8e",
      "revId": "05e15ed8902359ef1779c568392db13653804165",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "24630c29_61638fe1",
        "filename": "dawn.json",
        "patchSetId": 1
      },
      "lineNbr": 1527,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2021-01-23T01:57:35Z",
      "side": 1,
      "message": "should default to triangle list",
      "revId": "05e15ed8902359ef1779c568392db13653804165",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "49508c0f_b824857a",
        "filename": "dawn.json",
        "patchSetId": 1
      },
      "lineNbr": 1527,
      "author": {
        "id": 1001591
      },
      "writtenOn": "2021-02-05T23:36:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "24630c29_61638fe1",
      "revId": "05e15ed8902359ef1779c568392db13653804165",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3e570397_45b8b283",
        "filename": "dawn.json",
        "patchSetId": 1
      },
      "lineNbr": 1542,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2021-01-23T01:57:35Z",
      "side": 1,
      "message": "Upstream this is GPUStencilFaceState, we should probably have the updated name now (can probably just rename it and typedef WGPUStencilStateFaceDescriptor to it)",
      "range": {
        "startLine": 1542,
        "startChar": 46,
        "endLine": 1542,
        "endChar": 75
      },
      "revId": "05e15ed8902359ef1779c568392db13653804165",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c1d0bb5b_79be4702",
        "filename": "dawn.json",
        "patchSetId": 1
      },
      "lineNbr": 1542,
      "author": {
        "id": 1001591
      },
      "writtenOn": "2021-02-05T23:36:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3e570397_45b8b283",
      "range": {
        "startLine": 1542,
        "startChar": 46,
        "endLine": 1542,
        "endChar": 75
      },
      "revId": "05e15ed8902359ef1779c568392db13653804165",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0d6a4e59_04fc9776",
        "filename": "dawn.json",
        "patchSetId": 1
      },
      "lineNbr": 1568,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2021-01-23T01:57:35Z",
      "side": 1,
      "message": "also renamed upstream",
      "range": {
        "startLine": 1568,
        "startChar": 22,
        "endLine": 1568,
        "endChar": 36
      },
      "revId": "05e15ed8902359ef1779c568392db13653804165",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3b6d5223_520ca979",
        "filename": "dawn.json",
        "patchSetId": 1
      },
      "lineNbr": 1568,
      "author": {
        "id": 1001591
      },
      "writtenOn": "2021-02-05T23:36:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0d6a4e59_04fc9776",
      "range": {
        "startLine": 1568,
        "startChar": 22,
        "endLine": 1568,
        "endChar": 36
      },
      "revId": "05e15ed8902359ef1779c568392db13653804165",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3a6dba5c_952ab19d",
        "filename": "dawn.json",
        "patchSetId": 1
      },
      "lineNbr": 1576,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2021-01-23T01:57:35Z",
      "side": 1,
      "message": "This member needs to be nullable (and default to null)",
      "revId": "05e15ed8902359ef1779c568392db13653804165",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "192ad73d_1fb22ba1",
        "filename": "dawn.json",
        "patchSetId": 1
      },
      "lineNbr": 1576,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-01-25T09:31:57Z",
      "side": 1,
      "message": "Is there no better idiomatic way to do it? I\u0027m a bit worried that this very common thing will require even more pointer indirection. But maybe there\u0027s no othe way.",
      "parentUuid": "3a6dba5c_952ab19d",
      "revId": "05e15ed8902359ef1779c568392db13653804165",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "63245dc0_8cdf47d2",
        "filename": "dawn.json",
        "patchSetId": 1
      },
      "lineNbr": 1576,
      "author": {
        "id": 1001591
      },
      "writtenOn": "2021-02-05T23:36:03Z",
      "side": 1,
      "message": "Changed, but doesn\u0027t this fall into the same category as the other non-optional items below? Since every member of the structure has defaults?",
      "parentUuid": "192ad73d_1fb22ba1",
      "revId": "05e15ed8902359ef1779c568392db13653804165",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "60383532_867a3f8b",
        "filename": "dawn.json",
        "patchSetId": 1
      },
      "lineNbr": 1576,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2021-02-06T01:46:15Z",
      "side": 1,
      "message": "no, in IDL this is\n\n GPUBlendState blend;\n\nas opposed to\n\n GPUBlendState blend \u003d {};\n\n. And note that GPUBlendComponent has default values but GPUBlendState does not.\n\nThis member is \"nullable\" because we use .blend\u003d\u003dundefined to mean \"blending is disabled\". Once upon a time, we represented this with the default values (\u0027one\u0027, \u0027zero\u0027, \u0027add\u0027), but there was some reason that we had to add explicit blend enable/disable.\n\nIn C we could remove the indirection by adding a member \"bool enabled\" to WGPUBlendState. If we do that we should probably validate that \"if not .enabled, .color and .alpha must be set to defaults\" to avoid confusion.",
      "parentUuid": "63245dc0_8cdf47d2",
      "revId": "05e15ed8902359ef1779c568392db13653804165",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e8ecdd2a_03f845c6",
        "filename": "dawn.json",
        "patchSetId": 1
      },
      "lineNbr": 1576,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-02-08T13:24:03Z",
      "side": 1,
      "message": "I have a slight preference for the `bool enabled` because it reduces the number of indirections in the C/C++ API but both options are fine (the const* or additional bool). We should check with Dzmitry in webgpu-native.",
      "parentUuid": "60383532_867a3f8b",
      "revId": "05e15ed8902359ef1779c568392db13653804165",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cab950dc_0feb5e9a",
        "filename": "dawn.json",
        "patchSetId": 1
      },
      "lineNbr": 1576,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-03-08T13:20:18Z",
      "side": 1,
      "message": "Opened https://github.com/webgpu-native/webgpu-headers/pull/81 for this.",
      "parentUuid": "e8ecdd2a_03f845c6",
      "revId": "05e15ed8902359ef1779c568392db13653804165",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "53c8fb10_7b0f525f",
        "filename": "dawn.json",
        "patchSetId": 1
      },
      "lineNbr": 1618,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2021-01-23T01:57:35Z",
      "side": 1,
      "message": "I don\u0027t think this needs to be pointerized - it\u0027s not optional, it defaults to the default value {} in JS.",
      "revId": "05e15ed8902359ef1779c568392db13653804165",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8bccf460_a06ff731",
        "filename": "dawn.json",
        "patchSetId": 1
      },
      "lineNbr": 1618,
      "author": {
        "id": 1001591
      },
      "writtenOn": "2021-02-05T23:36:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "53c8fb10_7b0f525f",
      "revId": "05e15ed8902359ef1779c568392db13653804165",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a8c068d0_807a8a5c",
        "filename": "dawn.json",
        "patchSetId": 1
      },
      "lineNbr": 1619,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2021-01-23T01:57:35Z",
      "side": 1,
      "message": "Probably makes sense to represent \"unspecified\" here with the default value (.format\u003d\u003dUndefined etc) instead of having a pointer indirection.",
      "revId": "05e15ed8902359ef1779c568392db13653804165",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e4bf45f1_f2dd7aa5",
        "filename": "dawn.json",
        "patchSetId": 1
      },
      "lineNbr": 1619,
      "author": {
        "id": 1001591
      },
      "writtenOn": "2021-02-05T23:36:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a8c068d0_807a8a5c",
      "revId": "05e15ed8902359ef1779c568392db13653804165",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e7a64670_42b25a16",
        "filename": "dawn.json",
        "patchSetId": 1
      },
      "lineNbr": 1620,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2021-01-23T01:57:35Z",
      "side": 1,
      "message": "same, not optional, defaults to {}",
      "revId": "05e15ed8902359ef1779c568392db13653804165",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "88145739_8d128f59",
        "filename": "dawn.json",
        "patchSetId": 1
      },
      "lineNbr": 1620,
      "author": {
        "id": 1001591
      },
      "writtenOn": "2021-02-05T23:36:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e7a64670_42b25a16",
      "revId": "05e15ed8902359ef1779c568392db13653804165",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "71a5d54d_51b2e339",
        "filename": "dawn.json",
        "patchSetId": 1
      },
      "lineNbr": 1621,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2021-01-23T01:57:35Z",
      "side": 1,
      "message": "same, probably makes sense to represent \"unspecified\" here with the default value (.module\u003d\u003dnullptr etc) instead of having a pointer indirection.",
      "revId": "05e15ed8902359ef1779c568392db13653804165",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "04451820_f74b0272",
        "filename": "dawn.json",
        "patchSetId": 1
      },
      "lineNbr": 1621,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-01-25T09:31:57Z",
      "side": 1,
      "message": "Yes, that\u0027s actually something we wanted to fix for a while (removing the pointer indirection for fragment) so we might as well do it now.",
      "parentUuid": "71a5d54d_51b2e339",
      "revId": "05e15ed8902359ef1779c568392db13653804165",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8a28f6ed_753e75a9",
        "filename": "dawn.json",
        "patchSetId": 1
      },
      "lineNbr": 1621,
      "author": {
        "id": 1001591
      },
      "writtenOn": "2021-02-05T23:36:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "04451820_f74b0272",
      "revId": "05e15ed8902359ef1779c568392db13653804165",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c7a2902e_be9ba0b3",
        "filename": "src/dawn_native/RenderPipeline.h",
        "patchSetId": 1
      },
      "lineNbr": 36,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-01-25T09:31:57Z",
      "side": 1,
      "message": "nit: stray definition",
      "revId": "05e15ed8902359ef1779c568392db13653804165",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dc753c52_d4a9e6e6",
        "filename": "src/dawn_native/RenderPipeline.h",
        "patchSetId": 1
      },
      "lineNbr": 36,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-03-08T13:25:46Z",
      "side": 1,
      "message": "declaration*",
      "parentUuid": "c7a2902e_be9ba0b3",
      "revId": "05e15ed8902359ef1779c568392db13653804165",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}