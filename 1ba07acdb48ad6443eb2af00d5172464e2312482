{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "a61b0908_9df4fe4a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1002361
      },
      "writtenOn": "2023-08-23T13:44:28Z",
      "side": 1,
      "message": "Is this the main reason for this change? Or is it to reduce binary size? Note that using std::function\u003c\u003e can impact performance as it may heap allocate depending on the size of the function object. Further, swapping out the template arg for a std::function removes inlining opportunities.\n\nIf the goal is to reduce binary size, can you please use Bloaty or something to show the savings? If the goal is to make the function type more clear, then using std::function is not the best way, as it\u0027s an owning type (with storage). We would need something like [LLVM\u0027s function_ref](https://llvm.org/doxygen/STLFunctionalExtras_8h_source.html).",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 66
      },
      "revId": "1ba07acdb48ad6443eb2af00d5172464e2312482",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ee07ff2b_58192f42",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2023-08-22T19:18:41Z",
      "side": 1,
      "message": "PTAL.",
      "revId": "1ba07acdb48ad6443eb2af00d5172464e2312482",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fe5116ee_1771e1dd",
        "filename": "src/tint/lang/core/constant/eval.cc",
        "patchSetId": 1
      },
      "lineNbr": 514,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2023-08-23T09:27:26Z",
      "side": 1,
      "message": "Surprised doxygen isn\u0027t moaning here. Please add a comment.",
      "range": {
        "startLine": 514,
        "startChar": 0,
        "endLine": 514,
        "endChar": 21
      },
      "revId": "1ba07acdb48ad6443eb2af00d5172464e2312482",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9d4c9829_9c837da5",
        "filename": "src/tint/lang/core/constant/eval.cc",
        "patchSetId": 1
      },
      "lineNbr": 522,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2023-08-23T09:27:26Z",
      "side": 1,
      "message": "`const BinaryTransform\u0026`",
      "range": {
        "startLine": 522,
        "startChar": 51,
        "endLine": 522,
        "endChar": 68
      },
      "revId": "1ba07acdb48ad6443eb2af00d5172464e2312482",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "58634658_40a15da7",
        "filename": "src/tint/lang/core/constant/eval.cc",
        "patchSetId": 1
      },
      "lineNbr": 545,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2023-08-23T09:27:26Z",
      "side": 1,
      "message": "`f`",
      "range": {
        "startLine": 545,
        "startChar": 33,
        "endLine": 545,
        "endChar": 65
      },
      "revId": "1ba07acdb48ad6443eb2af00d5172464e2312482",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}