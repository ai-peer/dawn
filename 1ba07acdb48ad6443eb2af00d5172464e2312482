{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "a61b0908_9df4fe4a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1002361
      },
      "writtenOn": "2023-08-23T13:44:28Z",
      "side": 1,
      "message": "Is this the main reason for this change? Or is it to reduce binary size? Note that using std::function\u003c\u003e can impact performance as it may heap allocate depending on the size of the function object. Further, swapping out the template arg for a std::function removes inlining opportunities.\n\nIf the goal is to reduce binary size, can you please use Bloaty or something to show the savings? If the goal is to make the function type more clear, then using std::function is not the best way, as it\u0027s an owning type (with storage). We would need something like [LLVM\u0027s function_ref](https://llvm.org/doxygen/STLFunctionalExtras_8h_source.html).",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 66
      },
      "revId": "1ba07acdb48ad6443eb2af00d5172464e2312482",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "09d25a2c_a28ef42d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2023-08-23T13:48:18Z",
      "side": 1,
      "message": "There are 65 separate copies of this function in the current chrome canary. One for each template usage. Each of those copies takes .25kb of space in the binary for a total of ~16k.\n\nAccording to perfmon, there does not appear to be any impact on performance from making this change.",
      "parentUuid": "a61b0908_9df4fe4a",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 66
      },
      "revId": "1ba07acdb48ad6443eb2af00d5172464e2312482",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "542af003_50cf2861",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1002361
      },
      "writtenOn": "2023-08-23T13:49:13Z",
      "side": 1,
      "message": "Just to make sure, you\u0027ve seen the binary size drop 16K? If so, please mention it in this commit comment.",
      "parentUuid": "09d25a2c_a28ef42d",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 66
      },
      "revId": "1ba07acdb48ad6443eb2af00d5172464e2312482",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e1dde608_2f9c3ca9",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2023-08-23T13:54:00Z",
      "side": 1,
      "message": "I can see binary size differences in my local build, but I don\u0027t know all the flags used to build canary so I don\u0027t know how much it will/could drop. I need to wait for a canary and then diff the results.",
      "parentUuid": "542af003_50cf2861",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 66
      },
      "revId": "1ba07acdb48ad6443eb2af00d5172464e2312482",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bbdfc5d1_58e16d26",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1002361
      },
      "writtenOn": "2023-08-23T13:55:17Z",
      "side": 1,
      "message": "It\u0027s totally fine to stage the difference from your local build. Just so that we get an idea for the order of difference this is making (like state the percentage drop of the file size).",
      "parentUuid": "e1dde608_2f9c3ca9",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 66
      },
      "revId": "1ba07acdb48ad6443eb2af00d5172464e2312482",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ee07ff2b_58192f42",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2023-08-22T19:18:41Z",
      "side": 1,
      "message": "PTAL.",
      "revId": "1ba07acdb48ad6443eb2af00d5172464e2312482",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fe5116ee_1771e1dd",
        "filename": "src/tint/lang/core/constant/eval.cc",
        "patchSetId": 1
      },
      "lineNbr": 514,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2023-08-23T09:27:26Z",
      "side": 1,
      "message": "Surprised doxygen isn\u0027t moaning here. Please add a comment.",
      "range": {
        "startLine": 514,
        "startChar": 0,
        "endLine": 514,
        "endChar": 21
      },
      "revId": "1ba07acdb48ad6443eb2af00d5172464e2312482",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "78447375_442f0c4b",
        "filename": "src/tint/lang/core/constant/eval.cc",
        "patchSetId": 1
      },
      "lineNbr": 514,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2023-08-23T14:01:43Z",
      "side": 1,
      "message": "I don\u0027t believe doxygen cares about methods inside an anonymous namespace inside a cc file.",
      "parentUuid": "fe5116ee_1771e1dd",
      "range": {
        "startLine": 514,
        "startChar": 0,
        "endLine": 514,
        "endChar": 21
      },
      "revId": "1ba07acdb48ad6443eb2af00d5172464e2312482",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "497c78cf_f0b989a4",
        "filename": "src/tint/lang/core/constant/eval.cc",
        "patchSetId": 1
      },
      "lineNbr": 514,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2023-08-23T14:04:27Z",
      "side": 1,
      "message": "I\u0027m fairly sure I\u0027ve seen it moan about this scoping before. We have bits of the codebase where doxygen ignores code for some reason (I suspect something in headers it doesn\u0027t like that infects `cc` files).\nThanks for the change.",
      "parentUuid": "78447375_442f0c4b",
      "range": {
        "startLine": 514,
        "startChar": 0,
        "endLine": 514,
        "endChar": 21
      },
      "revId": "1ba07acdb48ad6443eb2af00d5172464e2312482",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9d4c9829_9c837da5",
        "filename": "src/tint/lang/core/constant/eval.cc",
        "patchSetId": 1
      },
      "lineNbr": 522,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2023-08-23T09:27:26Z",
      "side": 1,
      "message": "`const BinaryTransform\u0026`",
      "range": {
        "startLine": 522,
        "startChar": 51,
        "endLine": 522,
        "endChar": 68
      },
      "revId": "1ba07acdb48ad6443eb2af00d5172464e2312482",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "60483194_9bdb8a2a",
        "filename": "src/tint/lang/core/constant/eval.cc",
        "patchSetId": 1
      },
      "lineNbr": 522,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2023-08-23T14:01:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9d4c9829_9c837da5",
      "range": {
        "startLine": 522,
        "startChar": 51,
        "endLine": 522,
        "endChar": 68
      },
      "revId": "1ba07acdb48ad6443eb2af00d5172464e2312482",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "58634658_40a15da7",
        "filename": "src/tint/lang/core/constant/eval.cc",
        "patchSetId": 1
      },
      "lineNbr": 545,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2023-08-23T09:27:26Z",
      "side": 1,
      "message": "`f`",
      "range": {
        "startLine": 545,
        "startChar": 33,
        "endLine": 545,
        "endChar": 65
      },
      "revId": "1ba07acdb48ad6443eb2af00d5172464e2312482",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "03f59645_5b0690db",
        "filename": "src/tint/lang/core/constant/eval.cc",
        "patchSetId": 1
      },
      "lineNbr": 545,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2023-08-23T14:01:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "58634658_40a15da7",
      "range": {
        "startLine": 545,
        "startChar": 33,
        "endLine": 545,
        "endChar": 65
      },
      "revId": "1ba07acdb48ad6443eb2af00d5172464e2312482",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}