{
  "comments": [
    {
      "key": {
        "uuid": "d7573e44_8fa5f43f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 12
      },
      "lineNbr": 0,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-09-30T23:54:00Z",
      "side": 1,
      "message": "LGTM",
      "revId": "a83dd9aa416a6e5f8676d74e7b482a81346a858a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "119b0b5e_ef9309ba",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 12
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-10-01T10:00:44Z",
      "side": 1,
      "message": "LGTM overall!",
      "revId": "a83dd9aa416a6e5f8676d74e7b482a81346a858a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d08aff74_d7e95d28",
        "filename": "src/tests/end2end/DepthBiasTests.cpp",
        "patchSetId": 12
      },
      "lineNbr": 17,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-09-30T23:54:00Z",
      "side": 1,
      "message": "this #include should be below the dawn includes, in with newlines between them so it\u0027s in a different \"block\"",
      "range": {
        "startLine": 17,
        "startChar": 0,
        "endLine": 17,
        "endChar": 16
      },
      "revId": "a83dd9aa416a6e5f8676d74e7b482a81346a858a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7bf3829f_b637f00c",
        "filename": "src/tests/end2end/DepthBiasTests.cpp",
        "patchSetId": 12
      },
      "lineNbr": 46,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-09-30T23:54:00Z",
      "side": 1,
      "message": "typo: biasClamp",
      "range": {
        "startLine": 46,
        "startChar": 32,
        "endLine": 46,
        "endChar": 40
      },
      "revId": "a83dd9aa416a6e5f8676d74e7b482a81346a858a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "685bcef5_fb8c3414",
        "filename": "src/tests/end2end/DepthBiasTests.cpp",
        "patchSetId": 12
      },
      "lineNbr": 49,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-10-01T10:00:44Z",
      "side": 1,
      "message": "Any reason why the quad is in the bottom left quadrant only?",
      "revId": "a83dd9aa416a6e5f8676d74e7b482a81346a858a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2c89313a_c91c27f7",
        "filename": "src/tests/end2end/DepthBiasTests.cpp",
        "patchSetId": 12
      },
      "lineNbr": 85,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-10-01T10:00:44Z",
      "side": 1,
      "message": "u-nit: you can do .size \u003d {kRTSize, kRTSize, 1};",
      "revId": "a83dd9aa416a6e5f8676d74e7b482a81346a858a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "16a39f61_4ad6757d",
        "filename": "src/tests/end2end/DepthBiasTests.cpp",
        "patchSetId": 12
      },
      "lineNbr": 90,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-09-30T23:54:00Z",
      "side": 1,
      "message": "nit: sampleCount and mipLevelCount default to 1, dimension defaults to 2D (if you \u003d {})",
      "revId": "a83dd9aa416a6e5f8676d74e7b482a81346a858a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0457a6b6_6703a2d4",
        "filename": "src/tests/end2end/DepthBiasTests.cpp",
        "patchSetId": 12
      },
      "lineNbr": 90,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-10-01T10:00:44Z",
      "side": 1,
      "message": "Even without {} for the wgpu:: type.",
      "parentUuid": "16a39f61_4ad6757d",
      "revId": "a83dd9aa416a6e5f8676d74e7b482a81346a858a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eacaf04e_ccfdb6e1",
        "filename": "src/tests/end2end/DepthBiasTests.cpp",
        "patchSetId": 12
      },
      "lineNbr": 108,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-09-30T23:54:00Z",
      "side": 1,
      "message": "nit: this is the default",
      "revId": "a83dd9aa416a6e5f8676d74e7b482a81346a858a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "82189a4f_d9a3f9f6",
        "filename": "src/tests/end2end/DepthBiasTests.cpp",
        "patchSetId": 12
      },
      "lineNbr": 112,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-09-30T23:54:00Z",
      "side": 1,
      "message": "nit: can depthCompare be Always? (the default)",
      "revId": "a83dd9aa416a6e5f8676d74e7b482a81346a858a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a08c1ca2_abb6bd06",
        "filename": "src/tests/end2end/DepthBiasTests.cpp",
        "patchSetId": 12
      },
      "lineNbr": 139,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-10-01T10:00:44Z",
      "side": 1,
      "message": "nit: these two modules aren\u0027t used outside of RunDepthBiasTest so they don\u0027t need to be member variables.",
      "revId": "a83dd9aa416a6e5f8676d74e7b482a81346a858a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "647e2494_2c38f0d7",
        "filename": "src/tests/end2end/DepthBiasTests.cpp",
        "patchSetId": 12
      },
      "lineNbr": 145,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-09-30T23:54:00Z",
      "side": 1,
      "message": "tests are nice to read :) overall, should we also test:\n - negative slope scales\n - negative biases\n - non-identity slopes\n?\n\nAnd, what happens with inf / nan? is the behavior specified / consistent or should we have validation for it?",
      "revId": "a83dd9aa416a6e5f8676d74e7b482a81346a858a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "96916815_cc9707ce",
        "filename": "src/tests/end2end/DepthBiasTests.cpp",
        "patchSetId": 12
      },
      "lineNbr": 149,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-10-01T10:00:44Z",
      "side": 1,
      "message": "That\u0027s really unfortunate. Does it fail on NVIDIA on all APIs? Is there a workaround we could add?\n\nI\u0027m looking to see if there are depth bias tests in the Vulkan CTS, and will file a bug there if there are none so hopefully NVIDIA fixes their implementation.",
      "revId": "a83dd9aa416a6e5f8676d74e7b482a81346a858a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "82ba05c9_e3c5faa9",
        "filename": "src/tests/end2end/DepthBiasTests.cpp",
        "patchSetId": 12
      },
      "lineNbr": 170,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-09-30T23:54:00Z",
      "side": 1,
      "message": "typo: clamp",
      "range": {
        "startLine": 170,
        "startChar": 46,
        "endLine": 170,
        "endChar": 50
      },
      "revId": "a83dd9aa416a6e5f8676d74e7b482a81346a858a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2493b0bc_871612d6",
        "filename": "src/tests/end2end/DepthBiasTests.cpp",
        "patchSetId": 12
      },
      "lineNbr": 192,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-10-01T10:00:44Z",
      "side": 1,
      "message": "Can we have a test case with QuadAngle::TiltedX and no depth bias to control that the values are the expected 0.5, 0.5, 0.0, 0.0?",
      "revId": "a83dd9aa416a6e5f8676d74e7b482a81346a858a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "38b2a7da_e39f9ebd",
        "filename": "src/tests/end2end/DepthBiasTests.cpp",
        "patchSetId": 12
      },
      "lineNbr": 193,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-09-30T23:54:00Z",
      "side": 1,
      "message": "typo: slope",
      "range": {
        "startLine": 193,
        "startChar": 60,
        "endLine": 193,
        "endChar": 64
      },
      "revId": "a83dd9aa416a6e5f8676d74e7b482a81346a858a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e4e84db0_af809405",
        "filename": "src/tests/end2end/DepthBiasTests.cpp",
        "patchSetId": 12
      },
      "lineNbr": 222,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-10-01T10:00:44Z",
      "side": 1,
      "message": "Using the clearing to know the depth value is a bit roundabout, hopefully we\u0027re soon able to sample from depth textures to simplify tests like this one.",
      "revId": "a83dd9aa416a6e5f8676d74e7b482a81346a858a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2163d974_13b96341",
        "filename": "src/tests/end2end/DepthBiasTests.cpp",
        "patchSetId": 12
      },
      "lineNbr": 259,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-10-01T10:00:44Z",
      "side": 1,
      "message": "nit: It\u0027s probably easy to implement the feature in OpenGL (without the clamping) using glPolygonOffset.",
      "revId": "a83dd9aa416a6e5f8676d74e7b482a81346a858a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    }
  ]
}