{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "b66a4102_c27de5ec",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2024-06-25T13:09:53Z",
      "side": 1,
      "message": "PTAL, I tried using absl flags for SampleUtils to see what it would be like. It\u0027s not terrible but has some drawbacks. Let me know how you\u0027d like to proceed.",
      "revId": "dd783c37454beb893bdb9e468a302311ef4dbd21",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "818ec0d2_15d07032",
        "filename": "src/dawn/samples/SampleUtils.cpp",
        "patchSetId": 1
      },
      "lineNbr": 243,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2024-06-25T13:09:53Z",
      "side": 1,
      "message": "This would be put something like in `src/dawn/utils/AbslFlags.h/.cpp`.",
      "revId": "dd783c37454beb893bdb9e468a302311ef4dbd21",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "029b4538_8d4bd98a",
        "filename": "src/dawn/samples/SampleUtils.cpp",
        "patchSetId": 1
      },
      "lineNbr": 338,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2024-06-25T13:09:53Z",
      "side": 1,
      "message": "Drawbacks from absl flags are:\n\n - No short form flags.\n - Flags must be a valid C++ identifier (so we\u0027ll need to change some things from `--enable-toggles` to `--enable_toggles` if we port test binaries to absl).\n - The help is only shown with helpfull. (can be changed with [usage_config.h](https://source.chromium.org/chromium/chromium/src/+/main:third_party/abseil-cpp/absl/flags/usage_config.h;drc\u003dde6be036b973630be07359349fd5f40d6f2ee1e3;l\u003d114))",
      "revId": "dd783c37454beb893bdb9e468a302311ef4dbd21",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e980ae6b_0de096a1",
        "filename": "src/dawn/samples/SampleUtils.cpp",
        "patchSetId": 1
      },
      "lineNbr": 338,
      "author": {
        "id": 1003216
      },
      "writtenOn": "2024-06-25T13:28:06Z",
      "side": 1,
      "message": "From the Tint side, those drawbacks seems large. We use both short forms and non-identifier tag names. The `tint` binary is used in a bunch of places so I\u0027d be very hesitant about changing all the flag names.\n\nSo, this may work for Dawn, but we\u0027ll probably continue to have our own parser on the Tint side.",
      "parentUuid": "029b4538_8d4bd98a",
      "revId": "dd783c37454beb893bdb9e468a302311ef4dbd21",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8b6ec607_87f2b1e5",
        "filename": "src/dawn/samples/SampleUtils.cpp",
        "patchSetId": 1
      },
      "lineNbr": 338,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2024-06-26T12:49:56Z",
      "side": 1,
      "message": "Dan, chatting with Austin, he has a small preferences for Absl. What do you think of having a small wrapper around Absl that knows to replaces some flags by tweaking argv directly? Something like:\n\n```\nParseCommandLineWithAliases(argc, argv, {\n   {\"-a\", \"--adapter_type\"},\n   {\"-b\", \"--backend\"},\n});\n```",
      "parentUuid": "e980ae6b_0de096a1",
      "revId": "dd783c37454beb893bdb9e468a302311ef4dbd21",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c569b6db_681eb6c1",
        "filename": "src/dawn/samples/SampleUtils.cpp",
        "patchSetId": 1
      },
      "lineNbr": 338,
      "author": {
        "id": 1003216
      },
      "writtenOn": "2024-06-26T12:52:06Z",
      "side": 1,
      "message": "Does absl really provide that much when you\u0027ve now got to parse and re-write the flags? For Tint, where we already have a parser, the effort of switching doesn\u0027t seem worth the benefit.",
      "parentUuid": "8b6ec607_87f2b1e5",
      "revId": "dd783c37454beb893bdb9e468a302311ef4dbd21",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "912f92cf_add08f6f",
        "filename": "src/dawn/samples/SampleUtils.cpp",
        "patchSetId": 1
      },
      "lineNbr": 338,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2024-06-26T12:55:09Z",
      "side": 1,
      "message": "It provides consistency with the rest of Google projects, and the aliasing is fairly simple to implement. I don\u0027t have a strong opinion either way, but it\u0027d be nice to have a way forward that could eventually work for both Tint and Dawn (so we can share that code in `src/utils`).",
      "parentUuid": "c569b6db_681eb6c1",
      "revId": "dd783c37454beb893bdb9e468a302311ef4dbd21",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2e664323_267fa110",
        "filename": "third_party/gn/abseil-cpp/BUILD.gn",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2024-06-25T13:09:53Z",
      "side": 1,
      "message": "Changes to this file would be in a separate CL.",
      "revId": "dd783c37454beb893bdb9e468a302311ef4dbd21",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}