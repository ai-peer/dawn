{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "e1862cab_71f16cfb",
        "filename": "src/dawn_native/CommandEncoder.cpp",
        "patchSetId": 4
      },
      "lineNbr": 477,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-11-03T14:01:48Z",
      "side": 1,
      "message": "This method would disappear.",
      "revId": "de0fc5fa5708a498ba8101ea0ae0b0f42144f89e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "83aba15c_a86b5349",
        "filename": "src/dawn_native/CommandEncoder.h",
        "patchSetId": 4
      },
      "lineNbr": 37,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-11-03T14:01:48Z",
      "side": 1,
      "message": "I don\u0027t think we need Active: there can be at most one active occlusion query and at most on active pipeline statistics query, so the render pass encoder can remember which one is currently active, if any. So all we need is a boolean. We could call the map QueryAvailabilityMap.",
      "revId": "de0fc5fa5708a498ba8101ea0ae0b0f42144f89e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1790d43f_f8e9e0f5",
        "filename": "src/dawn_native/CommandEncoder.h",
        "patchSetId": 4
      },
      "lineNbr": 37,
      "author": {
        "id": 1000030
      },
      "writtenOn": "2020-11-04T07:48:20Z",
      "side": 1,
      "message": "Do you mean we can have another map to track the active queries in render pass? If that we need to track same query in the two maps (command encoder\u0027s and render pass\u0027s), and traverse map and senquence twice for each query index, but if we add Active, just once.",
      "parentUuid": "83aba15c_a86b5349",
      "revId": "de0fc5fa5708a498ba8101ea0ae0b0f42144f89e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "11c3b9fd_64627c6a",
        "filename": "src/dawn_native/CommandEncoder.h",
        "patchSetId": 4
      },
      "lineNbr": 37,
      "author": {
        "id": 1000030
      },
      "writtenOn": "2020-11-04T09:57:46Z",
      "side": 1,
      "message": "Like you said, if we have two maps, one is tracking unused queries in command encoder, another is tracking active queries in render encoder, then we need to do the steps in render pass when tracking the query index and active query in each call of begin operation: 1, find the vector of bool for the query set in the map; 2, update the value at queryIndex in the vector. In validation, we also need to  traverse the vectors in both of two maps to detect whether the queries is active or used.\n\nBut if we have the QueryState and add a QueryStateMap in render pass, we can just use the QueryStateMap on render pass for tracking and validating, we can reduce the research of map and the index of vector for each begin operation for one time. When the pass is ended, move the tracking data to command encoder.",
      "parentUuid": "1790d43f_f8e9e0f5",
      "revId": "de0fc5fa5708a498ba8101ea0ae0b0f42144f89e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "af6f05e8_364f12a6",
        "filename": "src/dawn_native/CommandEncoder.h",
        "patchSetId": 4
      },
      "lineNbr": 37,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-11-04T11:22:51Z",
      "side": 1,
      "message": "Thank you for your thoughts.\n\nI agree that there\u0027s a bit of a duplicated map lookup for RenderPassEncoder::Begin... but doing so let\u0027s us avoid merging the data on endPass which is expensive because it is O(sum(size of query sets)) and it also makes the query maps std::vector\u003cbool\u003e which has a very compact representation and should be faster to manipulate.\n\nIt\u0027s a bit of a tradeoff, but since it isn\u0027t super clear what side is better, I think we should aim, for as much code simplicity as possible, and this means the duplicate maps.",
      "parentUuid": "11c3b9fd_64627c6a",
      "revId": "de0fc5fa5708a498ba8101ea0ae0b0f42144f89e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fd6cb4e1_6b7f6dca",
        "filename": "src/dawn_native/CommandEncoder.h",
        "patchSetId": 4
      },
      "lineNbr": 37,
      "author": {
        "id": 1000030
      },
      "writtenOn": "2020-11-06T09:15:22Z",
      "side": 1,
      "message": "In this case, I donâ€™t think this patch is needed. We only need to check whether there is a query which is only begun but not ended for occlusion query in render pass encoder, this is simpler and only a flag to identify the query is begun or ended, see https://dawn-review.googlesource.com/c/dawn/+/31321. Abandoned this one.",
      "parentUuid": "af6f05e8_364f12a6",
      "revId": "de0fc5fa5708a498ba8101ea0ae0b0f42144f89e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6d5a7013_bdaab360",
        "filename": "src/dawn_native/CommandEncoder.h",
        "patchSetId": 4
      },
      "lineNbr": 37,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-11-06T13:41:55Z",
      "side": 1,
      "message": "Uh? I thought we needed to check that the same query is not written twice in a render pass so at least some of the logic in this CL is needed.\n\nAlso I thought the logic for CommandEncoder was needed to track which query needed zero-initializing, something like that.",
      "parentUuid": "fd6cb4e1_6b7f6dca",
      "revId": "de0fc5fa5708a498ba8101ea0ae0b0f42144f89e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "917ad24d_84f6373e",
        "filename": "src/dawn_native/ProgrammablePassEncoder.h",
        "patchSetId": 4
      },
      "lineNbr": 37,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-11-03T14:01:48Z",
      "side": 1,
      "message": "This and other changes to this file are only used by the RenderPassEncoder so they could be put there instead of being for all programmable encoders.",
      "revId": "de0fc5fa5708a498ba8101ea0ae0b0f42144f89e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2cdcfe9e_8c5f1109",
        "filename": "src/dawn_native/ProgrammablePassEncoder.h",
        "patchSetId": 4
      },
      "lineNbr": 37,
      "author": {
        "id": 1000030
      },
      "writtenOn": "2020-11-04T07:48:20Z",
      "side": 1,
      "message": "Put it here for the pipeline statistics query can use it in future. I will move to RenderPassEncoder. If it is needed in pipeline statistics query, then move it back.",
      "parentUuid": "917ad24d_84f6373e",
      "revId": "de0fc5fa5708a498ba8101ea0ae0b0f42144f89e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1de2a3b2_224d7f10",
        "filename": "src/dawn_native/ProgrammablePassEncoder.h",
        "patchSetId": 4
      },
      "lineNbr": 37,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-11-04T11:22:51Z",
      "side": 1,
      "message": "Ah I understand. I think with the other changes I suggested, PipelineStatisticsQuery wouldn\u0027t need this so we can move it to RenderPassEncoder.",
      "parentUuid": "2cdcfe9e_8c5f1109",
      "revId": "de0fc5fa5708a498ba8101ea0ae0b0f42144f89e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9d002b79_4a08715a",
        "filename": "src/dawn_native/ProgrammablePassEncoder.h",
        "patchSetId": 4
      },
      "lineNbr": 37,
      "author": {
        "id": 1000030
      },
      "writtenOn": "2020-11-06T09:15:22Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1de2a3b2_224d7f10",
      "revId": "de0fc5fa5708a498ba8101ea0ae0b0f42144f89e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3618b7d8_e3a5f5a6",
        "filename": "src/dawn_native/RenderPassEncoder.cpp",
        "patchSetId": 4
      },
      "lineNbr": 33,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-11-03T14:01:48Z",
      "side": 1,
      "message": "This function is only used at [1] so it could be inlined.",
      "revId": "de0fc5fa5708a498ba8101ea0ae0b0f42144f89e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e9f9b3a2_51401800",
        "filename": "src/dawn_native/RenderPassEncoder.cpp",
        "patchSetId": 4
      },
      "lineNbr": 33,
      "author": {
        "id": 1000030
      },
      "writtenOn": "2020-11-04T07:48:20Z",
      "side": 1,
      "message": "This will be reused in pipeline statistics query which also need check the same query overwrite.",
      "parentUuid": "3618b7d8_e3a5f5a6",
      "revId": "de0fc5fa5708a498ba8101ea0ae0b0f42144f89e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d60e0d83_724a0443",
        "filename": "src/dawn_native/RenderPassEncoder.cpp",
        "patchSetId": 4
      },
      "lineNbr": 33,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-11-04T11:22:51Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "e9f9b3a2_51401800",
      "revId": "de0fc5fa5708a498ba8101ea0ae0b0f42144f89e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d8d50772_6133fe7b",
        "filename": "src/dawn_native/RenderPassEncoder.cpp",
        "patchSetId": 4
      },
      "lineNbr": 37,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-11-03T14:01:48Z",
      "side": 1,
      "message": "nit: the temporary it variable could be avoided and used directly in this if. It is a common pattern to do .find() !\u003d .end().",
      "revId": "de0fc5fa5708a498ba8101ea0ae0b0f42144f89e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "932fcce4_e5e0d805",
        "filename": "src/dawn_native/RenderPassEncoder.cpp",
        "patchSetId": 4
      },
      "lineNbr": 89,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-11-03T14:01:48Z",
      "side": 1,
      "message": "nit: It might be simpler to just call Track on both this, and the command encoder at [2] instead of merging query states.",
      "revId": "de0fc5fa5708a498ba8101ea0ae0b0f42144f89e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f8367896_01f5ded3",
        "filename": "src/dawn_native/RenderPassEncoder.cpp",
        "patchSetId": 4
      },
      "lineNbr": 89,
      "author": {
        "id": 1000030
      },
      "writtenOn": "2020-11-04T07:48:20Z",
      "side": 1,
      "message": "Add this method is to avoid traversing the two map twice every time when call query operation on render pass, just need to update the query state to command encoder when ending a pass.",
      "parentUuid": "932fcce4_e5e0d805",
      "revId": "de0fc5fa5708a498ba8101ea0ae0b0f42144f89e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "91ebb217_8f94b5bf",
        "filename": "src/dawn_native/RenderPassEncoder.cpp",
        "patchSetId": 4
      },
      "lineNbr": 208,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-11-03T14:01:48Z",
      "side": 1,
      "message": "[1]",
      "revId": "de0fc5fa5708a498ba8101ea0ae0b0f42144f89e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ed72ee2c_99a148c0",
        "filename": "src/dawn_native/RenderPassEncoder.cpp",
        "patchSetId": 4
      },
      "lineNbr": 212,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-11-03T14:01:48Z",
      "side": 1,
      "message": "[2]",
      "revId": "de0fc5fa5708a498ba8101ea0ae0b0f42144f89e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}