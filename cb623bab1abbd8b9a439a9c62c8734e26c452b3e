{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "e8f2c28d_21602c10",
        "filename": "src/dawn/native/CommandEncoder.cpp",
        "patchSetId": 24
      },
      "lineNbr": 149,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-09-28T08:59:06Z",
      "side": 1,
      "message": "I feel pretty strongly that we shouldn\u0027t special case this every time we want to maybe handle multi planar formats. Instead TextureBase::GetWidth/Height/... should take an Aspect and do the computation if needed. This would require a lot of change so it\u0027s not necessary to do for this CL, but please file and issue and add a TODO(dawn:that issue number). We really need to get to doing this cleanup to avoid multiplanar texture handling bugs. Not that these bugs can be used to attack the GPU process from the renderer process as the renderer process is able to AssociateMailbox a SharedImage into a multiplanar texture.",
      "revId": "cb623bab1abbd8b9a439a9c62c8734e26c452b3e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cfae29ae_457f8c69",
        "filename": "src/dawn/native/CommandEncoder.cpp",
        "patchSetId": 24
      },
      "lineNbr": 149,
      "author": {
        "id": 1003581
      },
      "writtenOn": "2023-09-29T21:44:35Z",
      "side": 1,
      "message": "That makes sense. I\u0027ve created a bug for tracking this and linked it here. Hopefully, I can get to it soon enough.",
      "parentUuid": "e8f2c28d_21602c10",
      "revId": "cb623bab1abbd8b9a439a9c62c8734e26c452b3e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5eba80f3_35cbe5f5",
        "filename": "src/dawn/native/CommandEncoder.cpp",
        "patchSetId": 24
      },
      "lineNbr": 348,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-09-28T08:59:06Z",
      "side": 1,
      "message": "I think we can unconditionally add these aspects to kRenderableAspects: validation that the texture has RenderAttachment usage should be enough.",
      "revId": "cb623bab1abbd8b9a439a9c62c8734e26c452b3e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0b375116_4aea2dee",
        "filename": "src/dawn/native/CommandEncoder.cpp",
        "patchSetId": 24
      },
      "lineNbr": 348,
      "author": {
        "id": 1003581
      },
      "writtenOn": "2023-09-29T21:44:35Z",
      "side": 1,
      "message": "Sounds good, updated.",
      "parentUuid": "5eba80f3_35cbe5f5",
      "revId": "cb623bab1abbd8b9a439a9c62c8734e26c452b3e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1daa288d_37693fe8",
        "filename": "src/dawn/native/Format.cpp",
        "patchSetId": 24
      },
      "lineNbr": 586,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-09-28T08:59:06Z",
      "side": 1,
      "message": "nit: multiPlanarCapabilities, this isn\u0027t a boolean :)",
      "range": {
        "startLine": 586,
        "startChar": 9,
        "endLine": 586,
        "endChar": 34
      },
      "revId": "cb623bab1abbd8b9a439a9c62c8734e26c452b3e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "339ff340_060a8c80",
        "filename": "src/dawn/native/Format.cpp",
        "patchSetId": 24
      },
      "lineNbr": 586,
      "author": {
        "id": 1003581
      },
      "writtenOn": "2023-09-29T21:44:35Z",
      "side": 1,
      "message": "Oh right, done.",
      "parentUuid": "1daa288d_37693fe8",
      "range": {
        "startLine": 586,
        "startChar": 9,
        "endLine": 586,
        "endChar": 34
      },
      "revId": "cb623bab1abbd8b9a439a9c62c8734e26c452b3e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "36b17102_06c87128",
        "filename": "src/dawn/tests/end2end/VideoViewsTests.cpp",
        "patchSetId": 24
      },
      "lineNbr": 314,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-09-28T08:59:06Z",
      "side": 1,
      "message": "Can we check that the texture contains 0s? The backend should try to initialize the textures, and given the other comment, I\u0027m not sure that they all know how to do that.",
      "revId": "cb623bab1abbd8b9a439a9c62c8734e26c452b3e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "87cb57dc_e9885eed",
        "filename": "src/dawn/tests/end2end/VideoViewsTests.cpp",
        "patchSetId": 24
      },
      "lineNbr": 314,
      "author": {
        "id": 1003581
      },
      "writtenOn": "2023-09-29T21:44:35Z",
      "side": 1,
      "message": "I\u0027ve reverted this test back to checking for error and adding back validations. There is more work needed to teach them to clear the textures properly which I can look in follow-ups.",
      "parentUuid": "36b17102_06c87128",
      "revId": "cb623bab1abbd8b9a439a9c62c8734e26c452b3e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "de91bda0_e03e52f9",
        "filename": "src/dawn/tests/end2end/VideoViewsTests.cpp",
        "patchSetId": 24
      },
      "lineNbr": 607,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-09-28T08:59:06Z",
      "side": 1,
      "message": "[1]",
      "revId": "cb623bab1abbd8b9a439a9c62c8734e26c452b3e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "665523cc_6ef4a799",
        "filename": "src/dawn/tests/end2end/VideoViewsTests.cpp",
        "patchSetId": 24
      },
      "lineNbr": 607,
      "author": {
        "id": 1003581
      },
      "writtenOn": "2023-09-29T21:44:35Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "de91bda0_e03e52f9",
      "revId": "cb623bab1abbd8b9a439a9c62c8734e26c452b3e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "68eacc04_4e68c33e",
        "filename": "src/dawn/tests/end2end/VideoViewsTests.cpp",
        "patchSetId": 24
      },
      "lineNbr": 982,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-09-28T08:59:06Z",
      "side": 1,
      "message": "Can we have a validation test that the attachment size is correctly computed, by trying to make a render pass with control case with a second texture that\u0027s the size of the multiplanar texture plane 1, then an error case with a second texture that\u0027s the size of the plane 0?",
      "revId": "cb623bab1abbd8b9a439a9c62c8734e26c452b3e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e917b78a_a6f98386",
        "filename": "src/dawn/tests/end2end/VideoViewsTests.cpp",
        "patchSetId": 24
      },
      "lineNbr": 982,
      "author": {
        "id": 1003581
      },
      "writtenOn": "2023-09-29T21:44:35Z",
      "side": 1,
      "message": "Sounds good, I added validation test for attachment size with both control case having same sizes and error case having different sizes.",
      "parentUuid": "68eacc04_4e68c33e",
      "revId": "cb623bab1abbd8b9a439a9c62c8734e26c452b3e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "80a33aae_5b6edd5c",
        "filename": "src/dawn/tests/end2end/VideoViewsTests.cpp",
        "patchSetId": 24
      },
      "lineNbr": 999,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-09-28T08:59:06Z",
      "side": 1,
      "message": "Can you detail how this test is different than [1]?",
      "revId": "cb623bab1abbd8b9a439a9c62c8734e26c452b3e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "895b9f0b_fb94f6c0",
        "filename": "src/dawn/tests/end2end/VideoViewsTests.cpp",
        "patchSetId": 24
      },
      "lineNbr": 999,
      "author": {
        "id": 1003581
      },
      "writtenOn": "2023-09-29T21:44:35Z",
      "side": 1,
      "message": "It\u0027s not different TBH. I had just added it because of different RenderAttachment usage but probably it\u0027s not that different in terms of validation. I have removed it",
      "parentUuid": "80a33aae_5b6edd5c",
      "revId": "cb623bab1abbd8b9a439a9c62c8734e26c452b3e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ff0354ea_08268023",
        "filename": "src/dawn/tests/end2end/VideoViewsTests.cpp",
        "patchSetId": 24
      },
      "lineNbr": 999,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-09-30T14:43:23Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "895b9f0b_fb94f6c0",
      "revId": "cb623bab1abbd8b9a439a9c62c8734e26c452b3e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "59a0d350_54925a49",
        "filename": "src/dawn/tests/end2end/VideoViewsTests.cpp",
        "patchSetId": 24
      },
      "lineNbr": 1067,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-09-28T08:59:06Z",
      "side": 1,
      "message": "[2] means that this test is ran twice, once for each multiplanar formats, so it should be reasonably easy to add P010 support for this test in this CL.",
      "revId": "cb623bab1abbd8b9a439a9c62c8734e26c452b3e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e4247db8_fcf05222",
        "filename": "src/dawn/tests/end2end/VideoViewsTests.cpp",
        "patchSetId": 24
      },
      "lineNbr": 1067,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-09-28T08:59:06Z",
      "side": 1,
      "message": "nit: Can we have a small description of what the test does as a comment here?",
      "revId": "cb623bab1abbd8b9a439a9c62c8734e26c452b3e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a4d1c857_12d2cc9c",
        "filename": "src/dawn/tests/end2end/VideoViewsTests.cpp",
        "patchSetId": 24
      },
      "lineNbr": 1067,
      "author": {
        "id": 1003581
      },
      "writtenOn": "2023-09-29T21:44:35Z",
      "side": 1,
      "message": "Added a small description to the test template.",
      "parentUuid": "e4247db8_fcf05222",
      "revId": "cb623bab1abbd8b9a439a9c62c8734e26c452b3e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b3d0f0ff_2fa4d061",
        "filename": "src/dawn/tests/end2end/VideoViewsTests.cpp",
        "patchSetId": 24
      },
      "lineNbr": 1067,
      "author": {
        "id": 1003581
      },
      "writtenOn": "2023-09-29T21:44:35Z",
      "side": 1,
      "message": "I added the test for P010 making it generic as well through template method.",
      "parentUuid": "59a0d350_54925a49",
      "revId": "cb623bab1abbd8b9a439a9c62c8734e26c452b3e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "648268b7_46a7f241",
        "filename": "src/dawn/tests/end2end/VideoViewsTests.cpp",
        "patchSetId": 24
      },
      "lineNbr": 1070,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-09-28T08:59:06Z",
      "side": 1,
      "message": "nit: this constant is found in common/Constants.h",
      "range": {
        "startLine": 1070,
        "startChar": 23,
        "endLine": 1070,
        "endChar": 51
      },
      "revId": "cb623bab1abbd8b9a439a9c62c8734e26c452b3e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c79245c1_27e40345",
        "filename": "src/dawn/tests/end2end/VideoViewsTests.cpp",
        "patchSetId": 24
      },
      "lineNbr": 1070,
      "author": {
        "id": 1003581
      },
      "writtenOn": "2023-09-29T21:44:35Z",
      "side": 1,
      "message": "Nice! Updated.",
      "parentUuid": "648268b7_46a7f241",
      "range": {
        "startLine": 1070,
        "startChar": 23,
        "endLine": 1070,
        "endChar": 51
      },
      "revId": "cb623bab1abbd8b9a439a9c62c8734e26c452b3e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c66c5dff_d5532cad",
        "filename": "src/dawn/tests/end2end/VideoViewsTests.cpp",
        "patchSetId": 24
      },
      "lineNbr": 1076,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-09-28T08:59:06Z",
      "side": 1,
      "message": "nit: TODO(dawn:SomeBugID)",
      "revId": "cb623bab1abbd8b9a439a9c62c8734e26c452b3e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "87f78b2d_cd9d3f3b",
        "filename": "src/dawn/tests/end2end/VideoViewsTests.cpp",
        "patchSetId": 24
      },
      "lineNbr": 1076,
      "author": {
        "id": 1003581
      },
      "writtenOn": "2023-09-29T21:44:35Z",
      "side": 1,
      "message": "Oops leftover comment. Removed and updated the TextureUsage here as well.",
      "parentUuid": "c66c5dff_d5532cad",
      "revId": "cb623bab1abbd8b9a439a9c62c8734e26c452b3e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b925bc71_c532c772",
        "filename": "src/dawn/tests/end2end/VideoViewsTests.cpp",
        "patchSetId": 24
      },
      "lineNbr": 1092,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-09-28T08:59:06Z",
      "side": 1,
      "message": "It seems that a queue.WriteTexture would be sufficient and simpler than creating a staging buffer. Ditto below.",
      "revId": "cb623bab1abbd8b9a439a9c62c8734e26c452b3e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9004387b_873c8137",
        "filename": "src/dawn/tests/end2end/VideoViewsTests.cpp",
        "patchSetId": 24
      },
      "lineNbr": 1092,
      "author": {
        "id": 1003581
      },
      "writtenOn": "2023-09-29T21:44:35Z",
      "side": 1,
      "message": "Good idea, updated to use writeTexture instead and removed encoder.",
      "parentUuid": "b925bc71_c532c772",
      "revId": "cb623bab1abbd8b9a439a9c62c8734e26c452b3e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ac438976_5ee6aae6",
        "filename": "src/dawn/tests/end2end/VideoViewsTests.cpp",
        "patchSetId": 24
      },
      "lineNbr": 1132,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-09-28T08:59:06Z",
      "side": 1,
      "message": "nit: this can be moved to right before it is needed.",
      "revId": "cb623bab1abbd8b9a439a9c62c8734e26c452b3e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bbb333b1_d1709f3f",
        "filename": "src/dawn/tests/end2end/VideoViewsTests.cpp",
        "patchSetId": 24
      },
      "lineNbr": 1132,
      "author": {
        "id": 1003581
      },
      "writtenOn": "2023-09-29T21:44:35Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ac438976_5ee6aae6",
      "revId": "cb623bab1abbd8b9a439a9c62c8734e26c452b3e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9a04e53f_b1b4945b",
        "filename": "src/dawn/tests/end2end/VideoViewsTests.cpp",
        "patchSetId": 24
      },
      "lineNbr": 1142,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-09-28T08:59:06Z",
      "side": 1,
      "message": "```suggestion\n        renderPipelineDescriptor.cFragment.module \u003d utils::CreateShaderModule(device, R\"(\n            @group(0) @binding(0) var sampler0 : sampler;\n            @group(0) @binding(1) var texture : texture_2d\u003cf32\u003e;\n\n            @fragment\n            fn main(@location(0) texCoord : vec2f) -\u003e @location(0) vec4f {\n                return textureSample(texture, sampler0, texCoord);\n            })\");\n```",
      "range": {
        "startLine": 1135,
        "startChar": 0,
        "endLine": 1142,
        "endChar": 21
      },
      "revId": "cb623bab1abbd8b9a439a9c62c8734e26c452b3e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e8568b6b_2ba61535",
        "filename": "src/dawn/tests/end2end/VideoViewsTests.cpp",
        "patchSetId": 24
      },
      "lineNbr": 1142,
      "author": {
        "id": 1003581
      },
      "writtenOn": "2023-09-29T21:44:35Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9a04e53f_b1b4945b",
      "range": {
        "startLine": 1135,
        "startChar": 0,
        "endLine": 1142,
        "endChar": 21
      },
      "revId": "cb623bab1abbd8b9a439a9c62c8734e26c452b3e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "33b7dc69_3bfa221b",
        "filename": "src/dawn/tests/end2end/VideoViewsTests.cpp",
        "patchSetId": 24
      },
      "lineNbr": 1189,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-09-28T08:59:06Z",
      "side": 1,
      "message": "Same comments as for the Y plane",
      "revId": "cb623bab1abbd8b9a439a9c62c8734e26c452b3e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "956adcb7_cace02d9",
        "filename": "src/dawn/tests/end2end/VideoViewsTests.cpp",
        "patchSetId": 24
      },
      "lineNbr": 1189,
      "author": {
        "id": 1003581
      },
      "writtenOn": "2023-09-29T21:44:35Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "33b7dc69_3bfa221b",
      "revId": "cb623bab1abbd8b9a439a9c62c8734e26c452b3e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0c96f81d_755642ac",
        "filename": "src/dawn/tests/end2end/VideoViewsTests.cpp",
        "patchSetId": 24
      },
      "lineNbr": 1489,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-09-28T08:59:06Z",
      "side": 1,
      "message": "[2]",
      "revId": "cb623bab1abbd8b9a439a9c62c8734e26c452b3e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "24322623_743de36a",
        "filename": "src/dawn/tests/end2end/VideoViewsTests.cpp",
        "patchSetId": 24
      },
      "lineNbr": 1489,
      "author": {
        "id": 1003581
      },
      "writtenOn": "2023-09-29T21:44:35Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "0c96f81d_755642ac",
      "revId": "cb623bab1abbd8b9a439a9c62c8734e26c452b3e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}