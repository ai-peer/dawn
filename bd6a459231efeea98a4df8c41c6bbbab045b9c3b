{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "48c7c92d_ea91b8ed",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 12
      },
      "lineNbr": 0,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-06-16T00:26:39Z",
      "side": 1,
      "message": "LGTM overall",
      "revId": "bd6a459231efeea98a4df8c41c6bbbab045b9c3b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d60145ca_a8b690e0",
        "filename": "src/dawn/native/BlitTextureToBuffer.cpp",
        "patchSetId": 12
      },
      "lineNbr": 61,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-06-16T00:26:39Z",
      "side": 1,
      "message": "since `join_v` is the only one use directly, perhaps name it ConcatStringViews, then name `join` as ConcatStringViewsImpl or something like that",
      "range": {
        "startLine": 61,
        "startChar": 22,
        "endLine": 61,
        "endChar": 28
      },
      "revId": "bd6a459231efeea98a4df8c41c6bbbab045b9c3b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6cbb2047_6d723c5c",
        "filename": "src/dawn/native/BlitTextureToBuffer.cpp",
        "patchSetId": 12
      },
      "lineNbr": 61,
      "author": {
        "id": 1000685
      },
      "writtenOn": "2023-06-16T23:41:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d60145ca_a8b690e0",
      "range": {
        "startLine": 61,
        "startChar": 22,
        "endLine": 61,
        "endChar": 28
      },
      "revId": "bd6a459231efeea98a4df8c41c6bbbab045b9c3b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bbdc6c47_e1c2d0ee",
        "filename": "src/dawn/native/BlitTextureToBuffer.cpp",
        "patchSetId": 12
      },
      "lineNbr": 89,
      "author": {
        "id": 1000685
      },
      "writtenOn": "2023-06-16T17:48:10Z",
      "side": 1,
      "message": "typo",
      "revId": "bd6a459231efeea98a4df8c41c6bbbab045b9c3b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1162746d_54e69b4a",
        "filename": "src/dawn/native/BlitTextureToBuffer.cpp",
        "patchSetId": 12
      },
      "lineNbr": 89,
      "author": {
        "id": 1000685
      },
      "writtenOn": "2023-06-16T23:41:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bbdc6c47_e1c2d0ee",
      "revId": "bd6a459231efeea98a4df8c41c6bbbab045b9c3b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ba1cfb48_242ac72c",
        "filename": "src/dawn/native/BlitTextureToBuffer.cpp",
        "patchSetId": 12
      },
      "lineNbr": 116,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-06-16T00:26:39Z",
      "side": 1,
      "message": "```suggestion\n// Load the texel value and write to storage buffer.\n```",
      "range": {
        "startLine": 116,
        "startChar": 12,
        "endLine": 116,
        "endChar": 17
      },
      "revId": "bd6a459231efeea98a4df8c41c6bbbab045b9c3b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "122a31f1_63f2aa06",
        "filename": "src/dawn/native/BlitTextureToBuffer.cpp",
        "patchSetId": 12
      },
      "lineNbr": 116,
      "author": {
        "id": 1000685
      },
      "writtenOn": "2023-06-16T23:41:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ba1cfb48_242ac72c",
      "range": {
        "startLine": 116,
        "startChar": 12,
        "endLine": 116,
        "endChar": 17
      },
      "revId": "bd6a459231efeea98a4df8c41c6bbbab045b9c3b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2795dca3_fe71f46b",
        "filename": "src/dawn/native/BlitTextureToBuffer.cpp",
        "patchSetId": 12
      },
      "lineNbr": 117,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-06-16T00:26:39Z",
      "side": 1,
      "message": "`packTexelCount` texels ?",
      "range": {
        "startLine": 117,
        "startChar": 42,
        "endLine": 117,
        "endChar": 48
      },
      "revId": "bd6a459231efeea98a4df8c41c6bbbab045b9c3b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ce963159_0e50989e",
        "filename": "src/dawn/native/BlitTextureToBuffer.cpp",
        "patchSetId": 12
      },
      "lineNbr": 117,
      "author": {
        "id": 1000685
      },
      "writtenOn": "2023-06-16T23:41:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2795dca3_fe71f46b",
      "range": {
        "startLine": 117,
        "startChar": 42,
        "endLine": 117,
        "endChar": 48
      },
      "revId": "bd6a459231efeea98a4df8c41c6bbbab045b9c3b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "659d78b1_549e525d",
        "filename": "src/dawn/native/BlitTextureToBuffer.cpp",
        "patchSetId": 12
      },
      "lineNbr": 141,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-06-16T00:26:39Z",
      "side": 1,
      "message": "should this be less than?\n\n```suggestion\n    if (coord0.x + 4u \u003c srcBoundary.x) {\n```",
      "range": {
        "startLine": 141,
        "startChar": 0,
        "endLine": 141,
        "endChar": 36
      },
      "revId": "bd6a459231efeea98a4df8c41c6bbbab045b9c3b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6f3d35d1_129b9bf7",
        "filename": "src/dawn/native/BlitTextureToBuffer.cpp",
        "patchSetId": 12
      },
      "lineNbr": 141,
      "author": {
        "id": 1000685
      },
      "writtenOn": "2023-06-16T23:41:33Z",
      "side": 1,
      "message": "coord0, 1, 2, 3 \u003c srcBoundary.x\ncoord4 is like coord0 + len, so it is \"\u003c\u003d\"\n\nBut yeah we don\u0027t need to access coord4 afterwards, so `if (coord0.x + 4u \u003c\u003d srcBoundary.x)` is better",
      "parentUuid": "659d78b1_549e525d",
      "range": {
        "startLine": 141,
        "startChar": 0,
        "endLine": 141,
        "endChar": 36
      },
      "revId": "bd6a459231efeea98a4df8c41c6bbbab045b9c3b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "360c07c1_c31a6a90",
        "filename": "src/dawn/native/BlitTextureToBuffer.cpp",
        "patchSetId": 12
      },
      "lineNbr": 149,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-06-16T00:26:39Z",
      "side": 1,
      "message": "```suggestion\n        // Otherwise, srcExtent.x is not a multiple of 4 and this thread is at right edge of the texture\n```",
      "range": {
        "startLine": 149,
        "startChar": 43,
        "endLine": 149,
        "endChar": 51
      },
      "revId": "bd6a459231efeea98a4df8c41c6bbbab045b9c3b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2a3589ad_fb2b3c22",
        "filename": "src/dawn/native/BlitTextureToBuffer.cpp",
        "patchSetId": 12
      },
      "lineNbr": 149,
      "author": {
        "id": 1000685
      },
      "writtenOn": "2023-06-16T23:41:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "360c07c1_c31a6a90",
      "range": {
        "startLine": 149,
        "startChar": 43,
        "endLine": 149,
        "endChar": 51
      },
      "revId": "bd6a459231efeea98a4df8c41c6bbbab045b9c3b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "08c4e80e_e31ac467",
        "filename": "src/dawn/native/BlitTextureToBuffer.cpp",
        "patchSetId": 12
      },
      "lineNbr": 165,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-06-16T00:26:39Z",
      "side": 1,
      "message": "```suggestion\nconstexpr std::string_view kPackR8SnormToU32 \u003d R\"(\n```\n?",
      "range": {
        "startLine": 165,
        "startChar": 34,
        "endLine": 165,
        "endChar": 35
      },
      "revId": "bd6a459231efeea98a4df8c41c6bbbab045b9c3b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c526a02b_f772c6a0",
        "filename": "src/dawn/native/BlitTextureToBuffer.cpp",
        "patchSetId": 12
      },
      "lineNbr": 165,
      "author": {
        "id": 1000685
      },
      "writtenOn": "2023-06-16T23:41:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "08c4e80e_e31ac467",
      "range": {
        "startLine": 165,
        "startChar": 34,
        "endLine": 165,
        "endChar": 35
      },
      "revId": "bd6a459231efeea98a4df8c41c6bbbab045b9c3b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7c402aa3_40146f6f",
        "filename": "src/dawn/native/BlitTextureToBuffer.cpp",
        "patchSetId": 12
      },
      "lineNbr": 174,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-06-16T00:26:39Z",
      "side": 1,
      "message": "should this be less than?\n\n```suggestion\n    if (coord0.x + 4u \u003c srcBoundary.x) {\n```",
      "range": {
        "startLine": 173,
        "startChar": 4,
        "endLine": 174,
        "endChar": 36
      },
      "revId": "bd6a459231efeea98a4df8c41c6bbbab045b9c3b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2f0e3bc6_78d60222",
        "filename": "src/dawn/native/BlitTextureToBuffer.cpp",
        "patchSetId": 12
      },
      "lineNbr": 174,
      "author": {
        "id": 1000685
      },
      "writtenOn": "2023-06-16T23:41:33Z",
      "side": 1,
      "message": "Ditto",
      "parentUuid": "7c402aa3_40146f6f",
      "range": {
        "startLine": 173,
        "startChar": 4,
        "endLine": 174,
        "endChar": 36
      },
      "revId": "bd6a459231efeea98a4df8c41c6bbbab045b9c3b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b7fdb547_57205375",
        "filename": "src/dawn/native/BlitTextureToBuffer.cpp",
        "patchSetId": 12
      },
      "lineNbr": 182,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-06-16T00:26:39Z",
      "side": 1,
      "message": "```suggestion\n        // Otherwise, srcExtent.x is not a multiple of 4 and this thread is at right edge of the texture\n```",
      "range": {
        "startLine": 182,
        "startChar": 43,
        "endLine": 182,
        "endChar": 51
      },
      "revId": "bd6a459231efeea98a4df8c41c6bbbab045b9c3b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "99d9159a_e041d9e5",
        "filename": "src/dawn/native/BlitTextureToBuffer.cpp",
        "patchSetId": 12
      },
      "lineNbr": 182,
      "author": {
        "id": 1000685
      },
      "writtenOn": "2023-06-16T23:41:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b7fdb547_57205375",
      "range": {
        "startLine": 182,
        "startChar": 43,
        "endLine": 182,
        "endChar": 51
      },
      "revId": "bd6a459231efeea98a4df8c41c6bbbab045b9c3b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "43145ea9_c727de9c",
        "filename": "src/dawn/native/BlitTextureToBuffer.cpp",
        "patchSetId": 12
      },
      "lineNbr": 295,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-06-16T00:26:39Z",
      "side": 1,
      "message": "the constexpr concat here is amazing and makes reading this code great",
      "range": {
        "startLine": 275,
        "startChar": 0,
        "endLine": 295,
        "endChar": 61
      },
      "revId": "bd6a459231efeea98a4df8c41c6bbbab045b9c3b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bce44acd_2cf52e88",
        "filename": "src/dawn/native/BlitTextureToBuffer.cpp",
        "patchSetId": 12
      },
      "lineNbr": 339,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-06-16T00:26:39Z",
      "side": 1,
      "message": "? \n\nwhat does this comment refer to?\n\nIs it suggesting that we could use the same shader for these two formats (I think we can)?\n\nmaybe here we should comment that the depth aspect is not copyable, so we know that it is always stencil. We should check the aspect to be sure though",
      "range": {
        "startLine": 339,
        "startChar": 56,
        "endLine": 339,
        "endChar": 81
      },
      "revId": "bd6a459231efeea98a4df8c41c6bbbab045b9c3b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "497ce854_18681729",
        "filename": "src/dawn/native/BlitTextureToBuffer.cpp",
        "patchSetId": 12
      },
      "lineNbr": 339,
      "author": {
        "id": 1000685
      },
      "writtenOn": "2023-06-16T17:48:10Z",
      "side": 1,
      "message": "Ah. I put this here to remind me to check if format is converted based on aspect to be depth-only or stencil-only, and forget to remove.\n\nYour suggestion sounds good",
      "parentUuid": "bce44acd_2cf52e88",
      "range": {
        "startLine": 339,
        "startChar": 56,
        "endLine": 339,
        "endChar": 81
      },
      "revId": "bd6a459231efeea98a4df8c41c6bbbab045b9c3b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "08205962_8df9f4d8",
        "filename": "src/dawn/native/BlitTextureToBuffer.cpp",
        "patchSetId": 12
      },
      "lineNbr": 339,
      "author": {
        "id": 1000685
      },
      "writtenOn": "2023-06-16T23:41:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "497ce854_18681729",
      "range": {
        "startLine": 339,
        "startChar": 56,
        "endLine": 339,
        "endChar": 81
      },
      "revId": "bd6a459231efeea98a4df8c41c6bbbab045b9c3b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "76326b3f_7abbd2df",
        "filename": "src/dawn/native/BlitTextureToBuffer.cpp",
        "patchSetId": 12
      },
      "lineNbr": 530,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-06-16T00:26:39Z",
      "side": 1,
      "message": "unit: unnecessary newline",
      "revId": "bd6a459231efeea98a4df8c41c6bbbab045b9c3b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "06d63b34_e9b4fee2",
        "filename": "src/dawn/native/BlitTextureToBuffer.cpp",
        "patchSetId": 12
      },
      "lineNbr": 530,
      "author": {
        "id": 1000685
      },
      "writtenOn": "2023-06-16T23:41:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "76326b3f_7abbd2df",
      "revId": "bd6a459231efeea98a4df8c41c6bbbab045b9c3b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d15aea33_ab86cb83",
        "filename": "src/dawn/native/CommandEncoder.cpp",
        "patchSetId": 12
      },
      "lineNbr": 1363,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-06-16T00:26:39Z",
      "side": 1,
      "message": "nit: combine these ifs, and dedent",
      "range": {
        "startLine": 1362,
        "startChar": 12,
        "endLine": 1363,
        "endChar": 91
      },
      "revId": "bd6a459231efeea98a4df8c41c6bbbab045b9c3b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8f06eaac_c1abe93a",
        "filename": "src/dawn/native/CommandEncoder.cpp",
        "patchSetId": 12
      },
      "lineNbr": 1363,
      "author": {
        "id": 1000685
      },
      "writtenOn": "2023-06-16T23:41:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d15aea33_ab86cb83",
      "range": {
        "startLine": 1362,
        "startChar": 12,
        "endLine": 1363,
        "endChar": 91
      },
      "revId": "bd6a459231efeea98a4df8c41c6bbbab045b9c3b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f64aa188_f2d25c83",
        "filename": "src/dawn/native/InternalPipelineStore.h",
        "patchSetId": 12
      },
      "lineNbr": 67,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-06-16T00:26:39Z",
      "side": 1,
      "message": "this is clever, but I\u0027m a little worried we\u0027ll add some internal formats that start at 0xF.... or something, and the hash will break\n\ninstead, how about we pack the format and the bool into a uint64_t, then hash that?\nOr, just start passing the dimension here directly anyway since we\u0027ll need it for 1D as well.",
      "range": {
        "startLine": 67,
        "startChar": 0,
        "endLine": 67,
        "endChar": 87
      },
      "revId": "bd6a459231efeea98a4df8c41c6bbbab045b9c3b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5e1aa751_42e723d1",
        "filename": "src/dawn/native/InternalPipelineStore.h",
        "patchSetId": 12
      },
      "lineNbr": 67,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-06-16T17:16:16Z",
      "side": 1,
      "message": "or just HashCombine both of them. It\u0027s simpler this way until we find it\u0027s a performance problem.",
      "parentUuid": "f64aa188_f2d25c83",
      "range": {
        "startLine": 67,
        "startChar": 0,
        "endLine": 67,
        "endChar": 87
      },
      "revId": "bd6a459231efeea98a4df8c41c6bbbab045b9c3b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7fd881e6_e70fc2b7",
        "filename": "src/dawn/native/InternalPipelineStore.h",
        "patchSetId": 12
      },
      "lineNbr": 67,
      "author": {
        "id": 1000685
      },
      "writtenOn": "2023-06-16T23:41:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5e1aa751_42e723d1",
      "range": {
        "startLine": 67,
        "startChar": 0,
        "endLine": 67,
        "endChar": 87
      },
      "revId": "bd6a459231efeea98a4df8c41c6bbbab045b9c3b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1abdf974_c4cfac29",
        "filename": "src/dawn/native/opengl/CommandBufferGL.cpp",
        "patchSetId": 12
      },
      "lineNbr": 586,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-06-16T00:26:39Z",
      "side": 1,
      "message": "DisableSnormRead appears to be unused except to produce this UNREACHABLE.\n\nremove it now?",
      "range": {
        "startLine": 586,
        "startChar": 0,
        "endLine": 586,
        "endChar": 79
      },
      "revId": "bd6a459231efeea98a4df8c41c6bbbab045b9c3b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "60346095_16ff1103",
        "filename": "src/dawn/native/opengl/CommandBufferGL.cpp",
        "patchSetId": 12
      },
      "lineNbr": 586,
      "author": {
        "id": 1000685
      },
      "writtenOn": "2023-06-16T23:41:33Z",
      "side": 1,
      "message": "https://source.chromium.org/chromium/chromium/src/+/main:third_party/dawn/src/dawn/native/opengl/PhysicalDeviceGL.cpp;l\u003d229?q\u003dphysicaldeviceGL.cpp\u0026ss\u003dchromium\n\n```\nbool supportsSnormRead \u003d\n        gl.IsAtLeastGL(4, 4) || gl.IsGLExtensionSupported(\"GL_EXT_render_snorm\");\n```\n\ndirect glReadPixels copy seems to be available on some opengl device. Instead of removing \"disable_snorm_read\", looks like we need to set \"use_blit_for_snorm_texture_to_buffer_copy\" based on supportsSnormRead state.\n\n`deviceToggles-\u003eDefault(Toggle::UseBlitForSnormTextureToBufferCopy, gl.GetVersion().IsES() || !supportsSnormRead);`\n\nAnd then remove dawn tests skipping on \"disable_snorm_read\" (because snorm t2b copy is now available with the blit path)",
      "parentUuid": "1abdf974_c4cfac29",
      "range": {
        "startLine": 586,
        "startChar": 0,
        "endLine": 586,
        "endChar": 79
      },
      "revId": "bd6a459231efeea98a4df8c41c6bbbab045b9c3b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e97b55c7_6d04a506",
        "filename": "src/dawn/native/opengl/CommandBufferGL.cpp",
        "patchSetId": 12
      },
      "lineNbr": 586,
      "author": {
        "id": 1000024
      },
      "writtenOn": "2023-06-19T19:23:50Z",
      "side": 1,
      "message": "We should remove this UNREACHABLE, though, no? Since we\u0027ll be able to support it on either path.\n\nBTW, GL_EXT_render_snorm has 12% support on desktop, and \u003c1% support on ES, so it wouldn\u0027t be a big loss to remove support for it and just use the compute blit everywhere.",
      "parentUuid": "60346095_16ff1103",
      "range": {
        "startLine": 586,
        "startChar": 0,
        "endLine": 586,
        "endChar": 79
      },
      "revId": "bd6a459231efeea98a4df8c41c6bbbab045b9c3b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "897632b7_0cfa8460",
        "filename": "src/dawn/tests/end2end/CopyTests.cpp",
        "patchSetId": 12
      },
      "lineNbr": 163,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-06-16T00:26:39Z",
      "side": 1,
      "message": "ANGLE is where we enable it though; does it work on other backends?",
      "revId": "bd6a459231efeea98a4df8c41c6bbbab045b9c3b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4c0c8fe7_8e9e0589",
        "filename": "src/dawn/tests/end2end/CopyTests.cpp",
        "patchSetId": 12
      },
      "lineNbr": 163,
      "author": {
        "id": 1000685
      },
      "writtenOn": "2023-06-16T17:48:10Z",
      "side": 1,
      "message": "Turns out this can be removed now after I fixed something else.",
      "parentUuid": "897632b7_0cfa8460",
      "revId": "bd6a459231efeea98a4df8c41c6bbbab045b9c3b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d53bdf00_619e81fe",
        "filename": "src/dawn/tests/end2end/CopyTests.cpp",
        "patchSetId": 12
      },
      "lineNbr": 163,
      "author": {
        "id": 1000685
      },
      "writtenOn": "2023-06-16T23:41:33Z",
      "side": 1,
      "message": "It works on my local linux opengles backend. Only angle + swiftshader is failing. refine the suppression",
      "parentUuid": "4c0c8fe7_8e9e0589",
      "revId": "bd6a459231efeea98a4df8c41c6bbbab045b9c3b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0530ddb5_7e03b87c",
        "filename": "src/dawn/tests/end2end/CopyTests.cpp",
        "patchSetId": 12
      },
      "lineNbr": 1407,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-06-16T00:26:39Z",
      "side": 1,
      "message": "you could add the backends in duplicate with `FooBackend({\"use_blit_for_snorm_texture_to_buffer_copy\"})` to test further the correctness of the blit path on other backends as well",
      "range": {
        "startLine": 1406,
        "startChar": 22,
        "endLine": 1407,
        "endChar": 61
      },
      "revId": "bd6a459231efeea98a4df8c41c6bbbab045b9c3b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d8e7540b_6417d391",
        "filename": "src/dawn/tests/end2end/CopyTests.cpp",
        "patchSetId": 12
      },
      "lineNbr": 1407,
      "author": {
        "id": 1000685
      },
      "writtenOn": "2023-06-16T23:41:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0530ddb5_7e03b87c",
      "range": {
        "startLine": 1406,
        "startChar": 22,
        "endLine": 1407,
        "endChar": 61
      },
      "revId": "bd6a459231efeea98a4df8c41c6bbbab045b9c3b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}