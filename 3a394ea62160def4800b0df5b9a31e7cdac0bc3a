{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "d7ff74ed_2cbaf16c",
        "filename": "src/tint/writer/spirv/binary_writer.cc",
        "patchSetId": 2
      },
      "lineNbr": 58,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2022-04-28T13:01:37Z",
      "side": 1,
      "message": "This would be a bit nicer as `std::visit` and lambda\u0027s.  See first answer in https://stackoverflow.com/questions/63482070/how-can-i-code-something-like-a-switch-for-stdvariant",
      "revId": "3a394ea62160def4800b0df5b9a31e7cdac0bc3a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7c6fd4a4_6dfe18e0",
        "filename": "src/tint/writer/spirv/binary_writer.cc",
        "patchSetId": 2
      },
      "lineNbr": 58,
      "author": {
        "id": 1002421
      },
      "writtenOn": "2022-04-28T14:27:09Z",
      "side": 1,
      "message": "That requires adding new helper classes for the dispatch?\n\nI\u0027ve ordered these conditions with the most-likely-to-be-hit as the first conditional. It\u0027s possible that the visit order is defined by the variant template arguments, but I\u0027d have to do some digging for that.",
      "parentUuid": "d7ff74ed_2cbaf16c",
      "revId": "3a394ea62160def4800b0df5b9a31e7cdac0bc3a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fc92e715_c350dcbc",
        "filename": "src/tint/writer/spirv/binary_writer.cc",
        "patchSetId": 2
      },
      "lineNbr": 58,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2022-04-28T14:34:01Z",
      "side": 1,
      "message": "It does require the helper class, but it isn\u0027t specific to this call site, so add it once and all std::visit with lambdas can use it.",
      "parentUuid": "7c6fd4a4_6dfe18e0",
      "revId": "3a394ea62160def4800b0df5b9a31e7cdac0bc3a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "626ebea0_e5940e48",
        "filename": "src/tint/writer/spirv/binary_writer.cc",
        "patchSetId": 2
      },
      "lineNbr": 58,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2022-04-28T15:09:21Z",
      "side": 1,
      "message": "I was under the impression that the visit pattern was very poorly optimized for most compilers. Can do it if you feel strongly.",
      "parentUuid": "fc92e715_c350dcbc",
      "revId": "3a394ea62160def4800b0df5b9a31e7cdac0bc3a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "77e86c2c_8a908654",
        "filename": "src/tint/writer/spirv/binary_writer.cc",
        "patchSetId": 2
      },
      "lineNbr": 58,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2022-04-28T15:14:52Z",
      "side": 1,
      "message": "Nope, already +2\u0027d so feel free to commit.",
      "parentUuid": "626ebea0_e5940e48",
      "revId": "3a394ea62160def4800b0df5b9a31e7cdac0bc3a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}