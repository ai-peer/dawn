{
  "comments": [
    {
      "key": {
        "uuid": "1115c8d1_2e339d8c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000268
      },
      "writtenOn": "2020-07-31T16:51:20Z",
      "side": 1,
      "message": "PTAL!",
      "revId": "e5b6543c30a8aa4f4a6e2b92b5eeacdf462585c6",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "75832ff1_71f27fef",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-07-31T17:10:12Z",
      "side": 1,
      "message": "What do you think about implementing this pooling in BuddyMemoryAllocator.cpp that both D3D12 and Vulkan use?",
      "revId": "e5b6543c30a8aa4f4a6e2b92b5eeacdf462585c6",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "141f0058_9bd58133",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000268
      },
      "writtenOn": "2020-07-31T17:44:09Z",
      "side": 1,
      "message": "Will do!",
      "revId": "e5b6543c30a8aa4f4a6e2b92b5eeacdf462585c6",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4b2ea326_6b47a2e0",
        "filename": "src/dawn_native/d3d12/HeapAllocatorD3D12.cpp",
        "patchSetId": 2
      },
      "lineNbr": 36,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-07-31T17:10:12Z",
      "side": 1,
      "message": "seems like LIFO would be better for trimming one day right? Might be easier to detect something hasn\u0027t been touched in a while. Is there a benefit to FIFO? If not I suggest we just do LIFO now",
      "range": {
        "startLine": 36,
        "startChar": 90,
        "endLine": 36,
        "endChar": 94
      },
      "revId": "e5b6543c30a8aa4f4a6e2b92b5eeacdf462585c6",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bc4e0f71_79e11586",
        "filename": "src/dawn_native/d3d12/HeapAllocatorD3D12.cpp",
        "patchSetId": 2
      },
      "lineNbr": 36,
      "author": {
        "id": 1000268
      },
      "writtenOn": "2020-07-31T17:44:09Z",
      "side": 1,
      "message": "Yea, SGTM.",
      "parentUuid": "4b2ea326_6b47a2e0",
      "range": {
        "startLine": 36,
        "startChar": 90,
        "endLine": 36,
        "endChar": 94
      },
      "revId": "e5b6543c30a8aa4f4a6e2b92b5eeacdf462585c6",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "21880505_da470842",
        "filename": "src/tests/white_box/D3D12ResourceHeapTests.cpp",
        "patchSetId": 2
      },
      "lineNbr": 58,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-07-31T17:20:31Z",
      "side": 1,
      "message": "to confirm: this test didn\u0027t change",
      "revId": "e5b6543c30a8aa4f4a6e2b92b5eeacdf462585c6",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "afeb2b6b_1f8478a2",
        "filename": "src/tests/white_box/D3D12ResourceHeapTests.cpp",
        "patchSetId": 2
      },
      "lineNbr": 58,
      "author": {
        "id": 1000268
      },
      "writtenOn": "2020-07-31T17:44:09Z",
      "side": 1,
      "message": "Yup, moved it over.",
      "parentUuid": "21880505_da470842",
      "revId": "e5b6543c30a8aa4f4a6e2b92b5eeacdf462585c6",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ec5925fc_3b86559a",
        "filename": "src/tests/white_box/D3D12ResourceHeapTests.cpp",
        "patchSetId": 2
      },
      "lineNbr": 94,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-07-31T17:20:31Z",
      "side": 1,
      "message": "what is being reused in this test? Comment could be more clear.\n\nIIUC it\u0027s just suballocating in the same heap but doesn\u0027t have to do with the pooling in this CL.",
      "range": {
        "startLine": 94,
        "startChar": 31,
        "endLine": 94,
        "endChar": 40
      },
      "revId": "e5b6543c30a8aa4f4a6e2b92b5eeacdf462585c6",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e52467ed_ff40a50d",
        "filename": "src/tests/white_box/D3D12ResourceHeapTests.cpp",
        "patchSetId": 2
      },
      "lineNbr": 94,
      "author": {
        "id": 1000268
      },
      "writtenOn": "2020-07-31T17:44:09Z",
      "side": 1,
      "message": "Makes sure heap reuse still works w/o pooling (negative test). Mostly to ensure same coverage, not strictly required.",
      "parentUuid": "ec5925fc_3b86559a",
      "range": {
        "startLine": 94,
        "startChar": 31,
        "endLine": 94,
        "endChar": 40
      },
      "revId": "e5b6543c30a8aa4f4a6e2b92b5eeacdf462585c6",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    }
  ]
}