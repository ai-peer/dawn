{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "78d553e6_45fed91b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-11-06T09:37:23Z",
      "side": 1,
      "message": "LGTM",
      "revId": "2ad3e0d404a553f0b0394fb4c85ea342c9c4b5e4",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3c2c828c_d6f3787b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000480
      },
      "writtenOn": "2023-11-08T10:37:46Z",
      "side": 1,
      "message": "Shall we merge this CL?",
      "revId": "2ad3e0d404a553f0b0394fb4c85ea342c9c4b5e4",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d472c4d4_ca178c86",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-11-08T15:00:10Z",
      "side": 1,
      "message": "It doesn\u0027t have +2, I\u0027d like Austin to weigh on the potential flakiness of it before we do.",
      "parentUuid": "3c2c828c_d6f3787b",
      "revId": "2ad3e0d404a553f0b0394fb4c85ea342c9c4b5e4",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "688771a2_d5cdd26c",
        "filename": "src/dawn/tests/end2end/QueryTests.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1166,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-11-06T09:37:23Z",
      "side": 1,
      "message": "Technically timestamps are allowed to wrap around, but I guess it should never happen in practice so this test won\u0027t be flaky? But if turns out to be flaky we\u0027ll have to remove it.",
      "revId": "2ad3e0d404a553f0b0394fb4c85ea342c9c4b5e4",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5e95e7ac_f6959629",
        "filename": "src/dawn/tests/end2end/QueryTests.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1166,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-11-08T17:35:56Z",
      "side": 1,
      "message": "how about we modify it to expect at most 1 reset since the duration of the whole test should definitely be less than the reset period",
      "parentUuid": "688771a2_d5cdd26c",
      "revId": "2ad3e0d404a553f0b0394fb4c85ea342c9c4b5e4",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "64b87abf_cf94d9ba",
        "filename": "src/dawn/tests/end2end/QueryTests.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1166,
      "author": {
        "id": 1000030
      },
      "writtenOn": "2023-11-14T06:05:00Z",
      "side": 1,
      "message": "Expect at most 1 reset may treat out-of-order result as a correct result, such as the result I mentioned in dawn:1598:\nTimestamp 0:  6219223452498291\nTimestamp 1:  6219223452390416\nTimestamp 2:  6219223452471375\nTimestamp 3:  6219223452644833\n\nThese timestamps are expected as at most 1 reset, but they are incorrect becase Metal executes bilt/render/comptue commands in parallel.\n\nI think we can add note in the test that timestamp may be reset in a very small probability and need run it again. Trybots will try failures again, it will never fail the second time.",
      "parentUuid": "5e95e7ac_f6959629",
      "revId": "2ad3e0d404a553f0b0394fb4c85ea342c9c4b5e4",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aff329e9_84e51720",
        "filename": "src/dawn/tests/end2end/QueryTests.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1166,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-11-14T06:14:45Z",
      "side": 1,
      "message": "here\u0027s an idea: can we retry manually in the test? this way the flakes don\u0027t impact developers. id rather not add in a known source of flakiness if we can prevent it",
      "parentUuid": "64b87abf_cf94d9ba",
      "revId": "2ad3e0d404a553f0b0394fb4c85ea342c9c4b5e4",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a17518a5_66ab427d",
        "filename": "src/dawn/tests/end2end/QueryTests.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1166,
      "author": {
        "id": 1000030
      },
      "writtenOn": "2023-11-14T07:42:02Z",
      "side": 1,
      "message": "We can have a try in this test.",
      "parentUuid": "aff329e9_84e51720",
      "revId": "2ad3e0d404a553f0b0394fb4c85ea342c9c4b5e4",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}