{
  "comments": [
    {
      "key": {
        "uuid": "19c66c7a_0177e595",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 23
      },
      "lineNbr": 0,
      "author": {
        "id": 1000961
      },
      "writtenOn": "2020-07-27T20:03:05Z",
      "side": 1,
      "message": "PTAL",
      "revId": "d89300a57df911367e9593613af07c869e7e057b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "96bcf396_c44ea4f6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 23
      },
      "lineNbr": 0,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-07-27T22:00:02Z",
      "side": 1,
      "message": "LGTM overall; given that alpha to coverage is implementation defined, it\u0027s definitely rather tricky to test. I\u0027m not sure if we\u0027re just getting lucky that the mask produced by alpha to coverage isn\u0027t (0x1 | 0x4) or (0x2 | 0x8). Perhaps we could try multiple sample masks and check that all of the (varying) resolve results are \u003c\u003d 50% coverage?",
      "revId": "d89300a57df911367e9593613af07c869e7e057b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "293f894a_b006030e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 23
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-07-28T09:00:42Z",
      "side": 1,
      "message": "LGTM overall",
      "revId": "d89300a57df911367e9593613af07c869e7e057b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "07323712_20ae6014",
        "filename": "src/dawn_native/RenderPipeline.cpp",
        "patchSetId": 23
      },
      "lineNbr": 369,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-07-28T09:00:42Z",
      "side": 1,
      "message": "Can you make a spec PR to add this validation?",
      "revId": "d89300a57df911367e9593613af07c869e7e057b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c065e7fd_1ff1c3e5",
        "filename": "src/dawn_native/vulkan/DeviceVk.cpp",
        "patchSetId": 23
      },
      "lineNbr": 856,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-07-27T22:00:02Z",
      "side": 1,
      "message": "unit: I think there are extra spaces here. Did the autoformatter do this?",
      "revId": "d89300a57df911367e9593613af07c869e7e057b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d7b90c77_6bf8c830",
        "filename": "src/dawn_native/vulkan/DeviceVk.cpp",
        "patchSetId": 23
      },
      "lineNbr": 877,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-07-27T22:00:02Z",
      "side": 1,
      "message": "This spacing change looks ok though.",
      "revId": "d89300a57df911367e9593613af07c869e7e057b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ac869448_0ad4daa7",
        "filename": "src/tests/end2end/MultisampledRenderingTests.cpp",
        "patchSetId": 23
      },
      "lineNbr": 245,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-07-27T22:00:02Z",
      "side": 1,
      "message": "nit: could be more specific ExpectedMSAAColor",
      "range": {
        "startLine": 245,
        "startChar": 10,
        "endLine": 245,
        "endChar": 23
      },
      "revId": "d89300a57df911367e9593613af07c869e7e057b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "518484a3_d0c0bc86",
        "filename": "src/tests/end2end/MultisampledRenderingTests.cpp",
        "patchSetId": 23
      },
      "lineNbr": 829,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-07-28T09:00:42Z",
      "side": 1,
      "message": "nit: ResolveInto2DTextureWithAlphaToCoverageHalfAlpha",
      "range": {
        "startLine": 829,
        "startChar": 34,
        "endLine": 829,
        "endChar": 73
      },
      "revId": "d89300a57df911367e9593613af07c869e7e057b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "275579c0_1d13d8cf",
        "filename": "src/tests/end2end/MultisampledRenderingTests.cpp",
        "patchSetId": 23
      },
      "lineNbr": 829,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-07-28T09:00:42Z",
      "side": 1,
      "message": "nit: Maybe these three tests could be combined in a single one that tests 5 combinations?",
      "revId": "d89300a57df911367e9593613af07c869e7e057b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "531eb338_03fcf037",
        "filename": "src/tests/end2end/MultisampledRenderingTests.cpp",
        "patchSetId": 23
      },
      "lineNbr": 863,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-07-28T09:00:42Z",
      "side": 1,
      "message": "ResolveInto2DTextureWithAlphaToCoverageZeroAlpha?",
      "range": {
        "startLine": 863,
        "startChar": 34,
        "endLine": 863,
        "endChar": 82
      },
      "revId": "d89300a57df911367e9593613af07c869e7e057b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6361b755_f0e2a6cc",
        "filename": "src/tests/end2end/MultisampledRenderingTests.cpp",
        "patchSetId": 23
      },
      "lineNbr": 897,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-07-28T09:00:42Z",
      "side": 1,
      "message": "AlphaOne",
      "range": {
        "startLine": 897,
        "startChar": 73,
        "endLine": 897,
        "endChar": 81
      },
      "revId": "d89300a57df911367e9593613af07c869e7e057b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aefe0346_ad2dded2",
        "filename": "src/tests/end2end/MultisampledRenderingTests.cpp",
        "patchSetId": 23
      },
      "lineNbr": 918,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-07-27T22:00:02Z",
      "side": 1,
      "message": "lot of varied usage of how we pass this data in. We should probably just have a new overload for EncodeRenderPassForTest to take wgpu::Color*",
      "range": {
        "startLine": 918,
        "startChar": 74,
        "endLine": 918,
        "endChar": 90
      },
      "revId": "d89300a57df911367e9593613af07c869e7e057b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8bab025d_b7261b18",
        "filename": "src/tests/end2end/MultisampledRenderingTests.cpp",
        "patchSetId": 23
      },
      "lineNbr": 970,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-07-28T09:00:42Z",
      "side": 1,
      "message": "More specifically the alpha to coverage is computed from the first attachment\u0027s output but affects all targets.",
      "revId": "d89300a57df911367e9593613af07c869e7e057b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2dd5fe2f_d5d82c68",
        "filename": "src/tests/end2end/MultisampledRenderingTests.cpp",
        "patchSetId": 23
      },
      "lineNbr": 1014,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-07-27T22:00:02Z",
      "side": 1,
      "message": "nit: here you\u0027ve passed \"kTestDepth\" which is true, and above you\u0027ve simply passed \"true\". This is a little inconsistent.",
      "range": {
        "startLine": 1014,
        "startChar": 12,
        "endLine": 1014,
        "endChar": 22
      },
      "revId": "d89300a57df911367e9593613af07c869e7e057b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6c476484_d37c612a",
        "filename": "src/tests/end2end/MultisampledRenderingTests.cpp",
        "patchSetId": 23
      },
      "lineNbr": 1016,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-07-27T22:00:02Z",
      "side": 1,
      "message": "There are only 5 values provided to this array. Are the rest intended to be 0?",
      "range": {
        "startLine": 1016,
        "startChar": 25,
        "endLine": 1016,
        "endChar": 27
      },
      "revId": "d89300a57df911367e9593613af07c869e7e057b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e2ff2f1c_c673790e",
        "filename": "src/tests/end2end/MultisampledRenderingTests.cpp",
        "patchSetId": 23
      },
      "lineNbr": 1091,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-07-28T09:00:42Z",
      "side": 1,
      "message": "Why does this one need to flip the triangle? It seems the regular triangle should also have partial coverage.",
      "range": {
        "startLine": 1091,
        "startChar": 62,
        "endLine": 1091,
        "endChar": 75
      },
      "revId": "d89300a57df911367e9593613af07c869e7e057b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "81125aa3_1e147f68",
        "filename": "src/tests/unittests/validation/RenderPipelineValidationTests.cpp",
        "patchSetId": 23
      },
      "lineNbr": 372,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-07-28T09:00:42Z",
      "side": 1,
      "message": "nit: Can we have two tests here: a control case that\u0027s a success with sample count \u003d 4 and this error case?",
      "revId": "d89300a57df911367e9593613af07c869e7e057b",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    }
  ]
}