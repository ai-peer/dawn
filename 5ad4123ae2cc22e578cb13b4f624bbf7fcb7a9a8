{
  "comments": [
    {
      "key": {
        "uuid": "964b2403_0a87613e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 39,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2018-11-08T14:26:25Z",
      "side": 1,
      "message": "nit: tag with a BUG\u003dchromium:XXX",
      "revId": "5ad4123ae2cc22e578cb13b4f624bbf7fcb7a9a8",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0bec4625_03468c26",
        "filename": "BUILD.gn",
        "patchSetId": 1
      },
      "lineNbr": 20,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2018-11-08T14:26:25Z",
      "side": 1,
      "message": "I don\u0027t think this exists in a standalone Dawn checkout. Can the fuzzers be wrapped in if(build_with_chromium) and the import moved there?",
      "revId": "5ad4123ae2cc22e578cb13b4f624bbf7fcb7a9a8",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3ca3d1f5_5193d9c0",
        "filename": "src/fuzzers/DawnSPIRVCrossFuzzer.cpp",
        "patchSetId": 1
      },
      "lineNbr": 32,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2018-11-08T14:26:25Z",
      "side": 1,
      "message": "typo: SPIRV",
      "range": {
        "startLine": 32,
        "startChar": 65,
        "endLine": 32,
        "endChar": 70
      },
      "revId": "5ad4123ae2cc22e578cb13b4f624bbf7fcb7a9a8",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "172d860b_b02920b2",
        "filename": "src/fuzzers/DawnSPIRVCrossFuzzer.cpp",
        "patchSetId": 1
      },
      "lineNbr": 41,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2018-11-08T14:26:25Z",
      "side": 1,
      "message": "nit: could we crash with a sigsev instead? My understanding is that libfuzzer handles it correctly. We don\u0027t need to actually recover execution.\n\nAh is it because we want to always run the code resetting the old signal handler? Can\u0027t we do it inside itself?",
      "revId": "5ad4123ae2cc22e578cb13b4f624bbf7fcb7a9a8",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "323b26ae_5d3d9ae3",
        "filename": "src/fuzzers/DawnSPIRVCrossFuzzer.cpp",
        "patchSetId": 1
      },
      "lineNbr": 55,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2018-11-08T14:38:21Z",
      "side": 1,
      "message": "Can we skip this? SPIRV-Cross errors with empty input would be good to check. (or really short input)",
      "range": {
        "startLine": 54,
        "startChar": 8,
        "endLine": 55,
        "endChar": 21
      },
      "revId": "5ad4123ae2cc22e578cb13b4f624bbf7fcb7a9a8",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "13758814_23a2bfd3",
        "filename": "src/fuzzers/DawnSPIRVCrossFuzzer.cpp",
        "patchSetId": 1
      },
      "lineNbr": 61,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2018-11-08T14:26:25Z",
      "side": 1,
      "message": "nit: this could be a memcpy or using the (const T* begin, const T* end) constructor of std::vector.",
      "range": {
        "startLine": 57,
        "startChar": 0,
        "endLine": 61,
        "endChar": 9
      },
      "revId": "5ad4123ae2cc22e578cb13b4f624bbf7fcb7a9a8",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c393b67a_afa15793",
        "filename": "src/fuzzers/DawnSPIRVCrossFuzzer.cpp",
        "patchSetId": 1
      },
      "lineNbr": 68,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2018-11-08T14:26:25Z",
      "side": 1,
      "message": "Can you add a comment about setjmp returning 1 if we do the longjmp? (most people will have forgotten about setjmp/longjmp)",
      "revId": "5ad4123ae2cc22e578cb13b4f624bbf7fcb7a9a8",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a802779c_bc2833ac",
        "filename": "src/fuzzers/DawnSPIRVCrossGLSLFuzzer.cpp",
        "patchSetId": 1
      },
      "lineNbr": 16,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2018-11-08T14:26:25Z",
      "side": 1,
      "message": "nit: These aren\u0027t needed here and in other files",
      "range": {
        "startLine": 14,
        "startChar": 0,
        "endLine": 16,
        "endChar": 18
      },
      "revId": "5ad4123ae2cc22e578cb13b4f624bbf7fcb7a9a8",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7a22c309_2d491606",
        "filename": "src/fuzzers/DawnSPIRVCrossGLSLFuzzer.cpp",
        "patchSetId": 1
      },
      "lineNbr": 35,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2018-11-08T14:26:25Z",
      "side": 1,
      "message": "Let\u0027s remove that. Dawn\u0027s GL backend doesn\u0027t really work on Mac anymore.",
      "range": {
        "startLine": 33,
        "startChar": 0,
        "endLine": 35,
        "endChar": 5
      },
      "revId": "5ad4123ae2cc22e578cb13b4f624bbf7fcb7a9a8",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4d3f91f8_0f3516d3",
        "filename": "src/fuzzers/DawnSPIRVCrossHLSLFuzzer.cpp",
        "patchSetId": 1
      },
      "lineNbr": 30,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2018-11-08T14:26:25Z",
      "side": 1,
      "message": "nit: ShaderModuleD3D12.cpp",
      "range": {
        "startLine": 30,
        "startChar": 44,
        "endLine": 30,
        "endChar": 67
      },
      "revId": "5ad4123ae2cc22e578cb13b4f624bbf7fcb7a9a8",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "44b3cec2_f7654132",
        "filename": "src/fuzzers/DawnSPIRVCrossMSLFuzzer.cpp",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2018-11-08T14:26:25Z",
      "side": 1,
      "message": "The spirv_cross_public GN config makes it so you only need to prefix with spirv-cross.",
      "range": {
        "startLine": 23,
        "startChar": 10,
        "endLine": 23,
        "endChar": 34
      },
      "revId": "5ad4123ae2cc22e578cb13b4f624bbf7fcb7a9a8",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    }
  ]
}