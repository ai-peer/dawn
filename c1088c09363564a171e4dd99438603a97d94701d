{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "d546e389_334d6051",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1000248
      },
      "writtenOn": "2021-08-17T21:09:20Z",
      "side": 1,
      "message": "Made another change + added the testing function Corentin suggested.",
      "revId": "c1088c09363564a171e4dd99438603a97d94701d",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3edc554d_9df12fad",
        "filename": "src/dawn_native/DawnNative.cpp",
        "patchSetId": 8
      },
      "lineNbr": 228,
      "author": {
        "id": 1000248
      },
      "writtenOn": "2021-08-17T21:09:20Z",
      "side": 1,
      "message": "As Corentin suggested, I added this that will help with testing in Chromium. PTAL.",
      "revId": "c1088c09363564a171e4dd99438603a97d94701d",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ab1ca026_6b023a2f",
        "filename": "src/dawn_native/DawnNative.cpp",
        "patchSetId": 8
      },
      "lineNbr": 228,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2021-08-18T00:43:41Z",
      "side": 1,
      "message": "LGTM, but I think the intent was to have Dawn unittests that use this function to confirm that it\u0027s set on creation, as well as set after calling SetLabel(..)",
      "parentUuid": "3edc554d_9df12fad",
      "revId": "c1088c09363564a171e4dd99438603a97d94701d",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e0a8a0ee_92d1cf34",
        "filename": "src/dawn_native/DawnNative.cpp",
        "patchSetId": 8
      },
      "lineNbr": 228,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-08-18T12:24:15Z",
      "side": 1,
      "message": "Exactly",
      "parentUuid": "ab1ca026_6b023a2f",
      "revId": "c1088c09363564a171e4dd99438603a97d94701d",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "86312f57_cd277bc8",
        "filename": "src/dawn_native/ObjectBase.cpp",
        "patchSetId": 8
      },
      "lineNbr": 1,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-08-18T12:24:15Z",
      "side": 1,
      "message": "Stray include?",
      "revId": "c1088c09363564a171e4dd99438603a97d94701d",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "71050bc1_a4f80037",
        "filename": "src/dawn_native/ObjectBase.h",
        "patchSetId": 8
      },
      "lineNbr": 45,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-08-18T12:24:15Z",
      "side": 1,
      "message": "Please assign TODOs with a dawn:XXX issue.",
      "revId": "c1088c09363564a171e4dd99438603a97d94701d",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f0bb2e37_941323d4",
        "filename": "src/dawn_native/Toggles.cpp",
        "patchSetId": 8
      },
      "lineNbr": 217,
      "author": {
        "id": 1000262
      },
      "writtenOn": "2021-08-18T16:57:25Z",
      "side": 1,
      "message": "Nit: When I read the term \u0027user input\u0027, I think of keyboards, mice and touchscreens. I think a better description would be \"Enables calls to SetLabel to be forwarded to backend-specific APIs that label objects.\"",
      "range": {
        "startLine": 217,
        "startChar": 23,
        "endLine": 217,
        "endChar": 33
      },
      "revId": "c1088c09363564a171e4dd99438603a97d94701d",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "08152d4e_4e2d27b9",
        "filename": "src/dawn_native/d3d12/BufferD3D12.cpp",
        "patchSetId": 8
      },
      "lineNbr": 159,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-08-18T12:24:15Z",
      "side": 1,
      "message": "This (and same in texture, and same in the Vulkan backend) can just be a call to SetLabelImpl() now.",
      "revId": "c1088c09363564a171e4dd99438603a97d94701d",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0edbb58d_212b5fec",
        "filename": "src/dawn_native/d3d12/TextureD3D12.cpp",
        "patchSetId": 8
      },
      "lineNbr": 485,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-08-18T12:24:15Z",
      "side": 1,
      "message": "Maybe we don\u0027t need to differentiate between External/Internal/SwapChain texture and just call all of them Dawn_Texture. Then we can just use SetLabelImpl() everywhere. Ditto in the Vulkan backend.",
      "revId": "c1088c09363564a171e4dd99438603a97d94701d",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7e998730_9b75b79a",
        "filename": "src/dawn_native/d3d12/TextureD3D12.cpp",
        "patchSetId": 8
      },
      "lineNbr": 485,
      "author": {
        "id": 1000262
      },
      "writtenOn": "2021-08-18T16:57:25Z",
      "side": 1,
      "message": "I disagree. Having these be differentiated helps us better track down where leaks are coming from. In the past, SwapChains have been easier to leak (due to their shared ownership) than textures managed completely by Dawn. \n\nTemporary, cached staging textures (if we have those) are a good category to cleanup in low memory situations. Knowing how much of those are allocated helps us determine whether to tackle that optimization.",
      "parentUuid": "0edbb58d_212b5fec",
      "revId": "c1088c09363564a171e4dd99438603a97d94701d",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dc2b47af_92e11563",
        "filename": "src/dawn_native/d3d12/TextureD3D12.cpp",
        "patchSetId": 8
      },
      "lineNbr": 485,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-08-18T16:59:28Z",
      "side": 1,
      "message": "Can\u0027t the code in Chromium put a label in this case?",
      "parentUuid": "7e998730_9b75b79a",
      "revId": "c1088c09363564a171e4dd99438603a97d94701d",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "70c9ebf9_ce27ff2a",
        "filename": "src/dawn_native/d3d12/UtilsD3D12.cpp",
        "patchSetId": 8
      },
      "lineNbr": 376,
      "author": {
        "id": 1000262
      },
      "writtenOn": "2021-08-18T16:57:25Z",
      "side": 1,
      "message": "Can this be simplified to label.empty()?",
      "range": {
        "startLine": 376,
        "startChar": 12,
        "endLine": 376,
        "endChar": 23
      },
      "revId": "c1088c09363564a171e4dd99438603a97d94701d",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}