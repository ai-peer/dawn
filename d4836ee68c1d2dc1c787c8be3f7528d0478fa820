{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "5fab5db3_c6778eda",
        "filename": "tools/src/cmd/cts/common/deps.go",
        "patchSetId": 8
      },
      "lineNbr": 51,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2022-05-02T13:56:07Z",
      "side": 1,
      "message": "What does it mean if there are multiple matches? This seems like it\u0027s going to do weird things with appending the `newCTSHash` after the hash if a second entry is found?",
      "revId": "d4836ee68c1d2dc1c787c8be3f7528d0478fa820",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e5c34292_d8246182",
        "filename": "tools/src/cmd/cts/common/deps.go",
        "patchSetId": 8
      },
      "lineNbr": 51,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2022-05-02T18:52:32Z",
      "side": 1,
      "message": "If there are multiple matches then we get a warning (L66), and it splats over all the hashes with `newCTSHash`.",
      "parentUuid": "5fab5db3_c6778eda",
      "revId": "d4836ee68c1d2dc1c787c8be3f7528d0478fa820",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "37e856c5_270c3f4e",
        "filename": "tools/src/cmd/cts/common/deps.go",
        "patchSetId": 8
      },
      "lineNbr": 51,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2022-05-02T18:57:22Z",
      "side": 1,
      "message": "But doesn\u0027t `b` end up getting a bunch of stuff into it?",
      "parentUuid": "e5c34292_d8246182",
      "revId": "d4836ee68c1d2dc1c787c8be3f7528d0478fa820",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "90816714_06713284",
        "filename": "tools/src/cmd/cts/common/deps.go",
        "patchSetId": 8
      },
      "lineNbr": 51,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2022-05-02T19:05:06Z",
      "side": 1,
      "message": "`matches` returns a list of index pairs - start and end indices of the regex matches.\nSo this loop writes out everything from 0 to first match start, replaces the middle, then writes out `end` to next match, replaces the middle, and so on...\n\nSo the end result is that all the hashes are replaced, and everything else is preserved.",
      "parentUuid": "37e856c5_270c3f4e",
      "revId": "d4836ee68c1d2dc1c787c8be3f7528d0478fa820",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d8f1f3e0_26b8b4ee",
        "filename": "tools/src/cmd/cts/common/deps.go",
        "patchSetId": 8
      },
      "lineNbr": 51,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2022-05-02T19:12:40Z",
      "side": 1,
      "message": "Ahh, so `end \u003d match[1]` sets end to the beginning of the next match? I was thinking it set it to the end of this match which is wat seemed weird.",
      "parentUuid": "90816714_06713284",
      "revId": "d4836ee68c1d2dc1c787c8be3f7528d0478fa820",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "96afd549_6e40299f",
        "filename": "tools/src/cmd/cts/common/deps.go",
        "patchSetId": 8
      },
      "lineNbr": 51,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2022-05-02T19:51:07Z",
      "side": 1,
      "message": "`end \u003d match[1]` sets end to one pass the last byte of the current match. `end` is used as the start of the non-match span to copy, or the tail to copy at L57.",
      "parentUuid": "d8f1f3e0_26b8b4ee",
      "revId": "d4836ee68c1d2dc1c787c8be3f7528d0478fa820",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "37a0d652_b756289e",
        "filename": "tools/src/cmd/cts/export/export.go",
        "patchSetId": 8
      },
      "lineNbr": 122,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2022-05-02T13:56:07Z",
      "side": 1,
      "message": "What happens if no cts roll has happened, does this just return the last one? Will we end up with duplicate information in the spreadsheet?",
      "revId": "d4836ee68c1d2dc1c787c8be3f7528d0478fa820",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1df3f9ce_526f56cc",
        "filename": "tools/src/cmd/cts/export/export.go",
        "patchSetId": 8
      },
      "lineNbr": 122,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2022-05-02T18:52:32Z",
      "side": 1,
      "message": "Currently yes. I\u0027ve been considering the pros and cons to having it bail if the hash hasn\u0027t changed, and I think this implementation is probably the best option. Why:\n\nThe goal here is to produce charts that PM and exec folks can look at and see burndown charts. They primarily care about time vs work remaining. If I hook this up to a cron job that runs daily, then duplicate results are likely fine.",
      "parentUuid": "37a0d652_b756289e",
      "revId": "d4836ee68c1d2dc1c787c8be3f7528d0478fa820",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "68efc099_a453783b",
        "filename": "tools/src/cmd/cts/export/export.go",
        "patchSetId": 8
      },
      "lineNbr": 122,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2022-05-02T18:57:22Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "1df3f9ce_526f56cc",
      "revId": "d4836ee68c1d2dc1c787c8be3f7528d0478fa820",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "907318cd_f72b8285",
        "filename": "tools/src/cmd/cts/export/export.go",
        "patchSetId": 8
      },
      "lineNbr": 176,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2022-05-02T13:56:07Z",
      "side": 1,
      "message": "Is this format YYYY-MM-DD ? can we change the 02 to 20 or something for clarity?",
      "revId": "d4836ee68c1d2dc1c787c8be3f7528d0478fa820",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1eb57c96_e89713be",
        "filename": "tools/src/cmd/cts/export/export.go",
        "patchSetId": 8
      },
      "lineNbr": 176,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2022-05-02T18:52:32Z",
      "side": 1,
      "message": "Yes. See https://pkg.go.dev/time#pkg-constants\n\nThe numbers used are special codes to denote YEAR-MONTH-DAY.\n\nCompletely unintuitive, I know. But standard for this package.",
      "parentUuid": "907318cd_f72b8285",
      "revId": "d4836ee68c1d2dc1c787c8be3f7528d0478fa820",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cad39a17_f418ffa2",
        "filename": "tools/src/cmd/cts/export/export.go",
        "patchSetId": 8
      },
      "lineNbr": 176,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2022-05-02T18:57:22Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "1eb57c96_e89713be",
      "revId": "d4836ee68c1d2dc1c787c8be3f7528d0478fa820",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "84240702_7bf60f91",
        "filename": "tools/src/cmd/cts/export/export.go",
        "patchSetId": 8
      },
      "lineNbr": 276,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2022-05-02T13:56:07Z",
      "side": 1,
      "message": "Maybe `ci` instead of `install` so it uses the deps from the package-lock.json file instead of installing potentially different versions?",
      "revId": "d4836ee68c1d2dc1c787c8be3f7528d0478fa820",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "731a566b_df67c4b9",
        "filename": "tools/src/cmd/cts/export/export.go",
        "patchSetId": 8
      },
      "lineNbr": 276,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2022-05-02T18:52:32Z",
      "side": 1,
      "message": "I was under the impression that `npm install` used the package-lock versions?\nDoes it really fetch latest?",
      "parentUuid": "84240702_7bf60f91",
      "revId": "d4836ee68c1d2dc1c787c8be3f7528d0478fa820",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ab791ed8_a480377d",
        "filename": "tools/src/cmd/cts/export/export.go",
        "patchSetId": 8
      },
      "lineNbr": 276,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2022-05-02T18:57:22Z",
      "side": 1,
      "message": "It does:\n\n```\nnpm i: The npm i (or npm install) is used to install all dependencies or devDependencies from a package.json file. npm ci: CI stands for continuous integration and npm ci is used to install all exact version dependencies or devDependencies from a package-lock.\n```",
      "parentUuid": "731a566b_df67c4b9",
      "revId": "d4836ee68c1d2dc1c787c8be3f7528d0478fa820",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5483bc02_25ff5597",
        "filename": "tools/src/cmd/cts/export/export.go",
        "patchSetId": 8
      },
      "lineNbr": 276,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2022-05-02T19:05:06Z",
      "side": 1,
      "message": "Wow okay. Will change.",
      "parentUuid": "ab791ed8_a480377d",
      "revId": "d4836ee68c1d2dc1c787c8be3f7528d0478fa820",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f9d7ed2c_a9dab959",
        "filename": "tools/src/cmd/cts/export/export.go",
        "patchSetId": 8
      },
      "lineNbr": 276,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2022-05-02T19:42:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5483bc02_25ff5597",
      "revId": "d4836ee68c1d2dc1c787c8be3f7528d0478fa820",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}