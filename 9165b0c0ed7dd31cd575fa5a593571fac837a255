{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "8621914f_5d65aeb2",
        "filename": "src/dawn/native/Blob.h",
        "patchSetId": 3
      },
      "lineNbr": 33,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-06-06T08:53:08Z",
      "side": 1,
      "message": "Uuuh I don\u0027t know the best practices with GMock too much, but adding references to GMock in production code seems like an anti-pattern because it mixes concerns together too much. Why not use an std::function in CreateForTesting?",
      "revId": "9165b0c0ed7dd31cd575fa5a593571fac837a255",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8a60aed5_ea4d39ad",
        "filename": "src/dawn/native/Blob.h",
        "patchSetId": 3
      },
      "lineNbr": 33,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2022-06-08T01:28:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8621914f_5d65aeb2",
      "revId": "9165b0c0ed7dd31cd575fa5a593571fac837a255",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6425d182_f93e31ca",
        "filename": "src/dawn/native/Blob.h",
        "patchSetId": 3
      },
      "lineNbr": 53,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2022-06-03T16:50:07Z",
      "side": 1,
      "message": "I also addressed some of the other comments on the other CL about this #defined. However, I really don\u0027t think we should make the constructor public as that ruins the safety of this abstraction. It would be far to easy to use incorrectly.",
      "revId": "9165b0c0ed7dd31cd575fa5a593571fac837a255",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cbbc31f3_41446993",
        "filename": "src/dawn/native/Blob.h",
        "patchSetId": 3
      },
      "lineNbr": 53,
      "author": {
        "id": 1002831
      },
      "writtenOn": "2022-06-03T18:14:18Z",
      "side": 1,
      "message": "Hmm, maybe another option is to extend this class (BlobD3D12) and expose the ctor as protected from here and hide it in the impl. Then we can use the device impl to decide what type of blob should be returned.\n\nDepending on how we want to handle Corentin\u0027s suggestion about not returning blobs on the device and only returning the blob cache though, we would potentially have to have to create a d3d12 specific BlobCache impl as well. Maybe that is reasonable since the blobs are actually different though? WDYT?\n\nIf the ctor is protected, we could also create a BlobTest or BlobMock whose ctor exposes the protected one for testing. Then we don\u0027t need the CreateForTesting in this header.",
      "parentUuid": "6425d182_f93e31ca",
      "revId": "9165b0c0ed7dd31cd575fa5a593571fac837a255",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "95388099_0d6d19a2",
        "filename": "src/dawn/native/Blob.h",
        "patchSetId": 3
      },
      "lineNbr": 53,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2022-06-03T18:22:25Z",
      "side": 1,
      "message": "Shrek is making some additional changes in https://dawn-review.googlesource.com/c/dawn/+/92680, so we can defer further changes to that CL if you don\u0027t mind.",
      "parentUuid": "cbbc31f3_41446993",
      "revId": "9165b0c0ed7dd31cd575fa5a593571fac837a255",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "32925a2d_eff8e0d4",
        "filename": "src/dawn/native/Blob.h",
        "patchSetId": 3
      },
      "lineNbr": 53,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-06-06T08:53:08Z",
      "side": 1,
      "message": "No concerns about deferring.",
      "parentUuid": "95388099_0d6d19a2",
      "revId": "9165b0c0ed7dd31cd575fa5a593571fac837a255",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "94cb8eb8_0d0ed691",
        "filename": "src/dawn/native/Blob.h",
        "patchSetId": 3
      },
      "lineNbr": 53,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2022-06-08T01:28:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "32925a2d_eff8e0d4",
      "revId": "9165b0c0ed7dd31cd575fa5a593571fac837a255",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4174b28e_7ab23fac",
        "filename": "src/dawn/tests/unittests/native/BlobTests.cpp",
        "patchSetId": 3
      },
      "lineNbr": 24,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-06-06T08:53:08Z",
      "side": 1,
      "message": "And this makes that dawn_native declares a symbol that\u0027s actually implemented by a different lib. Usually we keep all the code in the .h implemented in the .cpp. It has many advantages for the developers because they know where the code is, it helps the compilers produce warnings about private members because they see all uses of them, etc. Same suggestion about making CreateForTesting take an std::function.",
      "revId": "9165b0c0ed7dd31cd575fa5a593571fac837a255",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "66e182bc_84a9f741",
        "filename": "src/dawn/tests/unittests/native/BlobTests.cpp",
        "patchSetId": 3
      },
      "lineNbr": 24,
      "author": {
        "id": 1002831
      },
      "writtenOn": "2022-06-06T18:21:19Z",
      "side": 1,
      "message": "Given the conversation in Shrek\u0027s CL, I assume we might be exposing an UnsafeCreateWithDeleter or something that we can just directly use and remove all the testing deps.",
      "parentUuid": "4174b28e_7ab23fac",
      "revId": "9165b0c0ed7dd31cd575fa5a593571fac837a255",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f377fa6d_07be90c6",
        "filename": "src/dawn/tests/unittests/native/BlobTests.cpp",
        "patchSetId": 3
      },
      "lineNbr": 24,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2022-06-08T01:28:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "66e182bc_84a9f741",
      "revId": "9165b0c0ed7dd31cd575fa5a593571fac837a255",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4daf6d4c_dab95827",
        "filename": "src/dawn/tests/unittests/native/BlobTests.cpp",
        "patchSetId": 3
      },
      "lineNbr": 69,
      "author": {
        "id": 1002831
      },
      "writtenOn": "2022-06-03T18:14:18Z",
      "side": 1,
      "message": "Should we check that the original one doesn\u0027t hold it anymore?",
      "range": {
        "startLine": 69,
        "startChar": 4,
        "endLine": 69,
        "endChar": 28
      },
      "revId": "9165b0c0ed7dd31cd575fa5a593571fac837a255",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "16810fbc_432e5b54",
        "filename": "src/dawn/tests/unittests/native/BlobTests.cpp",
        "patchSetId": 3
      },
      "lineNbr": 69,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2022-06-03T18:22:25Z",
      "side": 1,
      "message": "clang-tidy will error that you touched a moved object again.",
      "parentUuid": "4daf6d4c_dab95827",
      "range": {
        "startLine": 69,
        "startChar": 4,
        "endLine": 69,
        "endChar": 28
      },
      "revId": "9165b0c0ed7dd31cd575fa5a593571fac837a255",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9576f1ab_7b4c50bc",
        "filename": "src/dawn/tests/unittests/native/BlobTests.cpp",
        "patchSetId": 3
      },
      "lineNbr": 87,
      "author": {
        "id": 1002831
      },
      "writtenOn": "2022-06-03T18:14:18Z",
      "side": 1,
      "message": "ditto here.",
      "range": {
        "startLine": 87,
        "startChar": 4,
        "endLine": 87,
        "endChar": 28
      },
      "revId": "9165b0c0ed7dd31cd575fa5a593571fac837a255",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "af83b172_bf7f9731",
        "filename": "src/dawn/tests/unittests/native/BlobTests.cpp",
        "patchSetId": 3
      },
      "lineNbr": 87,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2022-06-03T18:22:25Z",
      "side": 1,
      "message": "clang-tidy will error that you touched a moved object again.",
      "parentUuid": "9576f1ab_7b4c50bc",
      "range": {
        "startLine": 87,
        "startChar": 4,
        "endLine": 87,
        "endChar": 28
      },
      "revId": "9165b0c0ed7dd31cd575fa5a593571fac837a255",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}