{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "4b8ae312_ec5513de",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2024-05-20T12:09:41Z",
      "side": 1,
      "message": "LGTM, I tried to find a way to use std::copy until I remembered the optimization here is necessary for large arrays of uint8_t that are copied around and std::copy does a worse job than memcpy for them.",
      "revId": "83672081aad3a031a2e57e50bfd2fc0b58dae624",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d03dad3d_100d1a44",
        "filename": "generator/templates/dawn/wire/WireCmd.cpp",
        "patchSetId": 1
      },
      "lineNbr": 311,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2024-05-20T12:09:41Z",
      "side": 1,
      "message": "We should do the same at [1] (and maybe comment that a memcpy of 0 bytes is UB? This code is somewhat hot and risks having folks try to optimize it again by removing the condition).",
      "revId": "83672081aad3a031a2e57e50bfd2fc0b58dae624",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2260f082_5f6b6ad1",
        "filename": "generator/templates/dawn/wire/WireCmd.cpp",
        "patchSetId": 1
      },
      "lineNbr": 446,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2024-05-20T12:09:41Z",
      "side": 1,
      "message": "[1]",
      "revId": "83672081aad3a031a2e57e50bfd2fc0b58dae624",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}