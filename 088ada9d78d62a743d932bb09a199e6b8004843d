{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "59a8cc5e_56046f42",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 1002701
      },
      "writtenOn": "2022-09-27T19:06:29Z",
      "side": 1,
      "message": "PTAL",
      "revId": "088ada9d78d62a743d932bb09a199e6b8004843d",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "149e290a_7a9f914b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 1002701
      },
      "writtenOn": "2022-09-27T19:07:48Z",
      "side": 1,
      "message": "Note: I\u0027ve tested this manually with the Chromium D3D fence prototype - https://chromium-review.googlesource.com/c/chromium/src/+/3908772",
      "revId": "088ada9d78d62a743d932bb09a199e6b8004843d",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9c700481_3a16202e",
        "filename": "src/dawn/native/d3d12/TextureD3D12.cpp",
        "patchSetId": 10
      },
      "lineNbr": 712,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2022-09-27T21:09:29Z",
      "side": 1,
      "message": "in what situations do we need to reset?\n\nIIUC, since we Present before EndAccess, the signal value from EndAccess should get signaled after we have issued the call to Present.",
      "range": {
        "startLine": 712,
        "startChar": 0,
        "endLine": 712,
        "endChar": 38
      },
      "revId": "088ada9d78d62a743d932bb09a199e6b8004843d",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b33083b4_9ca9930a",
        "filename": "src/dawn/native/d3d12/TextureD3D12.cpp",
        "patchSetId": 10
      },
      "lineNbr": 712,
      "author": {
        "id": 1002701
      },
      "writtenOn": "2022-09-27T21:15:15Z",
      "side": 1,
      "message": "mSignalFenceValue stores the serial for the last ExecuteCommandLists that used the texture, so if we don\u0027t clear it, it will be behind any work issued by Present. IOW we always need to reset mSignalFenceValue if Present is called.",
      "parentUuid": "9c700481_3a16202e",
      "range": {
        "startLine": 712,
        "startChar": 0,
        "endLine": 712,
        "endChar": 38
      },
      "revId": "088ada9d78d62a743d932bb09a199e6b8004843d",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "61726b3f_9a578b08",
        "filename": "src/dawn/native/d3d12/TextureD3D12.cpp",
        "patchSetId": 10
      },
      "lineNbr": 712,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2022-09-27T21:23:12Z",
      "side": 1,
      "message": "I see, so effectively we always need to do an extra ExecutePendingCommandContext for swapchain textures.\n\nIn order to keep the resource alive, it would be sufficient to call ReferenceUntilUnused after Present, but in the bug, you said you also want a new signal value so D3D11 can properly synchronize.\n\nIs the Present operation something that needs synchronization? from my understanding, it\u0027s a notification to PIX so debug traces have frame boundaries. Perhaps D3D11 synchronization is not important here.",
      "parentUuid": "b33083b4_9ca9930a",
      "range": {
        "startLine": 712,
        "startChar": 0,
        "endLine": 712,
        "endChar": 38
      },
      "revId": "088ada9d78d62a743d932bb09a199e6b8004843d",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d9523a1f_5de99820",
        "filename": "src/dawn/native/d3d12/TextureD3D12.cpp",
        "patchSetId": 10
      },
      "lineNbr": 712,
      "author": {
        "id": 1002701
      },
      "writtenOn": "2022-09-27T21:27:25Z",
      "side": 1,
      "message": "I suspect PIX/SDKLayer has to do something to copy the swap chain texture which would be a read operation and perhaps it should be synchronized with D3D11?",
      "parentUuid": "61726b3f_9a578b08",
      "range": {
        "startLine": 712,
        "startChar": 0,
        "endLine": 712,
        "endChar": 38
      },
      "revId": "088ada9d78d62a743d932bb09a199e6b8004843d",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "53603b53_f6f8ffa6",
        "filename": "src/dawn/native/d3d12/TextureD3D12.cpp",
        "patchSetId": 10
      },
      "lineNbr": 712,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2022-09-27T21:30:52Z",
      "side": 1,
      "message": "@rafael.cintron@microsoft.com do we need this kind of synchronization?\n\nbut also - would it be so bad if we did this in SynchronizeTextureAfterUse? It would mean PIX would see more \"frames\" but these frames are completely artificial anyway. Each usage of the swapchain texture would be its own \"frame\" which arguably might be better since you would see each queue.submit that uses it separately.",
      "parentUuid": "d9523a1f_5de99820",
      "range": {
        "startLine": 712,
        "startChar": 0,
        "endLine": 712,
        "endChar": 38
      },
      "revId": "088ada9d78d62a743d932bb09a199e6b8004843d",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ce0a9d39_bf441fc0",
        "filename": "src/dawn/native/d3d12/TextureD3D12.cpp",
        "patchSetId": 10
      },
      "lineNbr": 712,
      "author": {
        "id": 1002701
      },
      "writtenOn": "2022-09-27T21:35:34Z",
      "side": 1,
      "message": "I thought about doing this in SynchronizeTextureAfterUse with the same concern about PIX seeing multiple frames. I\u0027m ok with that if you are.\n\nOTOH if we don\u0027t need the synchronization with D3D11, we can keep the Present call in DestroyImpl and simply call NextSerial (option 2 in the my comment on the bug).",
      "parentUuid": "53603b53_f6f8ffa6",
      "range": {
        "startLine": 712,
        "startChar": 0,
        "endLine": 712,
        "endChar": 38
      },
      "revId": "088ada9d78d62a743d932bb09a199e6b8004843d",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c06e04f5_2edd74fa",
        "filename": "src/dawn/native/d3d12/TextureD3D12.cpp",
        "patchSetId": 10
      },
      "lineNbr": 712,
      "author": {
        "id": 1002701
      },
      "writtenOn": "2022-09-27T23:59:52Z",
      "side": 1,
      "message": "Moved the Present to SynchronizeImportedTextureAfterUse - we can look into this more later if needed.",
      "parentUuid": "ce0a9d39_bf441fc0",
      "range": {
        "startLine": 712,
        "startChar": 0,
        "endLine": 712,
        "endChar": 38
      },
      "revId": "088ada9d78d62a743d932bb09a199e6b8004843d",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}