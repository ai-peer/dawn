{
  "comments": [
    {
      "key": {
        "uuid": "e20f3c67_aca9685e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 8,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-05-15T14:15:31Z",
      "side": 1,
      "message": "nit: also mention it rolls tint.",
      "revId": "443a8661098be0e0292e66812b42379969bed2bf",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "906ae9cf_4fe5fa91",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 8,
      "author": {
        "id": 1000250
      },
      "writtenOn": "2020-05-20T20:52:01Z",
      "side": 1,
      "message": "No longer rolls Tint, since a DEPS rolls had occurered.",
      "parentUuid": "e20f3c67_aca9685e",
      "revId": "443a8661098be0e0292e66812b42379969bed2bf",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "53c1a0a7_b305d1c4",
        "filename": "src/dawn_native/ShaderModule.cpp",
        "patchSetId": 6
      },
      "lineNbr": 17,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-05-15T14:15:31Z",
      "side": 1,
      "message": "nit: I think the order can still be\n\n#include \"dawn_native/ShaderModule.h\"\n\n\u003cDawn includes\u003e\n\n\u003cspirv-cross includes\u003e\n\n\u003ctint includes\u003e\n\n\u003csstream\u003e\n\nI thought we had copied the convention for headers from Chromium but maybe we made a mistake.",
      "revId": "443a8661098be0e0292e66812b42379969bed2bf",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c9b3ff1c_87cd27c7",
        "filename": "src/dawn_native/ShaderModule.cpp",
        "patchSetId": 6
      },
      "lineNbr": 17,
      "author": {
        "id": 1000250
      },
      "writtenOn": "2020-05-20T20:52:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "53c1a0a7_b305d1c4",
      "revId": "443a8661098be0e0292e66812b42379969bed2bf",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0062f11b_49ac9773",
        "filename": "src/dawn_native/ShaderModule.cpp",
        "patchSetId": 6
      },
      "lineNbr": 344,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-05-14T21:29:52Z",
      "side": 1,
      "message": "nit: not obvious what type \"auto\" is here",
      "range": {
        "startLine": 344,
        "startChar": 8,
        "endLine": 344,
        "endChar": 12
      },
      "revId": "443a8661098be0e0292e66812b42379969bed2bf",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "45f17b54_3c7cd937",
        "filename": "src/dawn_native/ShaderModule.cpp",
        "patchSetId": 6
      },
      "lineNbr": 344,
      "author": {
        "id": 1000250
      },
      "writtenOn": "2020-05-20T20:52:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0062f11b_49ac9773",
      "range": {
        "startLine": 344,
        "startChar": 8,
        "endLine": 344,
        "endChar": 12
      },
      "revId": "443a8661098be0e0292e66812b42379969bed2bf",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "311cff03_d69684bb",
        "filename": "src/dawn_native/ShaderModule.cpp",
        "patchSetId": 6
      },
      "lineNbr": 365,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-05-15T14:15:31Z",
      "side": 1,
      "message": "nit: ResultOrError\u003cstd::vector\u003cuint32_t\u003e\u003e",
      "range": {
        "startLine": 365,
        "startChar": 4,
        "endLine": 365,
        "endChar": 14
      },
      "revId": "443a8661098be0e0292e66812b42379969bed2bf",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3668a3bc_f456517f",
        "filename": "src/dawn_native/ShaderModule.cpp",
        "patchSetId": 6
      },
      "lineNbr": 365,
      "author": {
        "id": 1000250
      },
      "writtenOn": "2020-05-20T20:52:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "311cff03_d69684bb",
      "range": {
        "startLine": 365,
        "startChar": 4,
        "endLine": 365,
        "endChar": 14
      },
      "revId": "443a8661098be0e0292e66812b42379969bed2bf",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5608ad76_f3e2aee0",
        "filename": "src/dawn_native/ShaderModule.cpp",
        "patchSetId": 6
      },
      "lineNbr": 372,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-05-15T14:15:31Z",
      "side": 1,
      "message": "Maybe add a TODO about their being a double parse so we remember to fix it later?",
      "revId": "443a8661098be0e0292e66812b42379969bed2bf",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "307d7c9d_83b49008",
        "filename": "src/dawn_native/ShaderModule.cpp",
        "patchSetId": 6
      },
      "lineNbr": 372,
      "author": {
        "id": 1000250
      },
      "writtenOn": "2020-05-20T20:52:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5608ad76_f3e2aee0",
      "revId": "443a8661098be0e0292e66812b42379969bed2bf",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "10d13ca1_87ec5b5f",
        "filename": "src/dawn_native/ShaderModule.cpp",
        "patchSetId": 6
      },
      "lineNbr": 383,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-05-15T14:15:31Z",
      "side": 1,
      "message": "This can be an assert because it would be a Dawn programming error to pass nullptr to spirv, DAWN_VALIDATION_ERROR is for misuse of the WebGPU API.",
      "revId": "443a8661098be0e0292e66812b42379969bed2bf",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "01b10432_58c6a754",
        "filename": "src/dawn_native/ShaderModule.cpp",
        "patchSetId": 6
      },
      "lineNbr": 383,
      "author": {
        "id": 1000250
      },
      "writtenOn": "2020-05-20T20:52:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "10d13ca1_87ec5b5f",
      "revId": "443a8661098be0e0292e66812b42379969bed2bf",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c3fe0709_77a4b0ef",
        "filename": "src/dawn_native/ShaderModule.cpp",
        "patchSetId": 6
      },
      "lineNbr": 388,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-05-15T14:15:31Z",
      "side": 1,
      "message": "Don\u0027t the type need to be determined before generation?",
      "revId": "443a8661098be0e0292e66812b42379969bed2bf",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "15f87623_1d0ee671",
        "filename": "src/dawn_native/ShaderModule.cpp",
        "patchSetId": 6
      },
      "lineNbr": 388,
      "author": {
        "id": 1000250
      },
      "writtenOn": "2020-05-20T20:52:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c3fe0709_77a4b0ef",
      "revId": "443a8661098be0e0292e66812b42379969bed2bf",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2f70ed6e_f747022a",
        "filename": "src/dawn_native/ShaderModule.cpp",
        "patchSetId": 6
      },
      "lineNbr": 426,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-05-14T21:29:52Z",
      "side": 1,
      "message": "unit: maybe put this break in the if-branch after DAWN_TRY",
      "range": {
        "startLine": 426,
        "startChar": 16,
        "endLine": 426,
        "endChar": 21
      },
      "revId": "443a8661098be0e0292e66812b42379969bed2bf",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e419507c_155b217b",
        "filename": "src/dawn_native/ShaderModule.cpp",
        "patchSetId": 6
      },
      "lineNbr": 426,
      "author": {
        "id": 1000250
      },
      "writtenOn": "2020-05-20T20:52:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2f70ed6e_f747022a",
      "range": {
        "startLine": 426,
        "startChar": 16,
        "endLine": 426,
        "endChar": 21
      },
      "revId": "443a8661098be0e0292e66812b42379969bed2bf",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e9dce6c5_d25f0455",
        "filename": "src/dawn_native/ShaderModule.cpp",
        "patchSetId": 6
      },
      "lineNbr": 470,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-05-14T21:29:52Z",
      "side": 1,
      "message": "nit: this is a ton of ifdefs. I think it would be sufficient to simply assign the type enum, and the code / source string always, and then in ShaderModuleBase::Initialize, ASSERT if the type is WGSL and !DAWN_ENABLE_WGSL.",
      "range": {
        "startLine": 438,
        "startChar": 1,
        "endLine": 470,
        "endChar": 9
      },
      "revId": "443a8661098be0e0292e66812b42379969bed2bf",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9a76dd87_4da2aa7a",
        "filename": "src/dawn_native/ShaderModule.cpp",
        "patchSetId": 6
      },
      "lineNbr": 470,
      "author": {
        "id": 1000250
      },
      "writtenOn": "2020-05-20T20:52:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e9dce6c5_d25f0455",
      "range": {
        "startLine": 438,
        "startChar": 1,
        "endLine": 470,
        "endChar": 9
      },
      "revId": "443a8661098be0e0292e66812b42379969bed2bf",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f6c6bcbf_1d51cb3f",
        "filename": "src/dawn_native/ShaderModule.h",
        "patchSetId": 6
      },
      "lineNbr": 46,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-05-14T21:29:52Z",
      "side": 1,
      "message": "nit: prefer enum class",
      "range": {
        "startLine": 46,
        "startChar": 8,
        "endLine": 46,
        "endChar": 12
      },
      "revId": "443a8661098be0e0292e66812b42379969bed2bf",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2c10fb4a_8ca9d645",
        "filename": "src/dawn_native/ShaderModule.h",
        "patchSetId": 6
      },
      "lineNbr": 46,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-05-15T14:15:31Z",
      "side": 1,
      "message": "(this also allows dropping the Type prefix)",
      "parentUuid": "f6c6bcbf_1d51cb3f",
      "range": {
        "startLine": 46,
        "startChar": 8,
        "endLine": 46,
        "endChar": 12
      },
      "revId": "443a8661098be0e0292e66812b42379969bed2bf",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dee03a66_c2fb5d5d",
        "filename": "src/dawn_native/ShaderModule.h",
        "patchSetId": 6
      },
      "lineNbr": 46,
      "author": {
        "id": 1000250
      },
      "writtenOn": "2020-05-20T20:52:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2c10fb4a_8ca9d645",
      "range": {
        "startLine": 46,
        "startChar": 8,
        "endLine": 46,
        "endChar": 12
      },
      "revId": "443a8661098be0e0292e66812b42379969bed2bf",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "539fe3fc_0c92abc0",
        "filename": "src/dawn_native/ShaderModule.h",
        "patchSetId": 6
      },
      "lineNbr": 94,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-05-14T21:29:52Z",
      "side": 1,
      "message": "nit: Does this have to be virtual? I think it could be non-virtual and called something else. Then the derived classes can just \"InitializeBase\" or maybe just \"ConvertWGSLToSPIRV\" to be more specific. And we wouldn\u0027t need the ShaderModuleBase:: part.",
      "range": {
        "startLine": 94,
        "startChar": 9,
        "endLine": 94,
        "endChar": 40
      },
      "revId": "443a8661098be0e0292e66812b42379969bed2bf",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6f8b561f_960c7864",
        "filename": "src/dawn_native/ShaderModule.h",
        "patchSetId": 6
      },
      "lineNbr": 94,
      "author": {
        "id": 1000250
      },
      "writtenOn": "2020-05-20T20:52:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "539fe3fc_0c92abc0",
      "range": {
        "startLine": 94,
        "startChar": 9,
        "endLine": 94,
        "endChar": 40
      },
      "revId": "443a8661098be0e0292e66812b42379969bed2bf",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2078ad59_57752103",
        "filename": "src/dawn_native/ShaderModule.h",
        "patchSetId": 6
      },
      "lineNbr": 110,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-05-14T21:29:52Z",
      "side": 1,
      "message": "nit: This probably doesn\u0027t need to be behind an ifdef",
      "range": {
        "startLine": 107,
        "startChar": 0,
        "endLine": 110,
        "endChar": 27
      },
      "revId": "443a8661098be0e0292e66812b42379969bed2bf",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1a79d989_c27b5d32",
        "filename": "src/dawn_native/ShaderModule.h",
        "patchSetId": 6
      },
      "lineNbr": 110,
      "author": {
        "id": 1000250
      },
      "writtenOn": "2020-05-20T20:52:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2078ad59_57752103",
      "range": {
        "startLine": 107,
        "startChar": 0,
        "endLine": 110,
        "endChar": 27
      },
      "revId": "443a8661098be0e0292e66812b42379969bed2bf",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3da36426_41ed4c57",
        "filename": "src/dawn_native/d3d12/ShaderModuleD3D12.h",
        "patchSetId": 6
      },
      "lineNbr": 33,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-05-15T14:15:31Z",
      "side": 1,
      "message": "Out of curiosity, is it the declaration of this as an override that requires moving it to protected?",
      "revId": "443a8661098be0e0292e66812b42379969bed2bf",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2ca3f0ba_caa5a7c2",
        "filename": "src/dawn_native/d3d12/ShaderModuleD3D12.h",
        "patchSetId": 6
      },
      "lineNbr": 33,
      "author": {
        "id": 1000250
      },
      "writtenOn": "2020-05-20T20:52:01Z",
      "side": 1,
      "message": "Changed this to no longer need an override.",
      "parentUuid": "3da36426_41ed4c57",
      "revId": "443a8661098be0e0292e66812b42379969bed2bf",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    }
  ]
}