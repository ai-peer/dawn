{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "9553175a_07e39502",
        "filename": "src/dawn/native/CreatePipelineAsyncTask.cpp",
        "patchSetId": 1
      },
      "lineNbr": 112,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-07-14T01:42:02Z",
      "side": 1,
      "message": "I\u0027m thinking it would be better to not have the \"GPU.Dawn.\" prefix here, and instead prepend it in the platform implementation in Chromium.\n\nThis would let us have different metrics for WebGPU javascript pages, and Chrome itself running on Graphite-Dawn. The characteristics of shaders produced by Chrome are going to be far more specific than shaders we see in the wild from other developers.",
      "range": {
        "startLine": 112,
        "startChar": 44,
        "endLine": 112,
        "endChar": 53
      },
      "revId": "f48516a8870cd7cbd91dca8462895ec906f409a1",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1aa8f04f_6ed76e5e",
        "filename": "src/dawn/native/Device.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1044,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-07-14T01:42:02Z",
      "side": 1,
      "message": "I\u0027m realizing that this is going to capture the time for both successful and unsuccessful creations. Invalid programs could skew results because we\u0027ll get a bunch of times for CreateShaderModuleUS that fail to parse and never hit the backend. \n\nMaybe for this one we have separate metrics for CreateShaderModuleImpl and ValidateAndParseShaderModule ?",
      "revId": "f48516a8870cd7cbd91dca8462895ec906f409a1",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3e1bd27d_e1dec8d9",
        "filename": "src/dawn/native/Device.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1063,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-07-14T01:42:02Z",
      "side": 1,
      "message": "I don\u0027t think it\u0027s so valuable to log success for the whole creation - because this is counting failures for validation errors on bad programs.\n\nI think we should record success for just CreateShaderModuleImpl.",
      "range": {
        "startLine": 1062,
        "startChar": 12,
        "endLine": 1063,
        "endChar": 55
      },
      "revId": "f48516a8870cd7cbd91dca8462895ec906f409a1",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6697ca10_c56b5f84",
        "filename": "src/dawn/native/Device.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1625,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-07-14T01:42:02Z",
      "side": 1,
      "message": "same here, we\u0027re timing both success and failure. Perhaps we should log them separately, or only log the successful ones. The time of success is the time that actually impacts real applications.\n\nThe time of failures is questionably useful - maybe for identifying if the driver is choking on some input, and then giving up.\n\nIf we do add some of these if success, log, otherwise don\u0027t - then it starts becoming a lot more valuable to have a wrapper around ComputePipelineBase::Initialize that does that error checking and histogram logging for you.",
      "revId": "f48516a8870cd7cbd91dca8462895ec906f409a1",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}