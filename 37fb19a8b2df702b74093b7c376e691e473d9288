{
  "comments": [
    {
      "key": {
        "uuid": "7e5825de_f5df5263",
        "filename": "src/tests/white_box/D3D12DescriptorHeapTests.cpp",
        "patchSetId": 4
      },
      "lineNbr": 270,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-03-18T11:44:44Z",
      "side": 1,
      "message": "This tries to address Austin\u0027s comment that we should test that all bindgroups are set correctly, but it doesn\u0027t work because all uniform buffers contain the same value of red. If we really wanted to test that, we could change the attachment of the render pass to be R32Uint, and have each bindgroup contain on integer ranging from 1 to heapSize. At the end with blendmode add, we should readback heapSize * (heapSize - 1) / 2.",
      "revId": "37fb19a8b2df702b74093b7c376e691e473d9288",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "460c77df_fcb97b58",
        "filename": "src/tests/white_box/D3D12DescriptorHeapTests.cpp",
        "patchSetId": 4
      },
      "lineNbr": 270,
      "author": {
        "id": 1000268
      },
      "writtenOn": "2020-03-19T21:45:27Z",
      "side": 1,
      "message": "I think I understand + modified the test. Note two changes: 1) R32Uint can\u0027t be used as it\u0027s not blend-able and 2) assumed the formula had a typo (+1 not -1).",
      "parentUuid": "7e5825de_f5df5263",
      "revId": "37fb19a8b2df702b74093b7c376e691e473d9288",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "07717abd_0e9ee797",
        "filename": "src/tests/white_box/D3D12DescriptorHeapTests.cpp",
        "patchSetId": 4
      },
      "lineNbr": 274,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-03-18T11:44:44Z",
      "side": 1,
      "message": "And it should switch inside of the submit with |heapSize| descriptors.",
      "revId": "37fb19a8b2df702b74093b7c376e691e473d9288",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fb047f1b_b160f0d6",
        "filename": "src/tests/white_box/D3D12DescriptorHeapTests.cpp",
        "patchSetId": 4
      },
      "lineNbr": 274,
      "author": {
        "id": 1000268
      },
      "writtenOn": "2020-03-19T21:45:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "07717abd_0e9ee797",
      "revId": "37fb19a8b2df702b74093b7c376e691e473d9288",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1d023d5f_3f41cf36",
        "filename": "src/tests/white_box/D3D12DescriptorHeapTests.cpp",
        "patchSetId": 4
      },
      "lineNbr": 348,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-03-18T11:44:44Z",
      "side": 1,
      "message": "I think what\u0027s meant to be tested is that encoding n + 1 descriptors, then in the same submit using the 0th descriptor reencodes it correctly. That\u0027s not what the test does since all bindgroups are used only once.",
      "revId": "37fb19a8b2df702b74093b7c376e691e473d9288",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a5f0f57e_06ad6312",
        "filename": "src/tests/white_box/D3D12DescriptorHeapTests.cpp",
        "patchSetId": 4
      },
      "lineNbr": 348,
      "author": {
        "id": 1000268
      },
      "writtenOn": "2020-03-19T21:45:27Z",
      "side": 1,
      "message": "This was meant for multiple submits (NOT same) case - reworded.\n\nAdded a new test for the SAME submit as well.",
      "parentUuid": "1d023d5f_3f41cf36",
      "revId": "37fb19a8b2df702b74093b7c376e691e473d9288",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4f2f04c8_ac085f95",
        "filename": "src/tests/white_box/D3D12DescriptorHeapTests.cpp",
        "patchSetId": 4
      },
      "lineNbr": 458,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-03-18T11:44:44Z",
      "side": 1,
      "message": "Isn\u0027t that the default descriptor?",
      "revId": "37fb19a8b2df702b74093b7c376e691e473d9288",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cf1f7cb3_76dc1a5c",
        "filename": "src/tests/white_box/D3D12DescriptorHeapTests.cpp",
        "patchSetId": 4
      },
      "lineNbr": 458,
      "author": {
        "id": 1000268
      },
      "writtenOn": "2020-03-19T21:45:27Z",
      "side": 1,
      "message": "TIL - Done.",
      "parentUuid": "4f2f04c8_ac085f95",
      "revId": "37fb19a8b2df702b74093b7c376e691e473d9288",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7f14e85a_88dc4052",
        "filename": "src/tests/white_box/D3D12DescriptorHeapTests.cpp",
        "patchSetId": 4
      },
      "lineNbr": 484,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-03-18T11:44:44Z",
      "side": 1,
      "message": "This can be done with a Clear LoadOp instead of an upload.",
      "revId": "37fb19a8b2df702b74093b7c376e691e473d9288",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "886ee2cf_a3bbbeda",
        "filename": "src/tests/white_box/D3D12DescriptorHeapTests.cpp",
        "patchSetId": 4
      },
      "lineNbr": 484,
      "author": {
        "id": 1000268
      },
      "writtenOn": "2020-03-19T21:45:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7f14e85a_88dc4052",
      "revId": "37fb19a8b2df702b74093b7c376e691e473d9288",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    }
  ]
}