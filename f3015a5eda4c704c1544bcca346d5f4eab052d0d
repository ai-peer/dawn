{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "090a1207_ab025919",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1004846
      },
      "writtenOn": "2024-06-03T11:07:49Z",
      "side": 1,
      "message": "Helper code generated by template:\n\n```\ndata class RequestAdapterReturn(\n    val status: RequestAdapterStatus,\n    val adapter: Adapter?,\n    val message: String?\n)\n\nsuspend fun Instance.requestAdapter(options: RequestAdapterOptions? \u003d RequestAdapterOptions()) \u003d\n    suspendCoroutine {\n        requestAdapter(options) { status, adapter, message -\u003e\n            it.resume(RequestAdapterReturn(status, adapter, message))\n        }\n    }\n```\n\nClient code before:\n\n```\ninstance.requestAdapter(RequestAdapterOptions(..)) {\n    status, adapter, message -\u003e ...\n}\n```\n\nClient code after (in suspend function):\n\n```\nval (status, adapter, message) \u003d instance.requestAdapter(RequestAdapterOptions(..))\n...\n```",
      "revId": "f3015a5eda4c704c1544bcca346d5f4eab052d0d",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2c5738a3_23008b43",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1004846
      },
      "writtenOn": "2024-06-03T11:13:15Z",
      "side": 1,
      "message": "Additional note on this; there are instances (such as error handling) where callbacks are still appropriate. Therefore it makes sense not to hide the existing callback versions from the public API.",
      "revId": "f3015a5eda4c704c1544bcca346d5f4eab052d0d",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}