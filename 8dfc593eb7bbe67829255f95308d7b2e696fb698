{
  "comments": [
    {
      "key": {
        "uuid": "335bc8d7_4053bc7a",
        "filename": "dawn.json",
        "patchSetId": 4
      },
      "lineNbr": 601,
      "author": {
        "id": 1000017
      },
      "writtenOn": "2019-06-02T00:21:59Z",
      "side": 0,
      "message": "According to the spec for VertexInputDescriptor: https://github.com/gpuweb/gpuweb/blob/master/spec/index.bs, some members of vertex buffers can be NULL, but the pointer of all vertex buffers (\"buffers\" here) can\u0027t be nullptr. And we use \"const*\" for buffers, which means its elements are structs, not pointers to structs (which require \"const *const*\" for the annotation). So we can\u0027t set nullptr for the particular elements in buffers when it\u0027s NULL. \n\nWe do have tests for this situation in VertexInputTest.cpp in end2end tests. I added a couple of TODOs. One solution is that we construct vertex buffer objects, but set their numAttributes to 0, in order to implicitly indicate that these vertex buffers are NULL.\n\nWDYT?",
      "revId": "8dfc593eb7bbe67829255f95308d7b2e696fb698",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3a926914_ef1a3b3d",
        "filename": "dawn.json",
        "patchSetId": 4
      },
      "lineNbr": 601,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2019-06-03T11:29:59Z",
      "side": 0,
      "message": "attributCount \u003d 0 seems like a good solution. Another possibility is to have the inputSlot set explicitly in this structure, but it is not as close a match to the IDL.",
      "parentUuid": "335bc8d7_4053bc7a",
      "revId": "8dfc593eb7bbe67829255f95308d7b2e696fb698",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9b1d1cd2_f76a99c2",
        "filename": "dawn.json",
        "patchSetId": 4
      },
      "lineNbr": 601,
      "author": {
        "id": 1000017
      },
      "writtenOn": "2019-06-03T21:15:57Z",
      "side": 0,
      "message": "Yes. Personally I\u0027d like to change the spec (Then it is easy here):\n1) add inputSlot to VertexBufferDescriptor. \n2) Change \"required sequence\u003cGPUVertexBufferDescriptor?\u003e vertexBuffers;\" to \"required sequence\u003cGPUVertexBufferDescriptor\u003e vertexBuffers;\" (remove \"?\")\n\nIn this way, we explicitly point out the inputSlot of buffer. Then we don\u0027t need to set \"NULL\" object for the buffers that are not existed in vertex input. Otherwise, If the first buffer\u0027s inputSlot is 3, and the second buffer\u0027s inputSlot is 9. We might need to list them like this \u003cNULLObj, NULLObj, NullObj, VertexBuffer1, NULLObj, NullObj, NULLObj, NULLObj, NULLObj, VertexBuffer2\u003e. I think this is not good. It seems to be a little bit silly to count the NULLObj one by one and set the correct inputSlot implicitly. \n\nBut it\u0027s a good idea that we gather all attributes in the same vertex buffer together and remove inputSlot for each attribute. \n\nWDYT? Corentin and Kai(Kai did the change for vertexInput from original vulkan-like InputState).",
      "parentUuid": "3a926914_ef1a3b3d",
      "revId": "8dfc593eb7bbe67829255f95308d7b2e696fb698",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "073a019f_0a1139fe",
        "filename": "src/dawn_native/RenderPipeline.cpp",
        "patchSetId": 4
      },
      "lineNbr": 64,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2019-06-03T11:29:59Z",
      "side": 0,
      "message": "This piece of validation is still needed otherwise two attributes can have the same shaderLocation.",
      "revId": "8dfc593eb7bbe67829255f95308d7b2e696fb698",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e5922ad0_e9ede7f6",
        "filename": "src/dawn_native/RenderPipeline.cpp",
        "patchSetId": 4
      },
      "lineNbr": 64,
      "author": {
        "id": 1000017
      },
      "writtenOn": "2019-06-03T21:15:57Z",
      "side": 0,
      "message": "We validate shaderLocation above. Not this one.",
      "parentUuid": "073a019f_0a1139fe",
      "revId": "8dfc593eb7bbe67829255f95308d7b2e696fb698",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    }
  ]
}