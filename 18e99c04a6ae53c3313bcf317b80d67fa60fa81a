{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "ab00aff2_a152f1f8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2023-05-10T08:44:27Z",
      "side": 1,
      "message": "PTAL",
      "revId": "18e99c04a6ae53c3313bcf317b80d67fa60fa81a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8efd2f2a_550f21c4",
        "filename": "src/dawn/native/d3d11/ShaderModuleD3D11.cpp",
        "patchSetId": 1
      },
      "lineNbr": 125,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2023-05-10T11:12:01Z",
      "side": 1,
      "message": "instead of adding the `reverse_uav_max_slot` option, we can control the dst bind point here.",
      "range": {
        "startLine": 125,
        "startChar": 16,
        "endLine": 125,
        "endChar": 89
      },
      "revId": "18e99c04a6ae53c3313bcf317b80d67fa60fa81a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "03f1e2d1_72b37006",
        "filename": "src/dawn/native/d3d11/ShaderModuleD3D11.cpp",
        "patchSetId": 1
      },
      "lineNbr": 125,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-05-10T13:37:55Z",
      "side": 1,
      "message": "+1, we could add a note of this in PipelineLayoutD3D11.h which is where we describe the mapping of WebGPU\u0027s binding model to D3D11\u0027s. This change would avoid any other change to Tint or the BindGroupTracker.",
      "parentUuid": "8efd2f2a_550f21c4",
      "range": {
        "startLine": 125,
        "startChar": 16,
        "endLine": 125,
        "endChar": 89
      },
      "revId": "18e99c04a6ae53c3313bcf317b80d67fa60fa81a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "97289a26_2a6bbcab",
        "filename": "src/dawn/native/d3d11/ShaderModuleD3D11.cpp",
        "patchSetId": 1
      },
      "lineNbr": 125,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2023-05-11T08:02:17Z",
      "side": 1,
      "message": "Great idea, thanks!",
      "parentUuid": "03f1e2d1_72b37006",
      "range": {
        "startLine": 125,
        "startChar": 16,
        "endLine": 125,
        "endChar": 89
      },
      "revId": "18e99c04a6ae53c3313bcf317b80d67fa60fa81a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0ef98897_39c995e6",
        "filename": "src/dawn/native/d3d11/ShaderModuleD3D11.cpp",
        "patchSetId": 1
      },
      "lineNbr": 150,
      "author": {
        "id": 1002331
      },
      "writtenOn": "2023-05-10T11:12:01Z",
      "side": 1,
      "message": "For D3D11 11.1, UAV slots count is D3D11_1_UAV_SLOT_COUNT(64) instead of D3D11_PS_CS_UAV_REGISTER_COUNT(32).\n\n\nBTW, max render targets is 8, instead of assigning UAV slots in reversed order, we can just reserve the first 8 UAV slots in pixel shader for render targets. And at [1], we need to adjust device limits as well.\n\n[1] https://source.chromium.org/chromium/chromium/src/+/main:third_party/dawn/src/dawn/native/d3d11/PhysicalDeviceD3D11.cpp;l\u003d148?q\u003dphysicalDeviced3d11\u0026ss\u003dchromium",
      "range": {
        "startLine": 150,
        "startChar": 37,
        "endLine": 150,
        "endChar": 67
      },
      "revId": "18e99c04a6ae53c3313bcf317b80d67fa60fa81a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "95af5783_8c867c21",
        "filename": "src/dawn/native/d3d11/ShaderModuleD3D11.cpp",
        "patchSetId": 1
      },
      "lineNbr": 150,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2023-05-11T08:02:17Z",
      "side": 1,
      "message": "D3D11_PS_CS_UAV_REGISTER_COUNT seems to be [8](https://source.chromium.org/chromium/chromium/src/+/main:third_party/perl/c/i686-w64-mingw32/include/d3d11.h;drc\u003d6f3e5028eb65d0b4c5fdd792106ac4c84eee1eb3;l\u003d645) rather than 32. We can\u0027t reserve all 8 slots for render targets.",
      "parentUuid": "0ef98897_39c995e6",
      "range": {
        "startLine": 150,
        "startChar": 37,
        "endLine": 150,
        "endChar": 67
      },
      "revId": "18e99c04a6ae53c3313bcf317b80d67fa60fa81a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "37827b35_099d89cc",
        "filename": "src/tint/writer/hlsl/generator.h",
        "patchSetId": 1
      },
      "lineNbr": 86,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-05-10T13:37:55Z",
      "side": 1,
      "message": "u-nit: missing the third /",
      "revId": "18e99c04a6ae53c3313bcf317b80d67fa60fa81a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8d577cd3_0a614693",
        "filename": "src/tint/writer/hlsl/generator.h",
        "patchSetId": 1
      },
      "lineNbr": 86,
      "author": {
        "id": 1000028
      },
      "writtenOn": "2023-05-11T08:02:17Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "37827b35_099d89cc",
      "revId": "18e99c04a6ae53c3313bcf317b80d67fa60fa81a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}