{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "8108d6c5_3887ecc0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2021-06-18T07:24:25Z",
      "side": 1,
      "message": "PTAL thanks!",
      "revId": "78cb813c0fca084a1f29b8546037a19f27d432f4",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6fd40c95_ed1a3864",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-06-18T08:00:18Z",
      "side": 1,
      "message": "LGTM overall with a bunch of nits.",
      "revId": "78cb813c0fca084a1f29b8546037a19f27d432f4",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2d64d880_3a31a01c",
        "filename": "src/dawn_native/CopyTextureForBrowserHelper.cpp",
        "patchSetId": 8
      },
      "lineNbr": 35,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-06-18T08:00:18Z",
      "side": 1,
      "message": "Instead of adding a HEADER, we could have both the vertex and fragment shaders be in the same source code, and select a different entrypoint for each when creating the render pipeline.",
      "revId": "78cb813c0fca084a1f29b8546037a19f27d432f4",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9cbd552a_57d0c421",
        "filename": "src/dawn_native/CopyTextureForBrowserHelper.cpp",
        "patchSetId": 8
      },
      "lineNbr": 35,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2021-06-18T10:54:04Z",
      "side": 1,
      "message": "When I try to address this I think I might hit an wgsl issue.\nWith the merged shader source and different entry point, I fail all the tests on vulkan/opengles but pass all the test on d3d.\nI make a seperate CL https://dawn-review.googlesource.com/c/dawn/+/55221 here to show this (if you have interests, diff between patch 2 and patch 1 is the change).\nI\u0027ll investigate more.",
      "parentUuid": "2d64d880_3a31a01c",
      "revId": "78cb813c0fca084a1f29b8546037a19f27d432f4",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "131ab353_71de5d3c",
        "filename": "src/dawn_native/CopyTextureForBrowserHelper.cpp",
        "patchSetId": 8
      },
      "lineNbr": 35,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-06-18T12:43:43Z",
      "side": 1,
      "message": "Seems like a Swiftshader issue. Can you add 1) make a follow-up CL that does the merge, 2) create a Swiftshader issue referencing it (reproducing locally, it seems to load a vertex input when we define 0 when creating the Vulkan pipeline) and 3) add a TODO referencing this issue in this CL and land it?\n\nAlso a SPIRV-Cross issue, although we don\u0027t care about that and can just suppress on OpenGL.",
      "parentUuid": "9cbd552a_57d0c421",
      "revId": "78cb813c0fca084a1f29b8546037a19f27d432f4",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5035077d_b1502ae4",
        "filename": "src/dawn_native/CopyTextureForBrowserHelper.cpp",
        "patchSetId": 8
      },
      "lineNbr": 35,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2021-06-21T07:22:57Z",
      "side": 1,
      "message": "TODO added!",
      "parentUuid": "131ab353_71de5d3c",
      "revId": "78cb813c0fca084a1f29b8546037a19f27d432f4",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "28a12171_11a4a294",
        "filename": "src/dawn_native/CopyTextureForBrowserHelper.cpp",
        "patchSetId": 8
      },
      "lineNbr": 119,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-06-18T08:00:18Z",
      "side": 1,
      "message": "Just to check, does this match the behavior of other pieces of code that unpremul alpha when alpha is 0?",
      "revId": "78cb813c0fca084a1f29b8546037a19f27d432f4",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a19cb5aa_4385d594",
        "filename": "src/dawn_native/CopyTextureForBrowserHelper.cpp",
        "patchSetId": 8
      },
      "lineNbr": 119,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2021-06-18T10:54:04Z",
      "side": 1,
      "message": "Yes, at least for BlitGL in ANGLE https://source.chromium.org/chromium/chromium/src/+/main:third_party/angle/src/libANGLE/renderer/gl/BlitGL.cpp;l\u003d1497;drc\u003dba8adfb07ca82e7993ee29f18df9140fcf76144c?q\u003dBlitGL\u0026ss\u003dchromium%2Fchromium%2Fsrc:third_party%2Fangle%2F",
      "parentUuid": "28a12171_11a4a294",
      "revId": "78cb813c0fca084a1f29b8546037a19f27d432f4",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f1b716b4_9346b351",
        "filename": "src/dawn_native/CopyTextureForBrowserHelper.cpp",
        "patchSetId": 8
      },
      "lineNbr": 126,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-06-18T08:00:18Z",
      "side": 1,
      "message": "nit: extra whitespace.",
      "revId": "78cb813c0fca084a1f29b8546037a19f27d432f4",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "beb43ce1_953e2a72",
        "filename": "src/dawn_native/CopyTextureForBrowserHelper.cpp",
        "patchSetId": 8
      },
      "lineNbr": 126,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2021-06-18T10:54:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f1b716b4_9346b351",
      "revId": "78cb813c0fca084a1f29b8546037a19f27d432f4",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dbb59c83_8f4a7ea8",
        "filename": "src/dawn_native/CopyTextureForBrowserHelper.cpp",
        "patchSetId": 8
      },
      "lineNbr": 180,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-06-18T08:00:18Z",
      "side": 1,
      "message": "nit: We have autogenerated validation helpers in dawn_native/ValidationUtils_autogen.h, so you can call just call ValidateAlphaOp().",
      "revId": "78cb813c0fca084a1f29b8546037a19f27d432f4",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1e0b6d34_ccecde2c",
        "filename": "src/dawn_native/CopyTextureForBrowserHelper.cpp",
        "patchSetId": 8
      },
      "lineNbr": 180,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2021-06-18T10:54:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "dbb59c83_8f4a7ea8",
      "revId": "78cb813c0fca084a1f29b8546037a19f27d432f4",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "46172889_4078e6ee",
        "filename": "src/dawn_native/CopyTextureForBrowserHelper.cpp",
        "patchSetId": 8
      },
      "lineNbr": 369,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-06-18T08:00:18Z",
      "side": 1,
      "message": "options is not marked as optional in dawn.json so it will always be present.",
      "revId": "78cb813c0fca084a1f29b8546037a19f27d432f4",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bb188b33_d6244be2",
        "filename": "src/dawn_native/CopyTextureForBrowserHelper.cpp",
        "patchSetId": 8
      },
      "lineNbr": 369,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2021-06-18T10:54:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "46172889_4078e6ee",
      "revId": "78cb813c0fca084a1f29b8546037a19f27d432f4",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a62703b0_ef64b4c4",
        "filename": "src/dawn_native/CopyTextureForBrowserHelper.cpp",
        "patchSetId": 8
      },
      "lineNbr": 374,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-06-18T08:00:18Z",
      "side": 1,
      "message": "nit: think comment doesn\u0027t really match uniformData.alphaOp \u003d options-\u003ealphaOp. Maybe it could be moved to the shader next to the code that does the computations?",
      "revId": "78cb813c0fca084a1f29b8546037a19f27d432f4",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fea880d9_2b14c906",
        "filename": "src/dawn_native/CopyTextureForBrowserHelper.cpp",
        "patchSetId": 8
      },
      "lineNbr": 374,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2021-06-18T10:54:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a62703b0_ef64b4c4",
      "revId": "78cb813c0fca084a1f29b8546037a19f27d432f4",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "de1e28d1_82736270",
        "filename": "src/dawn_native/CopyTextureForBrowserHelper.cpp",
        "patchSetId": 8
      },
      "lineNbr": 376,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-06-18T08:00:18Z",
      "side": 1,
      "message": "nit: options is not marked as optional in dawn.json so it will always be present. We can just do:\n\n uniformData.alphaOp \u003d options-\u003ealphaOp;",
      "range": {
        "startLine": 376,
        "startChar": 12,
        "endLine": 376,
        "endChar": 22
      },
      "revId": "78cb813c0fca084a1f29b8546037a19f27d432f4",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d0fe2617_da71e22c",
        "filename": "src/dawn_native/CopyTextureForBrowserHelper.cpp",
        "patchSetId": 8
      },
      "lineNbr": 376,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2021-06-18T10:54:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "de1e28d1_82736270",
      "range": {
        "startLine": 376,
        "startChar": 12,
        "endLine": 376,
        "endChar": 22
      },
      "revId": "78cb813c0fca084a1f29b8546037a19f27d432f4",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f53e8af5_6f6b0324",
        "filename": "src/tests/end2end/CopyTextureForBrowserTests.cpp",
        "patchSetId": 8
      },
      "lineNbr": 42,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-06-18T08:00:18Z",
      "side": 1,
      "message": "nit: kAlphaOps (and kCopySizes above?)",
      "range": {
        "startLine": 42,
        "startChar": 31,
        "endLine": 42,
        "endChar": 39
      },
      "revId": "78cb813c0fca084a1f29b8546037a19f27d432f4",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d2174696_2cd33829",
        "filename": "src/tests/end2end/CopyTextureForBrowserTests.cpp",
        "patchSetId": 8
      },
      "lineNbr": 42,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2021-06-18T10:54:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f53e8af5_6f6b0324",
      "range": {
        "startLine": 42,
        "startChar": 31,
        "endLine": 42,
        "endChar": 39
      },
      "revId": "78cb813c0fca084a1f29b8546037a19f27d432f4",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "546725b4_b7e48d50",
        "filename": "src/tests/end2end/CopyTextureForBrowserTests.cpp",
        "patchSetId": 8
      },
      "lineNbr": 215,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-06-18T08:00:18Z",
      "side": 1,
      "message": "FYI we can now removes such type annotations!",
      "range": {
        "startLine": 215,
        "startChar": 32,
        "endLine": 215,
        "endChar": 44
      },
      "revId": "78cb813c0fca084a1f29b8546037a19f27d432f4",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b3ab0ef4_b995db9c",
        "filename": "src/tests/end2end/CopyTextureForBrowserTests.cpp",
        "patchSetId": 8
      },
      "lineNbr": 215,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2021-06-18T10:54:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "546725b4_b7e48d50",
      "range": {
        "startLine": 215,
        "startChar": 32,
        "endLine": 215,
        "endChar": 44
      },
      "revId": "78cb813c0fca084a1f29b8546037a19f27d432f4",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}