{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "e46d1323_95d3e5bf",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-04-14T00:35:52Z",
      "side": 1,
      "message": "non-tint LGTM",
      "revId": "208504d9d708ff89768006c9d7f391a209f7e50a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c38791e5_a91ebc1a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2023-04-14T11:52:58Z",
      "side": 1,
      "message": "end-to-end test expectations need updating.",
      "revId": "208504d9d708ff89768006c9d7f391a209f7e50a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "edd4a0f0_ee429e99",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000685
      },
      "writtenOn": "2023-04-14T19:09:51Z",
      "side": 1,
      "message": "Does this require running `test/tint/test-all.sh` with `--generate-expected` on windows?\nRunning it on mac it says something like DXIL.dll not found and no files seem modifed.",
      "parentUuid": "c38791e5_a91ebc1a",
      "revId": "208504d9d708ff89768006c9d7f391a209f7e50a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a22498eb_8ce7a1e1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000685
      },
      "writtenOn": "2023-04-14T22:26:16Z",
      "side": 1,
      "message": "Resolved in chat",
      "parentUuid": "edd4a0f0_ee429e99",
      "revId": "208504d9d708ff89768006c9d7f391a209f7e50a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "064efdf5_2a96f237",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000685
      },
      "writtenOn": "2023-04-14T22:26:16Z",
      "side": 1,
      "message": "Question for enga@:\nWill the pipeline and shader cache invalidate automatically on their own?\nThe generated hlsl is changed but the compile option is unchanged.\n\nThis comes to me when I tried local built chromium with the repro case in the bug ticket, the error only goes away after I set a new `--user-data-dir`.",
      "parentUuid": "e46d1323_95d3e5bf",
      "revId": "208504d9d708ff89768006c9d7f391a209f7e50a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5a21b278_304c7667",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-04-14T22:28:26Z",
      "side": 1,
      "message": "yes it will. this is a problem we have for local builds. when dawn rolls into Chrome, the commit hash is saved and that becomes part of the cache key, invalidating all the old entries\n\nin a local build it\u0027s still using the stale hash",
      "parentUuid": "064efdf5_2a96f237",
      "revId": "208504d9d708ff89768006c9d7f391a209f7e50a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d55d7f17_874ca451",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000685
      },
      "writtenOn": "2023-04-14T22:33:50Z",
      "side": 1,
      "message": "Gotcha.",
      "parentUuid": "5a21b278_304c7667",
      "revId": "208504d9d708ff89768006c9d7f391a209f7e50a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "885e0f99_41955cd3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000685
      },
      "writtenOn": "2023-04-15T00:54:09Z",
      "side": 1,
      "message": "Kokoro fails. 3 hlsl-dxc tests expectations didn\u0027t get updated by the script. Not sure why. \nI will continue to fix when I get windows machine by my hand on Monday.",
      "parentUuid": "a22498eb_8ce7a1e1",
      "revId": "208504d9d708ff89768006c9d7f391a209f7e50a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "04ccb56d_3fc32652",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000685
      },
      "writtenOn": "2023-04-17T21:19:00Z",
      "side": 1,
      "message": "Looks like it\u0027s due to on my windows, it picks up the dxc from vulkan path for hlsl-dxc validation\n`hlsl-dxc validation ENABLED (C:\\VulkanSDK\\1.2.162.1\\Bin\\dxc.exe)`\n\nI manually added the \"windows_sdk_path\" to the environment path to force it to pick up dxc and dxil to let the hlsl-dxc happen. Seems that now it can overwrite expectation files (There are other painful bash file launch issues on windows though but could be worked around...) (Any general setup tips for windows here?)\n\n\nThe other problem is, if using tint as a standalone parser for wgsl, it could only takes in vertex stage only wgsl and output it as hlsl (e.g. the end2end tests case). With no interstage locations used for next stage labeled, the output are always truncated, which doesn\u0027t seem the appropriate approach for this case.\n\nMy current thought is to add a new: `boolean truncate_unused_interstage` to `src/tint/writer/hlsl/generator.h`. Dawn will always turn this flag on to run the truncate transform. Tint as a standalone parser will have this flag set to false by default to avoid unintended all-time truncating.",
      "parentUuid": "885e0f99_41955cd3",
      "revId": "208504d9d708ff89768006c9d7f391a209f7e50a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ee6fa75d_f221b7ca",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2023-04-17T21:38:29Z",
      "side": 1,
      "message": "\u003e Looks like it\u0027s due to on my windows, it picks up the dxc from vulkan path for hlsl-dxc validation\n`hlsl-dxc validation ENABLED (C:\\VulkanSDK\\1.2.162.1\\Bin\\dxc.exe)`\n\nThat\u0027s a first for us, and I didn\u0027t know the VulkanSDK shipped a dxc binary with HLSL omitted. We can add a `--fxc` path, but that would be annoying for you to remember to specify. Maybe there\u0027s something we could detect and warn about here.\n\n\u003e The other problem is, if using tint as a standalone parser for wgsl, it could only takes in vertex stage only wgsl and output it as hlsl (e.g. the end2end tests case). With no interstage locations used for next stage labeled, the output are always truncated, which doesn\u0027t seem the appropriate approach for this case.\n\nAgreed - that wouldn\u0027t be great.\n\n\u003e My current thought is to add a new: `boolean truncate_unused_interstage` to `src/tint/writer/hlsl/generator.h`. Dawn will always turn this flag on to run the truncate transform. Tint as a standalone parser will have this flag set to false by default to avoid unintended all-time truncating.\n\nSounds like a good solution to me.",
      "parentUuid": "04ccb56d_3fc32652",
      "revId": "208504d9d708ff89768006c9d7f391a209f7e50a",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}