{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "e2633cf6_2e0bec7b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000024
      },
      "writtenOn": "2023-02-24T18:57:02Z",
      "side": 1,
      "message": "Austin, Corentin: PTAL. Thanks!",
      "revId": "2837dcc55fc8edf3c3016920ae5c1b73dc0e3eca",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ff328301_cb3d747a",
        "filename": "generator/opengl_loader_generator.py",
        "patchSetId": 4
      },
      "lineNbr": 273,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-02-24T19:50:44Z",
      "side": 1,
      "message": "I think python has something like `params.update(angle_params)`",
      "range": {
        "startLine": 272,
        "startChar": 8,
        "endLine": 273,
        "endChar": 44
      },
      "revId": "2837dcc55fc8edf3c3016920ae5c1b73dc0e3eca",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0c97c4fc_016c4123",
        "filename": "src/dawn/native/BUILD.gn",
        "patchSetId": 4
      },
      "lineNbr": 116,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-02-24T19:50:44Z",
      "side": 1,
      "message": "need update in CMakeLists.txt too",
      "revId": "2837dcc55fc8edf3c3016920ae5c1b73dc0e3eca",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "540f2160_f75b9fc7",
        "filename": "src/dawn/native/opengl/AdapterGL.cpp",
        "patchSetId": 4
      },
      "lineNbr": 198,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-02-24T19:50:44Z",
      "side": 1,
      "message": "uuunit: seems like unconventional syntax",
      "revId": "2837dcc55fc8edf3c3016920ae5c1b73dc0e3eca",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a4497723_d060ea32",
        "filename": "src/dawn/native/opengl/CommandBufferGL.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1013,
      "author": {
        "id": 1000024
      },
      "writtenOn": "2023-02-24T18:57:02Z",
      "side": 1,
      "message": "This might be a perf hit. An alternative would be create a new \"BaseVertexBaseInstanceANGLE\" toggle. Or to reassign the DrawArraysInstancedBaseInstance fn ptr to DrawArraysInstancedBaseInstanceANGLE in the extension loader. Then this code could go away.",
      "revId": "2837dcc55fc8edf3c3016920ae5c1b73dc0e3eca",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "30e075e1_5b783593",
        "filename": "src/dawn/native/opengl/CommandBufferGL.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1013,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-02-24T19:50:44Z",
      "side": 1,
      "message": "reassigning sounds nice to me - that\u0027s how the vulkan function loading works too. So extensions and functions that were promoted to core get accessed in the same way.\n\nis DrawArraysInstancedBaseInstanceANGLE supposed to do exactly the same thing DrawArraysInstancedBaseInstance does?",
      "parentUuid": "a4497723_d060ea32",
      "revId": "2837dcc55fc8edf3c3016920ae5c1b73dc0e3eca",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}