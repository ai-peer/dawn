{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "41723a64_3bd09afe",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 23
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2024-06-26T18:17:38Z",
      "side": 1,
      "message": "PTAL also all the other \"opengl:\" CLs in the stack!",
      "revId": "00dceceb908be7854b3cd5be6fae4a19bd2aa235",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "84c24d7f_6bd26b0a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 23
      },
      "lineNbr": 0,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2024-06-26T18:45:48Z",
      "side": 1,
      "message": "LGTM",
      "revId": "00dceceb908be7854b3cd5be6fae4a19bd2aa235",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "abee92f8_79bf256f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 23
      },
      "lineNbr": 0,
      "author": {
        "id": 1001961
      },
      "writtenOn": "2024-06-26T20:16:48Z",
      "side": 1,
      "message": "LGTM2. This is awesome. Thanks for taking it on!",
      "revId": "00dceceb908be7854b3cd5be6fae4a19bd2aa235",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "32aaa8f2_72e6c7bf",
        "filename": "src/dawn/native/opengl/ContextEGL.h",
        "patchSetId": 23
      },
      "lineNbr": 58,
      "author": {
        "id": 1001961
      },
      "writtenOn": "2024-06-26T20:16:48Z",
      "side": 1,
      "message": "Nit: rather than passing a lambda and calling back out to it, could we implement a scoper instead? It seems more idiomatic in Dawn.\n\n(Whoa, that AI-suggested code is actually pretty close.)",
      "fixSuggestions": [
        {
          "fixId": "0bf50ec4_0a66c322",
          "description": "prompt_to_edit API",
          "replacements": [
            {
              "path": "src/dawn/native/opengl/ContextEGL.h",
              "range": {
                "startLine": 57,
                "startChar": 0,
                "endLine": 64,
                "endChar": 0
              },
              "replacement": "    class ScopedSurfaceCurrent {\n      public:\n        ScopedSurfaceCurrent(ContextEGL* context, EGLSurface surface)\n            : mContext(context), mSurface(surface) {\n            mContext-\u003emSurface \u003d surface;\n        }\n        ~ScopedSurfaceCurrent() { mContext-\u003emSurface \u003d EGL_NO_SURFACE; }\n\n      private:\n        ContextEGL* mContext;\n        EGLSurface mSurface;\n    };\n\n"
            }
          ]
        }
      ],
      "revId": "00dceceb908be7854b3cd5be6fae4a19bd2aa235",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2703d01d_149f11c8",
        "filename": "src/dawn/native/opengl/UtilsEGL.h",
        "patchSetId": 23
      },
      "lineNbr": 39,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2024-06-26T18:45:48Z",
      "side": 1,
      "message": "nit: we probably don\u0027t want to default to an empty context. In part because now the error message will say \"\u003cblank\u003e failed with ...\" but also because it\u0027s probably better for our sanity in the future to provide more information ?\n\nI think you only need to add the context to egl.QuerySurface, then we don\u0027t need the default arg",
      "range": {
        "startLine": 39,
        "startChar": 64,
        "endLine": 39,
        "endChar": 83
      },
      "revId": "00dceceb908be7854b3cd5be6fae4a19bd2aa235",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}