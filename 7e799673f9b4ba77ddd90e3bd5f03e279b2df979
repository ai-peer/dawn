{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "98e5be7e_b8ac11ef",
        "filename": "src/tint/ast/accessor_expression.h",
        "patchSetId": 3
      },
      "lineNbr": 32,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2023-03-15T13:41:22Z",
      "side": 0,
      "message": "We have a destructor, so should these be `\u003ddelete` instead of just removed? (And probably the copy constructors the same way?)",
      "revId": "7e799673f9b4ba77ddd90e3bd5f03e279b2df979",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2b3bc934_e1b3c8cf",
        "filename": "src/tint/ast/accessor_expression.h",
        "patchSetId": 3
      },
      "lineNbr": 32,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2023-03-15T13:55:09Z",
      "side": 0,
      "message": "The base `ast::Node` class has a deleted copy and move constructor, which I believe prevents the children classes from doing these.",
      "parentUuid": "98e5be7e_b8ac11ef",
      "revId": "7e799673f9b4ba77ddd90e3bd5f03e279b2df979",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e67b258f_26931bdf",
        "filename": "src/tint/ast/accessor_expression.h",
        "patchSetId": 3
      },
      "lineNbr": 32,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2023-03-15T14:07:27Z",
      "side": 0,
      "message": "Acknowledged",
      "parentUuid": "2b3bc934_e1b3c8cf",
      "revId": "7e799673f9b4ba77ddd90e3bd5f03e279b2df979",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}