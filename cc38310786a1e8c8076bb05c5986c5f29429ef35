{
  "comments": [
    {
      "key": {
        "uuid": "02ba1df8_285ab49e",
        "filename": "src/tests/DawnTest.cpp",
        "patchSetId": 3
      },
      "lineNbr": 350,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2019-07-25T09:40:23Z",
      "side": 1,
      "message": "nit: does not support choosing\n\nBut you implemented something to guess the vendor ID from the GL vendor string, so why not support this?",
      "range": {
        "startLine": 350,
        "startChar": 43,
        "endLine": 350,
        "endChar": 52
      },
      "revId": "cc38310786a1e8c8076bb05c5986c5f29429ef35",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c57cc4ba_bc340dab",
        "filename": "src/tests/DawnTest.cpp",
        "patchSetId": 3
      },
      "lineNbr": 350,
      "author": {
        "id": 1000030
      },
      "writtenOn": "2019-07-31T08:56:13Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "02ba1df8_285ab49e",
      "range": {
        "startLine": 350,
        "startChar": 43,
        "endLine": 350,
        "endChar": 52
      },
      "revId": "cc38310786a1e8c8076bb05c5986c5f29429ef35",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "05fdec35_a7a8d923",
        "filename": "src/tests/DawnTest.cpp",
        "patchSetId": 3
      },
      "lineNbr": 350,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2019-07-31T09:28:16Z",
      "side": 1,
      "message": "Sorry for the back and forth, but what I meant was that the comment and IsOpenGL check could be skipped because you just implemented support for PCI vendor ID in OpenGL. WDYT?",
      "parentUuid": "c57cc4ba_bc340dab",
      "range": {
        "startLine": 350,
        "startChar": 43,
        "endLine": 350,
        "endChar": 52
      },
      "revId": "cc38310786a1e8c8076bb05c5986c5f29429ef35",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "38088e0b_9b0708e6",
        "filename": "src/tests/DawnTest.cpp",
        "patchSetId": 3
      },
      "lineNbr": 350,
      "author": {
        "id": 1000030
      },
      "writtenOn": "2019-08-01T02:02:03Z",
      "side": 1,
      "message": "At the begining I wanted to use vendor id to filter adapter including OpenGL backend, but I found if we choosed integrated GPU on dual GPU system, OpenGL tests crashed because its discrete GPU which got by default was filtered, this also affected other backends testing, so I need to skip filtering for OpenGL here to make OpenGL use the GPU it gets.",
      "parentUuid": "05fdec35_a7a8d923",
      "range": {
        "startLine": 350,
        "startChar": 43,
        "endLine": 350,
        "endChar": 52
      },
      "revId": "cc38310786a1e8c8076bb05c5986c5f29429ef35",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b470b364_f3f325b5",
        "filename": "src/tests/DawnTest.cpp",
        "patchSetId": 3
      },
      "lineNbr": 350,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2019-08-01T11:10:53Z",
      "side": 1,
      "message": "I still don\u0027t understand, if you ask for a vendor ID but OpenGL uses a different one that\u0027s not correct either. You need to not run testing on the GL backend when it isn\u0027t the vendor ID you asked no?",
      "parentUuid": "38088e0b_9b0708e6",
      "range": {
        "startLine": 350,
        "startChar": 43,
        "endLine": 350,
        "endChar": 52
      },
      "revId": "cc38310786a1e8c8076bb05c5986c5f29429ef35",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9b617f43_ee294951",
        "filename": "src/tests/DawnTest.cpp",
        "patchSetId": 3
      },
      "lineNbr": 350,
      "author": {
        "id": 1000030
      },
      "writtenOn": "2019-08-02T10:56:43Z",
      "side": 1,
      "message": "I also tried this way when I submitted the path for adding the filter of vendor id (https://dawn-review.googlesource.com/c/dawn/+/8460/4/src/tests/DawnTest.cpp#351). But all test suites and test arguments are initialized before we choose the adapter, if we want to skip a OpenGL tests at runtime when choosing another GPU, we can use GTEST_SKIP() which could mark current test is skipped.\nvoid DawnTest::SetUp() {\n    ...\n    if(HasVendorIdFilter()) {\n        if (adapter.GetPCIInfo().vendorId \u003d\u003d GetVendorIdFilter()) {\n            backendAdapter \u003d adapter;\n            break;\n        }\n        if(IsOpenGL()) {\n            GTEST_SKIP();\n            return;\n        }\n        continue;\n   }\n   ...\n}\n\nUnfortunately this way does not work for these end2end tests overrided DawnTest::SetUp(), for example in the ColorStateTest.cpp:\nvoid SetUp() override {\n    DawnTest::SetUp();\n    ...\n    renderPass \u003d utils::CreateBasicRenderPass(device, kRTSize, kRTSize);\n}\n\nThis test for OpenGL isn\u0027t skipped but crash because there is no available device created for OpenGL if we choose integrated GPU on dual GPU system, so it\u0027s difficut to skip these tests in that case.\n\nAn ugly implementation is add IsSkippedTest() in DawnTest and call it in tests which override  DawnTest::SetUp(). How do you think about this?",
      "parentUuid": "b470b364_f3f325b5",
      "range": {
        "startLine": 350,
        "startChar": 43,
        "endLine": 350,
        "endChar": 52
      },
      "revId": "cc38310786a1e8c8076bb05c5986c5f29429ef35",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e6d0f594_7ee9e4d7",
        "filename": "src/tests/DawnTest.cpp",
        "patchSetId": 3
      },
      "lineNbr": 350,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2019-08-02T22:21:35Z",
      "side": 1,
      "message": "How about we perform adapter filtering inside of DawnTestEnvironment::SetUp()?\n\nI see here https://github.com/google/googletest/blob/master/googletest/docs/advanced.md#global-set-up-and-tear-down\n\n\"Now, when RUN_ALL_TESTS() is called, it first calls the SetUp() method of each environment object, then runs the tests if none of the environments reported fatal failures and GTEST_SKIP() was not called.\"\n\nSo if we do GTEST_SKIP() in the environment SetUp() instead of the test SetUp() we\u0027ll skip running all tests.\n\nDawnTestEnvironment::SetUp() {\n  dawn_native::Instance* instance \u003d gTestEnv-\u003eGetInstance();\n  std::vector\u003cdawn_native::Adapter\u003e adapters \u003d instance-\u003eGetAdapters();\n  \n  mAdapters \u003d FilterAdapters(adapters);\n  if (mAdapters.size() \u003d\u003d 0) {\n    GTEST_SKIP();\n  }\n}\n\nDawnTest::SetUp() {\n  // Iterate through gTestEnv-\u003emAdapters and prefer to select the discrete GPU.\n}",
      "parentUuid": "9b617f43_ee294951",
      "range": {
        "startLine": 350,
        "startChar": 43,
        "endLine": 350,
        "endChar": 52
      },
      "revId": "cc38310786a1e8c8076bb05c5986c5f29429ef35",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2ef1f2cf_cafa282a",
        "filename": "src/tests/DawnTest.cpp",
        "patchSetId": 3
      },
      "lineNbr": 350,
      "author": {
        "id": 1000030
      },
      "writtenOn": "2019-08-05T08:55:17Z",
      "side": 1,
      "message": "Thanks for your suggestion, I tried this way, but it seems that GTEST_SKIP() cannot skip tests during environment SetUp(). The \"GTEST_SKIP()\" said in the sentence of \"runs the tests if none of the environments reported fatal failures and GTEST_SKIP() was not called.\" should reference these in the test class.",
      "parentUuid": "e6d0f594_7ee9e4d7",
      "range": {
        "startLine": 350,
        "startChar": 43,
        "endLine": 350,
        "endChar": 52
      },
      "revId": "cc38310786a1e8c8076bb05c5986c5f29429ef35",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "164c7563_2cb5bdff",
        "filename": "src/tests/DawnTest.cpp",
        "patchSetId": 3
      },
      "lineNbr": 350,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2019-08-05T17:35:59Z",
      "side": 1,
      "message": "Going back a little bit.. Sorry I\u0027m having a hard time understanding. You said \n\nAt the begining I wanted to use vendor id to filter adapter including OpenGL backend, but I found if we choosed integrated GPU on dual GPU system, OpenGL tests crashed because its discrete GPU which got by default was filtered, this also affected other backends testing, so I need to skip filtering for OpenGL here to make OpenGL use the GPU it gets.\n\nWhy does it crash when choosing the integrated GPU?",
      "parentUuid": "2ef1f2cf_cafa282a",
      "range": {
        "startLine": 350,
        "startChar": 43,
        "endLine": 350,
        "endChar": 52
      },
      "revId": "cc38310786a1e8c8076bb05c5986c5f29429ef35",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d7db7570_41c1e98e",
        "filename": "src/tests/DawnTest.cpp",
        "patchSetId": 3
      },
      "lineNbr": 350,
      "author": {
        "id": 1000030
      },
      "writtenOn": "2019-08-06T09:00:28Z",
      "side": 1,
      "message": "\u003e Why does it crash when choosing the integrated GPU?\n\nFirst of all, this situation is only for multi-GPU systems. And OpenGL only can get one adapter which must be the discrete one on multi-GPU systems, but other backends could get all adapters. So if we want to run end2end tests with integrated GPU, the OpenGL adapter will be filtered and it cannot get the integrated one, the tests will crash at the adapter checking (line 367):\n    ASSERT(backendAdapter);",
      "parentUuid": "164c7563_2cb5bdff",
      "range": {
        "startLine": 350,
        "startChar": 43,
        "endLine": 350,
        "endChar": 52
      },
      "revId": "cc38310786a1e8c8076bb05c5986c5f29429ef35",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3ebb7e30_ec83f22a",
        "filename": "src/tests/DawnTest.cpp",
        "patchSetId": 3
      },
      "lineNbr": 350,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2019-08-06T18:29:42Z",
      "side": 1,
      "message": "Right, thanks for the clarification.\n\nIt looks like there was a recent fix to make GTEST_SKIP work in Environment setup https://github.com/google/googletest/issues/2189. If we roll googletest, it should work.\n\nWithout rolling dependencies, I believe GTEST_FAIL in Environment setup will work. Failing the tests if there\u0027s no available adapter seems okay to me. What do you think? Are there OpenGL test configurations where you expect we would request the integrated GPU on a multi GPU system?",
      "parentUuid": "d7db7570_41c1e98e",
      "range": {
        "startLine": 350,
        "startChar": 43,
        "endLine": 350,
        "endChar": 52
      },
      "revId": "cc38310786a1e8c8076bb05c5986c5f29429ef35",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    }
  ]
}