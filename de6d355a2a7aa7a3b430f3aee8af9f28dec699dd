{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "c15d56f8_a9e24fd7",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-06-22T12:34:26Z",
      "side": 1,
      "message": "can we add it in the limits structure in dawn.json? That\u0027s the reason why we need this change: to expose the limit through the header so that it can be used by Blink / dawn.node etc.",
      "revId": "de6d355a2a7aa7a3b430f3aee8af9f28dec699dd",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1f61a7f4_fa537d29",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000017
      },
      "writtenOn": "2023-06-22T04:27:42Z",
      "side": 1,
      "message": "PTAL. Thanks!",
      "revId": "de6d355a2a7aa7a3b430f3aee8af9f28dec699dd",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2a137357_8e026c2f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2023-06-22T21:24:13Z",
      "side": 1,
      "message": "LGTM % improved asserts. we do need this in the limits struct but it\u0027s ok to land the constant first",
      "revId": "de6d355a2a7aa7a3b430f3aee8af9f28dec699dd",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "137639bd_e4bbef24",
        "filename": "src/dawn/native/CommandBufferStateTracker.cpp",
        "patchSetId": 1
      },
      "lineNbr": 499,
      "author": {
        "id": 1000017
      },
      "writtenOn": "2023-06-22T04:27:42Z",
      "side": 1,
      "message": "In the spec, we need to validate this new enum in CreateRenderPipeline and DrawXX APIs. But I think currently we don\u0027t need to validate kMaxBindGroupPlusVertexBuffers. Because it equals to 24, which is greater than kMaxBindGroups (4) + kMaxVertexBuffers (8). So, it is definitely safe.\n\nBut I put an ASSERT here in case this is not true in future. Then we need to validate at that time.",
      "range": {
        "startLine": 498,
        "startChar": 4,
        "endLine": 499,
        "endChar": 82
      },
      "revId": "de6d355a2a7aa7a3b430f3aee8af9f28dec699dd",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bf9bd52b_20bf4ba3",
        "filename": "src/dawn/native/CommandBufferStateTracker.cpp",
        "patchSetId": 1
      },
      "lineNbr": 499,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-06-22T12:34:26Z",
      "side": 1,
      "message": "Sounds good, though it could be a static_assert even!",
      "parentUuid": "137639bd_e4bbef24",
      "range": {
        "startLine": 498,
        "startChar": 4,
        "endLine": 499,
        "endChar": 82
      },
      "revId": "de6d355a2a7aa7a3b430f3aee8af9f28dec699dd",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "72b52d38_03729871",
        "filename": "src/dawn/native/CommandBufferStateTracker.cpp",
        "patchSetId": 1
      },
      "lineNbr": 499,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2023-06-22T21:24:13Z",
      "side": 1,
      "message": "A static assert for these makes sense, but we might *also* want a runtime assert for the actual limits reported by the adapter. Just in case we raise the limits but forgot to remove the constant, or something.",
      "parentUuid": "bf9bd52b_20bf4ba3",
      "range": {
        "startLine": 498,
        "startChar": 4,
        "endLine": 499,
        "endChar": 82
      },
      "revId": "de6d355a2a7aa7a3b430f3aee8af9f28dec699dd",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cea881eb_59a1dc36",
        "filename": "src/dawn/native/Device.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1711,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-06-22T12:34:26Z",
      "side": 1,
      "message": "ditto",
      "revId": "de6d355a2a7aa7a3b430f3aee8af9f28dec699dd",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}