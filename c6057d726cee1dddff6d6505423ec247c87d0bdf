{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "f4d66e05_3d1115d3",
        "filename": "src/tint/symbol_table.cc",
        "patchSetId": 3
      },
      "lineNbr": 61,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2023-04-19T16:09:34Z",
      "side": 1,
      "message": "Could this not be a `string_view`?",
      "range": {
        "startLine": 61,
        "startChar": 4,
        "endLine": 61,
        "endChar": 15
      },
      "revId": "c6057d726cee1dddff6d6505423ec247c87d0bdf",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a24e4bd5_c4ea85dd",
        "filename": "src/tint/symbol_table.cc",
        "patchSetId": 3
      },
      "lineNbr": 61,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2023-04-19T16:52:32Z",
      "side": 1,
      "message": "We have to convert it to a `string` for the key into `last_prefix_to_index_`. When I converted `last_prefix_to_index_` to a `string_view` that was when I got ASAN issues, but it  may have been because of the way I was creating the `prefix`.\n\nSo, possibly? But I\u0027ll try it as a followup to see if ASAN still yells at me.",
      "parentUuid": "f4d66e05_3d1115d3",
      "range": {
        "startLine": 61,
        "startChar": 4,
        "endLine": 61,
        "endChar": 15
      },
      "revId": "c6057d726cee1dddff6d6505423ec247c87d0bdf",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "06dd9ee1_565d930e",
        "filename": "src/tint/symbol_table.cc",
        "patchSetId": 3
      },
      "lineNbr": 61,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2023-04-19T17:04:10Z",
      "side": 1,
      "message": "Seems like we can avoid a heap allocation for a bunch of control-flow paths. Seems like a good thing to try.\nHappy to be done as follow-up.",
      "parentUuid": "a24e4bd5_c4ea85dd",
      "range": {
        "startLine": 61,
        "startChar": 4,
        "endLine": 61,
        "endChar": 15
      },
      "revId": "c6057d726cee1dddff6d6505423ec247c87d0bdf",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "c6057d726cee1dddff6d6505423ec247c87d0bdf",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Kokoro",
        "description": {
          "value": "A maximum vote is required for the Kokoro label. A minimum vote is blocking."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Kokoro\u003dMAX AND -label:Kokoro\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "uploader:dawn-autoroll@skia-public.iam.gserviceaccount.com"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Kokoro=MAX AND -label:Kokoro=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Kokoro=MAX"],"failingAtoms":["label:Kokoro=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"uploader:dawn-autoroll@skia-public.iam.gserviceaccount.com"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["uploader:dawn-autoroll@skia-public.iam.gserviceaccount.com"]}
      },
      "patchSetCommitId": "c6057d726cee1dddff6d6505423ec247c87d0bdf",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "patchSetCommitId": "c6057d726cee1dddff6d6505423ec247c87d0bdf",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    }
  ]
}