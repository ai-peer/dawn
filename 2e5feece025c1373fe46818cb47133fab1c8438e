{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "69cf34f6_12a868b8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2023-03-04T18:58:56Z",
      "side": 1,
      "message": "PTAL.",
      "revId": "2e5feece025c1373fe46818cb47133fab1c8438e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "759d9781_4126dbdc",
        "filename": "src/tint/reader/wgsl/lexer.cc",
        "patchSetId": 1
      },
      "lineNbr": 821,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2023-03-06T14:54:29Z",
      "side": 1,
      "message": "\u003e On success, returns a value of type from_chars_result such that ptr points at the first character not matching the pattern, or has the value equal to last if all characters match and ec is value-initialized.\n\nSo, it sounds like `std::from_chars` will stop at the first non-parsable character, and will update `res.ptr`. We should probably use this instead of `count` ?",
      "range": {
        "startLine": 821,
        "startChar": 9,
        "endLine": 821,
        "endChar": 12
      },
      "revId": "2e5feece025c1373fe46818cb47133fab1c8438e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9cea5418_73955407",
        "filename": "src/tint/reader/wgsl/lexer.cc",
        "patchSetId": 1
      },
      "lineNbr": 821,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2023-03-06T15:03:37Z",
      "side": 1,
      "message": "Because `count` would still be wrong. The problem is `start` isn\u0027t the start of what Tint considers the string. `from_chars` does not accept the `0x` if the base is `16`. So, count includes the `0x` if it was present, where `end - start` wouldn\u0027t.",
      "parentUuid": "759d9781_4126dbdc",
      "range": {
        "startLine": 821,
        "startChar": 9,
        "endLine": 821,
        "endChar": 12
      },
      "revId": "2e5feece025c1373fe46818cb47133fab1c8438e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d18ba03d_d7d931e6",
        "filename": "src/tint/reader/wgsl/lexer.cc",
        "patchSetId": 1
      },
      "lineNbr": 821,
      "author": {
        "id": 1001737
      },
      "writtenOn": "2023-03-06T15:06:21Z",
      "side": 1,
      "message": "Sure - I get that, but it\u0027s a solvable problem.",
      "parentUuid": "9cea5418_73955407",
      "range": {
        "startLine": 821,
        "startChar": 9,
        "endLine": 821,
        "endChar": 12
      },
      "revId": "2e5feece025c1373fe46818cb47133fab1c8438e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bcd9d65c_26067b04",
        "filename": "src/tint/reader/wgsl/lexer.cc",
        "patchSetId": 1
      },
      "lineNbr": 821,
      "author": {
        "id": 1000257
      },
      "writtenOn": "2023-03-06T17:35:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d18ba03d_d7d931e6",
      "range": {
        "startLine": 821,
        "startChar": 9,
        "endLine": 821,
        "endChar": 12
      },
      "revId": "2e5feece025c1373fe46818cb47133fab1c8438e",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}