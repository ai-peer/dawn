{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "7e314e4b_2ba5f9c7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000122
      },
      "writtenOn": "2023-12-04T18:01:39Z",
      "side": 1,
      "message": "This is super-rough and incomplete, but I\u0027d like your feedback on the best way to proceed wrt the data structure to hold the reads. I\u0027ll finalize the rest once I\u0027ve got that in place and get it ready for full review. Thanks!",
      "revId": "730122d7ba803bff48dad4a6592c6f2af15badd5",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "61f591e4_2735aba8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-12-05T01:47:01Z",
      "side": 1,
      "message": "probably we can use `std::unordered_set\u003cRef\u003cT\u003e. HashRefPtr\u003e` and define `HashRefPtr` to return the hash of the pointer contained in the Ref",
      "parentUuid": "7e314e4b_2ba5f9c7",
      "revId": "730122d7ba803bff48dad4a6592c6f2af15badd5",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "63a81d72_3c3a30ed",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000122
      },
      "writtenOn": "2023-12-12T10:02:37Z",
      "side": 1,
      "message": "Thanks! BTW, I still have this on my radar - I put it on the back burner for now as I\u0027m first focusing on working out caching *within* the representation, for which concurrent access isn\u0027t an issue.",
      "parentUuid": "61f591e4_2735aba8",
      "revId": "730122d7ba803bff48dad4a6592c6f2af15badd5",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "092df910_9c39d34c",
        "filename": "src/dawn/native/Texture.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1004,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-12-05T01:47:01Z",
      "side": 1,
      "message": "nit: we have an IsSubset helper",
      "range": {
        "startLine": 1004,
        "startChar": 0,
        "endLine": 1004,
        "endChar": 71
      },
      "revId": "730122d7ba803bff48dad4a6592c6f2af15badd5",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Code-Review=MAX,user=non_uploader","label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "730122d7ba803bff48dad4a6592c6f2af15badd5",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforced_gerrit"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "730122d7ba803bff48dad4a6592c6f2af15badd5",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}