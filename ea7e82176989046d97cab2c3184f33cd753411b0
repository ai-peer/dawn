{
  "comments": [
    {
      "key": {
        "uuid": "d33c5e57_f236e3fd",
        "filename": "src/dawn_native/vulkan/ResourceMemoryAllocatorVk.cpp",
        "patchSetId": 3
      },
      "lineNbr": 73,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2019-10-23T23:06:31Z",
      "side": 1,
      "message": "typo: surface",
      "range": {
        "startLine": 73,
        "startChar": 83,
        "endLine": 73,
        "endChar": 91
      },
      "revId": "ea7e82176989046d97cab2c3184f33cd753411b0",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7d173d02_8675f0c3",
        "filename": "src/dawn_native/vulkan/ResourceMemoryAllocatorVk.cpp",
        "patchSetId": 3
      },
      "lineNbr": 73,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2019-10-24T11:34:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d33c5e57_f236e3fd",
      "range": {
        "startLine": 73,
        "startChar": 83,
        "endLine": 73,
        "endChar": 91
      },
      "revId": "ea7e82176989046d97cab2c3184f33cd753411b0",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3f38a51b_a1f65981",
        "filename": "src/dawn_native/vulkan/ResourceMemoryAllocatorVk.cpp",
        "patchSetId": 3
      },
      "lineNbr": 119,
      "author": {
        "id": 1000268
      },
      "writtenOn": "2019-10-23T20:14:30Z",
      "side": 1,
      "message": "I had this working by simply passing allocation.GetOffset() to MapMemory, before returning the ResourceMemoryAllocation. Since the Vulkan memory model uses handles, the approach should be compatible.",
      "revId": "ea7e82176989046d97cab2c3184f33cd753411b0",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9c1ee407_b878706e",
        "filename": "src/dawn_native/vulkan/ResourceMemoryAllocatorVk.cpp",
        "patchSetId": 3
      },
      "lineNbr": 119,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2019-10-23T23:06:31Z",
      "side": 1,
      "message": "If I remember correctly, there\u0027s a concern that suballocating mappable resources will prevent us from compacting mapped resources in the future because their addresses are pinned.\n\nThat being said, the D3D12 side currently does this suballocation. Doesn\u0027t matter to me until compaction becomes important.",
      "parentUuid": "3f38a51b_a1f65981",
      "revId": "ea7e82176989046d97cab2c3184f33cd753411b0",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "893b0e73_983549e3",
        "filename": "src/dawn_native/vulkan/ResourceMemoryAllocatorVk.cpp",
        "patchSetId": 3
      },
      "lineNbr": 119,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2019-10-24T11:34:33Z",
      "side": 1,
      "message": "Yes there\u0027s the concern of mapped memory being pinned but for now I\u0027m planning to ignore it in the Vulkan backend too.\n\nFor memory mapping my plan is to put the mapped pointer in the ResourceHeap, next to the VkDeviceMemory (there is a 1-1 relationship between them). But to do that I want to remove the mappedPointer from ResourceAllocation so I\u0027ll do all this in another CL.",
      "parentUuid": "9c1ee407_b878706e",
      "revId": "ea7e82176989046d97cab2c3184f33cd753411b0",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "374d13ac_6ff8f25f",
        "filename": "src/dawn_native/vulkan/ResourceMemoryAllocatorVk.cpp",
        "patchSetId": 3
      },
      "lineNbr": 179,
      "author": {
        "id": 1000268
      },
      "writtenOn": "2019-10-23T20:14:30Z",
      "side": 1,
      "message": "Thoughts to cache this on the allocation itself? Then both back-ends can more simply and directly call, `allocation.GetInfo().mMemoryTypeIndex`.",
      "revId": "ea7e82176989046d97cab2c3184f33cd753411b0",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cbc32b1e_a9e52eb2",
        "filename": "src/dawn_native/vulkan/ResourceMemoryAllocatorVk.cpp",
        "patchSetId": 3
      },
      "lineNbr": 179,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2019-10-24T11:34:33Z",
      "side": 1,
      "message": "I don\u0027t think it\u0027s worth it. The memoryTypeIndex is backend-specific and a property of the VkDeviceMemory, not of the resource and its allocation.",
      "parentUuid": "374d13ac_6ff8f25f",
      "revId": "ea7e82176989046d97cab2c3184f33cd753411b0",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "68f1dda4_17926f45",
        "filename": "src/dawn_native/vulkan/ResourceMemoryAllocatorVk.cpp",
        "patchSetId": 3
      },
      "lineNbr": 179,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2019-10-24T11:34:59Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "cbc32b1e_a9e52eb2",
      "revId": "ea7e82176989046d97cab2c3184f33cd753411b0",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b2d6b0b4_b51543f2",
        "filename": "src/dawn_native/vulkan/ResourceMemoryAllocatorVk.h",
        "patchSetId": 3
      },
      "lineNbr": 20,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2019-10-23T16:48:13Z",
      "side": 1,
      "message": "nit: not needed",
      "revId": "ea7e82176989046d97cab2c3184f33cd753411b0",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e640783d_85e0e16c",
        "filename": "src/dawn_native/vulkan/ResourceMemoryAllocatorVk.h",
        "patchSetId": 3
      },
      "lineNbr": 20,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2019-10-24T11:34:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b2d6b0b4_b51543f2",
      "revId": "ea7e82176989046d97cab2c3184f33cd753411b0",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    }
  ]
}