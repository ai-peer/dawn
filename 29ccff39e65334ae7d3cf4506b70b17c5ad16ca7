{
  "comments": [
    {
      "key": {
        "uuid": "45ffb2bf_b2c87466",
        "filename": "src/dawn_wire/client/ApiProcs.cpp",
        "patchSetId": 5
      },
      "lineNbr": 73,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-06-05T12:24:07Z",
      "side": 1,
      "message": "Note: It\u0027s a bit weird that this is \"just\" an error, because while the call passes validation, the OOM makes a nullptr returned. I don\u0027t know what the behaviour should be in the spec to allow failures because of OOM.",
      "range": {
        "startLine": 73,
        "startChar": 21,
        "endLine": 73,
        "endChar": 51
      },
      "revId": "29ccff39e65334ae7d3cf4506b70b17c5ad16ca7",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ed05c94e_a0797a23",
        "filename": "src/dawn_wire/client/ApiProcs.cpp",
        "patchSetId": 5
      },
      "lineNbr": 73,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-06-05T15:58:04Z",
      "side": 1,
      "message": "hm well technically there hasn\u0027t been any validation yet. I guess we could actually inject an OOM error too",
      "parentUuid": "45ffb2bf_b2c87466",
      "range": {
        "startLine": 73,
        "startChar": 21,
        "endLine": 73,
        "endChar": 51
      },
      "revId": "29ccff39e65334ae7d3cf4506b70b17c5ad16ca7",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dd53b87e_0a165573",
        "filename": "src/dawn_wire/client/ApiProcs.cpp",
        "patchSetId": 5
      },
      "lineNbr": 73,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-06-05T16:40:53Z",
      "side": 1,
      "message": "Kai, WDYT? should this be allowed to OOM? And if so, does it happen in the rejected Promise as well as the device error scope?",
      "parentUuid": "ed05c94e_a0797a23",
      "range": {
        "startLine": 73,
        "startChar": 21,
        "endLine": 73,
        "endChar": 51
      },
      "revId": "29ccff39e65334ae7d3cf4506b70b17c5ad16ca7",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d719b3bb_1fa16b06",
        "filename": "src/dawn_wire/client/ApiProcs.cpp",
        "patchSetId": 5
      },
      "lineNbr": 140,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-06-05T12:24:07Z",
      "side": 1,
      "message": "Would creating a buffer with a garbage usage (like 0xFFFFFFFF) result in the same thing but without requiring dawn_native changes?",
      "revId": "29ccff39e65334ae7d3cf4506b70b17c5ad16ca7",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c228d776_25f68c29",
        "filename": "src/dawn_wire/client/ApiProcs.cpp",
        "patchSetId": 5
      },
      "lineNbr": 140,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-06-05T15:58:04Z",
      "side": 1,
      "message": "It would, but I\u0027m concerned about the validation error message. We could make an error scope to catch it but that seems like a more complex workaround.",
      "parentUuid": "d719b3bb_1fa16b06",
      "revId": "29ccff39e65334ae7d3cf4506b70b17c5ad16ca7",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b3fa270f_2d1b8f02",
        "filename": "src/dawn_wire/client/ApiProcs.cpp",
        "patchSetId": 5
      },
      "lineNbr": 175,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-06-05T12:24:07Z",
      "side": 1,
      "message": "ditto here and below.",
      "revId": "29ccff39e65334ae7d3cf4506b70b17c5ad16ca7",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d4f0d220_3e679e96",
        "filename": "src/tests/end2end/BufferTests.cpp",
        "patchSetId": 5
      },
      "lineNbr": 468,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-06-05T12:24:07Z",
      "side": 1,
      "message": "Doesn\u0027t ASSERT_DEVICE_ERROR(device.CreateBufferMapped(\u0026descriptor)); work? ditto below.",
      "revId": "29ccff39e65334ae7d3cf4506b70b17c5ad16ca7",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "05ecbe91_3bda9813",
        "filename": "src/tests/end2end/BufferTests.cpp",
        "patchSetId": 5
      },
      "lineNbr": 482,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-06-05T12:24:07Z",
      "side": 1,
      "message": "nit: mapping",
      "range": {
        "startLine": 482,
        "startChar": 13,
        "endLine": 482,
        "endChar": 21
      },
      "revId": "29ccff39e65334ae7d3cf4506b70b17c5ad16ca7",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    }
  ]
}