{
  "comments": [
    {
      "key": {
        "uuid": "a9044221_04b904f4",
        "filename": "src/tests/end2end/TextureFormatTests.cpp",
        "patchSetId": 11
      },
      "lineNbr": 286,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2019-08-01T04:35:08Z",
      "side": 1,
      "message": "If the texture has an integer / unsigned integer format, then only NEAREST sampler is allowed.\nIt seems all the tests with integer / unsigned integer format can pass if you use NEAREST here on Intel OpenGL drivers.",
      "range": {
        "startLine": 286,
        "startChar": 8,
        "endLine": 286,
        "endChar": 83
      },
      "revId": "04ee4cf92091e20ba053b208bfd205a9528734ed",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b24426c1_157aa939",
        "filename": "src/tests/end2end/TextureFormatTests.cpp",
        "patchSetId": 11
      },
      "lineNbr": 286,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2019-08-01T10:54:33Z",
      "side": 1,
      "message": "According to Table 59 in Vulkan SPEC, VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT is not required to be supported for VK_FORMAT_R8_UINT, VK_FORMAT_R8_SINT, VK_FORMAT_R8G8_UINT, VK_FORMAT_R8G8_SINT, etc. I think we should add such validation in Dawn to forbid using linear filters on the textures with integer and unsigned integer format.",
      "parentUuid": "a9044221_04b904f4",
      "range": {
        "startLine": 286,
        "startChar": 8,
        "endLine": 286,
        "endChar": 83
      },
      "revId": "04ee4cf92091e20ba053b208bfd205a9528734ed",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "345ea556_2615f97d",
        "filename": "src/tests/end2end/TextureFormatTests.cpp",
        "patchSetId": 11
      },
      "lineNbr": 286,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2019-08-01T11:51:48Z",
      "side": 1,
      "message": "That\u0027s interesting. Ideally we shouldn\u0027t add these constraints to the API because if we wanted to validate it, we\u0027d have to add yet another member to the GPUBindGroupLayoutBinding that tells the \"type\" of the texture. We should investigate the validation constraint in Vulkan.\n\nThis can be fixed entirely in the GL backend by using nearest sampling when we use the texture.\n\nI also have a number of things I\u0027d like to change for texture formats, for example making snorm formats non-renderable as its not required by Vulkan but as follow up. Would that be ok?",
      "parentUuid": "b24426c1_157aa939",
      "range": {
        "startLine": 286,
        "startChar": 8,
        "endLine": 286,
        "endChar": 83
      },
      "revId": "04ee4cf92091e20ba053b208bfd205a9528734ed",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3f487378_bb9ad9da",
        "filename": "src/tests/end2end/TextureFormatTests.cpp",
        "patchSetId": 11
      },
      "lineNbr": 286,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2019-08-01T13:13:27Z",
      "side": 1,
      "message": "I don\u0027t think we need to add another member to the GPUBindGroupLayoutBinding that tells the \"type\" of the texture. \n\nAccording to https://www.khronos.org/registry/vulkan/specs/1.1-extensions/man/html/vkCmdDraw.html, the validation is done before the draw call. At that time we can know which sampler will be used on which texture from the shaders and bind groups, and thus we can check if a linear sampler is applied on a texture whose format does not support linear filtering.",
      "parentUuid": "345ea556_2615f97d",
      "range": {
        "startLine": 286,
        "startChar": 8,
        "endLine": 286,
        "endChar": 83
      },
      "revId": "04ee4cf92091e20ba053b208bfd205a9528734ed",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dc5676b5_ae3ed6dc",
        "filename": "src/tests/end2end/TextureFormatTests.cpp",
        "patchSetId": 11
      },
      "lineNbr": 286,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2019-08-01T14:04:31Z",
      "side": 1,
      "message": "In Vulkan and WebGPU the textures and samplers can be dynamically combined in the shader such that it isn\u0027t possible to know at drawcall time which combinations will be used.\n\nThe Vulkan doc you linked seems to indicate we need to add some validation on the WebGPU side, that\u0027s super unfortunate. We should raise this to the group.",
      "parentUuid": "3f487378_bb9ad9da",
      "range": {
        "startLine": 286,
        "startChar": 8,
        "endLine": 286,
        "endChar": 83
      },
      "revId": "04ee4cf92091e20ba053b208bfd205a9528734ed",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    }
  ]
}