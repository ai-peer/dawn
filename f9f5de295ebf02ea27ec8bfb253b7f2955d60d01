{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "c4134262_4a2cefd8",
        "filename": "src/dawn/wire/client/Adapter.cpp",
        "patchSetId": 5
      },
      "lineNbr": 74,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2022-06-14T18:39:56Z",
      "side": 1,
      "message": "nit: would be nice and convenient to define\n```\ntemplate \u003ctypename T, typename Args...\u003e\nT* Make(Args\u0026\u0026... args)\n```\nand `Get` on Client so you don\u0027t need to do `GetAllocator`",
      "revId": "f9f5de295ebf02ea27ec8bfb253b7f2955d60d01",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5ce9be20_ddf26fee",
        "filename": "src/dawn/wire/client/Adapter.cpp",
        "patchSetId": 5
      },
      "lineNbr": 74,
      "author": {
        "id": 1002831
      },
      "writtenOn": "2022-06-14T21:07:35Z",
      "side": 1,
      "message": "I also think I like the idea of having `Make` on the client.",
      "parentUuid": "c4134262_4a2cefd8",
      "revId": "f9f5de295ebf02ea27ec8bfb253b7f2955d60d01",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c8ca4229_0e762768",
        "filename": "src/dawn/wire/client/Adapter.cpp",
        "patchSetId": 5
      },
      "lineNbr": 74,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-06-15T13:10:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5ce9be20_ddf26fee",
      "revId": "f9f5de295ebf02ea27ec8bfb253b7f2955d60d01",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c2f799ee_46b11344",
        "filename": "src/dawn/wire/client/Client.h",
        "patchSetId": 5
      },
      "lineNbr": 81,
      "author": {
        "id": 1002831
      },
      "writtenOn": "2022-06-14T21:07:35Z",
      "side": 1,
      "message": "nit. I think we should be explicit and call it mObjectAllocator, especially since mAllocator was previously used for something else also.",
      "range": {
        "startLine": 81,
        "startChar": 20,
        "endLine": 81,
        "endChar": 30
      },
      "revId": "f9f5de295ebf02ea27ec8bfb253b7f2955d60d01",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "960c4787_3a5365b7",
        "filename": "src/dawn/wire/client/Client.h",
        "patchSetId": 5
      },
      "lineNbr": 81,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-06-17T08:58:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c2f799ee_46b11344",
      "range": {
        "startLine": 81,
        "startChar": 20,
        "endLine": 81,
        "endChar": 30
      },
      "revId": "f9f5de295ebf02ea27ec8bfb253b7f2955d60d01",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7353f8cb_01063810",
        "filename": "src/dawn/wire/client/ObjectAllocator.cpp",
        "patchSetId": 5
      },
      "lineNbr": 1,
      "author": {
        "id": 1002831
      },
      "writtenOn": "2022-06-14T21:07:35Z",
      "side": 1,
      "message": "nit. 2022",
      "revId": "f9f5de295ebf02ea27ec8bfb253b7f2955d60d01",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d18717f2_54e92c8e",
        "filename": "src/dawn/wire/client/ObjectAllocator.cpp",
        "patchSetId": 5
      },
      "lineNbr": 1,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-06-17T18:39:29Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7353f8cb_01063810",
      "revId": "f9f5de295ebf02ea27ec8bfb253b7f2955d60d01",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c7846641_1594fecf",
        "filename": "src/dawn/wire/client/ObjectAllocator.h",
        "patchSetId": 5
      },
      "lineNbr": 41,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2022-06-14T18:39:56Z",
      "side": 1,
      "message": "unit: maybe \"Arena\" or \"Pool\" ?",
      "revId": "f9f5de295ebf02ea27ec8bfb253b7f2955d60d01",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "828aa5d6_da55d9fd",
        "filename": "src/dawn/wire/client/ObjectAllocator.h",
        "patchSetId": 5
      },
      "lineNbr": 41,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-06-15T13:10:14Z",
      "side": 1,
      "message": "These names sound like we\u0027re doing linear allocation of objects, when we\u0027re just doing the association with the ObjectHandles (and keeping lifetime). WDYT?",
      "parentUuid": "c7846641_1594fecf",
      "revId": "f9f5de295ebf02ea27ec8bfb253b7f2955d60d01",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2c26e666_254a490b",
        "filename": "src/dawn/wire/client/ObjectAllocator.h",
        "patchSetId": 5
      },
      "lineNbr": 41,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-06-17T18:39:29Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "828aa5d6_da55d9fd",
      "revId": "f9f5de295ebf02ea27ec8bfb253b7f2955d60d01",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9d4bdea5_84d8f7bc",
        "filename": "src/dawn/wire/client/ObjectAllocator.h",
        "patchSetId": 5
      },
      "lineNbr": 66,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2022-06-14T18:39:56Z",
      "side": 1,
      "message": "I (still) might prefer the client to be passed in as an arg here. Mostly because I think that allocation of the objects shouldn\u0027t need to concern itself with needing to call client-\u003eTrackObject. Track/Untrack isn\u0027t a feature of the allocator, it\u0027s a layer added by the client to ensure everything gets promptly deallocated when the client goes away.\n\nHowever, most code won\u0027t need to explicitly pass Client* if we have a wrapper Client::Make around ObjectAllocator::Make that can pass the client, and then take care of calling Track",
      "revId": "f9f5de295ebf02ea27ec8bfb253b7f2955d60d01",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8840b95f_4ad113d0",
        "filename": "src/dawn/wire/client/ObjectAllocator.h",
        "patchSetId": 5
      },
      "lineNbr": 66,
      "author": {
        "id": 1002831
      },
      "writtenOn": "2022-06-14T21:07:35Z",
      "side": 1,
      "message": "Assuming that\u0027s the case, that means this class doesn\u0027t need to be passed the client at ctor then right? And then the track method gets moved into the client `Make`. I think I like that approach also.",
      "parentUuid": "9d4bdea5_84d8f7bc",
      "revId": "f9f5de295ebf02ea27ec8bfb253b7f2955d60d01",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c070b8d2_8488356b",
        "filename": "src/dawn/wire/client/ObjectAllocator.h",
        "patchSetId": 5
      },
      "lineNbr": 66,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-06-15T12:42:35Z",
      "side": 1,
      "message": "We discussed this briefly with Austin yesterday, and overall all the comments point at merging ObjectAllocator in Client but keepin ObjectBaseStore separate. I\u0027ll do that.",
      "parentUuid": "8840b95f_4ad113d0",
      "revId": "f9f5de295ebf02ea27ec8bfb253b7f2955d60d01",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "507c4797_4bbe5736",
        "filename": "src/dawn/wire/client/ObjectAllocator.h",
        "patchSetId": 5
      },
      "lineNbr": 66,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-06-15T13:10:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c070b8d2_8488356b",
      "revId": "f9f5de295ebf02ea27ec8bfb253b7f2955d60d01",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}