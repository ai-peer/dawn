{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "7497ba1f_7defc0c9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 29
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-06-03T07:27:45Z",
      "side": 1,
      "message": "LGTM too! One optional nit.",
      "revId": "f26cf8125237bae74082c18e52d2fb1649d1211d",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fb366395_955de569",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 29
      },
      "lineNbr": 0,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2021-06-04T01:27:05Z",
      "side": 1,
      "message": "still LGTM too. Some comments about renaming the bug references.",
      "revId": "f26cf8125237bae74082c18e52d2fb1649d1211d",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c954f17e_c980b082",
        "filename": "src/dawn_native/ComputePipeline.h",
        "patchSetId": 29
      },
      "lineNbr": 48,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-06-03T07:27:45Z",
      "side": 1,
      "message": "u-nit: Maybe put \u003d 0 and add an empty implementation in the GL backend? We should eventually use the same pattern there as well. It\u0027s ok to have an empty implementation in the Null backend too.",
      "revId": "f26cf8125237bae74082c18e52d2fb1649d1211d",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7f2073c1_7717a4b6",
        "filename": "src/dawn_native/ComputePipeline.h",
        "patchSetId": 29
      },
      "lineNbr": 48,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2021-06-03T07:50:36Z",
      "side": 1,
      "message": "Oh having \"\u003d0\" here may cause compilation error at MakeError() as that function should return an object of ComputePipelineBase.",
      "parentUuid": "c954f17e_c980b082",
      "revId": "f26cf8125237bae74082c18e52d2fb1649d1211d",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "41b88979_d42a82ca",
        "filename": "src/dawn_native/ComputePipeline.h",
        "patchSetId": 29
      },
      "lineNbr": 48,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-06-03T07:55:30Z",
      "side": 1,
      "message": "Ah, usually we do this with a \"ErrorComputePipeline\" declared in the .cpp, see how it\u0027s done for Buffer.cpp.",
      "parentUuid": "7f2073c1_7717a4b6",
      "revId": "f26cf8125237bae74082c18e52d2fb1649d1211d",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4faa0647_1d981267",
        "filename": "src/dawn_native/ComputePipeline.h",
        "patchSetId": 29
      },
      "lineNbr": 48,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2021-06-03T10:37:57Z",
      "side": 1,
      "message": "OK. Now I found it hard to handle the \"blueprint\" in GetCachedComputePipeline() if we follow your idea here. What do you think?\n\nhttps://source.chromium.org/chromium/chromium/src/+/main:third_party/dawn/src/dawn_native/Device.cpp;l\u003d493",
      "parentUuid": "41b88979_d42a82ca",
      "revId": "f26cf8125237bae74082c18e52d2fb1649d1211d",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ad0a59de_445ddc9e",
        "filename": "src/dawn_native/ComputePipeline.h",
        "patchSetId": 29
      },
      "lineNbr": 48,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-06-03T10:41:39Z",
      "side": 1,
      "message": "Ugh, ok let\u0027s forget about this idea :)",
      "parentUuid": "4faa0647_1d981267",
      "revId": "f26cf8125237bae74082c18e52d2fb1649d1211d",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6d760f32_85129329",
        "filename": "src/dawn_native/ComputePipeline.h",
        "patchSetId": 29
      },
      "lineNbr": 48,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2021-06-03T11:18:03Z",
      "side": 1,
      "message": "OK. We can revisit this idea after OT.",
      "parentUuid": "ad0a59de_445ddc9e",
      "revId": "f26cf8125237bae74082c18e52d2fb1649d1211d",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ebd9b953_a32c00fb",
        "filename": "src/dawn_native/CreatePipelineAsyncTask.h",
        "patchSetId": 29
      },
      "lineNbr": 72,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2021-06-04T01:27:05Z",
      "side": 1,
      "message": "can you make this crbug.com/dawn/529 ?",
      "range": {
        "startLine": 72,
        "startChar": 12,
        "endLine": 72,
        "endChar": 32
      },
      "revId": "f26cf8125237bae74082c18e52d2fb1649d1211d",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2130e7de_f9b55e35",
        "filename": "src/dawn_native/Device.cpp",
        "patchSetId": 29
      },
      "lineNbr": 151,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2021-06-04T01:27:05Z",
      "side": 1,
      "message": "We\u0027re trying to track work to be done in bugs instead of leaving references to ourseelves in the code. Can you make this crbug.com/dawn/826 ?",
      "range": {
        "startLine": 151,
        "startChar": 0,
        "endLine": 151,
        "endChar": 92
      },
      "revId": "f26cf8125237bae74082c18e52d2fb1649d1211d",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "96cff945_6818aeee",
        "filename": "src/dawn_native/Device.cpp",
        "patchSetId": 29
      },
      "lineNbr": 253,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2021-06-04T01:27:05Z",
      "side": 1,
      "message": "crbug.com/dawn/826",
      "range": {
        "startLine": 253,
        "startChar": 20,
        "endLine": 253,
        "endChar": 41
      },
      "revId": "f26cf8125237bae74082c18e52d2fb1649d1211d",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fe1f66c1_ffca1f80",
        "filename": "src/dawn_native/Instance.cpp",
        "patchSetId": 29
      },
      "lineNbr": 68,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2021-06-04T01:27:05Z",
      "side": 1,
      "message": "crbug.com/dawn/832",
      "range": {
        "startLine": 68,
        "startChar": 12,
        "endLine": 68,
        "endChar": 33
      },
      "revId": "f26cf8125237bae74082c18e52d2fb1649d1211d",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}