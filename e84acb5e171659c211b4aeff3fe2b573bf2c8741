{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "2655384b_dc09dbf0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 20
      },
      "lineNbr": 0,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-05-12T00:07:50Z",
      "side": 1,
      "message": "LGTM - great work handling these tricky edge cases Shrek",
      "revId": "e84acb5e171659c211b4aeff3fe2b573bf2c8741",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3e086f5d_a339eef6",
        "filename": "src/dawn/native/BlitDepthStencilToBuffer.cpp",
        "patchSetId": 20
      },
      "lineNbr": 262,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-05-12T00:07:50Z",
      "side": 1,
      "message": "nit: why do we need Internal here? it would be nice to use normal Storage usage if possible so we don\u0027t need the Internal usage handling in CreateBuffer",
      "range": {
        "startLine": 260,
        "startChar": 55,
        "endLine": 262,
        "endChar": 89
      },
      "revId": "e84acb5e171659c211b4aeff3fe2b573bf2c8741",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "551021e1_8446b7c0",
        "filename": "src/dawn/native/BlitDepthStencilToBuffer.cpp",
        "patchSetId": 20
      },
      "lineNbr": 262,
      "author": {
        "id": 1000685
      },
      "writtenOn": "2023-05-12T00:12:40Z",
      "side": 1,
      "message": "The bindgroup uses UsageValidationMode::Internal. So buffer needs to have internal storage instead of regular storage to pass the bind group binding validation. Unfortunately Buffer internal storage usage and regular storage usage are two different enums for now. This should be refactored like that of texture. Tracked at https://bugs.chromium.org/p/dawn/issues/detail?id\u003d1485.",
      "parentUuid": "3e086f5d_a339eef6",
      "range": {
        "startLine": 260,
        "startChar": 55,
        "endLine": 262,
        "endChar": 89
      },
      "revId": "e84acb5e171659c211b4aeff3fe2b573bf2c8741",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a57d5f2d_fe066ca0",
        "filename": "src/dawn/native/BlitDepthStencilToBuffer.cpp",
        "patchSetId": 20
      },
      "lineNbr": 262,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-05-12T00:15:39Z",
      "side": 1,
      "message": "oh I see. mm... what if we use CopyDst usage? Then your code will also internally add kInternalStorageBufferUsage, but it\u0027ll happen after the validation.",
      "parentUuid": "551021e1_8446b7c0",
      "range": {
        "startLine": 260,
        "startChar": 55,
        "endLine": 262,
        "endChar": 89
      },
      "revId": "e84acb5e171659c211b4aeff3fe2b573bf2c8741",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5a04e49d_6078c6e3",
        "filename": "src/dawn/native/BlitDepthStencilToBuffer.cpp",
        "patchSetId": 20
      },
      "lineNbr": 262,
      "author": {
        "id": 1000685
      },
      "writtenOn": "2023-05-12T00:17:21Z",
      "side": 1,
      "message": "Facepalm. Sounds good. Then we can get rid of createBuffer modification. Anyway I should better refactor the buffer internal usage soon as it\u0027s causing more pain now.",
      "parentUuid": "a57d5f2d_fe066ca0",
      "range": {
        "startLine": 260,
        "startChar": 55,
        "endLine": 262,
        "endChar": 89
      },
      "revId": "e84acb5e171659c211b4aeff3fe2b573bf2c8741",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8ed5f5ba_72438fe7",
        "filename": "src/dawn/native/CommandValidation.cpp",
        "patchSetId": 20
      },
      "lineNbr": 179,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-05-12T00:07:50Z",
      "side": 1,
      "message": "nit: make this an enum instead",
      "range": {
        "startLine": 179,
        "startChar": 40,
        "endLine": 179,
        "endChar": 70
      },
      "revId": "e84acb5e171659c211b4aeff3fe2b573bf2c8741",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "84314960_5e165a4d",
        "filename": "src/dawn/native/opengl/PhysicalDeviceGL.cpp",
        "patchSetId": 20
      },
      "lineNbr": 229,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-05-12T00:12:34Z",
      "side": 1,
      "message": "```suggestion\n#if DAWN_PLATFORM_IS(WINDOWS)\n    constexpr bool kIsWindows \u003d true;\n#else\n    constexpr bool kIsWindows \u003d false;\n#endif\n```",
      "range": {
        "startLine": 225,
        "startChar": 0,
        "endLine": 229,
        "endChar": 6
      },
      "revId": "e84acb5e171659c211b4aeff3fe2b573bf2c8741",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2b355aef_511d4883",
        "filename": "src/dawn/native/opengl/PhysicalDeviceGL.cpp",
        "patchSetId": 20
      },
      "lineNbr": 231,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2023-05-12T00:12:34Z",
      "side": 1,
      "message": "nit: I think you can compute mIsAngle as a local variable here instead of saving it as a member. It\u0027s not used elsewhere",
      "range": {
        "startLine": 231,
        "startChar": 42,
        "endLine": 231,
        "endChar": 50
      },
      "revId": "e84acb5e171659c211b4aeff3fe2b573bf2c8741",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}