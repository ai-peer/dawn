{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "e18f2aaf_02ec6c72",
        "filename": "src/dawn/native/Device.h",
        "patchSetId": 33
      },
      "lineNbr": 223,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2024-06-05T03:29:23Z",
      "side": 1,
      "message": "```suggestion\n        const RenderPipelineDescriptor* descriptor,\n```",
      "range": {
        "startLine": 223,
        "startChar": 40,
        "endLine": 223,
        "endChar": 49
      },
      "revId": "c30a99c3f424363fdbbcfbec4a870f4e8b2c7795",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dda2b742_112d8f06",
        "filename": "src/dawn/native/vulkan/DeviceVk.cpp",
        "patchSetId": 33
      },
      "lineNbr": 175,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2024-06-05T03:29:23Z",
      "side": 1,
      "message": "a follow up is OK, but theoretically shouldn\u0027t be so hard to do now. add an arg for additional extensions to utils::CreateShaderModule at [c], forward to an arg on  DeviceBase::CreateShaderModule, forward into ValidateAndParseShaderModule, forward into ParseWGSL\n\ndefinitely want to get that in soon so we don\u0027t accidentally rely on input attachments elsewhere",
      "range": {
        "startLine": 175,
        "startChar": 0,
        "endLine": 175,
        "endChar": 24
      },
      "revId": "c30a99c3f424363fdbbcfbec4a870f4e8b2c7795",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cdae75f9_878f63b0",
        "filename": "src/dawn/native/vulkan/RenderPassCache.cpp",
        "patchSetId": 33
      },
      "lineNbr": 278,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2024-06-05T03:29:23Z",
      "side": 1,
      "message": "[a]",
      "revId": "c30a99c3f424363fdbbcfbec4a870f4e8b2c7795",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d0597ed4_f85604b4",
        "filename": "src/dawn/native/vulkan/RenderPassCache.cpp",
        "patchSetId": 33
      },
      "lineNbr": 287,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2024-06-05T03:29:23Z",
      "side": 1,
      "message": "nit: in Dawn, prefer to pass mutable args by pointer, not reference\n\n```suggestion\n        InitializeLoadResolveSubpassDependencies(\u0026subpassDependencies);\n```\n\nThat said, I\u0027m not sure having the helper is useful. It might be more clear to inline it here because you have to reference the subpass indices - and the context that just above at [a] is subpass 0 and just below at [b] is subpass 1 is necessary to know that `InitializeLoadResolveSubpassDependencies` does what we want.",
      "range": {
        "startLine": 287,
        "startChar": 0,
        "endLine": 287,
        "endChar": 70
      },
      "revId": "c30a99c3f424363fdbbcfbec4a870f4e8b2c7795",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3c880875_f954c5ea",
        "filename": "src/dawn/native/vulkan/RenderPassCache.cpp",
        "patchSetId": 33
      },
      "lineNbr": 292,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2024-06-05T03:29:23Z",
      "side": 1,
      "message": "[b]",
      "revId": "c30a99c3f424363fdbbcfbec4a870f4e8b2c7795",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2272b387_61c09bd6",
        "filename": "src/dawn/native/vulkan/ResolveTextureLoadingUtilsVk.cpp",
        "patchSetId": 33
      },
      "lineNbr": 119,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2024-06-05T03:29:23Z",
      "side": 1,
      "message": "[c]",
      "range": {
        "startLine": 119,
        "startChar": 0,
        "endLine": 119,
        "endChar": 86
      },
      "revId": "c30a99c3f424363fdbbcfbec4a870f4e8b2c7795",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a915ae3a_4c8ba73f",
        "filename": "src/dawn/native/vulkan/ResolveTextureLoadingUtilsVk.cpp",
        "patchSetId": 33
      },
      "lineNbr": 159,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2024-06-05T03:29:23Z",
      "side": 1,
      "message": "I thought these were the defaults. depthWriteEnabled\u003dfalse is definitely the default.\nDawn should reify Undefined to be Always when making the pipeline [here](https://source.chromium.org/chromium/chromium/src/+/main:third_party/dawn/src/dawn/native/RenderPipeline.cpp;l\u003d1003;drc\u003dac83a5a2d3c04763d86ce16d92f3904cc9566d3a;bpv\u003d0;bpt\u003d1)\n```suggestion\n        renderPipelineDesc.depthStencil \u003d \u0026depthStencilState;\n```",
      "range": {
        "startLine": 156,
        "startChar": 0,
        "endLine": 159,
        "endChar": 0
      },
      "revId": "c30a99c3f424363fdbbcfbec4a870f4e8b2c7795",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3d889c0b_947e83ce",
        "filename": "src/dawn/native/vulkan/ResolveTextureLoadingUtilsVk.cpp",
        "patchSetId": 33
      },
      "lineNbr": 206,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2024-06-05T03:29:23Z",
      "side": 1,
      "message": "since these asserts may be reachable if those workarounds get enabled, instead use DAWN_INVALID_IF ?",
      "range": {
        "startLine": 199,
        "startChar": 13,
        "endLine": 206,
        "endChar": 57
      },
      "revId": "c30a99c3f424363fdbbcfbec4a870f4e8b2c7795",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e084aaec_d478a306",
        "filename": "src/dawn/native/vulkan/TextureVk.cpp",
        "patchSetId": 33
      },
      "lineNbr": 591,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2024-06-05T03:29:23Z",
      "side": 1,
      "message": "```suggestion\nVkImageUsageFlags VulkanImageUsage(const DeviceBase* device,\n```",
      "range": {
        "startLine": 591,
        "startChar": 35,
        "endLine": 591,
        "endChar": 54
      },
      "revId": "c30a99c3f424363fdbbcfbec4a870f4e8b2c7795",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0ac4b39c_e600f2ea",
        "filename": "src/dawn/tests/end2end/MultisampledRenderingTests.cpp",
        "patchSetId": 33
      },
      "lineNbr": 1671,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2024-06-05T03:29:23Z",
      "side": 1,
      "message": "prefer public bug link\n\n```suggestion\n    // TODO(crbug.com/42240662): \"resolve_multiple_attachments_in_separate_passes\" is currently not working\n```",
      "range": {
        "startLine": 1671,
        "startChar": 0,
        "endLine": 1671,
        "endChar": 99
      },
      "revId": "c30a99c3f424363fdbbcfbec4a870f4e8b2c7795",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "10eb52f6_054f56f5",
        "filename": "src/dawn/tests/end2end/MultisampledRenderingTests.cpp",
        "patchSetId": 33
      },
      "lineNbr": 1752,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2024-06-05T03:29:23Z",
      "side": 1,
      "message": "```suggestion\n    // TODO(crbug.com/42240662): \"resolve_multiple_attachments_in_separate_passes\" is currently not working\n```",
      "range": {
        "startLine": 1752,
        "startChar": 0,
        "endLine": 1752,
        "endChar": 99
      },
      "revId": "c30a99c3f424363fdbbcfbec4a870f4e8b2c7795",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "79d83a62_3e3cad6a",
        "filename": "src/dawn/tests/end2end/MultisampledRenderingTests.cpp",
        "patchSetId": 33
      },
      "lineNbr": 1832,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2024-06-05T03:29:23Z",
      "side": 1,
      "message": "```suggestion\n    // TODO(crbug.com/42240662): \"resolve_multiple_attachments_in_separate_passes\" is currently not working\n```",
      "range": {
        "startLine": 1832,
        "startChar": 0,
        "endLine": 1832,
        "endChar": 99
      },
      "revId": "c30a99c3f424363fdbbcfbec4a870f4e8b2c7795",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8e9bba45_28305684",
        "filename": "src/dawn/tests/end2end/MultisampledRenderingTests.cpp",
        "patchSetId": 33
      },
      "lineNbr": 1985,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2024-06-05T03:29:23Z",
      "side": 1,
      "message": "```suggestion\n    // TODO(crbug.com/42240662): \"resolve_multiple_attachments_in_separate_passes\" is currently not working\n```",
      "range": {
        "startLine": 1985,
        "startChar": 0,
        "endLine": 1985,
        "endChar": 99
      },
      "revId": "c30a99c3f424363fdbbcfbec4a870f4e8b2c7795",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}