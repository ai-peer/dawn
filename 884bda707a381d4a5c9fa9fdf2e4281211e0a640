{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "87c1e1e4_859a8273",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2024-03-06T08:11:14Z",
      "side": 1,
      "message": "PTAL, thanks!",
      "revId": "884bda707a381d4a5c9fa9fdf2e4281211e0a640",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a5f8e4b5_904ff2aa",
        "filename": "src/dawn/native/BuddyAllocator.cpp",
        "patchSetId": 6
      },
      "lineNbr": 47,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2024-03-06T13:50:34Z",
      "side": 1,
      "message": "Maybe mFreeLists.clear() would be sufficient? (and faster in non-BackupRefPtr mode)",
      "revId": "884bda707a381d4a5c9fa9fdf2e4281211e0a640",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "77c8c0f4_598fff48",
        "filename": "src/dawn/native/BuddyAllocator.cpp",
        "patchSetId": 6
      },
      "lineNbr": 47,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2024-03-07T08:02:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a5f8e4b5_904ff2aa",
      "revId": "884bda707a381d4a5c9fa9fdf2e4281211e0a640",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cb448fe1_86316605",
        "filename": "src/dawn/native/BuddyAllocator.cpp",
        "patchSetId": 6
      },
      "lineNbr": 53,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2024-03-06T13:50:34Z",
      "side": 1,
      "message": "Does DeleteBlock(std::move(mRoot)) work instead of the three step thing? Ditto below.",
      "range": {
        "startLine": 50,
        "startChar": 0,
        "endLine": 53,
        "endChar": 31
      },
      "revId": "884bda707a381d4a5c9fa9fdf2e4281211e0a640",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aa370953_9e28e32d",
        "filename": "src/dawn/native/BuddyAllocator.cpp",
        "patchSetId": 6
      },
      "lineNbr": 53,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2024-03-07T08:02:51Z",
      "side": 1,
      "message": "No. I\u0027ve tested that std::move(mRoot) cannot set mRoot to nullptr so we will still meet the dangling pointer issue.",
      "parentUuid": "cb448fe1_86316605",
      "range": {
        "startLine": 50,
        "startChar": 0,
        "endLine": 53,
        "endChar": 31
      },
      "revId": "884bda707a381d4a5c9fa9fdf2e4281211e0a640",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7fbeb9d1_355ac607",
        "filename": "src/dawn/native/BuddyAllocator.cpp",
        "patchSetId": 6
      },
      "lineNbr": 53,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2024-03-07T11:09:44Z",
      "side": 1,
      "message": "Ah that\u0027s unfortunate. CCing Arthur to see if there\u0027s something we can do there.",
      "parentUuid": "aa370953_9e28e32d",
      "range": {
        "startLine": 50,
        "startChar": 0,
        "endLine": 53,
        "endChar": 31
      },
      "revId": "884bda707a381d4a5c9fa9fdf2e4281211e0a640",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e7e0a043_9910ec42",
        "filename": "src/dawn/native/BuddyAllocator.cpp",
        "patchSetId": 6
      },
      "lineNbr": 53,
      "author": {
        "id": 1004651
      },
      "writtenOn": "2024-03-07T11:28:56Z",
      "side": 1,
      "message": "One possible alternative in the spirit of Corentin \"move\" would be:\n```\nDeleteBlock(mRoot.ExtractAsDangling());\n```\nwhich transfert the value from `mRoot` to the returned value (e.g. mRoot becomes null).\n\nSee:\nhttps://source.chromium.org/chromium/chromium/src/+/main:docs/dangling_ptr_guide.md;l\u003d190-193\n\n---\n\nAn even better solution (if possible) would be to use `std::unique_ptr` for owning pointers.",
      "parentUuid": "7fbeb9d1_355ac607",
      "range": {
        "startLine": 50,
        "startChar": 0,
        "endLine": 53,
        "endChar": 31
      },
      "revId": "884bda707a381d4a5c9fa9fdf2e4281211e0a640",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a4e88ebe_b087dd38",
        "filename": "src/dawn/native/BuddyAllocator.cpp",
        "patchSetId": 6
      },
      "lineNbr": 53,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2024-03-08T02:15:02Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e7e0a043_9910ec42",
      "range": {
        "startLine": 50,
        "startChar": 0,
        "endLine": 53,
        "endChar": 31
      },
      "revId": "884bda707a381d4a5c9fa9fdf2e4281211e0a640",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a5a07cf6_4f008dd9",
        "filename": "src/dawn/native/BuddyAllocator.cpp",
        "patchSetId": 6
      },
      "lineNbr": 257,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2024-03-06T13:50:34Z",
      "side": 1,
      "message": "ditto std::move",
      "revId": "884bda707a381d4a5c9fa9fdf2e4281211e0a640",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aa612882_bc33e798",
        "filename": "src/dawn/native/BuddyAllocator.cpp",
        "patchSetId": 6
      },
      "lineNbr": 261,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2024-03-06T13:50:34Z",
      "side": 1,
      "message": "Why is this one necessary?",
      "revId": "884bda707a381d4a5c9fa9fdf2e4281211e0a640",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b7c4cc7e_d1562a0a",
        "filename": "src/dawn/native/BuddyAllocator.cpp",
        "patchSetId": 6
      },
      "lineNbr": 261,
      "author": {
        "id": 1000019
      },
      "writtenOn": "2024-03-07T08:02:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "aa612882_bc33e798",
      "revId": "884bda707a381d4a5c9fa9fdf2e4281211e0a640",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f8244fff_cd4af669",
        "filename": "src/dawn/native/BuddyAllocator.cpp",
        "patchSetId": 6
      },
      "lineNbr": 283,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2024-03-06T13:50:34Z",
      "side": 1,
      "message": "ditto std::move",
      "revId": "884bda707a381d4a5c9fa9fdf2e4281211e0a640",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}