{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "74ebf84b_75e22ccb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1002536
      },
      "writtenOn": "2021-08-20T03:05:50Z",
      "side": 1,
      "message": "PTAL, thanks!",
      "revId": "79a2dd497128b105d09c077bba13434a3a210459",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6cebca0a_c2e674ef",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-08-20T09:33:20Z",
      "side": 1,
      "message": "LGTM",
      "revId": "79a2dd497128b105d09c077bba13434a3a210459",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b47c91ed_26078be4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2021-08-20T18:53:26Z",
      "side": 1,
      "message": "LGTM too",
      "revId": "79a2dd497128b105d09c077bba13434a3a210459",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3e1144b3_1684dc28",
        "filename": "src/dawn_native/RenderPipeline.cpp",
        "patchSetId": 2
      },
      "lineNbr": 520,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-08-20T09:33:20Z",
      "side": 1,
      "message": "no need to do computations in uint64_t since offset is small (\u003c 2k) and byteSize is small too (\u003c 16)",
      "range": {
        "startLine": 513,
        "startChar": 0,
        "endLine": 520,
        "endChar": 85
      },
      "revId": "79a2dd497128b105d09c077bba13434a3a210459",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4e2d40b1_29815e37",
        "filename": "src/dawn_native/RenderPipeline.cpp",
        "patchSetId": 2
      },
      "lineNbr": 520,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2021-08-20T18:53:26Z",
      "side": 1,
      "message": "let\u0027s add ASSERTs about these assumptions though",
      "parentUuid": "3e1144b3_1684dc28",
      "range": {
        "startLine": 513,
        "startChar": 0,
        "endLine": 520,
        "endChar": 85
      },
      "revId": "79a2dd497128b105d09c077bba13434a3a210459",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "43ae2d48_37c653b6",
        "filename": "src/dawn_native/RenderPipeline.cpp",
        "patchSetId": 2
      },
      "lineNbr": 520,
      "author": {
        "id": 1002536
      },
      "writtenOn": "2021-08-23T09:05:24Z",
      "side": 1,
      "message": "Yes, but currently the offset (buffers[slot].attributes[i].offset) is already uint64_t, so I use the result as uint64_t. Should I convert it back to uint32_t?",
      "parentUuid": "4e2d40b1_29815e37",
      "range": {
        "startLine": 513,
        "startChar": 0,
        "endLine": 520,
        "endChar": 85
      },
      "revId": "79a2dd497128b105d09c077bba13434a3a210459",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e4c36e8a_60bdfb70",
        "filename": "src/dawn_native/RenderPipeline.cpp",
        "patchSetId": 2
      },
      "lineNbr": 520,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-08-23T14:59:38Z",
      "side": 1,
      "message": "You can cast to a uint16_t after the asserts that show it is safe. This is to very slightly reduce the memory usage of RenderPipeline. In a follow up we can do the same for the vertex attrib\u0027s .offset. WDYT Austin?",
      "parentUuid": "43ae2d48_37c653b6",
      "range": {
        "startLine": 513,
        "startChar": 0,
        "endLine": 520,
        "endChar": 85
      },
      "revId": "79a2dd497128b105d09c077bba13434a3a210459",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f93c8258_edaca60b",
        "filename": "src/dawn_native/RenderPipeline.cpp",
        "patchSetId": 2
      },
      "lineNbr": 520,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2021-08-23T21:32:15Z",
      "side": 1,
      "message": "sounds good to me to cast down to uint16_t after ASSERTing",
      "parentUuid": "e4c36e8a_60bdfb70",
      "range": {
        "startLine": 513,
        "startChar": 0,
        "endLine": 520,
        "endChar": 85
      },
      "revId": "79a2dd497128b105d09c077bba13434a3a210459",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6b4f95ef_fa3bd845",
        "filename": "src/dawn_native/RenderPipeline.cpp",
        "patchSetId": 2
      },
      "lineNbr": 521,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-08-20T09:33:20Z",
      "side": 1,
      "message": "nit: slight preference to use std::max for clarity.",
      "revId": "79a2dd497128b105d09c077bba13434a3a210459",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3d5c6df6_5b3993f2",
        "filename": "src/dawn_native/RenderPipeline.cpp",
        "patchSetId": 2
      },
      "lineNbr": 521,
      "author": {
        "id": 1002536
      },
      "writtenOn": "2021-08-23T09:05:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6b4f95ef_fa3bd845",
      "revId": "79a2dd497128b105d09c077bba13434a3a210459",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "af7901ca_277f6934",
        "filename": "src/dawn_native/RenderPipeline.h",
        "patchSetId": 2
      },
      "lineNbr": 53,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2021-08-20T09:33:20Z",
      "side": 1,
      "message": "nit: this can be a uin32_t too. And maybe called it usedBytesInStride?",
      "range": {
        "startLine": 53,
        "startChar": 8,
        "endLine": 53,
        "endChar": 16
      },
      "revId": "79a2dd497128b105d09c077bba13434a3a210459",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "200bf645_5d19f61b",
        "filename": "src/dawn_native/RenderPipeline.h",
        "patchSetId": 2
      },
      "lineNbr": 53,
      "author": {
        "id": 1002536
      },
      "writtenOn": "2021-08-23T09:05:24Z",
      "side": 1,
      "message": "The same as uint64_t accessBoundary, I used uint64_t because currently VertexAttribute::offset is of uint64_t. Should I convert it back to uint32_t?",
      "parentUuid": "af7901ca_277f6934",
      "range": {
        "startLine": 53,
        "startChar": 8,
        "endLine": 53,
        "endChar": 16
      },
      "revId": "79a2dd497128b105d09c077bba13434a3a210459",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}