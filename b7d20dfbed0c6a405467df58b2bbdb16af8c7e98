{
  "comments": [
    {
      "key": {
        "uuid": "99c89faf_252df960",
        "filename": "src/dawn_native/d3d12/BackendD3D12.cpp",
        "patchSetId": 8
      },
      "lineNbr": 72,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-05-17T20:32:01Z",
      "side": 1,
      "message": "This helpers are very simple and used once, maybe they could be inlined in GetOrCreate. Unless I\u0027m missing something related to error handling?",
      "revId": "b7d20dfbed0c6a405467df58b2bbdb16af8c7e98",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fc7421cf_3cf1259c",
        "filename": "src/dawn_native/d3d12/BackendD3D12.cpp",
        "patchSetId": 8
      },
      "lineNbr": 72,
      "author": {
        "id": 1000679
      },
      "writtenOn": "2020-05-17T23:29:32Z",
      "side": 1,
      "message": "If I\u0027m using DAWN_TRY(CheckHRESULT()), it seems to be equivalent\nSo I inlined them and use that now",
      "parentUuid": "99c89faf_252df960",
      "revId": "b7d20dfbed0c6a405467df58b2bbdb16af8c7e98",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "47e1c7a6_37b1c46e",
        "filename": "src/dawn_native/d3d12/ComputePipelineD3D12.cpp",
        "patchSetId": 8
      },
      "lineNbr": 18,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-05-17T20:32:01Z",
      "side": 1,
      "message": "nit: unused include",
      "revId": "b7d20dfbed0c6a405467df58b2bbdb16af8c7e98",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "73fb6995_db71274f",
        "filename": "src/dawn_native/d3d12/ComputePipelineD3D12.cpp",
        "patchSetId": 8
      },
      "lineNbr": 18,
      "author": {
        "id": 1000679
      },
      "writtenOn": "2020-05-17T23:29:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "47e1c7a6_37b1c46e",
      "revId": "b7d20dfbed0c6a405467df58b2bbdb16af8c7e98",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9cd3bae7_b2eb8a1e",
        "filename": "src/dawn_native/d3d12/ComputePipelineD3D12.cpp",
        "patchSetId": 8
      },
      "lineNbr": 19,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-05-17T20:32:01Z",
      "side": 1,
      "message": "ditto",
      "revId": "b7d20dfbed0c6a405467df58b2bbdb16af8c7e98",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7487f207_1086da27",
        "filename": "src/dawn_native/d3d12/ComputePipelineD3D12.cpp",
        "patchSetId": 8
      },
      "lineNbr": 19,
      "author": {
        "id": 1000679
      },
      "writtenOn": "2020-05-17T23:29:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9cd3bae7_b2eb8a1e",
      "revId": "b7d20dfbed0c6a405467df58b2bbdb16af8c7e98",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1d0048a4_65cf0f84",
        "filename": "src/dawn_native/d3d12/RenderPipelineD3D12.cpp",
        "patchSetId": 8
      },
      "lineNbr": 341,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-05-17T20:32:01Z",
      "side": 1,
      "message": "nit: could be a const wchar_t* since we only assign static strings to it.",
      "revId": "b7d20dfbed0c6a405467df58b2bbdb16af8c7e98",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0a9c741c_2d407121",
        "filename": "src/dawn_native/d3d12/RenderPipelineD3D12.cpp",
        "patchSetId": 8
      },
      "lineNbr": 341,
      "author": {
        "id": 1000679
      },
      "writtenOn": "2020-05-17T23:29:32Z",
      "side": 1,
      "message": "I refactored this to have the targetProfile selected inside of the compile function, but the target is now stored as a static pointer indeed.",
      "parentUuid": "1d0048a4_65cf0f84",
      "revId": "b7d20dfbed0c6a405467df58b2bbdb16af8c7e98",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0dd23b4f_0ce5b0b0",
        "filename": "src/dawn_native/d3d12/RenderPipelineD3D12.cpp",
        "patchSetId": 8
      },
      "lineNbr": 343,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-05-17T20:32:01Z",
      "side": 1,
      "message": "There\u0027s a bit too many switch statements on stage, but this could be addressed in the follow-up where handling of the toggle is moved to SHaderModuleD3D12",
      "revId": "b7d20dfbed0c6a405467df58b2bbdb16af8c7e98",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1de0cdab_ecc1b5b8",
        "filename": "src/dawn_native/d3d12/RenderPipelineD3D12.cpp",
        "patchSetId": 8
      },
      "lineNbr": 343,
      "author": {
        "id": 1000679
      },
      "writtenOn": "2020-05-17T23:29:32Z",
      "side": 1,
      "message": "I found a nice way to simplify all those (using PerStage arrays here and selecting the targetProfile inside the compile function). Let me know if it looks okay now",
      "parentUuid": "0dd23b4f_0ce5b0b0",
      "revId": "b7d20dfbed0c6a405467df58b2bbdb16af8c7e98",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "df0bc97f_b8e3a613",
        "filename": "src/dawn_native/d3d12/RenderPipelineD3D12.cpp",
        "patchSetId": 8
      },
      "lineNbr": 360,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-05-17T20:32:01Z",
      "side": 1,
      "message": "This should never be the case. I\u0027m not sure why it was in the original code, but it can be safely removed.",
      "revId": "b7d20dfbed0c6a405467df58b2bbdb16af8c7e98",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "76c28533_f1de389a",
        "filename": "src/dawn_native/d3d12/RenderPipelineD3D12.cpp",
        "patchSetId": 8
      },
      "lineNbr": 360,
      "author": {
        "id": 1000679
      },
      "writtenOn": "2020-05-17T23:29:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "df0bc97f_b8e3a613",
      "revId": "b7d20dfbed0c6a405467df58b2bbdb16af8c7e98",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c5ca6435_54e4e40c",
        "filename": "src/dawn_native/d3d12/RenderPipelineD3D12.cpp",
        "patchSetId": 8
      },
      "lineNbr": 366,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-05-17T20:32:01Z",
      "side": 1,
      "message": "ditto",
      "revId": "b7d20dfbed0c6a405467df58b2bbdb16af8c7e98",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cf7acf21_46970415",
        "filename": "src/dawn_native/d3d12/RenderPipelineD3D12.cpp",
        "patchSetId": 8
      },
      "lineNbr": 366,
      "author": {
        "id": 1000679
      },
      "writtenOn": "2020-05-17T23:29:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c5ca6435_54e4e40c",
      "revId": "b7d20dfbed0c6a405467df58b2bbdb16af8c7e98",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d6b25005_0ee063f3",
        "filename": "src/dawn_native/d3d12/RenderPipelineD3D12.cpp",
        "patchSetId": 8
      },
      "lineNbr": 385,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-05-17T20:32:01Z",
      "side": 1,
      "message": "dtioo",
      "revId": "b7d20dfbed0c6a405467df58b2bbdb16af8c7e98",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "11898c83_55688127",
        "filename": "src/dawn_native/d3d12/RenderPipelineD3D12.cpp",
        "patchSetId": 8
      },
      "lineNbr": 385,
      "author": {
        "id": 1000679
      },
      "writtenOn": "2020-05-17T23:29:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d6b25005_0ee063f3",
      "revId": "b7d20dfbed0c6a405467df58b2bbdb16af8c7e98",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "014c1180_4fb42598",
        "filename": "src/dawn_native/d3d12/ShaderModuleD3D12.cpp",
        "patchSetId": 8
      },
      "lineNbr": 142,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-05-17T20:32:01Z",
      "side": 1,
      "message": "This function doesn\u0027t use \"this\" at all. It could be a helper function in the anonymous namespace at the top of this file.",
      "revId": "b7d20dfbed0c6a405467df58b2bbdb16af8c7e98",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c7b96f47_e05a30ec",
        "filename": "src/dawn_native/d3d12/ShaderModuleD3D12.cpp",
        "patchSetId": 8
      },
      "lineNbr": 142,
      "author": {
        "id": 1000679
      },
      "writtenOn": "2020-05-17T23:29:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "014c1180_4fb42598",
      "revId": "b7d20dfbed0c6a405467df58b2bbdb16af8c7e98",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0dc4710c_0fcbdd8d",
        "filename": "src/dawn_native/d3d12/ShaderModuleD3D12.cpp",
        "patchSetId": 8
      },
      "lineNbr": 144,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-05-17T20:32:01Z",
      "side": 1,
      "message": "nit: Please always add braces for control flow. Same comment in other places in this file.",
      "revId": "b7d20dfbed0c6a405467df58b2bbdb16af8c7e98",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9976af4d_32ca67e4",
        "filename": "src/dawn_native/d3d12/ShaderModuleD3D12.cpp",
        "patchSetId": 8
      },
      "lineNbr": 144,
      "author": {
        "id": 1000679
      },
      "writtenOn": "2020-05-17T23:29:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0dc4710c_0fcbdd8d",
      "revId": "b7d20dfbed0c6a405467df58b2bbdb16af8c7e98",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6eed8501_b8207db7",
        "filename": "src/dawn_native/d3d12/ShaderModuleD3D12.cpp",
        "patchSetId": 8
      },
      "lineNbr": 146,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-05-17T20:32:01Z",
      "side": 1,
      "message": "nit: remove commented out code, if it is important, you can add a TODO commend intead.",
      "revId": "b7d20dfbed0c6a405467df58b2bbdb16af8c7e98",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4e2c0a0a_1e909c59",
        "filename": "src/dawn_native/d3d12/ShaderModuleD3D12.cpp",
        "patchSetId": 8
      },
      "lineNbr": 146,
      "author": {
        "id": 1000679
      },
      "writtenOn": "2020-05-17T23:29:32Z",
      "side": 1,
      "message": "Done.\nNote: all this function is actually taken from a DXC example I found there: https://github.com/microsoft/DirectXShaderCompiler/blob/master/tools/clang/tools/d3dcomp/d3dcomp.cpp\nConverting FXC arguments to their DXC equivalents is quite handy\nWe could probably thin it down to only some options we would use, or write the DXC options directly since we always use the same three options ?",
      "parentUuid": "6eed8501_b8207db7",
      "revId": "b7d20dfbed0c6a405467df58b2bbdb16af8c7e98",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c56d282d_dc21c50f",
        "filename": "src/dawn_native/d3d12/ShaderModuleD3D12.cpp",
        "patchSetId": 8
      },
      "lineNbr": 177,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-05-17T20:32:01Z",
      "side": 1,
      "message": "ditto",
      "revId": "b7d20dfbed0c6a405467df58b2bbdb16af8c7e98",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ddea1bda_34e04d18",
        "filename": "src/dawn_native/d3d12/ShaderModuleD3D12.cpp",
        "patchSetId": 8
      },
      "lineNbr": 177,
      "author": {
        "id": 1000679
      },
      "writtenOn": "2020-05-17T23:29:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c56d282d_dc21c50f",
      "revId": "b7d20dfbed0c6a405467df58b2bbdb16af8c7e98",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8f7860e2_e11f8680",
        "filename": "src/dawn_native/d3d12/ShaderModuleD3D12.cpp",
        "patchSetId": 8
      },
      "lineNbr": 180,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-05-17T20:32:01Z",
      "side": 1,
      "message": "nit: comment what -HV 2016 does.",
      "revId": "b7d20dfbed0c6a405467df58b2bbdb16af8c7e98",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "49b15c32_cfeed5c6",
        "filename": "src/dawn_native/d3d12/ShaderModuleD3D12.cpp",
        "patchSetId": 8
      },
      "lineNbr": 180,
      "author": {
        "id": 1000679
      },
      "writtenOn": "2020-05-17T23:29:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8f7860e2_e11f8680",
      "revId": "b7d20dfbed0c6a405467df58b2bbdb16af8c7e98",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "83af1e51_777f5387",
        "filename": "src/dawn_native/d3d12/ShaderModuleD3D12.cpp",
        "patchSetId": 8
      },
      "lineNbr": 195,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-05-17T20:32:01Z",
      "side": 1,
      "message": "This could use CheckHRESULT like so:\n\n DAWN_TRY(CheckHRESULT(do stuff));\n\nSame comment for other if(FAILED(...)) below.",
      "revId": "b7d20dfbed0c6a405467df58b2bbdb16af8c7e98",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ee6f16a6_fb5f3efc",
        "filename": "src/dawn_native/d3d12/ShaderModuleD3D12.cpp",
        "patchSetId": 8
      },
      "lineNbr": 195,
      "author": {
        "id": 1000679
      },
      "writtenOn": "2020-05-17T23:29:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "83af1e51_777f5387",
      "revId": "b7d20dfbed0c6a405467df58b2bbdb16af8c7e98",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b82769c2_e37e78db",
        "filename": "src/dawn_native/d3d12/ShaderModuleD3D12.cpp",
        "patchSetId": 8
      },
      "lineNbr": 196,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-05-17T20:32:01Z",
      "side": 1,
      "message": "CP_UTF8 probably",
      "range": {
        "startLine": 196,
        "startChar": 57,
        "endLine": 196,
        "endChar": 63
      },
      "revId": "b7d20dfbed0c6a405467df58b2bbdb16af8c7e98",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2be5eec2_35a51950",
        "filename": "src/dawn_native/d3d12/ShaderModuleD3D12.cpp",
        "patchSetId": 8
      },
      "lineNbr": 196,
      "author": {
        "id": 1000679
      },
      "writtenOn": "2020-05-17T23:29:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b82769c2_e37e78db",
      "range": {
        "startLine": 196,
        "startChar": 57,
        "endLine": 196,
        "endChar": 63
      },
      "revId": "b7d20dfbed0c6a405467df58b2bbdb16af8c7e98",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "464bc054_a36f338d",
        "filename": "src/dawn_native/d3d12/ShaderModuleD3D12.cpp",
        "patchSetId": 8
      },
      "lineNbr": 228,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-05-17T20:32:01Z",
      "side": 1,
      "message": "This should return an INTERNAL_ERROR too.",
      "revId": "b7d20dfbed0c6a405467df58b2bbdb16af8c7e98",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "60814564_5227bbdd",
        "filename": "src/dawn_native/d3d12/ShaderModuleD3D12.cpp",
        "patchSetId": 8
      },
      "lineNbr": 228,
      "author": {
        "id": 1000679
      },
      "writtenOn": "2020-05-17T23:29:32Z",
      "side": 1,
      "message": "Done, although since DAWN_INTERNAL_ERROR only accepts a single message argument, and not knowing how to do the formatting otherwise, I\u0027m putting the compilation output directly in there. What is the proper way to do this ?",
      "parentUuid": "464bc054_a36f338d",
      "revId": "b7d20dfbed0c6a405467df58b2bbdb16af8c7e98",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c240c8e2_24a7ec9c",
        "filename": "src/dawn_native/d3d12/ShaderModuleD3D12.cpp",
        "patchSetId": 8
      },
      "lineNbr": 228,
      "author": {
        "id": 1000679
      },
      "writtenOn": "2020-05-17T23:39:25Z",
      "side": 1,
      "message": "Saw how it was done in CheckHRESULT and fixed it with similar simple string concatenation in the end",
      "parentUuid": "60814564_5227bbdd",
      "revId": "b7d20dfbed0c6a405467df58b2bbdb16af8c7e98",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "31e1e4f3_6a0408b3",
        "filename": "src/dawn_native/d3d12/UtilsD3D12.cpp",
        "patchSetId": 8
      },
      "lineNbr": 19,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-05-17T20:32:01Z",
      "side": 1,
      "message": "nit: #include \u003cstringapiset.h\u003e",
      "revId": "b7d20dfbed0c6a405467df58b2bbdb16af8c7e98",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "713825bb_a702582d",
        "filename": "src/dawn_native/d3d12/UtilsD3D12.cpp",
        "patchSetId": 8
      },
      "lineNbr": 19,
      "author": {
        "id": 1000679
      },
      "writtenOn": "2020-05-17T23:29:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "31e1e4f3_6a0408b3",
      "revId": "b7d20dfbed0c6a405467df58b2bbdb16af8c7e98",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4564c353_9bd1221f",
        "filename": "src/dawn_native/d3d12/UtilsD3D12.cpp",
        "patchSetId": 8
      },
      "lineNbr": 26,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-05-17T20:32:01Z",
      "side": 1,
      "message": "nit: maybe we could preemptively reserve to len since str should almost always be ASCII.\n\nAlso CP_ACP depends on the computer, which could cause very difficult to reproduce issues. WDYT of using CP_UTF8 instead?",
      "revId": "b7d20dfbed0c6a405467df58b2bbdb16af8c7e98",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "08923e58_8bed3b72",
        "filename": "src/dawn_native/d3d12/UtilsD3D12.cpp",
        "patchSetId": 8
      },
      "lineNbr": 26,
      "author": {
        "id": 1000679
      },
      "writtenOn": "2020-05-17T23:29:32Z",
      "side": 1,
      "message": "The only thing we\u0027re converting through here is the shader entry point from the shader descriptor. Isn\u0027t it specified in which encoding it should be provided ? I can also rename this function to something more precise (e.g ConvertASCIIStringToWstring)\nFrankly, I\u0027m not knowledgeable enough about character conversions to take any educated decision here, so I would do whatever you think best ?",
      "parentUuid": "4564c353_9bd1221f",
      "revId": "b7d20dfbed0c6a405467df58b2bbdb16af8c7e98",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "db51989d_296da525",
        "filename": "src/dawn_native/d3d12/UtilsD3D12.cpp",
        "patchSetId": 8
      },
      "lineNbr": 30,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-05-17T20:32:01Z",
      "side": 1,
      "message": "Could we check the return value and return a DAWN_INTERNAL_ERROR if it fails?",
      "revId": "b7d20dfbed0c6a405467df58b2bbdb16af8c7e98",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9c5aadb6_fd37c8b9",
        "filename": "src/dawn_native/d3d12/UtilsD3D12.cpp",
        "patchSetId": 8
      },
      "lineNbr": 30,
      "author": {
        "id": 1000679
      },
      "writtenOn": "2020-05-17T23:29:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "db51989d_296da525",
      "revId": "b7d20dfbed0c6a405467df58b2bbdb16af8c7e98",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    }
  ]
}