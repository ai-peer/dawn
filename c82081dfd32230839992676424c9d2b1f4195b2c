{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "021f8cb4_95660a61",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 33
      },
      "lineNbr": 0,
      "author": {
        "id": 1003611
      },
      "writtenOn": "2024-02-22T07:58:48Z",
      "side": 1,
      "message": "Add more Surface tests",
      "revId": "c82081dfd32230839992676424c9d2b1f4195b2c",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2daaf44b_9e28b7bb",
        "filename": "src/dawn/native/Surface.cpp",
        "patchSetId": 33
      },
      "lineNbr": 474,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2024-02-22T17:50:08Z",
      "side": 1,
      "message": "No need to check for this, the device is not optional in that structure so it is an error from the application to leave it null.",
      "revId": "c82081dfd32230839992676424c9d2b1f4195b2c",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0ae55ea6_233326ce",
        "filename": "src/dawn/native/Surface.cpp",
        "patchSetId": 33
      },
      "lineNbr": 474,
      "author": {
        "id": 1003611
      },
      "writtenOn": "2024-02-24T11:00:00Z",
      "side": 1,
      "message": "Couldn\u0027t we still help the application developer by explicitly telling them what is wrong in their config?\n\nAlso I\u0027m afraid that if we don\u0027t interrupt the configuration here in such a case then the surface could end up in a weird state.",
      "parentUuid": "2daaf44b_9e28b7bb",
      "revId": "c82081dfd32230839992676424c9d2b1f4195b2c",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "735c7ebb_c9fa26f3",
        "filename": "src/dawn/native/vulkan/DeviceVk.cpp",
        "patchSetId": 33
      },
      "lineNbr": 200,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2024-02-23T16:29:07Z",
      "side": 1,
      "message": "nit: unused.",
      "revId": "c82081dfd32230839992676424c9d2b1f4195b2c",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f3d8e39e_dee2d6b8",
        "filename": "src/dawn/native/vulkan/DeviceVk.cpp",
        "patchSetId": 33
      },
      "lineNbr": 200,
      "author": {
        "id": 1003611
      },
      "writtenOn": "2024-02-24T11:00:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "735c7ebb_c9fa26f3",
      "revId": "c82081dfd32230839992676424c9d2b1f4195b2c",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7fdfc646_0f6843cd",
        "filename": "src/dawn/tests/end2end/SurfaceConfigurationValidationTests.cpp",
        "patchSetId": 33
      },
      "lineNbr": 71,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2024-02-22T17:50:08Z",
      "side": 1,
      "message": "Why do we get the size and do nothing with it?",
      "revId": "c82081dfd32230839992676424c9d2b1f4195b2c",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "27c2e857_3708f046",
        "filename": "src/dawn/tests/end2end/SurfaceConfigurationValidationTests.cpp",
        "patchSetId": 33
      },
      "lineNbr": 71,
      "author": {
        "id": 1003611
      },
      "writtenOn": "2024-02-24T11:00:00Z",
      "side": 1,
      "message": "Leftover from a copy paste, my bad",
      "parentUuid": "7fdfc646_0f6843cd",
      "revId": "c82081dfd32230839992676424c9d2b1f4195b2c",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1d213a40_8e4fedb7",
        "filename": "src/dawn/tests/end2end/SurfaceConfigurationValidationTests.cpp",
        "patchSetId": 33
      },
      "lineNbr": 116,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2024-02-22T17:50:08Z",
      "side": 1,
      "message": "nit: leftover debug.",
      "revId": "c82081dfd32230839992676424c9d2b1f4195b2c",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "238c188b_2f9ee703",
        "filename": "src/dawn/tests/end2end/SurfaceConfigurationValidationTests.cpp",
        "patchSetId": 33
      },
      "lineNbr": 116,
      "author": {
        "id": 1003611
      },
      "writtenOn": "2024-02-24T11:00:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1d213a40_8e4fedb7",
      "revId": "c82081dfd32230839992676424c9d2b1f4195b2c",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0e9d461d_1d2ae3a9",
        "filename": "src/dawn/tests/end2end/SurfaceConfigurationValidationTests.cpp",
        "patchSetId": 33
      },
      "lineNbr": 135,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2024-02-22T17:50:08Z",
      "side": 1,
      "message": "`git cl format` :)",
      "revId": "c82081dfd32230839992676424c9d2b1f4195b2c",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "50b28f50_de8774fb",
        "filename": "src/dawn/tests/end2end/SurfaceConfigurationValidationTests.cpp",
        "patchSetId": 33
      },
      "lineNbr": 135,
      "author": {
        "id": 1003611
      },
      "writtenOn": "2024-02-24T11:00:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0e9d461d_1d2ae3a9",
      "revId": "c82081dfd32230839992676424c9d2b1f4195b2c",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e5dd16e7_7aed9ba7",
        "filename": "src/dawn/tests/end2end/SurfaceConfigurationValidationTests.cpp",
        "patchSetId": 33
      },
      "lineNbr": 167,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2024-02-22T17:50:08Z",
      "side": 1,
      "message": "Other things to test:\n - View formats being compatible or not with the format.\n - The usage with / without the SurfaceCapabilities extension (with trying a usage that\u0027s not allowed, if there\u0027s one).\n - Present mode, alpha mode not supported, if there is one.\n - Width, height 0, or above the max.\n \n We could have a TODO and do it in a follow-up.",
      "revId": "c82081dfd32230839992676424c9d2b1f4195b2c",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "008312c3_b66d27d3",
        "filename": "src/dawn/tests/end2end/SurfaceConfigurationValidationTests.cpp",
        "patchSetId": 33
      },
      "lineNbr": 167,
      "author": {
        "id": 1003611
      },
      "writtenOn": "2024-02-24T11:00:00Z",
      "side": 1,
      "message": "- View formats -\u003e done on a naive case, left a todo to do more\n - Unsupported present/alpha mode -\u003e done\n - Width, height 0, or above the max -\u003e done\n - The usage with / without the SurfaceCapabilities extension -\u003e was already done in SurfaceTests",
      "parentUuid": "e5dd16e7_7aed9ba7",
      "revId": "c82081dfd32230839992676424c9d2b1f4195b2c",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd"
    }
  ]
}