{
  "comments": [
    {
      "key": {
        "uuid": "e42645f0_997d66c5",
        "filename": "src/dawn_native/BuddyAllocator.cpp",
        "patchSetId": 3
      },
      "lineNbr": 30,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2019-07-25T02:13:36Z",
      "side": 1,
      "message": "nit: move these into the BuddyBlock constructor?",
      "range": {
        "startLine": 29,
        "startChar": 0,
        "endLine": 30,
        "endChar": 36
      },
      "revId": "cc742b3be3f6dc98e97b516f86aa746347640891",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a17a8a16_cc0d4357",
        "filename": "src/dawn_native/BuddyAllocator.cpp",
        "patchSetId": 3
      },
      "lineNbr": 40,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2019-07-25T02:13:36Z",
      "side": 1,
      "message": "nit: \"Get\" makes this sound cheaper than it is. rename to something like \"ComputeTotalNumOfFreeBlocks\"?",
      "range": {
        "startLine": 40,
        "startChar": 29,
        "endLine": 40,
        "endChar": 32
      },
      "revId": "cc742b3be3f6dc98e97b516f86aa746347640891",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "48b596cb_f1f53883",
        "filename": "src/dawn_native/BuddyAllocator.cpp",
        "patchSetId": 3
      },
      "lineNbr": 40,
      "author": {
        "id": 1000268
      },
      "writtenOn": "2019-07-25T21:55:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a17a8a16_cc0d4357",
      "range": {
        "startLine": 40,
        "startChar": 29,
        "endLine": 40,
        "endChar": 32
      },
      "revId": "cc742b3be3f6dc98e97b516f86aa746347640891",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fe4e7c44_968506ed",
        "filename": "src/dawn_native/BuddyAllocator.cpp",
        "patchSetId": 3
      },
      "lineNbr": 54,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2019-07-25T02:13:36Z",
      "side": 1,
      "message": "uNit: seems like this ought to return uint32_t, since Log2 does (I think)",
      "range": {
        "startLine": 54,
        "startChar": 4,
        "endLine": 54,
        "endChar": 10
      },
      "revId": "cc742b3be3f6dc98e97b516f86aa746347640891",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "300617cb_8b676d29",
        "filename": "src/dawn_native/BuddyAllocator.cpp",
        "patchSetId": 3
      },
      "lineNbr": 54,
      "author": {
        "id": 1000268
      },
      "writtenOn": "2019-07-25T21:55:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fe4e7c44_968506ed",
      "range": {
        "startLine": 54,
        "startChar": 4,
        "endLine": 54,
        "endChar": 10
      },
      "revId": "cc742b3be3f6dc98e97b516f86aa746347640891",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "20e74248_215128fc",
        "filename": "src/dawn_native/BuddyAllocator.cpp",
        "patchSetId": 3
      },
      "lineNbr": 112,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2019-07-25T02:13:36Z",
      "side": 1,
      "message": "optional nit: could move this line outside the if, and remove the else (which becomes redundant).",
      "revId": "cc742b3be3f6dc98e97b516f86aa746347640891",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c6d23d2a_51b74699",
        "filename": "src/dawn_native/BuddyAllocator.cpp",
        "patchSetId": 3
      },
      "lineNbr": 148,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2019-07-25T02:13:36Z",
      "side": 1,
      "message": "nit: this comment is just restating the code on the next line; I think it can be removed (or restated more generally: \"validate the allocation size\")",
      "revId": "cc742b3be3f6dc98e97b516f86aa746347640891",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6853eb9c_457d7b25",
        "filename": "src/dawn_native/BuddyAllocator.cpp",
        "patchSetId": 3
      },
      "lineNbr": 148,
      "author": {
        "id": 1000268
      },
      "writtenOn": "2019-07-25T21:55:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c6d23d2a_51b74699",
      "revId": "cc742b3be3f6dc98e97b516f86aa746347640891",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fea5c2dc_f9ff94f8",
        "filename": "src/dawn_native/BuddyAllocator.cpp",
        "patchSetId": 3
      },
      "lineNbr": 201,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2019-07-25T02:13:36Z",
      "side": 1,
      "message": "nit: I\u0027d prefer not to use inline ++ since it can be a little confusing to remember the difference from postfix++.",
      "range": {
        "startLine": 201,
        "startChar": 35,
        "endLine": 201,
        "endChar": 51
      },
      "revId": "cc742b3be3f6dc98e97b516f86aa746347640891",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "913f0db5_aae58ffa",
        "filename": "src/dawn_native/BuddyAllocator.cpp",
        "patchSetId": 3
      },
      "lineNbr": 201,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2019-07-25T02:13:36Z",
      "side": 1,
      "message": "nit: According to the comment, could just say \u0027\u003d leftChildBlock\u0027, then? Slightly simpler.",
      "range": {
        "startLine": 201,
        "startChar": 21,
        "endLine": 201,
        "endChar": 24
      },
      "revId": "cc742b3be3f6dc98e97b516f86aa746347640891",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1b71cd18_8e95b987",
        "filename": "src/dawn_native/BuddyAllocator.cpp",
        "patchSetId": 3
      },
      "lineNbr": 201,
      "author": {
        "id": 1000268
      },
      "writtenOn": "2019-07-25T21:55:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fea5c2dc_f9ff94f8",
      "range": {
        "startLine": 201,
        "startChar": 35,
        "endLine": 201,
        "endChar": 51
      },
      "revId": "cc742b3be3f6dc98e97b516f86aa746347640891",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e36e84b4_dbece131",
        "filename": "src/dawn_native/BuddyAllocator.cpp",
        "patchSetId": 3
      },
      "lineNbr": 204,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2019-07-25T02:13:36Z",
      "side": 1,
      "message": "pico-nit: it\u0027s or it is",
      "range": {
        "startLine": 204,
        "startChar": 45,
        "endLine": 204,
        "endChar": 48
      },
      "revId": "cc742b3be3f6dc98e97b516f86aa746347640891",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "97bb26fe_8db553e1",
        "filename": "src/dawn_native/BuddyAllocator.cpp",
        "patchSetId": 3
      },
      "lineNbr": 204,
      "author": {
        "id": 1000268
      },
      "writtenOn": "2019-07-25T21:55:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e36e84b4_dbece131",
      "range": {
        "startLine": 204,
        "startChar": 45,
        "endLine": 204,
        "endChar": 48
      },
      "revId": "cc742b3be3f6dc98e97b516f86aa746347640891",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5ae75e11_272ed6f1",
        "filename": "src/dawn_native/BuddyAllocator.h",
        "patchSetId": 3
      },
      "lineNbr": 42,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2019-07-25T02:13:36Z",
      "side": 1,
      "message": "I haven\u0027t looked at the next patch yet, but is it really helpful to have a default value for alignment?\n\nAlso, 0 doesn\u0027t make much sense even if it actually works, so the default should probably be 1. (And maybe there should be an assert that it\u0027s \u003e\u003d0. Actually, it should probably assert that it\u0027s a power of 2, because I don\u0027t know if the NPOT case would be handled correctly right now and it doesn\u0027t seem useful.)",
      "range": {
        "startLine": 42,
        "startChar": 51,
        "endLine": 42,
        "endChar": 73
      },
      "revId": "cc742b3be3f6dc98e97b516f86aa746347640891",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a5e8d905_a252a1ce",
        "filename": "src/dawn_native/BuddyAllocator.h",
        "patchSetId": 3
      },
      "lineNbr": 42,
      "author": {
        "id": 1000268
      },
      "writtenOn": "2019-07-25T21:55:44Z",
      "side": 1,
      "message": "SGTM",
      "parentUuid": "5ae75e11_272ed6f1",
      "range": {
        "startLine": 42,
        "startChar": 51,
        "endLine": 42,
        "endChar": 73
      },
      "revId": "cc742b3be3f6dc98e97b516f86aa746347640891",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "28db06d3_00b7695f",
        "filename": "src/dawn_native/BuddyAllocator.h",
        "patchSetId": 3
      },
      "lineNbr": 46,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2019-07-25T02:13:36Z",
      "side": 1,
      "message": "nit: let\u0027s put \"ForTesting\" in the function name too so that it will be clear at the call site if we accidentally misuse it.",
      "revId": "cc742b3be3f6dc98e97b516f86aa746347640891",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4d1c26c4_f34b3452",
        "filename": "src/dawn_native/BuddyAllocator.h",
        "patchSetId": 3
      },
      "lineNbr": 46,
      "author": {
        "id": 1000268
      },
      "writtenOn": "2019-07-25T21:55:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "28db06d3_00b7695f",
      "revId": "cc742b3be3f6dc98e97b516f86aa746347640891",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "635db77a_2edc54f2",
        "filename": "src/dawn_native/BuddyAllocator.h",
        "patchSetId": 3
      },
      "lineNbr": 75,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2019-07-25T02:13:36Z",
      "side": 1,
      "message": "nit: do these default values ever take any effect? It\u0027s not clear to me but it seems not since free and split do not have default values ({}).",
      "range": {
        "startLine": 74,
        "startChar": 0,
        "endLine": 75,
        "endChar": 48
      },
      "revId": "cc742b3be3f6dc98e97b516f86aa746347640891",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4e654ca3_144b8983",
        "filename": "src/dawn_native/BuddyAllocator.h",
        "patchSetId": 3
      },
      "lineNbr": 75,
      "author": {
        "id": 1000268
      },
      "writtenOn": "2019-07-25T21:55:44Z",
      "side": 1,
      "message": "They don\u0027t but I figured it wouldn\u0027t be of any harm.",
      "parentUuid": "635db77a_2edc54f2",
      "range": {
        "startLine": 74,
        "startChar": 0,
        "endLine": 75,
        "endChar": 48
      },
      "revId": "cc742b3be3f6dc98e97b516f86aa746347640891",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "54e66929_14d7b936",
        "filename": "src/dawn_native/BuddyAllocator.h",
        "patchSetId": 3
      },
      "lineNbr": 81,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2019-07-25T02:13:36Z",
      "side": 1,
      "message": "same",
      "range": {
        "startLine": 81,
        "startChar": 40,
        "endLine": 81,
        "endChar": 47
      },
      "revId": "cc742b3be3f6dc98e97b516f86aa746347640891",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e6e00b5e_7cb6eab7",
        "filename": "src/dawn_native/BuddyAllocator.h",
        "patchSetId": 3
      },
      "lineNbr": 81,
      "author": {
        "id": 1000268
      },
      "writtenOn": "2019-07-25T21:55:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "54e66929_14d7b936",
      "range": {
        "startLine": 81,
        "startChar": 40,
        "endLine": 81,
        "endChar": 47
      },
      "revId": "cc742b3be3f6dc98e97b516f86aa746347640891",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e7e58bac_3ac87bed",
        "filename": "src/tests/unittests/BuddyAllocatorTests.cpp",
        "patchSetId": 3
      },
      "lineNbr": 31,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2019-07-25T02:13:36Z",
      "side": 1,
      "message": "nit: \"oversized block\"?",
      "range": {
        "startLine": 31,
        "startChar": 37,
        "endLine": 31,
        "endChar": 48
      },
      "revId": "cc742b3be3f6dc98e97b516f86aa746347640891",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c5295d9e_fdae2513",
        "filename": "src/tests/unittests/BuddyAllocatorTests.cpp",
        "patchSetId": 3
      },
      "lineNbr": 31,
      "author": {
        "id": 1000268
      },
      "writtenOn": "2019-07-25T21:55:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e7e58bac_3ac87bed",
      "range": {
        "startLine": 31,
        "startChar": 37,
        "endLine": 31,
        "endChar": 48
      },
      "revId": "cc742b3be3f6dc98e97b516f86aa746347640891",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "23373efd_c080a9f8",
        "filename": "src/tests/unittests/BuddyAllocatorTests.cpp",
        "patchSetId": 3
      },
      "lineNbr": 259,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2019-07-25T02:13:36Z",
      "side": 1,
      "message": "nit: seems overcomplicated.\n\n  for (size_t count \u003d 1; count \u003c blockOffsets.size(); count +\u003d 2) {\n    allocator.Deallocate(blockOffsets[count]);\n  }",
      "range": {
        "startLine": 255,
        "startChar": 0,
        "endLine": 259,
        "endChar": 5
      },
      "revId": "cc742b3be3f6dc98e97b516f86aa746347640891",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d583ee5b_daee0108",
        "filename": "src/tests/unittests/BuddyAllocatorTests.cpp",
        "patchSetId": 3
      },
      "lineNbr": 259,
      "author": {
        "id": 1000268
      },
      "writtenOn": "2019-07-25T21:55:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "23373efd_c080a9f8",
      "range": {
        "startLine": 255,
        "startChar": 0,
        "endLine": 259,
        "endChar": 5
      },
      "revId": "cc742b3be3f6dc98e97b516f86aa746347640891",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2c6b4ee2_475cd291",
        "filename": "src/tests/unittests/BuddyAllocatorTests.cpp",
        "patchSetId": 3
      },
      "lineNbr": 291,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2019-07-25T02:13:36Z",
      "side": 1,
      "message": "I\u0027m sure I\u0027m missing something, but why is Ab\u0027s buddy the first free block, instead of Aa\u0027s buddy?",
      "revId": "cc742b3be3f6dc98e97b516f86aa746347640891",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a8e2a1e9_a0351321",
        "filename": "src/tests/unittests/BuddyAllocatorTests.cpp",
        "patchSetId": 3
      },
      "lineNbr": 291,
      "author": {
        "id": 1000268
      },
      "writtenOn": "2019-07-25T21:55:44Z",
      "side": 1,
      "message": "Upon split, we always insert back into HEAD. Order in free-list does not matter.",
      "parentUuid": "2c6b4ee2_475cd291",
      "revId": "cc742b3be3f6dc98e97b516f86aa746347640891",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    }
  ]
}