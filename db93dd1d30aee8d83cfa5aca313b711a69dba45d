{
  "comments": [
    {
      "key": {
        "uuid": "af70edd6_b9b0a9df",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000861
      },
      "writtenOn": "2020-08-11T00:21:00Z",
      "side": 1,
      "message": "This CL was originally submitted by Austin\nhttps://dawn-review.googlesource.com/c/dawn/+/13084\n\nI have rebased it and added clears to the commands buffer resource usages.",
      "revId": "db93dd1d30aee8d83cfa5aca313b711a69dba45d",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "36c0733d_e1ceaaf9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-08-11T01:04:27Z",
      "side": 1,
      "message": "LGTM with one comment",
      "revId": "db93dd1d30aee8d83cfa5aca313b711a69dba45d",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1832d2c8_4d287c71",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-08-11T10:01:57Z",
      "side": 1,
      "message": "LGTM too with a bunch of nits.",
      "revId": "db93dd1d30aee8d83cfa5aca313b711a69dba45d",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5319e9e9_dcc6651f",
        "filename": "src/dawn_native/CommandAllocator.cpp",
        "patchSetId": 1
      },
      "lineNbr": 51,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-08-11T10:01:57Z",
      "side": 1,
      "message": "nit: ASSERT(mBlocks.empty()); and this method can become:\n\n  ASSERT()\n  mBlocks \u003d std::move(other.mBlocks);\n  other.Reset();\n  Reset();\n  return *this;",
      "revId": "db93dd1d30aee8d83cfa5aca313b711a69dba45d",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a2558c59_dc93d618",
        "filename": "src/dawn_native/CommandAllocator.cpp",
        "patchSetId": 1
      },
      "lineNbr": 51,
      "author": {
        "id": 1000861
      },
      "writtenOn": "2020-08-12T18:15:57Z",
      "side": 1,
      "message": "Done, had use IsEmpty() instead of mBlocks.empty() as Reset() adds a single block on an empty list.",
      "parentUuid": "5319e9e9_dcc6651f",
      "revId": "db93dd1d30aee8d83cfa5aca313b711a69dba45d",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "827f3a6c_ec47d400",
        "filename": "src/dawn_native/CommandAllocator.cpp",
        "patchSetId": 1
      },
      "lineNbr": 69,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-08-11T10:01:57Z",
      "side": 1,
      "message": "nit: we need an ASSERT(mBlocks.empty()) here too.",
      "revId": "db93dd1d30aee8d83cfa5aca313b711a69dba45d",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "25b8823f_2b3ed363",
        "filename": "src/dawn_native/CommandAllocator.cpp",
        "patchSetId": 1
      },
      "lineNbr": 69,
      "author": {
        "id": 1000861
      },
      "writtenOn": "2020-08-12T18:15:57Z",
      "side": 1,
      "message": "Done, same as above.",
      "parentUuid": "827f3a6c_ec47d400",
      "revId": "db93dd1d30aee8d83cfa5aca313b711a69dba45d",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ab043dd3_2aec6634",
        "filename": "src/dawn_native/CommandAllocator.h",
        "patchSetId": 1
      },
      "lineNbr": 98,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-08-11T10:01:57Z",
      "side": 1,
      "message": "Instead of having a mDataDestroyed, maybe we could check that mBlocks.empty(), and have a \"ClearAsDataWasDestroyed()\" that FreeCommands calls instead?",
      "range": {
        "startLine": 96,
        "startChar": 0,
        "endLine": 98,
        "endChar": 32
      },
      "revId": "db93dd1d30aee8d83cfa5aca313b711a69dba45d",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1df5c295_b0a9aa30",
        "filename": "src/dawn_native/CommandAllocator.h",
        "patchSetId": 1
      },
      "lineNbr": 98,
      "author": {
        "id": 1000861
      },
      "writtenOn": "2020-08-12T18:15:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ab043dd3_2aec6634",
      "range": {
        "startLine": 96,
        "startChar": 0,
        "endLine": 98,
        "endChar": 32
      },
      "revId": "db93dd1d30aee8d83cfa5aca313b711a69dba45d",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6b97c7b0_9d68f539",
        "filename": "src/dawn_native/CommandBuffer.cpp",
        "patchSetId": 1
      },
      "lineNbr": 48,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-08-11T10:01:57Z",
      "side": 1,
      "message": "It seems that it\u0027s not the CommandIterator\u0027s concern whether we are destroyed or not. Maybe we could have a boolean on CommandBufferBase?",
      "revId": "db93dd1d30aee8d83cfa5aca313b711a69dba45d",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f7669610_fcd0006d",
        "filename": "src/dawn_native/CommandBuffer.cpp",
        "patchSetId": 1
      },
      "lineNbr": 48,
      "author": {
        "id": 1000861
      },
      "writtenOn": "2020-08-12T18:15:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6b97c7b0_9d68f539",
      "revId": "db93dd1d30aee8d83cfa5aca313b711a69dba45d",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8d8775ab_2d9c5fae",
        "filename": "src/dawn_native/CommandBuffer.cpp",
        "patchSetId": 1
      },
      "lineNbr": 56,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-08-11T10:01:57Z",
      "side": 1,
      "message": "nit: mResourceUsages \u003d {} or CommandBufferResourceUsage(), this should clear all its members.",
      "revId": "db93dd1d30aee8d83cfa5aca313b711a69dba45d",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cc8d3fa9_07603632",
        "filename": "src/dawn_native/CommandBuffer.cpp",
        "patchSetId": 1
      },
      "lineNbr": 56,
      "author": {
        "id": 1000861
      },
      "writtenOn": "2020-08-12T18:15:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8d8775ab_2d9c5fae",
      "revId": "db93dd1d30aee8d83cfa5aca313b711a69dba45d",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f9de3de3_04ab4078",
        "filename": "src/dawn_native/CommandBuffer.h",
        "patchSetId": 1
      },
      "lineNbr": 41,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-08-11T10:01:57Z",
      "side": 1,
      "message": "nit: Destroy to keep the similarity with texture / buffer / render bundle destroy?",
      "revId": "db93dd1d30aee8d83cfa5aca313b711a69dba45d",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1790c217_1bb79f2e",
        "filename": "src/dawn_native/Queue.cpp",
        "patchSetId": 1
      },
      "lineNbr": 64,
      "author": {
        "id": 1000032
      },
      "writtenOn": "2020-08-11T01:04:27Z",
      "side": 1,
      "message": "These would be able to eagerly clear the commands that were never submitted as well. Even if there was some other error, I think it\u0027s correct to consider the commands \"submitted\" and ineligible for submission again.\n\n^(we should have a test for this)\n\nTo simplify the error handling, we can add a private QueueBase::SubmitInternal which contains the original contents of this function. Then, always Clear() the commands after calling SubmitInternal.",
      "range": {
        "startLine": 55,
        "startChar": 8,
        "endLine": 64,
        "endChar": 9
      },
      "revId": "db93dd1d30aee8d83cfa5aca313b711a69dba45d",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "71a61ffd_35bf324b",
        "filename": "src/dawn_native/Queue.cpp",
        "patchSetId": 1
      },
      "lineNbr": 64,
      "author": {
        "id": 1000861
      },
      "writtenOn": "2020-08-12T18:15:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1790c217_1bb79f2e",
      "range": {
        "startLine": 55,
        "startChar": 8,
        "endLine": 64,
        "endChar": 9
      },
      "revId": "db93dd1d30aee8d83cfa5aca313b711a69dba45d",
      "serverId": "dd02978d-1a8e-36d7-bcc0-a5723e5c0abd",
      "unresolved": false
    }
  ]
}